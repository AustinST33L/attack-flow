Language
========

Overview
--------

Attack Flow is a machine-readable language that is defined as an extension to the
`Structured Threat Information Expression (STIX) 2.1 Standard
<https://docs.oasis-open.org/cti/stix/v2.1/os/stix-v2.1-os.html>`__. STIX is a
machine-readable standard for cyber threat intelligence that is expressed in JSON for
easy parsing and processing across a variety of programming languages and computer
architectures. STIX 2.1 has `a formal extension mechanism
<https://docs.oasis-open.org/cti/stix/v2.1/os/stix-v2.1-os.html#_32j232tfvtly>`__ that
allows STIX to be augmented with new features and capabilities.

As a result of extending STIX, the Attack Flow language is interoperable with a broad
ecosystem of STIX content, tools, and vendors. An attack flow can reference external
STIX objects (e.g. an identity or a threat actor) and external STIX objects can also
refer back to an attack flow. Attack Flow extends STIX by defining several new STIX
Domain Objects (SDOs) that are described below.

The formal specification for the Attack Flow language is represented as `a JSON schema
<https://github.com/center-for-threat-informed-defense/attack-flow-private/stix/attack-flow-schema-2.0.0.json>`__,
but this page summarizes the extension objects and attributes that make up the language.

STIX Datatypes
--------------

STIX has built-in datatypes that are used in Attack Flow. The datatypes that are most
relevant to Attack Flow are summarized below.

.. list-table::
  :widths: 30 70
  :header-rows: 1

  * - Datatype
    - Description
  * - **boolean**
    - A value of true or false.
  * - **enum**
    - A value from a STIX Enumeration.
  * - **external-reference**
    - A non-STIX identifier or reference to other related external content.
  * - **float**
    - An IEEE 754 [IEEE 754-2008] double-precision number.
  * - **identifier**
    - An identifier (ID) is for STIX Objects.
  * - **integer**
    - A whole number.
  * - **string**
    - A series of Unicode characters.
  * - **timestamp**
    - A time value (date and time).

For the full list of data types, see `the STIX Standard Chap. 2
<https://docs.oasis-open.org/cti/stix/v2.1/os/stix-v2.1-os.html#_gv21fm9t1qgx>`__.

STIX Common Properties
----------------------

All STIX objects, including Attack Flow objects, share a set of common properties. The
most important common properties are described in the table below. (See the STIX
specification for the complete list of `common properties
<https://docs.oasis-open.org/cti/stix/v2.1/os/stix-v2.1-os.html#_ble33ropuhb8>`__.)

.. list-table::
  :widths: 20 30 50
  :header-rows: 1

  * - Property Name
    - Type
    - Description
  * - **type** *(required)*
    - ``string``
    - Identifies the type of STIX object. It must be a valid object type as defined in
      the STIX 2.1 standard or in an extension (such as Attack Flow).
  * - **spec_version** *(required)*
    - ``string``
    - The version of the STIX specification used to represent this object. The value
      must be ``2.1`` for all Attack Flow objects.
  * - **id** *(required)*
    - ``identifier``
    - Uniquely identifies each object.
  * - **created_by_ref** *(optional)*
    - ``identifier``
    - Specifies the ``id`` property of the ``identity`` object that describes the entity
      that created this object.
  * - **created** *(required)*
    - ``timestamp``
    - Represents the time at which the object was originally created. The object creator
      can use the time it deems most appropriate as the time the object was created. The
      minimum precision MUST be milliseconds (three digits after the decimal place in
      seconds), but MAY be more precise.
  * - **modified** *(required)*
    - ``timestamp``
    - The modified property is only used by STIX Objects that support versioning and
      represents the time that this particular version of the object was last modified.
      The object creator can use the time it deems most appropriate as the time this
      version of the object was modified. The minimum precision MUST be milliseconds
      (three digits after the decimal place in seconds), but MAY be more precise.
  * - **confidence** *(optional)*
    - ``integer``
    - The confidence property identifies the confidence that the creator has in the
      correctness of their data. The confidence value MUST be a number in the range of
      0-100. Attack Flow uses a :ref:`confidence scale <confidence>` to convert from
      numerical confidence to human terms.

Attack Flow SDOs
----------------

This section describes the STIX Domain Objects (SDOs) defined in the Attack Flow
extension.

.. ATTACK_FLOW_SCHEMA Generated by `af` tool at 2022-08-09T16:04:13.640887Z

.. _schema_attack_flow:

Attack Flow
~~~~~~~~~~~

An ``attack-flow`` object represents the Attack Flow overall. It provides
metadata for name and description; it provides starting points for the flow of
actions; and it is an object that can be referenced from other STIX objects.

.. list-table::
   :widths: 20 30 50
   :header-rows: 1

   * - Property Name
     - Type
     - Description
   * - **type**
     - ``string``
     - The value of this property **must** be ``attack-flow``.
   * - **name** *(required)*
     - ``string``
     - The name of the Attack Flow.
   * - **description** *(optional)*
     - ``string``
     - A description of the overall Attack Flow.
   * - **scope** *(required)*
     - ``enum[incident,campaign,threat-actor,malware,other]``
     - Indicates what type of behavior the Attack Flow describes: a specific incident,
       a campaign, etc.
   * - **start_refs** *(required)*
     - ``list`` of ``identifier`` (of type ``attack-action`` or ``attack-state``)
     - A list of objects that start the flow.

.. _schema_attack_action:

Attack Action
~~~~~~~~~~~~~

An ``attack-action`` object represents the execution of a particular technique,
i.e. a discrete unit of adverary behavior.

.. list-table::
   :widths: 20 30 50
   :header-rows: 1

   * - Property Name
     - Type
     - Description
   * - **type**
     - ``string``
     - The value of this property **must** be ``attack-action``.
   * - **technique_id** *(optional)*
     - ``string``
     - A technique identifier or shortname that may reference an authoritative
       collection of techniques, e.g. ATT&CK.
   * - **technique_name** *(required)*
     - ``string``
     - The name of the technique.
   * - **technique_ref** *(optional)*
     - ``identifier``
     - A reference to the technique's STIX representation.
   * - **description** *(optional)*
     - ``string``
     - A description of the adversary behavior.
   * - **effect_refs** *(optional)*
     - ``list`` of ``identifier`` (of type ``attack-action`` or ``attack-state``)
     - When an effect is an ``attack-action``, that means successful execution of this
       action enables execution of the following action. When an effect is an ``attack-
       state``, that means the state exists after this action executes successfully.

.. _schema_attack_state:

Attack State
~~~~~~~~~~~~

An ``attack-state`` object represents some state (i.e. outcome, condition,
effect, etc.) that results from successful execution of a technique.

.. list-table::
   :widths: 20 30 50
   :header-rows: 1

   * - Property Name
     - Type
     - Description
   * - **type**
     - ``string``
     - The value of this property **must** be ``attack-state``.
   * - **description** *(required)*
     - ``string``
     - A description of the state that results from successful execution of a
       technique.
   * - **effect_refs** *(optional)*
     - ``list`` of ``identifier`` (of type ``attack-action`` or ``attack-state``)
     - When an effect is an ``attack-action``, that means when this states exists, it
       enables execution of the following action. When an effect is an ``attack-
       state``, that means the following state exists when this state exists.

.. _schema_attack_operator:

Attack Operator
~~~~~~~~~~~~~~~

An ``attack-operator`` object aggregates multiple effects into a single effect
using boolean logic.

.. list-table::
   :widths: 20 30 50
   :header-rows: 1

   * - Property Name
     - Type
     - Description
   * - **type**
     - ``string``
     - The value of this property **must** be ``attack-operator``.
   * - **operator** *(required)*
     - ``enum[AND,OR]``
     - The logical operator to apply to the input effects.
   * - **effect_refs** *(optional)*
     - ``list`` of ``identifier`` (of type ``attack-action`` or ``attack-state``)
     - When an effect is an ``attack-action``, that means this operator evaluating to
       ``true`` enables execution of the following action. When an effect is an
       ``attack-state``, that means the state exists when this operator evaluates to
       ``true``.

.. /ATTACK_FLOW_SCHEMA

.. _confidence:

Confidence
----------

The ``confidence`` property is a built-in feature of STIX that establishes the
confidence in the correctness of the data in a particular object, e.g. in a particular
``attack-action``. In STIX, the value is defined as a number from 0 to 100 (inclusive),
i.e. a percentage. It is often difficult or impossible to estimate confidence to that
level of precision, because Attack Flows typically describe real-world behavior that may
have been observed only a few times, which is not a large enough sample to compute
meaningful statistics.

To make ``confidence`` easier to reason about, Attack Flow objects use the following
confidence scale to map human terms to confidence numbers and vice-versa.

.. list-table:: Confidence Terms
  :widths: 15 55 15 15
  :header-rows: 1

  * - Term
    - Description
    - Confidence Value
    - Confidence Range
  * - Speculation
    - Information that is purely speculative or hypothetical, e.g. the author imagines a
      what-if scenario.
    - 0
    - 0-0
  * - Very Doubtful
    - Information that is very unlikely to be true. Most of the available evidence is
      against it, or it may have bias in its reporting, e.g. an adversary providing
      attribution information.
    - 10
    - 1-20
  * - Doubtful
    - Information that is unlikely to be true. Most of the available evidence is against
      it.
    - 30
    - 21-40
  * - Even Odds
    - Information that is equally like to be true as not true; a coin flip. The
      available evidence is equally weighted in support and against.
    - 50
    - 41-60
  * - Probable
    - Information that is likely to be true. Most of the available evidence supports it.
    - 70
    - 61-80
  * - Very Probable
    - Information that is very likely to be true. All of the available evidence supports
      it.
    - 90
    - 81-99
  * - Certainty
    - Information that is certainly true, e.g. because the author
    - 100
    - 100-100

The table can be used to map confidence terminology to a specific confidence number and
vice-versa. For example:

* Convert "Very Probable" to a confidence number:
    * Look up "Very Probable" in the table: it is in row 6.
    * Read off the Confidence Value for row 6: it is 90.
* Convert 38 to a confidence term.
    * Go down the Confidence Range column to find the range containing 38: it is in the
      21-40 range, which is row 3.
    * Read off the term from row 3: "Doubtful".
