Standard
========

Overview
--------

Attack Flow represents the linkage of adversary behavior for a given attack
flow. The type, description, and required attributes of each field are provided
in the subsequent sections along with an example.

.. figure:: _static/model.png
   :alt: Entity diagram for Attack Flow
   :scale: 50%
   :align: center

   Entities used in the Attack Flow language.


Rules
-----

These are rules that cannot be captured in JSON schema.

1. Relationships must be compliant with `OWL <https://www.w3.org/OWL/>`__.
2. See the Relationships Table for valid Attack Flow relationships

Data Dictionary
---------------

+------+-------+-------+
| asdf | asdf  | asdf  |
+======+=======+=======+
| asdf | asdf  | asdf  |
+------+-------+-------+
| asdf | asdf  | asdf  |
+------+-------+-------+

.. raw:: html

    <!--JSON_SCHEMA Generated by `generate_schema_docs.py` at 2022-01-04T07:18:25.390790Z-->
    <h3 id="TopLevel">Top Level Fields</h3>
    <table>
    <tr>
        <th>Name</th>
        <th>Type</th>
        <th>Required</th>
        <th>Description</th>
    </tr>
    <tr>
        <td>flow</td>
        <td><a href="#flow">flow</a> object</td>
        <td>Yes</td>
        <td>An Attack Flow Meta object</td>
    </tr>
    <tr>
        <td>actions</td>
        <td>array of <a href="#actions">actions</a></td>
        <td>Yes</td>
        <td>The list of action nodes in the attack flow</td>
    </tr>
    <tr>
        <td>assets</td>
        <td>array of <a href="#assets">assets</a></td>
        <td>Yes</td>
        <td>The list of asset nodes in the attack flow</td>
    </tr>
    <tr>
        <td>relationships</td>
        <td>array of <a href="#relationships">relationships</a></td>
        <td>Yes</td>
        <td>The list of relationship edges in the attack flow. All Actions MUST have a relationship to the flow. See Relationships table for valid pairs of source and target entities.</td>
    </tr>
    <tr>
        <td>data_properties</td>
        <td>array of <a href="#dataproperties">data_properties</a></td>
        <td>No</td>
        <td>Data properties associate actions, assets, properties, or flows with a piece of data.</td>
    </tr>
    <tr>
        <td>object_properties</td>
        <td>array of <a href="#objectproperties">object_properties</a></td>
        <td>No</td>
        <td>Object properties relate, actions, assets, properties, or flows to other assets, properties, or flows. (Some rules apply.)</td>
    </tr>
    </table>

    <h3 id="flow">Flow Fields</h3>
    <table>
    <tr>
        <th>Name</th>
        <th>Type</th>
        <th>Required</th>
        <th>Description</th>
    </tr>
    <tr>
        <td>type</td>
        <td>enum</td>
        <td>Yes</td>
        <td>Indicate that this is an Attack Flow. (Enum values: "attack-flow")</td>
    </tr>
    <tr>
        <td>id</td>
        <td>uri</td>
        <td>Yes</td>
        <td>The identifier for this Attack Flow. MUST be unique within this document. TODO: Ideally is unique among Attack Flows produced by a particular organization.</td>
    </tr>
    <tr>
        <td>name</td>
        <td>string</td>
        <td>Yes</td>
        <td>The name of the Attack Flow.</td>
    </tr>
    <tr>
        <td>created</td>
        <td>date-time</td>
        <td>Yes</td>
        <td>Creation time of the Attack Flow. (RFC-3339 format, e.g. YYYY-MM-DDThh:mm:ssZ)</td>
    </tr>
    <tr>
        <td>author</td>
        <td>string</td>
        <td>No</td>
        <td>The author of the Attack Flow.</td>
    </tr>
    <tr>
        <td>description</td>
        <td>string</td>
        <td>No</td>
        <td>The description of the Attack Flow.</td>
    </tr>
    </table>

    <h3 id="actions">Actions Fields</h3>
    <table>
    <tr>
        <th>Name</th>
        <th>Type</th>
        <th>Required</th>
        <th>Description</th>
    </tr>
    <tr>
        <td>id</td>
        <td>uri</td>
        <td>Yes</td>
        <td>The identifier for this Action. MUST be unique within this document.</td>
    </tr>
    <tr>
        <td>type</td>
        <td>enum</td>
        <td>No</td>
        <td>Indicate that this is an Action (Enum values: "action")</td>
    </tr>
    <tr>
        <td>name</td>
        <td>string</td>
        <td>Yes</td>
        <td>The name of the action. May be an ATT&amp;CK technique name.</td>
    </tr>
    <tr>
        <td>description</td>
        <td>string</td>
        <td>Yes</td>
        <td>A description of the action.</td>
    </tr>
    <tr>
        <td>timestamp</td>
        <td>date-time</td>
        <td>No</td>
        <td>The timestamp when this action was observed. (RFC-3339 format, e.g. YYYY-MM-DDThh:mm:ssZ)</td>
    </tr>
    <tr>
        <td>reference</td>
        <td>string</td>
        <td>No</td>
        <td>A reference for the action. May be a URL to an ATT&amp;CK technique.</td>
    </tr>
    <tr>
        <td>succeeded</td>
        <td>number</td>
        <td>No</td>
        <td>Float from 0 (failed) to 1 (succeeded) or distribution representing the probability that action succeeded in its effects. Any effects which may be separable should be defined through a separate action. Assumed to be 1 (100% ~ TRUE) if not included.</td>
    </tr>
    <tr>
        <td>confidence</td>
        <td>number</td>
        <td>No</td>
        <td>Float from 0 to 1 or distribution representing the confidence that the action succeeded. Assumed to be 1 (100% ~ ground truth) if not included.</td>
    </tr>
    <tr>
        <td>logic_operator_language</td>
        <td>string</td>
        <td>No</td>
        <td>The language of the logic_operator. Defaults to flow-vTBD when left blank.</td>
    </tr>
    <tr>
        <td>logic_operator</td>
        <td>string</td>
        <td>Yes</td>
        <td>The logic_operator may be any logic valid in the language defined by the logic_operator_language. If the logic_operator_language is undefined, the logic_operator may be AND or OR, representing the relative operation on all required-by relationships. The logic_operator must return the state changes to the provides relationships. Inputs to the logic_operator are required-by Assets and their states; outputs of the logic_operator are provides Assets and their states updates.</td>
    </tr>
    </table>

    <h3 id="assets">Assets Fields</h3>
    <table>
    <tr>
        <th>Name</th>
        <th>Type</th>
        <th>Required</th>
        <th>Description</th>
    </tr>
    <tr>
        <td>id</td>
        <td>uri</td>
        <td>Yes</td>
        <td>The identifier for this Asset. MUST be unique within this document.</td>
    </tr>
    <tr>
        <td>type</td>
        <td>enum</td>
        <td>No</td>
        <td>Indicate that this is an Asset (Enum values: "asset")</td>
    </tr>
    <tr>
        <td>state</td>
        <td>string</td>
        <td>No</td>
        <td>A property that may be used as a transient string representing the state of the object during a point in time representing the current state of the system. The sum of all object states is the state of the system. This may be as simple as &quot;compromised&quot;, the Confidentiality, Integrity, Availability triad, DIMFUI (Degradation, Interruption, Modification, Fabrication, Unauthorized Use, and Interception), or it may even be an arbitrary string. If not included, it is assumed that the state is &#x27;compromised&#x27; after a parent action succeeds.</td>
    </tr>
    </table>

    <h3 id="relationships">Relationships Fields</h3>
    <table>
    <tr>
        <th>Name</th>
        <th>Type</th>
        <th>Required</th>
        <th>Description</th>
    </tr>
    <tr>
        <td>source</td>
        <td>uri</td>
        <td>Yes</td>
        <td>The source flow, action, or asset for this relationship.</td>
    </tr>
    <tr>
        <td>type</td>
        <td>uri</td>
        <td>Yes</td>
        <td>The type of relationship.</td>
    </tr>
    <tr>
        <td>target</td>
        <td>string</td>
        <td>Yes</td>
        <td>The target flow, action, or asset.</td>
    </tr>
    </table>

    <h3 id="dataproperties">Data Properties Fields</h3>
    <table>
    <tr>
        <th>Name</th>
        <th>Type</th>
        <th>Required</th>
        <th>Description</th>
    </tr>
    <tr>
        <td>type</td>
        <td>uri</td>
        <td>Yes</td>
        <td>Type (or &quot;name&quot;) of property.</td>
    </tr>
    <tr>
        <td>source</td>
        <td>uri</td>
        <td>Yes</td>
        <td>The source flow, action, asset, or property for this property.</td>
    </tr>
    <tr>
        <td>target</td>
        <td>string</td>
        <td>Yes</td>
        <td>Value for the specific type for the source object.</td>
    </tr>
    </table>

    <h3 id="objectproperties">Object Properties Fields</h3>
    <table>
    <tr>
        <th>Name</th>
        <th>Type</th>
        <th>Required</th>
        <th>Description</th>
    </tr>
    <tr>
        <td>type</td>
        <td>uri</td>
        <td>Yes</td>
        <td>Type (or &quot;name&quot;) of property.</td>
    </tr>
    <tr>
        <td>source</td>
        <td>uri</td>
        <td>Yes</td>
        <td>The source flow, action, asset, or property for this property.</td>
    </tr>
    <tr>
        <td>target</td>
        <td>uri</td>
        <td>Yes</td>
        <td>Target flow, asset, or property for this property.</td>
    </tr>
    </table>

    <!--/JSON_SCHEMA-->

Relationships
-------------

This table describes what entities are valid source/target pairs for
Relationship objects.

.. raw:: html

    <table>
    <tr>
        <th>From\To</th>
        <th>Asset</th>
        <th>Action</th>
        <th>Object Property</th>
    </tr>
    <tr>
        <th>Asset</th>
        <td style="color: red;">NOT VALID</td>
        <td style="color: blue;">&lt;state&gt;</td>
        <td style="color: purple;">&lt;type&gt;</td>
    </tr>
    <tr>
        <th>Action</th>
        <td style="color: blue;">&lt;state change&gt;</td>
        <td style="color: red;">NOT VALID</td>
        <td style="color: purple;">&lt;type&gt;</td>
    </tr>
    <tr>
        <th>Object Property</th>
        <td style="color: purple;">&lt;type&gt;</td>
        <td style="color: purple;">&lt;type&gt;</td>
        <td style="color: purple;">&lt;type&gt;</td>
    </tr>
    </table>

Legend:

.. role:: red
.. role:: blue
.. role:: purple

* <span style="color: red;">Not permitted by the schema.</span>
* <span style="color: blue;">Instance of Relationship.</span>
* <span style="color: purple;">Instance of Object Property.</span>

Corpus of Attack Flows
----------------------

This Attack Flow maps the Tesla incident report into the Attack Flow schema.
This mapping is based on multiple sources, including `ZDNet's coverage of the
incident
Mhttps://www.zdnet.com/article/tesla-systems-used-by-hackers-to-mine-cryptocurrency/>`__.

.. figure:: _static/tesla-flow.png
   :alt: Tesla incident Attack Flow
   :scale: 50%
   :align: center

   An example attack flow for the Tesla incident.

The project has :doc:`example_flows` where publicly reported breaches are mapped
into the Attack Flow language.
