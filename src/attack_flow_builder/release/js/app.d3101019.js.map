{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/Controls/ContextMenu.vue?399a","webpack:///./src/assets/scripts/BlockDiagram/Utilities/Drawing.ts","webpack:///./src/assets/scripts/BlockDiagram/Utilities/Events.ts","webpack:///./src/assets/scripts/BlockDiagram/Utilities/Fonts.ts","webpack:///./src/assets/scripts/BlockDiagram/Utilities/Math.ts","webpack:///./src/assets/scripts/BlockDiagram/Utilities/String.ts","webpack:///./src/assets/scripts/BlockDiagram/Utilities/WebTypes.ts","webpack:///./src/components/Containers/ScrollBox.vue?4a6e","webpack:///./src/App.vue?18ba","webpack:///./src/components/Containers/HotkeyBox.vue?4940","webpack:///./src/assets/scripts/BlockDiagram/Attributes.ts","webpack:///./src/assets/scripts/BlockDiagram/SemanticAnalyzer/SemanticAnalyzer.ts","webpack:///./src/assets/scripts/BlockDiagram/PageEditor/AddObject.ts","webpack:///./src/assets/scripts/BlockDiagram/PageEditor/AttachObject.ts","webpack:///./src/assets/scripts/BlockDiagram/PageEditor/LayerObject.ts","webpack:///./src/assets/scripts/BlockDiagram/PageEditor/DetachObject.ts","webpack:///./src/assets/scripts/BlockDiagram/PageEditor/GroupAction.ts","webpack:///./src/assets/scripts/BlockDiagram/PageEditor/DiagramController.ts","webpack:///./src/assets/scripts/BlockDiagram/PageEditor/MoveObjectBy.ts","webpack:///./src/assets/scripts/BlockDiagram/PageEditor/MoveObjectTo.ts","webpack:///./src/assets/scripts/BlockDiagram/PageEditor/RemoveObjects.ts","webpack:///./src/assets/scripts/BlockDiagram/PageEditor/UserSetObjectPosition.ts","webpack:///./src/assets/scripts/BlockDiagram/PageEditor/PageEditor.ts","webpack:///./src/assets/scripts/BlockDiagram/Diagram/RasterCache.ts","webpack:///./src/assets/scripts/BlockDiagram/Diagram/ViewportRegion.ts","webpack:///./src/assets/scripts/BlockDiagram/Diagram/DiagramObjectMover.ts","webpack:///./src/assets/scripts/BlockDiagram/Diagram/DiagramDisplaySettings.ts","webpack:///./src/assets/scripts/BlockDiagram/Diagram/BlockDiagram.ts","webpack:///./src/assets/scripts/BlockDiagram/PageEditor/PageImage.ts","webpack:///./src/assets/scripts/BlockDiagram/BlockDiagramDocument.ts","webpack:///./src/components/Containers/TabBox.vue?8a8f","webpack:///./src/assets/scripts/BlockDiagram/DiagramFactory/DiagramFactoryError.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramFactory/DiagramTemplateTypes.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramFactory/BuiltinTemplates.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramFactory/DiagramFactory.ts","webpack:///./src/components/Controls/TitleBar.vue?d566","webpack:///./src/components/Elements/BlockDiagram.vue?e222","webpack:///./src/assets/scripts/BlockDiagram/Property/PropertyDescriptorTypes.ts","webpack:///./src/assets/scripts/BlockDiagram/Property/Property.ts","webpack:///./src/assets/scripts/BlockDiagram/Property/DateProperty.ts","webpack:///./src/assets/scripts/BlockDiagram/Property/StringProperty.ts","webpack:///./src/assets/scripts/BlockDiagram/Property/NumberProperty.ts","webpack:///./src/assets/scripts/BlockDiagram/Property/CollectionProperty.ts","webpack:///./src/assets/scripts/BlockDiagram/Property/DictionaryProperty.ts","webpack:///./src/assets/scripts/BlockDiagram/Property/ListProperty.ts","webpack:///./src/components/Controls/ContextMenuListing.vue?0234","webpack:///./src/components/Containers/Tab.vue?4f5d","webpack:///./src/components/Elements/EditorTabs.vue?de8c","webpack:///./src/components/Controls/Fields/DictionaryFieldContents.vue?5bd7","webpack:///./src/components/Controls/Fields/DictionaryFieldContents.vue?ba9e","webpack:///./src/components/Controls/Fields/DictionaryFieldContents.vue","webpack:///./src/components/Controls/Fields/DictionaryFieldContents.vue?0411","webpack:///./src/assets/scripts/BlockDiagram/DiagramViewTypes/BaseTypes/DiagramObjectView.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramViewTypes/BaseTypes/DiagramAnchorView.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramViewTypes/BaseTypes/DiagramAnchorableView.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramViewTypes/BaseTypes/DiagramLineEndingView.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramViewTypes/BaseTypes/DiagramLineHandleView.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramViewTypes/BaseTypes/DiagramLineView.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramViewTypes/BaseTypes/DiagramRootView.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramViewTypes/LineEndingPointView.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramViewTypes/LineHandlePointView.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramViewTypes/LineHorizontalElbowView.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramViewTypes/LineVerticalElbowView.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramViewTypes/AnchorPointView.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramViewTypes/DictionaryBlockView.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramViewTypes/PageView.ts","webpack:///./src/components/Elements/AppFooterBar.vue?4882","webpack:///./src/assets/scripts/BlockDiagram/DiagramModelTypes/LineEndingPointModel.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramModelTypes/LineHandlePointModel.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramModelTypes/LineHorizontalElbowModel.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramModelTypes/LineVerticalElbowModel.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramModelTypes/AnchorPointModel.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramModelTypes/PageModel.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramModelTypes/DictionaryBlockModel.ts","webpack:///./src/App.vue?56dd","webpack:///./src/assets/scripts/DiagramValidator/DiagramValidator.ts","webpack:///./src/assets/builder.config.validator.ts","webpack:///./src/assets/scripts/DiagramPublisher/DiagramPublisher.ts","webpack:///./src/assets/builder.config.publisher.ts","webpack:///./src/assets/builder.config.ts","webpack:///./src/components/Elements/AppTitleBar.vue?f7bc","webpack:///./src/components/Controls/TitleBar.vue?077d","webpack:///./src/components/Containers/FocusBox.vue?f908","webpack:///./src/components/Containers/FocusBox.vue?92fa","webpack:///./src/components/Containers/FocusBox.vue","webpack:///./src/components/Controls/ContextMenuListing.vue?da28","webpack:///./src/assets/scripts/ContextMenuTypes.ts","webpack:///./src/components/Controls/ContextMenuListing.vue?ca06","webpack:///./src/components/Controls/ContextMenuListing.vue","webpack:///./src/components/Controls/TitleBar.vue?9434","webpack:///./src/components/Controls/TitleBar.vue","webpack:///./src/components/Elements/AppTitleBar.vue?4475","webpack:///./src/components/Elements/AppTitleBar.vue","webpack:///./src/components/Elements/AppHotkeyBox.vue?1836","webpack:///./src/components/Containers/HotkeyBox.vue?b8cd","webpack:///./src/assets/scripts/HotkeyObserver/HotkeyObserver.ts","webpack:///./src/assets/scripts/HotkeyObserver/HotkeyObserverTypes.ts","webpack:///./src/components/Containers/HotkeyBox.vue?7b2c","webpack:///./src/components/Containers/HotkeyBox.vue","webpack:///./src/components/Elements/AppHotkeyBox.vue?71ce","webpack:///./src/components/Elements/AppHotkeyBox.vue","webpack:///./src/components/Elements/BlockDiagram.vue?d7d8","webpack:///./src/components/Controls/ContextMenu.vue?5651","webpack:///./src/components/Controls/ContextMenu.vue?9d65","webpack:///./src/components/Controls/ContextMenu.vue","webpack:///./src/components/Elements/BlockDiagram.vue?cead","webpack:///./src/components/Elements/BlockDiagram.vue","webpack:///./src/components/Elements/AppFooterBar.vue?2042","webpack:///./src/components/Elements/AppFooterBar.vue?fced","webpack:///./src/components/Elements/AppFooterBar.vue","webpack:///./src/components/Elements/EditorTabs.vue?48ae","webpack:///./src/components/Containers/Tab.vue?6265","webpack:///./src/components/Containers/Tab.vue?4292","webpack:///./src/components/Containers/Tab.vue","webpack:///./src/components/Containers/TabBox.vue?e063","webpack:///./src/components/Containers/TabBox.vue?52af","webpack:///./src/components/Containers/TabBox.vue","webpack:///./src/components/Elements/ObjectEditor.vue?ffb9","webpack:///./src/components/Containers/ScrollBox.vue?dadc","webpack:///./src/assets/scripts/PointerTracker.ts","webpack:///./src/components/Containers/ScrollBox.vue?e6d3","webpack:///./src/components/Containers/ScrollBox.vue","webpack:///./src/components/Elements/ObjectEditor.vue?2e69","webpack:///./src/components/Elements/ObjectEditor.vue","webpack:///./src/components/Elements/EditorTabs.vue?1bb0","webpack:///./src/components/Elements/EditorTabs.vue","webpack:///./src/App.vue?47b3","webpack:///./src/App.vue?6697","webpack:///./src/store/Stores/ActivePageStore.ts","webpack:///./src/assets/scripts/Download.ts","webpack:///./src/store/Stores/ActiveDocumentStore.ts","webpack:///./src/assets/scripts/Browser.ts","webpack:///./src/store/Stores/AppActionsStore.ts","webpack:///./src/store/Stores/AppSettingsStore.ts","webpack:///./src/store/Stores/ContextMenuStore.ts","webpack:///./src/store/Stores/HotkeyStore.ts","webpack:///./src/store/index.ts","webpack:///./src/main.ts","webpack:///./src/components/Elements/ObjectEditor.vue?3385","webpack:///./src/assets/scripts/BlockDiagram/DiagramModelTypes/BaseTypes/DiagramObjectModel.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramModelTypes/BaseTypes/DiagramAnchorModel.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramModelTypes/BaseTypes/DiagramAnchorableModel.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramModelTypes/BaseTypes/DiagramLineEndingModel.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramModelTypes/BaseTypes/DiagramLineHandleModel.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramModelTypes/BaseTypes/DiagramLineModel.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramModelTypes/BaseTypes/DiagramRootModel.ts","webpack:///./src/components/Elements/AppTitleBar.vue?c45f"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","installedCssChunks","jsonpScriptSrc","p","exports","module","l","e","promises","cssChunks","Promise","resolve","reject","href","fullhref","existingLinkTags","document","getElementsByTagName","tag","dataHref","getAttribute","rel","existingStyleTags","linkTag","createElement","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","head","appendChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","nc","setAttribute","error","clearTimeout","chunk","errorType","realSrc","message","name","undefined","setTimeout","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","window","oldJsonpFunction","slice","drawArrowHead","ctx","sx","sy","tx","ty","h","dx","dy","angle","Math","atan2","a","cos","PI","b","sin","beginPath","moveTo","lineTo","closePath","drawRect","x","y","w","tl","tr","br","bl","quadraticCurveTo","EventEmitter","this","_listeners","Map","callback","has","set","unshift","once","args","actions","indexOf","listeners","delete","clear","_fontList","Font","size","family","descriptor","id","getCssFontString","descriptors","req","font","loadFont","results","allSettled","failedFonts","status","fonts","join","fontString","check","timeoutId","start","Date","now","load","res","rej","fetch","fontList","timer","_","race","weight","css","_ctx","getContext","_widthIndex","char","DEFAULT_INDEX","measureWidth","text","measureText","width","ascent","actualBoundingBoxAscent","descent","actualBoundingBoxDescent","lines","trim","split","segments","lineWrap","flat","line","lineWidth","tokens","WHITESPACE","filter","Boolean","whitespaceParity","test","tokenWidth","trimEnd","word","getCharWidth","GlobalFontStore","clamp","min","max","round","multiple","sign","abs","floatEq","decimals","floor","generateBitMask","obj","mask","bit","getLineHitbox","x0","y0","x1","y1","vx","vy","acos","sqrt","isInsideRegion","vertices","minX","Infinity","minY","maxX","maxY","v1x0","v1y0","v1x1","v1y1","totalIntersections","len","intersection","doVectorsIntersect","v2x0","v2y0","v2x1","v2y1","a1","b1","c1","a2","b2","c2","d1","d2","computeHash","string","hash","charCodeAt","MouseClick","Alignment","Free","Grid","AlignmentMask","Cursor","Default","Pointer","Crosshair","Move","NotAllowed","Grab","Grabbing","N_Resize","E_Resize","S_Resize","W_Resize","EW_Resize","NS_Resize","Col_Resize","Row_Resize","CursorMask","Hover","Off","Direct","Indirect","HoverMask","InheritAlignment","False","True","InheritAlignmentMask","PositionSetByUser","PositionSetByUserMask","Priority","Normal","High","PriorityMask","Select","Unselected","Single","Multi","SelectMask","SemanticRole","None","Node","Edge","EdgeSource","EdgeTarget","SemanticRoleMask","CursorCssName","array","edges","nodes","getSubtree","getSemanticRole","template","toExport","prev","getPrevGraphLinks","map","next","getNextGraphLinks","getNodes","getEdgeTargetsFor","getEdges","getEdgeSourcesFor","objects","node","getNode","hasRole","anchor","parent","edge","getEdge","edgeSources","concat","stack","sources","pop","child","children","edgeTargets","targets","AddObject","_object","_parent","addChild","AttachObject","_anchor","Layer","isAttached","_index","getIndexInAnchor","GroupAction","_actions","action","redo","ex","undo","_undoStack","_redoStack","_transactions","Array","isArray","at","add","execute","layer","_prevIndex","getIndexInParent","Top","_nextIndex","OneAbove","OneBelow","Bottom","reorderChild","MoveObjectBy","_dx","_dy","moveBy","MoveObjectTo","_lx","boundingBox","xMid","_ly","yMid","_nx","_ny","_links","_items","index","item","values","link","_obj","setPositionSetByUser","page","_controller","lookup","trg","grp","srcAnc","isSrcValid","srcEnding","trgAnc","isTrgValid","trgEnding","objs","isObjectValid","isAnchorValid","hasUserSetPosition","loc","location","canUndo","canRedo","beginTransaction","endTransaction","RasterCache","_scale","_cache","raster","Raster","context","drawImage","canvas","cx","cy","scale","k","tp","height","setTransform","fillStyle","strokeStyle","textBaseline","stroke","fill","fillText","ViewportRegion","xMin","yMin","xMax","yMax","gridX","gridY","ox","oy","odx","ody","_cx","_cy","_cdx","_cdy","_alignment","_gridX","_gridY","_anchors","alignment","anchors","ax","ay","bb","cursorX","cursorY","radius","DiagramDisplaySettings","showGrid","showShadows","showDebug","ssaaScale","shadowsDisableAt","DragActionType","super","createDummy","cache","_canvas","_context","_display","_elWidth","_elHeight","_mover","grid","_page","createView","_rafId","_rasterCache","_resizeObserver","_transform","_viewport","_ztoId","_zoom","scaleExtent","on","onCanvasZoom","onCanvasZoomEnd","_hovObj","container","clientWidth","clientHeight","append","attr","onHoverSubject","preventDefault","alpha","ResizeObserver","entries","onCanvasResize","observe","subject","onSelectSubject","onObjectDragStarted","onObjectDragged","onObjectDragEnded","updateView","remove","removeAllListeners","disconnect","emit","display","setScale","requestAnimationFrame","executeRenderPipeline","renderPageSurfaceTo","renderTo","renderDebugTo","cursor","invertX","invertY","hovObj","el","getObjectAt","getCursor","mv","evt","sourceEvent","rc","button","Right","makeLine","view","CreateLine","selects","MoveAnchorable","al","an","getAlignment","anchorCache","reset","attrs","updateDelta","fakePositionSetByUser","render","tdx","tdy","ids","par","transform","getScale","RASTER_CACHE_UPDATE_DELAY","updateViewportBounds","getCameraOriginOffset","Point","newWidth","newHeight","padding","VIEWPORT_PADDING","animate","Region","transition","duration","translate","shadows","debug","_padding","_showGrid","_showShadows","_showDebug","can","viewport","factory","apiVersion","editor","DiagramFactory","schema","createObject","page_template","version","constructor","String","JSON","parse","pageExp","pageObj","deserialize","exp","expIndex","objIndex","api_version","getSchema","DiagramFactoryError","TemplateType","AnchorAngle","BUILTIN_PREFIX","BuiltinTemplates","Page","role","style","grid_color","background_color","drop_shadow","color","offset","AnchorPoint","line_templates","DEG_0","DEG_90","LineHandlePoint","fill_color","stroke_color","stroke_width","LineEndingPoint","LineHorizontalElbow","hitbox_width","line_handle_template","line_ending_template","source","cap_size","select_colors","solo_color","many_color","LineVerticalElbow","templates","copy","structuredClone","Set","getFontDescriptorsFromTemplate","loadFonts","swapFontDescriptorsWithFonts","DictionaryBlock","param1","vals","temp","clones","cloneObject","links","clone","crypto","randomUUID","title","subtitle","body","field_name","field_value","getFont","cloneTemplate","stringify","PropertyType","Int","Float","List","Dictionary","toISOString","v","toString","toRawValue","form","val","find","tk","text_key","prop","_hoisted_1","class","_hoisted_2","$props","$setup","$data","$options","titleCase","getField","align","onChange","TextField","ListField","DictionaryField","props","required","default","methods","$emit","toLocaleUpperCase","substring","capitalize","emits","components","__exports__","rasterCache","match","visited","queue","vr","dsx","dsy","isVisible","hover","inherit","positionSetByUser","priority","select","warn","useSuper","moveChild","_objectCache","save","setLineDash","restore","arc","wo","e1","h1","e2","hdx","hdy","lineColor","cs","sc","eo","isSelected","hitbox","hitboxes","isHovered","tlx","tly","select_outline","so","border_radius","headHeight","hh","layout","shadowOffsetX","shadowOffsetY","tf","titleFont","stf","subtitleFont","fnf","fieldNameFont","fvf","fieldValueFont","mc","anchor_markers","gc","bc","_gridPattern","createGridPattern","fillRect","shadowColor","fillColor","strokeColor","ptr","createPattern","DOMMatrix","setCursor","setSemanticRole","updateLayout","ObjectInit","reasons","updateParent","han","isAnchored","e1x","e1y","e2x","e2y","h1x","h2y","hitboxWidth","LocationType","setInheritAlignment","setAlignment","anchor_template","contentHash","getHash","max_width","horizontal_padding","sbf","strokeWidth","title_key","titleText","subtitleText","mw","keys","vertical_padding","measure","wordWrap","lineHeight","line_height","xo","yo","_component_AppTitleBar","_component_BlockDiagram","_component_EditorTabs","_component_AppFooterBar","_component_AppHotkeyBox","DiagramValidator","_errors","validate","diagram","reason","graph","toGraph","addError","DiagramPublisher","log","StandardDictionaryBlockStyle","ActionBlockStyle","AssetBlockStyle","ConditionBlockStyle","config","file_type_name","file_type_extension","properties","spec_version","Property","technique_id","technique_name","technique_ref","description","pattern","pattern_type","pattern_version","help_links","url","validator","publisher","_withScopeId","_component_TitleBar","menus","onSelect","onItemSelect","icon","_component_ContextMenuListing","_component_FocusBox","onUnfocus","menuClose","$slots","menu","focused","focusedMenu","onMouseenter","$event","menuEnter","onClick","menuOpen","sections","menuSelect","onFocusOut","$el","contains","addEventListener","removeEventListener","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","onContextmenu","ref","readFile","section","items","MenuAction","OpenSubmenu","disabled","submenuEnter","onMouseleave","submenuLeave","focusedSubMenu","selectItem","onItemClick","formatShortcut","shortcut","KeyToText","Control","Escape","ArrowLeft","ArrowUp","ArrowRight","ArrowDown","Delete","file","Function","forceInsideWindow","xOffset","yOffset","leaveTimeout","leaveTimeoutId","selectedFileId","computed","marginTop","marginLeft","OpenFile","click","ToggleValue","files","reader","FileReader","filename","readAsText","closeSubmenu","viewWidth","innerWidth","viewHeight","innerHeight","top","left","bottom","right","getBoundingClientRect","closeMenu","FocusBox","ContextMenuListing","fileMenu","editMenu","layoutMenu","viewMenu","helpMenu","executeAppAction","TitleBar","_component_HotkeyBox","hotkeys","onFire","onHotkeyFired","tabindex","recognitionDelay","_boundAdvanceKeyState","advanceKeyState","_boundReverseKeyState","reverseKeyState","_callback","_callLoop","_container","_hotkeyIdMap","_keyState","_recognitionDelay","_selectedFileId","_fileInput","keyMap","hotkeyId","keySequenceToHotKeyId","startsWith","OverlappingHotkeysError","sequence","strict","includes","toLocaleLowerCase","endsWith","tagName","hotkey","allowBrowserBehavior","triggerHotkey","replace","HotkeyAction","RunTask","repeat","runRepeat","OpenLink","open","info","interval","delay","isHotkeyActive","observer","watch","setHotkeys","nativeHotkeys","fileHotkeys","editHotKeys","layoutHotkeys","viewHotkeys","HotkeyBox","_component_ContextMenu","cursorStyle","menuStyle","menuOptions","closeContextMenu","BlockDiagram","show","state","hovers","trigger","settings","display_grid","display_shadows","display_debug_mode","render_high_quality","disable_shadows_at","many","hasSelection","deleteMenu","clipboardMenu","duplicateMenu","layeringMenu","jumpMenu","undoRedoMenu","createMenu","selectAllMenu","zoomMenu","diagramViewMenu","setPage","setGridDisplay","displayGrid","setShadowsDisplay","displayShadows","setDebugDisplay","displayDebugMode","setSsaaScale","renderHighQuality","setShadowsDisableAt","disableShadowsAt","unhoverAll","multiselectHotkey","unselectAll","openContextMenu","setViewTransform","attach","detach","addLineObject","moveCameraTo","inject","destroy","ContextMenu","fileName","_component_ObjectEditor","_component_Tab","_component_TabBox","modelValue","active","instance","tabsState","TypeError","tabs","findIndex","isActive","tab","canClose","Number","_component_DictionaryFieldContents","_component_ScrollBox","alwaysShowScrollBar","scrollColor","onWheelPassive","moveScrollPosition","scrollTop","deltaY","scroll","sty","handle","onPointerdown","startDrag","onPointerup","stopDrag","showScrollbar","PointerTracker","deltaX","movementX","movementY","_originX","_originY","_lastX","_lastY","clientX","clientY","setPointerCapture","pointerId","onpointermove","update","releasePointerCapture","content","resetScrollOnChange","handleColor","borderColor","windowMax","background","trk","hei","pos","onResizeObserver","onMutateObserver","capture","onDrag","track","handleTopToTop","release","resetTop","ratio","scrollHeight","recalculateScrollState","position","topToHandleTop","hasMoved","stopPropagation","mutateOptions","childList","characterData","subtree","MutationObserver","selectTrigger","pageUpdate","selected","setObjectProperty","ScrollBox","DictionaryFieldContents","TabBox","Tab","ObjectEditor","loadSettings","createEmptyDocument","AppHotkeyBox","AppTitleBar","AppFooterBar","EditorTabs","namespaced","getters","inValidState","commit","dispatch","resolver","getLinks","params","rootState","f","AppSettingsStore","edit","clone_offset","cloneObjects","reverse","image_export","image","mutations","setSelect","setHover","fst","chain","addObject","run","removeObjects","moveObjectsBy","setProperty","reorderObjectLayer","setCameraLocation","Download","ext","blob","Blob","URL","createObjectURL","_aLink","download","revokeObjectURL","toBlob","ROOT","root","clipboard","textFile","imageFile","ActivePageStore","rootGetters","publish","fullscreen","cast","requestFullscreen","webkitRequestFullscreen","msRequestFullscreen","new_file","open_file","save_file","save_image","save_select_image","publish_file","open_library","save_library","cut","paste","duplicate","select_all","selection_to_front","selection_to_back","bring_selection_forward","send_selection_backward","align_left","align_center","align_right","align_top","align_middle","align_bottom","group","ungroup","open_group","close_group","toggle_grid","toggle_shadows","reset_view","zoom_in","zoom_out","jump_to_selection","jump_to_parents","jump_to_children","toggle_debug_view","json","_s","_g","fileType","canPublish","filterMenuOptions","publish_options","canPaste","ActiveDocumentStore","blocks","getBlockTemplates","getLineTemplates","groupingMenu","groupMenu","diagramRenderMenu","fullscreenMenu","developerViewMenu","AppActionsStore","ContextMenuStore","HotkeyStore","App","use","store","mount","BoundingBox","hasChild","DiagramObjectModelError","LayoutUpdateReason","ChildAdded","Movement","safely","hasExternalAttachments","ChildDeleted","hasHigherPriorityThan","getPriority","atBaseOfMovement","PropertyChange","isAlignmentInherited","getPositionSetByUser","lineTemplates","tem","le","lh","setPriority"],"mappings":"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","file":"js/app.d3101019.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t\"app\": 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-3b8130fb\":\"25d3caed\",\"chunk-46cf60ae\":\"84b264b5\",\"chunk-4a96a04e\":\"698803e2\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// mini-css-extract-plugin CSS loading\n \t\tvar cssChunks = {\"chunk-3b8130fb\":1,\"chunk-46cf60ae\":1,\"chunk-4a96a04e\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"css/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-3b8130fb\":\"e200d54a\",\"chunk-46cf60ae\":\"2e5d066b\",\"chunk-4a96a04e\":\"70eea7d0\"}[chunkId] + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./ContextMenu.vue?vue&type=style&index=0&id=6ed3d4b3&scoped=true&lang=css\"","/**\r\n * Draws an arrow head to the context.\r\n * @param ctx\r\n *  The context to draw to.\r\n * @param sx\r\n *  The arrow's source x-axis coordinate.\r\n * @param sy\r\n *  The arrow's source y-axis coordinate.\r\n * @param tx\r\n *  The arrow's target x-axis coordinate.\r\n * @param ty\r\n *  The arrow's target y-axis coordinate.\r\n * @param h\r\n *  The arrow's height.\r\n *  (Default: 12)\r\n * @param n\r\n *  The arrow's offset on its axis. A positive value nudges the arrowhead `n`\r\n *  pixels forward on its axis. A negative value nudges the arrowhead `n`\r\n *  pixels backwards on its axis. \r\n *  (Default: 0)\r\n */\r\nexport function drawArrowHead(\r\n    ctx: CanvasRenderingContext2D, \r\n    sx: number, sy: number, \r\n    tx: number, ty: number, \r\n    h: number = 12, n: number = 0\r\n) {\r\n    let dx = tx - sx;\r\n    let dy = ty - sy;\r\n    let angle = Math.atan2(dy, dx);\r\n    let a = tx - h * Math.cos(angle - Math.PI / 6);\r\n    let b = ty - h * Math.sin(angle - Math.PI / 6);\r\n    let c = tx - h * Math.cos(angle + Math.PI / 6);\r\n    let d = ty - h * Math.sin(angle + Math.PI / 6);\r\n    ctx.beginPath();\r\n    ctx.moveTo(a, b);\r\n    ctx.lineTo(c, d);\r\n    ctx.lineTo(tx, ty);\r\n    ctx.closePath();\r\n}\r\n\r\n/**\r\n * Draws a rectangular path to the context.\r\n * @param ctx\r\n *  The context to draw to.\r\n * @param x\r\n *  The top-left x coordinate.\r\n * @param y\r\n *  The top-left y coordinate.\r\n * @param w\r\n *  The width of the rectangle.\r\n * @param h\r\n *  The height of the rectangle.\r\n * @param r\r\n *  The rectangle's border radius.\r\n * @param s\r\n *  The rectangle's stroke width.\r\n *  (Default: 1)\r\n */\r\nexport function drawRect(\r\n    ctx: CanvasRenderingContext2D,\r\n    x: number, y: number,\r\n    w: number, h: number,\r\n    r: number, s?: number\r\n): void;\r\n\r\n /**\r\n  * Draws a rectangular path to a context.\r\n  * @param ctx\r\n  *  The context to draw to.\r\n  * @param x\r\n  *  The top-left x coordinate.\r\n  * @param y\r\n  *  The top-left y coordinate.\r\n  * @param w\r\n  *  The width of the rectangle.\r\n  * @param h\r\n  *  The height of the rectangle.\r\n  * @param r\r\n  *  An object which defines the border radius of each corner. If a corner\r\n  *  is not specified, it is assumed to be 0.\r\n  * @param s\r\n  *  The rectangle's stroke width.\r\n  *  (Default: 1)\r\n  */\r\nexport function drawRect(\r\n    ctx: CanvasRenderingContext2D,\r\n    x: number, y: number,\r\n    w: number, h: number,\r\n    r: BorderRadius, \r\n    s?: number\r\n): void;\r\n\r\nexport function drawRect(\r\n    ctx: CanvasRenderingContext2D, \r\n    x: number, y: number,\r\n    w: number, h: number,\r\n    r: BorderRadius | number,\r\n    s: number = 1\r\n) {\r\n    // Account for stroke width\r\n    x += s / 2;\r\n    y += s / 2;\r\n    w -= s;\r\n    h -= s;\r\n    // Parse radius\r\n    if (typeof r === \"number\") {\r\n        r = { tl: r, tr: r, br: r, bl: r }\r\n    } else {\r\n        r = { tl: 0, tr: 0, br: 0, bl: 0, ...r };\r\n    }\r\n    // Draw rectangular path\r\n    ctx.beginPath();\r\n    ctx.moveTo(x + r.tl!, y);\r\n    ctx.lineTo(x + w - r.tr!, y);\r\n    ctx.quadraticCurveTo(x + w, y, x + w, y + r.tr!);\r\n    ctx.lineTo(x + w, y + h - r.br!);\r\n    ctx.quadraticCurveTo(x + w, y + h, x + w - r.br!, y + h);\r\n    ctx.lineTo(x + r.bl!, y + h);\r\n    ctx.quadraticCurveTo(x, y + h, x, y + h - r.bl!);\r\n    ctx.lineTo(x, y + r.tl!);\r\n    ctx.quadraticCurveTo(x, y, x + r.tl!, y);\r\n    ctx.closePath();\r\n}\r\n\r\nexport type BorderRadius = {\r\n    \r\n    /**\r\n     * Top left radius.\r\n     */\r\n    tl?: number,\r\n\r\n    /**\r\n     * Top right radius.\r\n     */\r\n    tr?: number,\r\n\r\n    /**\r\n     * Bottom right radius.\r\n     */\r\n    br?: number,\r\n\r\n    /**\r\n     * Bottom left radius.\r\n     */\r\n    bl?: number\r\n\r\n}\r\n","export class EventEmitter {\r\n    \r\n    /**\r\n     * The event emitter's index of event listeners.\r\n     */\r\n    private _listeners: Map<string, Function[]>;\r\n\r\n    \r\n    /**\r\n     * Creates a new {@link EventEmitter}. \r\n     */\r\n    constructor(){\r\n        this._listeners = new Map();\r\n    }\r\n\r\n\r\n    /**\r\n     * Adds an event listener to an event.\r\n     * @param event\r\n     *  The name of the event.\r\n     * @param callback\r\n     *  The function to call when the event is raised.\r\n     */\r\n    public on(event: string, callback: Function) {\r\n        if(!this._listeners.has(event))\r\n            this._listeners.set(event, []);\r\n        this._listeners.get(event)!.unshift(callback);\r\n    }\r\n\r\n    /**\r\n     * Adds a one-time event listener to an event.\r\n     * @param event\r\n     *  The name of the event.\r\n     * @param callback\r\n     *  The function to call when the event is raised.\r\n     */\r\n    public once(event: string, callback: Function) {\r\n        let once = (...args: any[]) => {\r\n            let actions = this._listeners.get(event)!;\r\n            actions.splice(actions.indexOf(once), 1);\r\n            callback(...args);\r\n        }\r\n        if(!this._listeners.has(event))\r\n            this._listeners.set(event, []);\r\n        this._listeners.get(event)!.unshift(once);\r\n    }\r\n\r\n    /**\r\n     * Dispatches the event listeners associated with a given event.\r\n     * @param event\r\n     *  The name of the event to raise.\r\n     * @param args\r\n     *  The arguments to pass to the event listeners.\r\n     */\r\n    protected emit(event: string, ...args: any[]) {\r\n        if(this._listeners.has(event)) {\r\n            let listeners = this._listeners.get(event)!;\r\n            for(let i = listeners.length - 1; 0 <= i; i--) {\r\n                listeners[i](...args);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes all event listeners associated with a given event. If no event\r\n     * name is specified, all event listeners are removed.\r\n     * @param event\r\n     *  The name of the event.\r\n     */\r\n    public removeAllListeners(event?: string) {\r\n        if(event !== undefined) {\r\n            this._listeners.delete(event);\r\n        } else {\r\n            this._listeners.clear();\r\n        }\r\n    }\r\n\r\n}\r\n","///////////////////////////////////////////////////////////////////////////////\r\n//  1. Font Store  ////////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nclass FontStore {\r\n\r\n    /**\r\n     * The font store's internal font list.\r\n     */\r\n    private _fontList: Map<string, Font>;\r\n\r\n    /**\r\n     * Creates a new {@link FontStore}.\r\n     */\r\n    constructor() {\r\n        this._fontList = new Map([\r\n            [\"default\", new Font({ size: \"10pt\", family: \"sans-serif\" })],\r\n        ]);\r\n    }\r\n\r\n    /**\r\n     * Returns the specified font. If the font has not been loaded, the default\r\n     * font is returned instead.\r\n     * @param descriptor\r\n     *  The font's descriptor.\r\n     * @return\r\n     *  The font. \r\n     */\r\n    public getFont(descriptor: FontDescriptor): Font {\r\n        let id = FontStore.getCssFontString(descriptor);\r\n        if(this._fontList.has(id)) {\r\n            return this._fontList.get(id)!\r\n        } else {\r\n            return this._fontList.get(\"default\")!;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Loads the specified fonts.\r\n     * @param descriptors\r\n     *  The fonts to load.\r\n     * @param timeout\r\n     *  The amount of time to wait (in milliseconds) per font before giving up.\r\n     *  (Default: 4000)\r\n     * @returns\r\n     *  A Promise that resolves once the fonts have loaded.\r\n     * @throws { Error }\r\n     *  If any of the fonts failed to load.\r\n     */\r\n    public async loadFonts(descriptors: FontDescriptor[], timeout: number = 4000) {\r\n        // Load fonts\r\n        let req = [];\r\n        for(let font of descriptors) {\r\n            req.push(this.loadFont(font, timeout));\r\n        }\r\n        let results = await Promise.allSettled(req);\r\n        // Parse results\r\n        let failedFonts = [];\r\n        for(let i = 0; i < results.length; i++) {\r\n            if(results[i].status === \"fulfilled\")\r\n                continue;\r\n            failedFonts.push(FontStore.getCssFontString(descriptors[i]));\r\n        }\r\n        if(failedFonts.length) {\r\n            let fonts = `'${ failedFonts.join(\"', '\") }'`;\r\n            throw new Error(`The following fonts failed to load: ${ fonts }`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Loads the specified font.\r\n     * @param descriptor\r\n     *  The font to load.\r\n     * @param timeout\r\n     *  The amount of time to wait (in milliseconds) before giving up.\r\n     *  (Default: 4000)\r\n     * @returns\r\n     *  A Promise that resolves once the font has loaded.\r\n     * @throws { Error }\r\n     *  If the timeout was reached or if the document's font store encountered\r\n     *  an error while attempting to load the font.\r\n     */\r\n    public async loadFont(descriptor: FontDescriptor, timeout: number = 4000): Promise<boolean> {\r\n        let fontString = FontStore.getCssFontString(descriptor);\r\n        let fonts = (document as any).fonts; \r\n        if(fonts.check(fontString)) {\r\n            if(!this._fontList.has(fontString)){\r\n                this._fontList.set(fontString, new Font(descriptor));\r\n            } \r\n            return true;\r\n        } else {\r\n            let set = this._fontList.set.bind(this._fontList);\r\n            let start = Date.now();\r\n            // Create loader\r\n            let load = new Promise<boolean>(async (res, rej) => {\r\n                (async function fetch() {\r\n                    if(timeout <= Date.now() - start) {\r\n                        rej(\r\n                            new Error(`Failed to load font '${ \r\n                                fontString \r\n                            }' request timed out after ${ \r\n                                timeout \r\n                            }ms.`)\r\n                        );\r\n                    } else {\r\n                        fonts.load(fontString).then((fontList: Array<any>) => {\r\n                            if(0 < fontList.length) {\r\n                                let result = fonts.check(fontString);\r\n                                if(result) {\r\n                                    set(fontString, new Font(descriptor));\r\n                                }\r\n                                res(result);\r\n                            } else {\r\n                                setTimeout(fetch, 50);\r\n                            }\r\n                        }, rej);\r\n                    }\r\n                })()\r\n            })\r\n            // Create timer\r\n            let timeoutId;\r\n            let timer = new Promise<boolean>((_, rej) => {\r\n                timeoutId = setTimeout(\r\n                    () => rej(\r\n                        new Error(`Failed to load font '${ \r\n                            fontString \r\n                        }' request timed out after ${ \r\n                            timeout \r\n                        }ms.`)\r\n                    ),\r\n                    timeout\r\n                );\r\n            })\r\n            // Wait for either the loader or the timer to resolve\r\n            let result = await Promise.race([load, timer]);\r\n            // Clear timeout and complete request\r\n            clearTimeout(timeoutId);\r\n            return result;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Converts a FontDescriptor into a CSS font string.\r\n     * @param font\r\n     *  The font to evaluate.\r\n     * @returns\r\n     *  The FontDescriptor as a CSS font string.\r\n     */\r\n    public static getCssFontString(font: FontDescriptor): string {\r\n        return `${ font.weight ?? 400 } ${ font.size } ${ font.family }`\r\n    }\r\n\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  2. Font  //////////////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport class Font { \r\n\r\n    /**\r\n     * The default character to width index.\r\n     */\r\n    private static DEFAULT_INDEX: string = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\\t \";\r\n\r\n    /**\r\n     * The font's whitespace regex.\r\n     */\r\n    private static WHITESPACE: RegExp = /(\\s+)/;\r\n\r\n    /**\r\n     * The font's internal context.\r\n     */\r\n    private _ctx: CanvasRenderingContext2D;\r\n\r\n    /**\r\n     * The font's internal character to width index.\r\n     */\r\n    private _widthIndex: Map<string, number>\r\n\r\n    /**\r\n     * The font's css string.\r\n     */\r\n    public css: string;\r\n\r\n    /**\r\n     * The font's descriptor.\r\n     */\r\n    public descriptor: FontDescriptor\r\n    \r\n\r\n    /**\r\n     * Creates a new {@link FontFamily}.\r\n     * @param descriptor\r\n     *  The font's descriptor.\r\n     */\r\n    constructor(descriptor: FontDescriptor) {\r\n        this.css = FontStore.getCssFontString(descriptor);\r\n        this.descriptor = descriptor;\r\n        this._ctx = document.createElement(\"canvas\").getContext(\"2d\")!;\r\n        this._ctx.font = this.css;\r\n        this._widthIndex = new Map();\r\n        for(let char of Font.DEFAULT_INDEX) {\r\n            this._widthIndex.set(char, this.measureWidth(char));\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Returns the width of the given text.\r\n     * @param text\r\n     *  The text to measure.\r\n     * @returns\r\n     *  The width of the text (in pixels).\r\n     * @throws { Error }\r\n     *  If `font` has not been loaded.\r\n     */\r\n    public measureWidth(text: string): number {\r\n        if((document as any).fonts.check(this.css)) {\r\n            return this._ctx.measureText(text).width;\r\n        } else {\r\n            throw new Error(`The font '${ \r\n                this.css \r\n            }' has not been loaded. The width of '${ \r\n                text \r\n            }' cannot be measured.`)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the width and height of the given text.\r\n     * @param text\r\n     *  The text to measure.\r\n     * @returns\r\n     *  The width and height of the text (in pixels).\r\n     * @throws { Error }\r\n     *  If `font` has not been loaded.\r\n     */\r\n    public measure(text: string): { width: number, ascent: number, descent: number } {\r\n        if((document as any).fonts.check(this.css)) {\r\n            let m = this._ctx.measureText(text);\r\n            return {\r\n                width: m.width,\r\n                ascent: m.actualBoundingBoxAscent,\r\n                descent: m.actualBoundingBoxDescent\r\n            };\r\n        } else {\r\n            throw new Error(`The font '${ \r\n                this.css \r\n            }' has not been loaded. The width of '${ \r\n                text \r\n            }' cannot be measured.`)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the width of a character.\r\n     * @param char\r\n     *  The character.\r\n     * @returns\r\n     *  The character's width.\r\n     */\r\n    public getCharWidth(char: string): number {\r\n        if(!this._widthIndex.has(char)) {\r\n            this._widthIndex.set(char, this.measureWidth(char));\r\n        }\r\n        return this._widthIndex.get(char)!;\r\n    }\r\n\r\n    /**\r\n     * Segments a string into lines no longer than the specified width.\r\n     * @param text\r\n     *  The text to wrap.\r\n     * @param width\r\n     *  The maximum width allowed.\r\n     * @returns\r\n     *  The segmented lines.\r\n     */\r\n    public wordWrap(text: string, width: number): string[] {\r\n        let lines = text.trim().split(/\\n/);\r\n        let segments: (string[] | string)[] = [];\r\n        for(let i = 0; i < lines.length; i++) {\r\n            if(lines[i]) {\r\n                segments[i] = this.lineWrap(lines[i], width);\r\n            } else {\r\n                segments[i] = lines[i]\r\n            }\r\n        }\r\n        return segments.flat();\r\n    }\r\n\r\n    /**\r\n     * Segments a line of text into lines no longer than the specified width.\r\n     * @param text\r\n     *  A single line of text. (i.e. Text has no newline characters.)\r\n     * @param width\r\n     *  The maximum width allowed.\r\n     * @returns\r\n     *  The segmented lines.\r\n     */\r\n    private lineWrap(text: string, width: number): string[] {\r\n        let line = \"\";\r\n        let lineWidth = 0;\r\n        let segments: string[] = [];\r\n        let tokens = text.split(Font.WHITESPACE).filter(Boolean);\r\n        let whitespaceParity = Font.WHITESPACE.test(tokens[0]) ? 0 : 1;\r\n        for(let i = 0; i < tokens.length; i++) {\r\n            let tokenWidth = this.measureWidth(tokens[i]);\r\n            \r\n            // Add Whitespace\r\n            if(i % 2 === whitespaceParity) {\r\n                line += tokens[i];\r\n                lineWidth += tokenWidth;\r\n                continue;\r\n            }\r\n            \r\n            // Add Word\r\n            if(width < lineWidth + tokenWidth) {\r\n                if(i !== 0) {\r\n                    // Finish line\r\n                    segments.push(line.trimEnd());\r\n                    // Reset line\r\n                    line = \"\";\r\n                    lineWidth = 0;\r\n                }\r\n                if(width < tokenWidth) {\r\n                    // Wrap token\r\n                    let word = tokens[i];\r\n                    for(let j = 0; j < word.length; j++) {\r\n                        tokenWidth = this.getCharWidth(word[j]);\r\n                        if(j !== 0 && width < lineWidth + tokenWidth) {\r\n                            // Finish line\r\n                            segments.push(line);\r\n                            // Reset line\r\n                            line = \"\";\r\n                            lineWidth = 0;\r\n                        }\r\n                        line += word[j];\r\n                        lineWidth += tokenWidth;\r\n                    }\r\n                    // Move onto next token\r\n                    continue;\r\n                }\r\n            }\r\n            line += tokens[i];\r\n            lineWidth += tokenWidth;\r\n\r\n        }\r\n        segments.push(line.trimEnd());\r\n        return segments;\r\n    }\r\n\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  3. FontDescriptor  ////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport type FontDescriptor = {\r\n    size: string,\r\n    family: string,\r\n    weight?: number,\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  4. GlobalFontStore  ///////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport const GlobalFontStore = new FontStore();\r\n","///////////////////////////////////////////////////////////////////////////////\r\n//  1. General  ///////////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n/**\r\n * Bounds a number within a specified range.\r\n * \r\n * **Example**\r\n * \r\n * - `clamp(41, 0, 100)` returns `41`. \r\n * - `clamp(-120, 0, 100)` returns `0`.\r\n * - `clamp(231, 0, 100)` returns `100`.\r\n * \r\n * @param n\r\n *  The number to bound.\r\n * @param min\r\n *  The range's lower bound.\r\n * @param max\r\n *  The range's upper bound.\r\n * @returns\r\n *  The number's bounded value.\r\n */\r\nexport function clamp(n: number, min: number, max: number): number {\r\n    return Math.min(Math.max(n, min), max);\r\n}\r\n\r\n/**\r\n * Rounds a number to the nearest multiple.\r\n * @param n\r\n *  The number to round.\r\n * @param multiple\r\n *  The multiple.\r\n * @returns\r\n *  The number rounded to the nearest multiple.\r\n */\r\nexport function round(n: number, multiple: number): number {\r\n    return Math.sign(n) * Math.round(Math.abs(n) / multiple) * multiple;\r\n}\r\n\r\n/**\r\n * Checks if two floats are equal up to the specified decimal place.\r\n * @param a\r\n *  The first number to compare.\r\n * @param b\r\n *  The second number to compare.\r\n * @param decimals\r\n *  The number of decimal places.\r\n *  (Default: 5)\r\n */\r\nexport function floatEq(a: number, b: number, decimals: number = 5) {\r\n    let m = 10 ** decimals;\r\n    return Math.floor(a * m) === Math.floor(b * m); \r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  2. Bit Functions  /////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n/**\r\n * Generates an enum's bit mask.\r\n * @param obj\r\n *  The enum to evaluate.\r\n * @returns\r\n *  The enum's bit mask.\r\n */\r\nexport function generateBitMask(obj: { [key: string]: number }): number {\r\n    let mask = 0;\r\n    for (let bit in obj)\r\n        mask |= obj[bit];   \r\n    return mask;\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  3. Geometry  //////////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n/**\r\n * Calculates a line's hitbox.\r\n * @param x0\r\n *  The x coordinate of the 1st point.\r\n * @param y0\r\n *  The y coordinate of the 1st point.\r\n * @param x1\r\n *  The x coordinate of the 2nd point.\r\n * @param y1\r\n *  The y coordinate of the 2nd point.\r\n * @param width\r\n *  The width of the hitbox.\r\n * @returns\r\n *  The set of vertices that define the hitbox region.\r\n */\r\nexport function getLineHitbox(x0: number, y0: number, x1: number, y1: number, width: number): number[] {\r\n    let w = width / 2;\r\n    let vx = x1 - x0;\r\n    let vy = y1 - y0;\r\n    let angle = Math.acos(vx / Math.sqrt(vx**2 + vy**2));\r\n    let dx = w * Math.sin(angle);\r\n    let dy = w * Math.cos(angle);\r\n    return [\r\n        x0 - dx, y0 - dy,\r\n        x0 + dx, y0 + dy,\r\n        x1 + dx, y1 + dy,\r\n        x1 - dx, y1 - dy,\r\n    ]\r\n}\r\n\r\n/**\r\n * Tests if the given point lies inside the given region.\r\n * @param x\r\n *  The x coordinate.\r\n * @param y\r\n *  The y coordinate.\r\n * @param vertices\r\n *  The vertices that define the region. \r\n */\r\nexport function isInsideRegion(x: number, y: number, vertices: number[]) {\r\n    // If polygon\r\n    let minX = Infinity;\r\n    let minY = Infinity;\r\n    let maxX = -Infinity;\r\n    let maxY = -Infinity;\r\n    for(let i = 0; i < vertices.length; i += 2) {\r\n        minX = Math.min(minX, vertices[i]);\r\n        minY = Math.min(minY, vertices[i + 1]);\r\n        maxX = Math.max(maxX, vertices[i]);\r\n        maxY = Math.max(maxY, vertices[i + 1]);\r\n    }\r\n    if(minX < x && x < maxX && minY < y && y < maxY) {\r\n        // Compute intersection vector\r\n        let v1x0 = x;\r\n        let v1y0 = y;\r\n        let v1x1 = maxX + 1;\r\n        let v1y1 = y\r\n        // Computer vector intersections\r\n        let totalIntersections = 0;\r\n        let len = vertices.length;\r\n        for(let i = 0; i < len; i += 2) {\r\n            let intersection = doVectorsIntersect(\r\n                v1x0, v1y0, v1x1, v1y1, \r\n                vertices[i], vertices[i + 1], \r\n                vertices[(i + 2) % len], vertices[(i + 3) % len]\r\n            );\r\n            if(intersection) totalIntersections++;\r\n        }\r\n        return totalIntersections % 2 !== 0;\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * Tests if the given point lies inside the given shape.\r\n * @param x\r\n *  The point's x coordinate.\r\n * @param y\r\n *  The point's y coordinate.\r\n * @param sx\r\n *  The shape's x coordinate.\r\n * @param sy\r\n *  The shape's y coordinate.\r\n * @param vertices\r\n *  The shape's vertices relative to (0,0). \r\n * @returns\r\n *  True if the point lines inside the shape, false otherwise.\r\n */\r\nexport function isInsideShape(\r\n    x: number, y: number, sx: number, sy: number, vertices: number[]\r\n): boolean {\r\n\r\n    // If circle\r\n    if(vertices.length === 1) {\r\n        let dx = x - sx;\r\n        let dy = y - sy;\r\n        let r = vertices[0];\r\n        return dx * dx + dy * dy < r * r\r\n    }\r\n    \r\n    // If polygon\r\n    let minX = Infinity;\r\n    let minY = Infinity;\r\n    let maxX = -Infinity;\r\n    let maxY = -Infinity;\r\n    let txVertices = [];\r\n    for(let i = 0, vx, vy; i < vertices.length; i += 2) {\r\n        vx = sx + vertices[i];\r\n        vy = sy + vertices[i + 1];\r\n        minX = Math.min(minX, vx);\r\n        minY = Math.min(minY, vy);\r\n        maxX = Math.max(maxX, vx);\r\n        maxY = Math.max(maxY, vy);\r\n        txVertices.push(vx, vy);\r\n    }\r\n    if(minX < x && x < maxX && minY < y && y < maxY) {\r\n        // Compute intersection vector\r\n        let v1x0 = x;\r\n        let v1y0 = y;\r\n        let v1x1 = maxX + 1;\r\n        let v1y1 = y\r\n        // Computer vector intersections\r\n        let totalIntersections = 0;\r\n        let len = txVertices.length;\r\n        for(let i = 0; i < len; i += 2) {\r\n            let intersection = doVectorsIntersect(\r\n                v1x0, v1y0, v1x1, v1y1, \r\n                txVertices[i], txVertices[i + 1], \r\n                txVertices[(i + 2) % len], txVertices[(i + 3) % len]\r\n            );\r\n            if(intersection) totalIntersections++;\r\n        }\r\n        return totalIntersections % 2 !== 0;\r\n    }\r\n    return false;\r\n\r\n}\r\n\r\n/**\r\n * Tests if two vectors intersect. Collinear vectors do not intersect.\r\n * @param v1x0\r\n *  Vector 1's x0 coordinate.\r\n * @param v1y0 \r\n *  Vector 1's y0 coordinate.\r\n * @param v1x1\r\n *  Vector 1's x1 coordinate.\r\n * @param v1y1\r\n *  Vector 1's y1 coordinate.\r\n * @param v2x0\r\n *  Vector 2's x0 coordinate.\r\n * @param v2y0\r\n *  Vector 2's y0 coordinate.\r\n * @param v2x1 \r\n *  Vector 2's x1 coordinate.\r\n * @param v2y1 \r\n *  Vector 2's y1 coordinate.\r\n * @returns\r\n *  True if the vectors intersect, false otherwise.\r\n */\r\nexport function doVectorsIntersect(\r\n    v1x0: number, v1y0: number, \r\n    v1x1: number, v1y1: number, \r\n    v2x0: number, v2y0: number,\r\n    v2x1: number, v2y1: number\r\n): boolean {\r\n    let a1, b1, c1, a2, b2, c2, d1, d2;\r\n    // Test vector 2 on 1\r\n    a1 = v1y0 - v1y1;\r\n    b1 = v1x1 - v1x0;\r\n    c1 = (v1x0 * v1y1) - (v1x1 * v1y0)\r\n    d1 = (a1 * v2x0) + (b1 * v2y0) + c1;\r\n    d2 = (a1 * v2x1) + (b1 * v2y1) + c1;\r\n    if(d1 < 0 && d2 < 0 || d1 > 0 && d2 > 0)\r\n        return false;\r\n    // Test vector 1 on 2\r\n    a2 = v2y0 - v2y1;\r\n    b2 = v2x1 - v2x0;\r\n    c2 = (v2x0 * v2y1) - (v2x1 * v2y0)\r\n    d1 = (a2 * v1x0) + (b2 * v1y0) + c2;\r\n    d2 = (a2 * v1x1) + (b2 * v1y1) + c2;\r\n    if(d1 < 0 && d2 < 0 || d1 > 0 && d2 > 0)\r\n        return false;\r\n    // If Collinear\r\n    if ((a1 * b2) - (a2 * b1) == 0) \r\n        return false;\r\n    return true;\r\n}\r\n","/**\r\n * Computes the hash of a string using Java's `hashCode()` function.\r\n * @param string\r\n *  The string to hash.\r\n * @returns\r\n *  The string's hash.\r\n */\r\nexport function computeHash(string: string): number {\r\n    let hash = 0;\r\n    if (string.length === 0)\r\n        return hash;\r\n    for (let i = 0; i < string.length; i++) {\r\n        hash = ((hash << 5) - hash) + string.charCodeAt(i);\r\n        hash |= 0; // Convert to 32-bit integer\r\n    }\r\n    return hash;\r\n}\r\n","export enum MouseClick { \r\n    Left   = 0, \r\n    Middle = 1,\r\n    Right  = 2\r\n}\r\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./ScrollBox.vue?vue&type=style&index=0&id=8005e880&scoped=true&lang=css\"","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./App.vue?vue&type=style&index=0&id=7635c1be&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./HotkeyBox.vue?vue&type=style&index=0&id=54b3aeda&scoped=true&lang=css\"","import { generateBitMask } from \"./Utilities\";\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  1. Attributes  ////////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport const Alignment = {\r\n    Free       : 0b0000000000000000,\r\n    Grid       : 0b0000000000000001\r\n}\r\nexport const AlignmentMask = generateBitMask(Alignment);\r\n\r\nexport const Cursor = {\r\n    Default    : 0b0000000000000000,\r\n    Pointer    : 0b0000000000000010,\r\n    Crosshair  : 0b0000000000000100,\r\n    Move       : 0b0000000000000110,\r\n    NotAllowed : 0b0000000000001000,\r\n    Grab       : 0b0000000000001010,\r\n    Grabbing   : 0b0000000000001100,\r\n    N_Resize   : 0b0000000000001110,\r\n    E_Resize   : 0b0000000000010000,\r\n    S_Resize   : 0b0000000000010010,\r\n    W_Resize   : 0b0000000000010100,\r\n    EW_Resize  : 0b0000000000010110,\r\n    NS_Resize  : 0b0000000000011000,\r\n    Col_Resize : 0b0000000000011010,\r\n    Row_Resize : 0b0000000000011100\r\n}\r\nexport const CursorMask = generateBitMask(Cursor);\r\n\r\nexport const Hover = {\r\n    Off        : 0b0000000000000000,\r\n    Direct     : 0b0000000000100000,\r\n    Indirect   : 0b0000000001000000\r\n}\r\nexport const HoverMask = generateBitMask(Hover);\r\n\r\nexport const InheritAlignment = {\r\n    False      : 0b0000000000000000,\r\n    True       : 0b0000000010000000\r\n}\r\nexport const InheritAlignmentMask = generateBitMask(InheritAlignment);\r\n\r\nexport const PositionSetByUser = {\r\n    False      : 0b0000000000000000,\r\n    True       : 0b0000000100000000\r\n}\r\nexport const PositionSetByUserMask = generateBitMask(PositionSetByUser);\r\n\r\nexport const Priority = {\r\n    Normal     : 0b0000001000000000,\r\n    High       : 0b0000010000000000\r\n}\r\nexport const PriorityMask = generateBitMask(Priority);\r\n\r\nexport const Select = {\r\n    Unselected : 0b0000000000000000,\r\n    Single     : 0b0000100000000000,\r\n    Multi      : 0b0001000000000000\r\n}\r\nexport const SelectMask = generateBitMask(Select);\r\n\r\nconst SemanticRole = {\r\n    None       : 0b0000000000000000,\r\n    Node       : 0b0010000000000000,\r\n    Edge       : 0b0100000000000000,\r\n    EdgeSource : 0b0110000000000000,\r\n    EdgeTarget : 0b1000000000000000\r\n}\r\nexport const SemanticRoleMask = generateBitMask(SemanticRole);\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  2. Attribute Maps  ////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport const CursorCssName = {\r\n    [Cursor.Default]    : \"default\",\r\n    [Cursor.Pointer]    : \"pointer\",\r\n    [Cursor.Crosshair]  : \"crosshair\",\r\n    [Cursor.Move]       : \"move\",\r\n    [Cursor.NotAllowed] : \"not-allowed\",\r\n    [Cursor.Grab]       : \"grab\",\r\n    [Cursor.Grabbing]   : \"grabbing\",\r\n    [Cursor.N_Resize]   : \"n-resize\",\r\n    [Cursor.E_Resize]   : \"e-resize\",\r\n    [Cursor.S_Resize]   : \"s-resize\",\r\n    [Cursor.W_Resize]   : \"w-resize\",\r\n    [Cursor.EW_Resize]  : \"ew-resize\",\r\n    [Cursor.NS_Resize]  : \"ns-resize\",\r\n    [Cursor.Col_Resize] : \"col-resize\",\r\n    [Cursor.Row_Resize] : \"row-resize\"\r\n}\r\n","import { SemanticRole } from \"../DiagramFactory\";\r\nimport { GraphExport, GraphObjectExport } from \"./GraphExportTypes\";\r\nimport { DiagramAnchorableModel, DiagramObjectModel } from \"../DiagramModelTypes\";\r\n\r\nexport class SemanticAnalyzer {\r\n\r\n    /**\r\n     * Derives a graph from a diagram object.\r\n     * @param object\r\n     *  The diagram object.\r\n     * @returns\r\n     *  The graph's edges and nodes.\r\n     */\r\n    public static toGraph(object: DiagramObjectModel): GraphExport {\r\n        let array: GraphObjectExport[];\r\n        let edges: GraphObjectExport[] = [];\r\n        let nodes: GraphObjectExport[] = [];\r\n        for(let obj of object.getSubtree()) {    \r\n            // Pick array\r\n            switch(obj.getSemanticRole()) {\r\n                case SemanticRole.Node:\r\n                    array = nodes;\r\n                    break;\r\n                case SemanticRole.Edge:\r\n                    array = edges;\r\n                    break;\r\n                default:\r\n                    continue;\r\n            }\r\n            // Export object\r\n            array.push({\r\n                id: obj.id,\r\n                template: obj.template,\r\n                data: obj.toExport(),\r\n                prev: this.getPrevGraphLinks(obj).map(o => o.id),\r\n                next: this.getNextGraphLinks(obj).map(o => o.id)\r\n            });\r\n            \r\n        }\r\n        return { edges, nodes }\r\n    }\r\n\r\n    /**\r\n     * Traverses a diagram object and derives the next set of diagram objects\r\n     * as if it were a graph. The object must be a\r\n     * {@link SemanticRole.Node Node} or an {@link SemanticRole.Edge Edge}.\r\n     * @param object\r\n     *  The diagram object.\r\n     * @returns\r\n     *  The next set of diagram objects.\r\n     */\r\n    public static getNextGraphLinks(object: DiagramObjectModel): DiagramObjectModel[] {\r\n        switch(object.getSemanticRole()) {\r\n            case SemanticRole.Edge:\r\n                return this.getNodes(this.getEdgeTargetsFor(object));\r\n            case SemanticRole.Node:\r\n                return this.getEdges(this.getEdgeSourcesFor(object));\r\n            default:\r\n                return [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Traverses a diagram object and derives the previous set of diagram\r\n     * objects as if it were a graph. The object must be a\r\n     * {@link SemanticRole.Node Node} or an {@link SemanticRole.Edge Edge}.\r\n     * @param object\r\n     *  The diagram object.\r\n     * @returns\r\n     *  The previous set of diagram objects.\r\n     */\r\n    public static getPrevGraphLinks(object: DiagramObjectModel): DiagramObjectModel[] {\r\n        switch(object.getSemanticRole()) {\r\n            case SemanticRole.Edge:\r\n                return this.getNodes(this.getEdgeSourcesFor(object));\r\n            case SemanticRole.Node:\r\n                return this.getEdges(this.getEdgeTargetsFor(object));\r\n            default:\r\n                return [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Resolves all {@link SemanticRole.Node Node} objects from a list of\r\n     * {@link SemanticRole.EdgeSource EdgeSource} or \r\n     * {@link SemanticRole.EdgeTarget EdgeTarget} objects.\r\n     * @param objects\r\n     *  The diagram objects.\r\n     * @returns\r\n     *  The semantic nodes.\r\n     */\r\n    private static getNodes(objects: DiagramObjectModel[]): DiagramObjectModel[] {\r\n        let nodes = [];\r\n        for(let obj of objects) {\r\n            let node = this.getNode(obj);\r\n            if(node) {\r\n                nodes.push(node);\r\n            }\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    /**\r\n     * Resolves the {@link SemanticRole.Node Node} of a\r\n     * {@link SemanticRole.EdgeSource EdgeSource} or\r\n     * {@link SemanticRole.EdgeTarget EdgeTarget} object.\r\n     * @param object\r\n     *  The diagram object.\r\n     * @returns\r\n     *  The semantic node, `undefined` if there wasn't one.\r\n     */\r\n    private static getNode(object: DiagramObjectModel): DiagramObjectModel | undefined {\r\n        if(\r\n            !(object instanceof DiagramAnchorableModel) || (\r\n                !object.hasRole(SemanticRole.EdgeSource) &&\r\n                !object.hasRole(SemanticRole.EdgeTarget)\r\n            )\r\n        ) {\r\n            return undefined;\r\n        }\r\n        // Traverse anchor chain looking for a node\r\n        let p: DiagramObjectModel | undefined = object.anchor;\r\n        while(p) {\r\n            if(p.hasRole(SemanticRole.Node)) {\r\n                return p;\r\n            }\r\n            p = p.parent;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Resolves all {@link SemanticRole.Edge Edge} objects from a list of\r\n     * {@link SemanticRole.EdgeSource EdgeSource} or \r\n     * {@link SemanticRole.EdgeTarget EdgeTarget} objects.\r\n     * @param objects\r\n     *  The diagram objects.\r\n     * @returns\r\n     *  The semantic edges.\r\n     */\r\n    private static getEdges(objects: DiagramObjectModel[]): DiagramObjectModel[] {\r\n        let edges = [];\r\n        for(let obj of objects) {\r\n            let edge = this.getEdge(obj);\r\n            if(edge) {\r\n                edges.push(edge);\r\n            }\r\n        }\r\n        return edges;\r\n    }\r\n\r\n    /**\r\n     * Resolves the {@link SemanticRole.Edge Edge} of a\r\n     * {@link SemanticRole.EdgeSource EdgeSource} or\r\n     * {@link SemanticRole.EdgeTarget EdgeTarget} object.\r\n     * @param object\r\n     *  The diagram object.\r\n     * @returns\r\n     *  The semantic edge, `undefined` if there wasn't one.\r\n     */\r\n    private static getEdge(object: DiagramObjectModel): DiagramObjectModel | undefined {\r\n        if(\r\n            !object.hasRole(SemanticRole.EdgeSource) && \r\n            !object.hasRole(SemanticRole.EdgeTarget)\r\n        ) {\r\n            return undefined;\r\n        }\r\n        // Traverse parent chain looking for an edge\r\n        let p: DiagramObjectModel | undefined = object.parent;\r\n        while(p) {\r\n            if(p.hasRole(SemanticRole.Edge)) {\r\n                return p;\r\n            }\r\n            p = p.parent;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Resolves all {@link SemanticRole.EdgeSource EdgeSource} objects from a\r\n     * list of {@link SemanticRole.Edge Edge} or {@link SemanticRole.Node Node}\r\n     * objects.\r\n     * @param objects\r\n     *  The diagram objects.\r\n     * @returns\r\n     *  The semantic edge sources.\r\n     */\r\n    private static getEdgeSources(objects: DiagramObjectModel[]): DiagramObjectModel[] {\r\n        let edgeSources: DiagramObjectModel[] = []\r\n        for(let obj of objects) {\r\n            edgeSources = edgeSources.concat(this.getEdgeSourcesFor(obj));\r\n        }\r\n        return edgeSources;\r\n    }\r\n\r\n    /**\r\n     * Resolves all {@link SemanticRole.EdgeSource EdgeSource} objects from an \r\n     * {@link SemanticRole.Edge Edge} or {@link SemanticRole.Node Node} object.\r\n     * @param object\r\n     *  The diagram object.\r\n     * @returns\r\n     *  The semantic edge sources.\r\n     */\r\n    private static getEdgeSourcesFor(object: DiagramObjectModel): DiagramObjectModel[] {\r\n        if(\r\n            !object.hasRole(SemanticRole.Edge) &&\r\n            !object.hasRole(SemanticRole.Node)\r\n        ) {\r\n            return [];\r\n        }\r\n        let stack = [object];\r\n        let sources = [];\r\n        while(stack.length) {\r\n            let obj = stack.pop()!;\r\n            if(obj.hasRole(SemanticRole.EdgeSource)) {\r\n                sources.push(obj);\r\n                continue;\r\n            }\r\n            for(let child of obj.children) {\r\n                stack.push(child);\r\n            }\r\n        }\r\n        return sources;\r\n    }\r\n\r\n    /**\r\n     * Resolves all {@link SemanticRole.EdgeTarget EdgeTarget} objects from a\r\n     * list of {@link SemanticRole.Edge Edge} or {@link SemanticRole.Node Node}\r\n     * objects.\r\n     * @param objects\r\n     *  The diagram objects.\r\n     * @returns\r\n     *  The semantic edge targets.\r\n     */\r\n    private static getEdgeTargets(objects: DiagramObjectModel[]): DiagramObjectModel[] {\r\n        let edgeTargets: DiagramObjectModel[] = []\r\n        for(let obj of objects) {\r\n            edgeTargets = edgeTargets.concat(this.getEdgeTargetsFor(obj));\r\n        }\r\n        return edgeTargets;\r\n    }\r\n\r\n    /**\r\n     * Resolves all {@link SemanticRole.EdgeTarget EdgeTarget} objects from an \r\n     * {@link SemanticRole.Edge Edge} or {@link SemanticRole.Node Node} object.\r\n     * @param object\r\n     *  The diagram object.\r\n     * @returns\r\n     *  The semantic edge targets.\r\n     */\r\n    private static getEdgeTargetsFor(object: DiagramObjectModel): DiagramObjectModel[] {\r\n        if(\r\n            !object.hasRole(SemanticRole.Edge) &&\r\n            !object.hasRole(SemanticRole.Node)\r\n        ) {\r\n            return [];\r\n        }\r\n        let stack = [object];\r\n        let targets = [];\r\n        while(stack.length) {\r\n            let obj = stack.pop()!;\r\n            if(obj.hasRole(SemanticRole.EdgeTarget)) {\r\n                targets.push(obj);\r\n                continue;\r\n            }\r\n            for(let child of obj.children) {\r\n                stack.push(child);\r\n            }\r\n        }\r\n        return targets;\r\n    }\r\n\r\n}\r\n","import { DiagramAction } from \"./DiagramAction\";\r\nimport { DiagramObjectModel } from \"../DiagramModelTypes/BaseTypes/BaseModels\";\r\n\r\nexport class AddObject implements DiagramAction {\r\n\r\n    /**\r\n     * The object to add.\r\n     */\r\n    private _object: DiagramObjectModel;\r\n\r\n    /**\r\n     * The parent object.\r\n     */\r\n    private _parent: DiagramObjectModel;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link AddObject}.\r\n     * @param object\r\n     *  The object to add.\r\n     * @param parent\r\n     *  The parent object.\r\n     */\r\n    constructor(object: DiagramObjectModel, parent: DiagramObjectModel) {\r\n        this._object = object;\r\n        this._parent = parent;\r\n    }\r\n    \r\n\r\n    /**\r\n     * Applies the action.\r\n     */\r\n    public redo() {\r\n        this._parent.addChild(this._object);\r\n    }\r\n\r\n    /**\r\n     * Reverts the action.\r\n     */\r\n    public undo() {\r\n        // Skip check for external attachments. If object entered the diagram\r\n        // with external attachments it should leave with them too.\r\n        this._parent.removeChild(this._object.id, true, false);\r\n    }\r\n\r\n}\r\n","import { DiagramAction } from \"./DiagramAction\";\r\nimport { \r\n    DiagramAnchorableModel,\r\n    DiagramAnchorModel\r\n} from \"../DiagramModelTypes/BaseTypes/BaseModels\";\r\n\r\nexport class AttachObject implements DiagramAction {\r\n\r\n    /**\r\n     * The object to attach.\r\n     */\r\n    private _object: DiagramAnchorableModel;\r\n\r\n    /**\r\n     * The object's anchor.\r\n     */\r\n    private _anchor: DiagramAnchorModel;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link AttachObject}.\r\n     * @param object\r\n     *  The object to attach.\r\n     * @param anchor\r\n     *  The object's anchor.\r\n     */\r\n    constructor(object: DiagramAnchorableModel, anchor: DiagramAnchorModel) {\r\n        this._object = object;\r\n        this._anchor = anchor;\r\n    }\r\n\r\n\r\n    /**\r\n     * Applies the action.\r\n     */\r\n    public redo() {\r\n        this._anchor.addChild(this._object);\r\n    }\r\n\r\n    /**\r\n     * Reverts the action.\r\n     */\r\n    public undo() {\r\n        this._anchor.removeChild(this._object.id);\r\n    }\r\n\r\n}\r\n","import { DiagramAction } from \"./DiagramAction\";\r\nimport { DiagramObjectModel, DiagramObjectModelError } from \"../DiagramModelTypes/BaseTypes/BaseModels\";\r\n\r\nexport class LayerObject implements DiagramAction {\r\n\r\n    /**\r\n     * The object to reorder.\r\n     */\r\n    private _object: DiagramObjectModel;\r\n\r\n    /**\r\n     * The object's parent.\r\n     */\r\n    private _parent: DiagramObjectModel;\r\n\r\n    /**\r\n     * The object's previous location in its parent.\r\n     */\r\n    private _prevIndex: number;\r\n\r\n    /**\r\n     * The object's next location in its parent.\r\n     */\r\n    private _nextIndex: number;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link LayerObject}.\r\n     * @param object\r\n     *  The object to reorder.\r\n     * @param layer\r\n     *  The layer to move the object to.\r\n     * @throws { DiagramObjectModelError }\r\n     *  If `object` doesn't have a parent.\r\n     */\r\n    constructor(object: DiagramObjectModel, layer: Layer) {\r\n        if(!object.parent) {\r\n            throw new DiagramObjectModelError(\r\n                \"Object must have a parent.\", object\r\n            );\r\n        }\r\n        this._object = object;\r\n        this._parent = object.parent;\r\n        this._prevIndex = object.getIndexInParent();\r\n        switch(layer) {\r\n            case Layer.Top:\r\n                this._nextIndex = object.children.length;\r\n                break;\r\n            case Layer.OneAbove:\r\n                this._nextIndex = this._prevIndex + 1;\r\n                break;\r\n            case Layer.OneBelow:\r\n                this._nextIndex = this._prevIndex - 1;\r\n                break;\r\n            case Layer.Bottom:\r\n                this._nextIndex = 0;\r\n                break;\r\n        }\r\n    }\r\n    \r\n\r\n    /**\r\n     * Applies the action.\r\n     */\r\n    public redo() {\r\n        this._parent.reorderChild(this._object.id, this._nextIndex);\r\n    }\r\n\r\n    /**\r\n     * Reverts the action.\r\n     */\r\n    public undo() {\r\n        this._parent.reorderChild(this._object.id, this._prevIndex);\r\n    }\r\n\r\n}\r\n\r\nexport enum Layer {\r\n    Top      = 0,\r\n    OneAbove = 2,\r\n    OneBelow = 3,\r\n    Bottom   = 4,\r\n}\r\n","import { DiagramAction } from \"./DiagramAction\";\r\nimport { \r\n    DiagramAnchorableModel,\r\n    DiagramAnchorModel,\r\n    DiagramObjectModelError\r\n} from \"../DiagramModelTypes/BaseTypes/BaseModels\";\r\n\r\nexport class DetachObject implements DiagramAction {\r\n\r\n    /**\r\n     * The object to detach.\r\n     */\r\n    private _object: DiagramAnchorableModel;\r\n\r\n    /**\r\n     * The object's anchor.\r\n     */\r\n    private _anchor: DiagramAnchorModel;\r\n\r\n    /**\r\n     * The object's location in the anchor.\r\n     */\r\n    private _index: number;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link DetachObject}.\r\n     * @param object\r\n     *  The object to detach.\r\n     * @throws { DiagramObjectModelError }\r\n     *  If `object` is not attached to an anchor.\r\n     */\r\n    constructor(object: DiagramAnchorableModel) {\r\n        if(!object.isAttached()) {\r\n            throw new DiagramObjectModelError(\r\n                \"Object must be attached to an anchor.\", object\r\n            );\r\n        }\r\n        // Configure action\r\n        this._object = object;\r\n        this._anchor = object.anchor!;\r\n        this._index = object.getIndexInAnchor();\r\n    }\r\n\r\n\r\n    /**\r\n     * Applies the action.\r\n     */\r\n    public redo() {\r\n        this._anchor.removeChild(this._object.id);\r\n    }\r\n\r\n    /**\r\n     * Reverts the action.\r\n     */\r\n    public undo() {\r\n        this._anchor.addChild(this._object, this._index);\r\n    }\r\n\r\n}\r\n","import { DiagramAction } from \"./DiagramAction\";\r\n\r\nexport class GroupAction implements DiagramAction {\r\n\r\n    /**\r\n     * The list of actions in order of application.\r\n     */\r\n    private _actions: DiagramAction[];\r\n    \r\n\r\n    /**\r\n     * Creates a new {@link GroupAction}.\r\n     */\r\n    constructor();\r\n\r\n    /**\r\n     * Creates a new {@link GroupAction}.\r\n     * @param actions\r\n     *  The group of actions.\r\n     */\r\n    constructor(actions: DiagramAction[]);\r\n    constructor(actions?: DiagramAction[]) {\r\n        this._actions = actions ?? [];\r\n    }\r\n    \r\n\r\n    /**\r\n     * Adds an action to the group.\r\n     * @param action\r\n     *  The action.\r\n     */\r\n    public add(action: DiagramAction) {\r\n        this._actions.push(action);\r\n    }\r\n\r\n    /**\r\n     * Applies the set of actions.\r\n     */\r\n    public redo() {\r\n        let i = 0;\r\n        let l = this._actions.length;\r\n        try {\r\n            for(; i < l; i++) {\r\n                this._actions[i].redo();\r\n            }\r\n        } catch (ex) {\r\n            // Rollback on failure\r\n            for(i--; 0 <= i; i--) {\r\n                this._actions[i].undo();\r\n            }\r\n            throw ex;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reverts the set of actions.\r\n     */\r\n    public undo() {\r\n        let l = this._actions.length - 1;\r\n        for(let i = l; 0 <= i; i--) {\r\n            this._actions[i].undo();\r\n        }\r\n    }\r\n\r\n}\r\n","import { DiagramAction } from \"./DiagramAction\";\r\nimport { GroupAction } from \"./GroupAction\";\r\n\r\nexport class DiagramController {\r\n\r\n    /**\r\n     * The controller's undo stack.\r\n     */\r\n    private _undoStack: DiagramAction[];\r\n\r\n    /**\r\n     * The controller's redo stack.\r\n     */\r\n    private _redoStack: DiagramAction[];\r\n\r\n    /**\r\n     * The controller's list of open transactions.\r\n     */\r\n    private _transactions: GroupAction[];\r\n\r\n\r\n    /**\r\n     * Creates a new {@link DiagramController}.\r\n     */\r\n    constructor() {\r\n        this._undoStack = [];\r\n        this._redoStack = [];\r\n        this._transactions = [];\r\n    }\r\n\r\n    \r\n    /**\r\n     * Executes a single action.\r\n     * @param action\r\n     *  The action.\r\n     */\r\n    public execute(action: DiagramAction): void;\r\n    \r\n    /**\r\n     * Executes a set of actions in a single transaction.\r\n     * @param actions\r\n     *  The set of actions.\r\n     */\r\n    public execute(actions: DiagramAction[]): void;\r\n    public execute(action: DiagramAction[] | DiagramAction) {\r\n        if(Array.isArray(action)) {\r\n            action = new GroupAction(action);    \r\n        }\r\n        if(this._transactions.length) {\r\n            this._transactions.at(-1)!.add(action);\r\n        } else {\r\n            action.redo();\r\n            this._redoStack = [];\r\n            this._undoStack.push(action);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Undoes the last action.\r\n     */\r\n    public undo() {\r\n        this._transactions = [];\r\n        if(this._undoStack.length) {\r\n            this._undoStack.at(-1)!.undo();\r\n            this._redoStack.push(this._undoStack.pop()!);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Tests if the last action can be undone.\r\n     * @returns\r\n     *  True if the last action can be undone, false otherwise.\r\n     */\r\n    public canUndo(): boolean {\r\n        return 0 < this._undoStack.length;\r\n    }\r\n\r\n    /**\r\n     * Undoes the last undo action.\r\n     */\r\n    public redo() {\r\n        this._transactions = [];\r\n        if(this._redoStack.length) {\r\n            this._redoStack.at(-1)!.redo();\r\n            this._undoStack.push(this._redoStack.pop()!);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Tests if the last undo action can be redone.\r\n     * @returns\r\n     *  True if the last undo action can be redone, false otherwise.\r\n     */\r\n    public canRedo(): boolean {\r\n        return 0 < this._redoStack.length;\r\n    }\r\n\r\n    /**\r\n     * Begins a new transaction. All following calls to `execute()` will be\r\n     * queued and run when `endTransaction()` is called. Calls to `undo()` or \r\n     * `redo()` will destroy all currently open transactions. Transactions nest\r\n     * inside each other and will only execute once the outermost transaction\r\n     * has ended.\r\n     */\r\n    public beginTransaction() {\r\n        this._transactions.push(new GroupAction());\r\n    }\r\n\r\n    /**\r\n     * Ends the current transaction.\r\n     */\r\n    public endTransaction() {\r\n        if(this._transactions.length) {\r\n            this.execute(this._transactions.pop()!);\r\n        } else {\r\n            throw new Error(\"There are no open transactions.\")\r\n        }   \r\n    }\r\n\r\n    /**\r\n     * Clears the controller's undo / redo history.\r\n     */\r\n    public clearHistory() {\r\n        this._undoStack = [];\r\n        this._redoStack = [];\r\n    }\r\n\r\n}\r\n","import { DiagramAction } from \"./DiagramAction\";\r\nimport { DiagramObjectModel } from \"../DiagramModelTypes/BaseTypes/BaseModels\";\r\n\r\nexport class MoveObjectBy implements DiagramAction {\r\n    \r\n    /**\r\n     * The object.\r\n     */\r\n    private _object: DiagramObjectModel;\r\n    \r\n    /**\r\n     * The object's change in x.\r\n     */\r\n    private _dx: number;\r\n\r\n    /**\r\n     * The object's change in y.\r\n     */\r\n    private _dy: number;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link MoveObjectBy}.\r\n     * @param object\r\n     *  The object.\r\n     * @param dx\r\n     *  The change in x.\r\n     * @param dy\r\n     *  The change in y.\r\n     */\r\n    constructor(object: DiagramObjectModel, dx: number, dy: number) {\r\n        this._object = object;\r\n        this._dx = dx;\r\n        this._dy = dy;\r\n    }\r\n\r\n\r\n    /**\r\n     * Applies the action.\r\n     */\r\n    public redo() {\r\n        this._object.moveBy(this._dx, this._dy);\r\n    }\r\n\r\n    /**\r\n     * Reverts the action.\r\n     */\r\n    public undo() {\r\n        this._object.moveBy(-this._dx, -this._dy);\r\n    }\r\n\r\n}\r\n","import { DiagramAction } from \"./DiagramAction\";\r\nimport { DiagramObjectModel } from \"../DiagramModelTypes/BaseTypes/BaseModels\";\r\n\r\nexport class MoveObjectTo implements DiagramAction {\r\n    \r\n    /**\r\n     * The object.\r\n     */\r\n    private _object: DiagramObjectModel;\r\n    \r\n    /**\r\n     * The object's last x coordinate.\r\n     */\r\n    private _lx: number;\r\n\r\n    /**\r\n     * The object's last y coordinate.\r\n     */\r\n    private _ly: number;\r\n\r\n    /**\r\n     * The object's next x coordinate. \r\n     */\r\n    private _nx: number;\r\n\r\n    /**\r\n     * The object's next y coordinate.\r\n     */\r\n    private _ny: number;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link MoveObjectTo}.\r\n     * @param object\r\n     *  The object.\r\n     * @param x\r\n     *  The x coordinate.\r\n     * @param y\r\n     *  The y coordinate.\r\n     */\r\n    constructor(object: DiagramObjectModel, x: number, y: number) {\r\n        this._object = object;\r\n        this._lx = object.boundingBox.xMid;\r\n        this._ly = object.boundingBox.yMid;\r\n        this._nx = x;\r\n        this._ny = y;\r\n    }\r\n\r\n\r\n    /**\r\n     * Applies the action.\r\n     */\r\n    public redo() {\r\n        this._object.moveTo(this._nx, this._ny);\r\n    }\r\n\r\n    /**\r\n     * Reverts the action.\r\n     */\r\n    public undo() {\r\n        this._object.moveTo(this._lx, this._ly);\r\n    }\r\n\r\n}\r\n","import { DiagramAction } from \"./DiagramAction\";\r\nimport { \r\n    DiagramAnchorableModel,\r\n    DiagramAnchorModel,\r\n    DiagramObjectModel,\r\n    DiagramObjectModelError\r\n} from \"../DiagramModelTypes/BaseTypes/BaseModels\";\r\n\r\nexport class RemoveObjects implements DiagramAction {\r\n    \r\n    /**\r\n     * The set of objects to remove.\r\n     */\r\n    private _items: {\r\n        index: number,\r\n        parent: DiagramObjectModel,\r\n        object: DiagramObjectModel\r\n    }[];\r\n\r\n    /**\r\n     * The set of external attachments.\r\n     */\r\n    private _links: { \r\n        index: number,\r\n        anchor: DiagramAnchorModel,\r\n        object: DiagramAnchorableModel\r\n    }[]; \r\n\r\n\r\n    /**\r\n     * Creates a new {@link RemoveObjects}.\r\n     * @param objects\r\n     *  The objects to remove from their parents.\r\n     * @throws { DiagramObjectModelError }\r\n     *  If any of the `objects` don't have a parent.\r\n     */\r\n    constructor(...objects: DiagramObjectModel[]) {\r\n        // Compile objects\r\n        this._links = [];\r\n        this._items = [];\r\n        for(let o of objects) {\r\n            if(!o.parent) {\r\n                throw new DiagramObjectModelError(\r\n                    \"Object must have a parent.\", o\r\n                );\r\n            }\r\n            this._items.push({\r\n                index: o.getIndexInParent(),\r\n                parent: o.parent,\r\n                object: o\r\n            });\r\n        }\r\n        // Compile list of anchors and anchor-ables\r\n        let map = new Map<string, DiagramObjectModel>();\r\n        for(let item of this._items) {\r\n            for(let c of item.object.getSubtree()) {\r\n                if(\r\n                    c instanceof DiagramAnchorModel ||\r\n                    c instanceof DiagramAnchorableModel\r\n                ) {\r\n                    map.set(c.id, c);\r\n                }\r\n            }\r\n        }\r\n        // Save any dependencies that can't be found in the list\r\n        for(let obj of map.values()) {\r\n            if(obj instanceof DiagramAnchorableModel) {\r\n                if(obj.isAttached() && !map.has(obj.anchor!.id)) {\r\n                    this._links.push({ \r\n                        index: obj.getIndexInAnchor(),\r\n                        anchor: obj.anchor!,\r\n                        object: obj,\r\n                    })\r\n                }\r\n            } else if(obj instanceof DiagramAnchorModel) {\r\n                for(let child of obj.children) {\r\n                    if(!map.has(child.id)) {\r\n                        this._links.push({ \r\n                            index: child.getIndexInAnchor(),\r\n                            anchor: obj,\r\n                            object: child, \r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Applies the action.\r\n     */\r\n    public redo() {\r\n        // Detach external attachments\r\n        for(let link of this._links) {\r\n            link.anchor.removeChild(link.object.id);\r\n        }\r\n        // Remove objects from parents\r\n        for(let item of this._items) {\r\n            item.parent.removeChild(item.object.id, true, false);\r\n        }\r\n        \r\n    }\r\n\r\n    /**\r\n     * Reverts the action.\r\n     */\r\n    public undo() {\r\n        // Add objects to parents\r\n        for(let item of this._items) {\r\n            item.parent.addChild(item.object, item.index);\r\n        } \r\n        // Attach external attachments\r\n        for(let link of this._links) {\r\n            link.anchor.addChild(link.object, link.index);\r\n        }\r\n    }\r\n\r\n}\r\n","import { DiagramAction } from \"./DiagramAction\";\r\nimport { PositionSetByUser } from \"../Attributes\";\r\nimport { DiagramObjectModel } from \"../DiagramModelTypes/BaseTypes/BaseModels\";\r\n\r\nexport class UserSetObjectPosition implements DiagramAction {\r\n    \r\n    /**\r\n     * The object.\r\n     */\r\n    private _obj: DiagramObjectModel;\r\n\r\n    \r\n    /**\r\n     * Creates a new {@link UserSetObjectPosition}.\r\n     * @param obj\r\n     *  The object.\r\n     */\r\n    constructor(obj: DiagramObjectModel) {\r\n        this._obj = obj;\r\n    }\r\n\r\n\r\n    /**\r\n     * Applies the action.\r\n     */\r\n    public redo() {\r\n        this._obj.setPositionSetByUser(PositionSetByUser.True);\r\n    }\r\n\r\n    /**\r\n     * Reverts the action.\r\n     */\r\n    public undo() {\r\n        this._obj.setPositionSetByUser(PositionSetByUser.False);\r\n    }\r\n\r\n}","import { AddObject } from \"./AddObject\";\r\nimport { AttachObject } from \"./AttachObject\";\r\nimport { DetachObject } from \"./DetachObject\";\r\nimport { DiagramController } from \"./DiagramController\";\r\nimport { GroupAction } from \"./GroupAction\";\r\nimport { Layer, LayerObject } from \"./LayerObject\";\r\nimport { MoveObjectBy } from \"./MoveObjectBy\";\r\nimport { MoveObjectTo } from \"./MoveObjectTo\";\r\nimport { RemoveObjects } from \"./RemoveObjects\";\r\nimport { UserSetObjectPosition } from \"./UserSetObjectPosition\";\r\nimport { \r\n    CameraLocation,\r\n    DiagramAnchorableModel,\r\n    DiagramAnchorModel,\r\n    DiagramLineModel,\r\n    DiagramObjectModel,\r\n    PageModel\r\n} from \"../DiagramModelTypes\";\r\n\r\nexport class PageEditor { \r\n\r\n    /**\r\n     * The page.\r\n     */\r\n    public readonly page: PageModel;\r\n\r\n    /**\r\n     * The page's diagram controller.\r\n     */\r\n    private readonly _controller: DiagramController;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link PageEditor}.\r\n     * @param page\r\n     *  The page to edit.\r\n     */\r\n    constructor(page: PageModel) {\r\n        this.page = page;\r\n        this._controller = new DiagramController();\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Add & Remove Page Objects  /////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Adds an object to the page.\r\n     * @param object\r\n     *  The object.\r\n     * @param parent\r\n     *  The id of the object to append to.\r\n     *  (Default: This page)\r\n     * @throws { Error }\r\n     *  If `parent` can't be found.\r\n     *  If `object` fails to meet the type requirements of `parent`. \r\n     */\r\n    public addObject(object: DiagramObjectModel, parent: string = this.page.id) {\r\n        let p = this.page.lookup(parent);\r\n        if(!p) {   \r\n            throw new Error(`Parent '${ parent }' does not exist.`);\r\n        }\r\n        this._controller.execute(new AddObject(object, p));\r\n    }\r\n\r\n    /**\r\n     * Adds a line object to the page and links it to the specified anchors.\r\n     * @param object\r\n     *  The line object.\r\n     * @param src\r\n     *  The source anchor's id.\r\n     * @param trg\r\n     *  The target anchor's id.\r\n     * @param parent\r\n     *  The id of the object to append to.\r\n     *  (Default: This page)\r\n     */\r\n    public addLineObject(\r\n        object: DiagramLineModel,\r\n        src: string,\r\n        trg?: string,\r\n        parent: string = this.page.id\r\n    ) {\r\n        let p = this.page.lookup(parent);\r\n        if(!p) {   \r\n            throw new Error(`Parent '${ parent }' does not exist.`);\r\n        }\r\n        let grp = new GroupAction();\r\n        // Add line\r\n        grp.add(new AddObject(object, p));\r\n        // Attach to source\r\n        let srcAnc = this.page.lookup<DiagramAnchorModel>(src)!;\r\n        let isSrcValid = srcAnc instanceof DiagramAnchorModel;\r\n        if(isSrcValid) {\r\n            let { xMid, yMid } = srcAnc.boundingBox;\r\n            grp.add(new MoveObjectTo(object.srcEnding, xMid, yMid));\r\n            grp.add(new AttachObject(object.srcEnding, srcAnc))\r\n        } else {\r\n            throw new Error(`Invalid anchor '${ src }'.`);\r\n        }\r\n        // Attach to target\r\n        if(trg) {\r\n            let trgAnc = this.page.lookup<DiagramAnchorModel>(trg)!;\r\n            let isTrgValid = trgAnc instanceof DiagramAnchorModel;\r\n            if(isTrgValid) {\r\n                let { xMid, yMid } = trgAnc.boundingBox;\r\n                grp.add(new MoveObjectTo(object.trgEnding, xMid, yMid));\r\n                grp.add(new AttachObject(object.trgEnding, trgAnc));\r\n            } else {\r\n                throw new Error(`Invalid anchor '${ trg }'.`);\r\n            }\r\n        }\r\n        // Execute\r\n        this._controller.execute(grp);\r\n    }\r\n\r\n    /**\r\n     * Removes one or more objects from the page.\r\n     * \r\n     * NOTE:\r\n     * Do NOT perform more than one `removeObjects()` in a single transaction.\r\n     * If removals are broken into separate requests, their mutual dependencies\r\n     * can't be determined. This may cause `undo()` and  `redo()` to break as\r\n     * they can no longer reconstruct the objects and dependencies correctly.\r\n     *  \r\n     * @param objects\r\n     *  One or more object ids.\r\n     */\r\n    public removeObjects(...objects: string[]) {\r\n        // Collect objects\r\n        let objs = [];\r\n        for(let id of objects) {\r\n            let obj = this.page.lookup(id);\r\n            if(!obj) {\r\n                throw new Error(`'${ id }' does not exist.`);\r\n            }\r\n            objs.push(obj);\r\n        }\r\n        // Remove from diagram\r\n        this._controller.execute(new RemoveObjects(...objs));\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  2. Anchor Page Objects  ///////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Links an object to an anchor.\r\n     * @param object\r\n     *  The object's id.\r\n     * @param anchor\r\n     *  The anchor's id.\r\n     */\r\n    public attach(object: string, anchor: string) {\r\n        let o = this.page.lookup<DiagramAnchorableModel>(object)!;\r\n        let a = this.page.lookup<DiagramAnchorModel>(anchor)!;\r\n        let isObjectValid = o instanceof DiagramAnchorableModel;\r\n        let isAnchorValid = a instanceof DiagramAnchorModel;\r\n        if(isObjectValid && isAnchorValid) {\r\n            let grp = new GroupAction();\r\n            // Detach object from existing anchor\r\n            if(o.isAttached()) {\r\n                grp.add(new DetachObject(o));\r\n            }\r\n            // Move object to anchor\r\n            let { xMid, yMid } = a.boundingBox;\r\n            grp.add(new MoveObjectTo(o, xMid, yMid));\r\n            // Attach object to anchor\r\n            grp.add(new AttachObject(o, a));\r\n            // Execute\r\n            this._controller.execute(grp);\r\n        } else {\r\n            throw new Error(`Invalid link '${ object }' -> '${ anchor }'.`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Unlinks an object from its anchor.\r\n     * @param object\r\n     *  The object's id.\r\n     */\r\n    public detach(object: string) {\r\n        let o = this.page.lookup<DiagramAnchorableModel>(object)!;\r\n        let isObjectValid = o instanceof DiagramAnchorableModel;\r\n        if(isObjectValid && o.isAttached()) {\r\n            this._controller.execute(new DetachObject(o));\r\n        } else {\r\n            throw new Error(`Invalid object '${ object }'.`)\r\n        }\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  3. Move Page Objects  /////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Moves one or more objects relative to their current position.\r\n     * @param objects\r\n     *  The object id or a list of object ids.\r\n     * @param dx\r\n     *  The change in x.\r\n     * @param dy\r\n     *  The change in y.\r\n     */\r\n    public moveObjectsBy(objects: string[] | string, dx: number, dy: number) {\r\n        let grp;\r\n        if(Array.isArray(objects)) {\r\n            grp = new GroupAction();\r\n            for(let id of objects) {\r\n                let obj = this.page.lookup(id);\r\n                if(!obj) {\r\n                    throw new Error(`'${ id }' does not exist.`);\r\n                }\r\n                if(!obj.hasUserSetPosition()) {\r\n                    grp.add(new UserSetObjectPosition(obj));\r\n                }\r\n                grp.add(new MoveObjectBy(obj, dx, dy));\r\n            }\r\n        } else {\r\n            let obj = this.page.lookup(objects);\r\n            if(!obj) {\r\n                throw new Error(`'${ objects }' does not exist.`);\r\n            }\r\n            if(!obj.hasUserSetPosition()) {\r\n                grp = new GroupAction([\r\n                    new UserSetObjectPosition(obj),\r\n                    new MoveObjectBy(obj, dx, dy)\r\n                ]);\r\n            } else {\r\n                grp = new MoveObjectBy(obj, dx, dy);\r\n            }\r\n        }\r\n        this._controller.execute(grp);\r\n    }\r\n\r\n    /**\r\n     * Moves one or more objects to a specific coordinate.\r\n     * @param objects\r\n     *  The object id or a list of object ids.\r\n     * @param x\r\n     *  The x coordinate.\r\n     * @param y\r\n     *  The y coordinate.\r\n     */\r\n    public moveObjectsTo(objects: string[] | string, x: number, y: number) {\r\n        let grp;\r\n        if(Array.isArray(objects)) {\r\n            grp = new GroupAction();\r\n            for(let id of objects) {\r\n                let obj = this.page.lookup(id);\r\n                if(!obj) {\r\n                    throw new Error(`'${ id }' does not exist.`);\r\n                }\r\n                if(!obj.hasUserSetPosition()) {\r\n                    grp.add(new UserSetObjectPosition(obj));\r\n                }\r\n                grp.add(new MoveObjectTo(obj, x, y));\r\n            }\r\n        } else {\r\n            let obj = this.page.lookup(objects);\r\n            if(!obj) {\r\n                throw new Error(`'${ objects }' does not exist.`);\r\n            }\r\n            if(!obj.hasUserSetPosition()) {\r\n                grp = new GroupAction([\r\n                    new UserSetObjectPosition(obj),\r\n                    new MoveObjectTo(obj, x, y)\r\n                ]);\r\n            } else {\r\n                grp = new MoveObjectTo(obj, x, y);\r\n            }\r\n        }\r\n        this._controller.execute(grp);\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  4. Layer Page Objects  /////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Moves an object to a different layer in its parent.\r\n     * @param object\r\n     *  The object's id.\r\n     * @param layer\r\n     *  The layer to move the object to.\r\n     */\r\n    public reorderObjectLayer(object: string, layer: Layer) {\r\n        let obj = this.page.lookup(object);\r\n        if(!obj) {\r\n            throw new Error(`'${ object }' does not exist.`);\r\n        }\r\n        this._controller.execute(new LayerObject(obj, layer));\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  5. Move Page Camera  //////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Sets the page's camera location.\r\n     * @param loc\r\n     *  The camera's location.\r\n     */\r\n    public setCameraLocation(loc: CameraLocation) {\r\n        this.page.location = loc;\r\n    }\r\n\r\n    \r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  6. History Controls  //////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Undoes the last page action. \r\n     */\r\n    public undo() {\r\n        this._controller.undo();\r\n    }\r\n    \r\n    /**\r\n     * Tests if the last action can be undone.\r\n     * @returns\r\n     *  True if the last action can be undone, false otherwise.\r\n     */\r\n    public canUndo(): boolean {\r\n        return this._controller.canUndo();\r\n    }\r\n\r\n    /**\r\n     * Undoes the last undone page action.\r\n     */\r\n    public redo() {\r\n        this._controller.redo();\r\n    }\r\n\r\n    /**\r\n     * Tests if the last undo action can be redone.\r\n     * @returns\r\n     *  True if the last undo action can be redone, false otherwise.\r\n     */\r\n    public canRedo(): boolean {\r\n        return this._controller.canRedo();\r\n    }\r\n\r\n    /**\r\n     * Begins a new transaction. All following page actions will be queued and\r\n     * run when `endTransaction()` is called. Calls to `undo()` or `redo()`\r\n     * will destroy all currently open transactions. Transactions nest inside\r\n     * each other and will only execute once the outermost transaction has\r\n     * ended.\r\n     */\r\n    public beginTransaction() {\r\n        this._controller.beginTransaction();\r\n    }\r\n\r\n    /**\r\n     * Ends the current transaction.\r\n     */\r\n    public endTransaction() {\r\n        this._controller.endTransaction();\r\n    }\r\n\r\n}\r\n","///////////////////////////////////////////////////////////////////////////////\r\n//  1. RasterCache  ///////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport class RasterCache {\r\n\r\n    /**\r\n     * The raster cache's internal scale.\r\n     */\r\n    private _scale: number;\r\n\r\n    /**\r\n     * The internal raster cache.\r\n     */\r\n    private _cache: Map<string, Raster>;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link RasterCache}.\r\n     */\r\n    constructor() {\r\n        this._scale = 1;\r\n        this._cache = new Map();\r\n    }\r\n\r\n\r\n    /**\r\n     * Creates a new {@link Raster}.\r\n     * @param id\r\n     *  The id of the raster.\r\n     * @param w\r\n     *  The width of the raster.\r\n     * @param h\r\n     *  The height of the raster.\r\n     * @param p\r\n     *  The amount of padding to add to the raster.\r\n     *  (Default: 0)\r\n     */\r\n    public createRaster(id: string, w: number, h: number, p: number = 0): Raster {\r\n        // Create raster\r\n        let raster = new Raster(w, h, p, this._scale);\r\n        // Register raster\r\n        this._cache.set(id, raster);\r\n        // Return raster\r\n        return raster;\r\n    }\r\n\r\n    /**\r\n     * Draws a raster to the context.\r\n     * @param context\r\n     *  The context to draw to.\r\n     * @param id\r\n     *  The id of the raster.\r\n     * @param x\r\n     *  The x-axis coordinate on the destination context.\r\n     * @param y\r\n     *  The y-axis coordinate on the destination context.\r\n     * @returns \r\n     *  True if the raster was drawn, false if no raster with that id exists.\r\n     */\r\n    public drawRaster(context: CanvasRenderingContext2D, id: string, x: number, y: number): boolean {\r\n        let r = this._cache.get(id);\r\n        if (r) {\r\n            context.drawImage(r.canvas, x - r.cx, y - r.cy, r.w, r.h);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Dumps the raster cache and updates its scale.\r\n     * @param scale\r\n     *  The new scale value.\r\n     */\r\n    public setScale(scale: number) {\r\n        this._scale = scale;\r\n        this._cache.clear();\r\n    }\r\n\r\n    /**\r\n     * Returns the cache's current scale.\r\n     * @returns\r\n     *  The cache's current scale.\r\n     */\r\n    public getScale(): number {\r\n        return this._scale;\r\n    }\r\n\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  2. Raster  ////////////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport class Raster {\r\n\r\n    /**\r\n     * The raster's canvas.\r\n     */\r\n    public readonly canvas: HTMLCanvasElement;\r\n\r\n    /**\r\n     * The raster's context.\r\n     */\r\n    public readonly context: CanvasRenderingContext2D;\r\n\r\n    /**\r\n     * The raster's center on the x-axis.\r\n     */\r\n    public readonly cx: number;\r\n\r\n    /**\r\n     * The raster's center on the y-axis.\r\n     */\r\n    public readonly cy: number;\r\n\r\n    /**\r\n     * The raster's full width.\r\n     */\r\n    public readonly w: number;\r\n\r\n    /**\r\n     * The raster's full height.\r\n     */\r\n    public readonly h: number;\r\n\r\n    /**\r\n     * The raster's padding.\r\n     */\r\n    public readonly p: number;\r\n\r\n\r\n    /**\r\n     * The raster's fill style.\r\n     */\r\n    public set fillStyle(value: string) {\r\n        this.context.fillStyle = value;\r\n    }\r\n\r\n    /**\r\n     * The raster's font.\r\n     */\r\n    public set font(value: string) {\r\n        this.context.font = value;\r\n    }\r\n\r\n    /**\r\n     * The raster's line width.\r\n     */\r\n    public set lineWidth(value: number) {\r\n        this.context.lineWidth = value;\r\n    }\r\n\r\n    /**\r\n     * The raster's stroke style.\r\n     */\r\n    public set strokeStyle(value: string) {\r\n        this.context.strokeStyle = value;\r\n    }\r\n\r\n    /**\r\n     * The raster's text baseline.\r\n     */\r\n    public set textBaseline(value: CanvasTextBaseline) {\r\n        this.context.textBaseline = value;\r\n    }\r\n\r\n\r\n    /**\r\n     * Creates a new {@link Raster}.\r\n     * @param w\r\n     *  The width of the raster.\r\n     * @param h\r\n     *  The height of the raster.\r\n     * @param p\r\n     *  The raster's padding.\r\n     * @param k\r\n     *  The scale of the raster.\r\n     */\r\n    constructor(w: number, h: number, p: number, k: number) {\r\n        let tp = p << 1;\r\n        // Prepare canvas\r\n        this.canvas = document.createElement(\"canvas\");\r\n        this.canvas.width = Math.round((w + tp) * k);\r\n        this.canvas.height = Math.round((h + tp) * k);\r\n        // Prepare context\r\n        this.context = this.canvas.getContext(\"2d\")!;\r\n        this.context.setTransform(k, 0, 0, k, 0, 0);\r\n        // Calculate dimensions\r\n        this.h = h + tp;\r\n        this.w = w + tp;\r\n        this.cx = Math.round(this.w / 2);\r\n        this.cy = Math.round(this.h / 2);\r\n        this.p = p;\r\n    }\r\n\r\n\r\n    /**\r\n     * Starts a new path.\r\n     */\r\n    public beginPath() {\r\n        this.context.beginPath();\r\n    }\r\n\r\n    /**\r\n     * Attempts to add a straight line from the current point to the start of\r\n     * the current sub-path. If the shape has already been closed or has only\r\n     * one point, this function does nothing.\r\n     */\r\n    public closePath() {\r\n        this.context.closePath();\r\n    }\r\n\r\n    /**\r\n     * Begins a new sub-path at the point specified\r\n     * @param x\r\n     *  The x-axis coordinate. \r\n     * @param y\r\n     *  The y-axis coordinate.\r\n     */\r\n    public moveTo(x: number, y: number) {\r\n        this.context.moveTo(this.p + x, this.p + y);\r\n    }\r\n\r\n    /**\r\n     * Adds a straight line to the current sub-path by connecting the\r\n     * sub-path's last point to the specified coordinates.\r\n     * @param x\r\n     *  The x-axis coordinate.\r\n     * @param y\r\n     *  The y-axis coordinate.\r\n     */\r\n    public lineTo(x: number, y: number) {\r\n        this.context.lineTo(this.p + x, this.p + y);\r\n    }\r\n\r\n    /**\r\n     * Outlines the current or given path with the current stroke style.\r\n     */\r\n    public stroke() {\r\n        this.context.stroke();\r\n    }\r\n\r\n    /**\r\n     * Fills the current or given path with the current fillStyle.\r\n     */\r\n    public fill() {\r\n        this.context.fill();\r\n    }\r\n\r\n    /**\r\n     * Draws a text string at the specified coordinates, filling the string's\r\n     * characters with the current fillStyle.\r\n     * @param text\r\n     *  The text string.\r\n     * @param x\r\n     *  The x-axis coordinate.\r\n     * @param y\r\n     *  The y-axis coordinate.\r\n     */\r\n    public fillText(text: string, x: number, y: number) {\r\n        this.context.fillText(text, x, y);\r\n    }\r\n\r\n    /**\r\n     * Draws a rectangular path to the context.\r\n     * @param x\r\n     *  The top-left x coordinate.\r\n     * @param y\r\n     *  The top-left y coordinate.\r\n     * @param w\r\n     *  The width of the rectangle.\r\n     * @param h\r\n     *  The height of the rectangle.\r\n     * @param r\r\n     *  The rectangle's border radius.\r\n     * @param s\r\n     *  The rectangle's stroke width.\r\n     *  (Default: 1)\r\n     */\r\n    public drawRect(\r\n        x: number, y: number,\r\n        w: number, h: number,\r\n        r: number, s?: number\r\n    ): void;\r\n\r\n    /**\r\n     * Draws a rectangular path to the context.\r\n     * @param x\r\n     *  The top-left x coordinate.\r\n     * @param y\r\n     *  The top-left y coordinate.\r\n     * @param w\r\n     *  The width of the rectangle.\r\n     * @param h\r\n     *  The height of the rectangle.\r\n     * @param r\r\n     *  An object which defines the border radius of each corner. If a corner\r\n     *  is not specified, it is assumed to be 0.\r\n     * @param s\r\n     *  The rectangle's stroke width.\r\n     *  (Default: 1)\r\n     */\r\n    public drawRect(\r\n        x: number, y: number,\r\n        w: number, h: number,\r\n        r: BorderRadius,\r\n        s?: number\r\n    ): void;\r\n    \r\n    public drawRect(\r\n        x: number, y: number,\r\n        w: number, h: number,\r\n        r: BorderRadius | number,\r\n        s: number = 1\r\n    ) {\r\n        // Account for padding & stroke width\r\n        x += this.p + (s / 2);\r\n        y += this.p + (s / 2);\r\n        w -= s;\r\n        h -= s;\r\n        // Parse radius\r\n        if (typeof r === \"number\") {\r\n            r = { tl: r, tr: r, br: r, bl: r }\r\n        } else {\r\n            r = { tl: 0, tr: 0, br: 0, bl: 0, ...r };\r\n        }\r\n        // Draw rectangular path\r\n        let ctx = this.context;\r\n        ctx.beginPath();\r\n        ctx.moveTo(x + r.tl!, y);\r\n        ctx.lineTo(x + w - r.tr!, y);\r\n        ctx.quadraticCurveTo(x + w, y, x + w, y + r.tr!);\r\n        ctx.lineTo(x + w, y + h - r.br!);\r\n        ctx.quadraticCurveTo(x + w, y + h, x + w - r.br!, y + h);\r\n        ctx.lineTo(x + r.bl!, y + h);\r\n        ctx.quadraticCurveTo(x, y + h, x, y + h - r.bl!);\r\n        ctx.lineTo(x, y + r.tl!);\r\n        ctx.quadraticCurveTo(x, y, x + r.tl!, y);\r\n        ctx.closePath();\r\n    }\r\n  \r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  3. Raster Types  //////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport type BorderRadius = {\r\n    \r\n    /**\r\n     * Top left radius.\r\n     */\r\n    tl?: number,\r\n\r\n    /**\r\n     * Top right radius.\r\n     */\r\n    tr?: number,\r\n\r\n    /**\r\n     * Bottom right radius.\r\n     */\r\n    br?: number,\r\n\r\n    /**\r\n     * Bottom left radius.\r\n     */\r\n    bl?: number\r\n\r\n}\r\n","export class ViewportRegion {\r\n\r\n    /**\r\n     * The viewport's minimum x coordinate.\r\n     */\r\n    public xMin: number\r\n\r\n    /**\r\n     * The viewport's minimum y coordinate.\r\n     */\r\n    public yMin: number\r\n\r\n    /**\r\n     * The viewport's maximum x coordinate.\r\n     */\r\n    public xMax: number\r\n\r\n    /**\r\n     * The viewport's maximum y coordinate.\r\n     */\r\n    public yMax: number;\r\n\r\n    /**\r\n     * The viewport's scale.\r\n     */\r\n    public scale: number;\r\n\r\n    /**\r\n     * Creates a new {@link ViewportRegion}.\r\n     */\r\n    constructor() {\r\n        this.xMin = 0;\r\n        this.yMin = 0;\r\n        this.xMax = 0;\r\n        this.yMax = 0;\r\n        this.scale = 1;\r\n    }\r\n\r\n}\r\n","import { round } from \"../Utilities\";\r\nimport { Alignment } from \"../Attributes\";\r\nimport { DiagramAnchorModel } from \"../DiagramModelTypes\";\r\n\r\nexport class DiagramObjectMover { \r\n\r\n    /**\r\n     * The object's current delta-x.\r\n     */\r\n    public dx: number;\r\n\r\n    /**\r\n     * The object's current delta-y.\r\n     */\r\n    public dy: number;\r\n\r\n    /**\r\n     * The object's origin on the x-axis.\r\n     */\r\n    public ox: number;\r\n\r\n    /**\r\n     * The object's origin on the y-axis.\r\n     */\r\n    public oy: number;\r\n\r\n    /**\r\n     * The object's total delta-x.\r\n     */\r\n    public odx: number;\r\n\r\n    /**\r\n     * The object's total delta-y.\r\n     */\r\n    public ody: number;\r\n\r\n    /**\r\n     * The anchor the object is currently over.\r\n     */\r\n    public anchor: DiagramAnchorModel | undefined;\r\n\r\n    /**\r\n     * The cursor's origin on the x-axis.\r\n     */\r\n    private _cx: number;\r\n\r\n    /**\r\n     * The cursor's origin on the y-axis.\r\n     */\r\n    private _cy: number;\r\n\r\n    /**\r\n     * The cursor's total delta-x.\r\n     */\r\n    private _cdx: number;\r\n\r\n    /**\r\n     * The cursor's total delta-y.\r\n     */\r\n    private _cdy: number;\r\n\r\n    /**\r\n     * The object's alignment.\r\n     */\r\n    private _alignment: number;\r\n\r\n    /**\r\n     * The grid size on the x-axis.\r\n     */\r\n    private _gridX: number;\r\n\r\n    /**\r\n     * The grid size on the y-axis.\r\n     */\r\n    private _gridY: number;\r\n\r\n    /**\r\n     * The mover's anchors.\r\n     */\r\n    private _anchors: DiagramAnchorModel[];\r\n\r\n\r\n    /**\r\n     * Creates a new {@link DiagramObjectMover}.\r\n     * @param gridX\r\n     *  The grid size on the x-axis. \r\n     * @param gridY\r\n     *  The grid size on the y-axis.\r\n     */\r\n    constructor(gridX: number, gridY: number) {\r\n        this.dx = 0;\r\n        this.dy = 0;\r\n        this.ox = 0;\r\n        this.oy = 0;\r\n        this.odx = 0;\r\n        this.ody = 0;\r\n        this.anchor = undefined;\r\n        this._cx = 0;\r\n        this._cy = 0;\r\n        this._cdx = 0;\r\n        this._cdy = 0;\r\n        this._alignment = Alignment.Free,\r\n        this._gridX = gridX;\r\n        this._gridY = gridY;\r\n        this._anchors = [];\r\n    }\r\n\r\n    /**\r\n     * Resets the object mover.\r\n     * @param alignment\r\n     *  The new alignment.\r\n     * @param cy\r\n     *  The cursor's origin on the x-axis.\r\n     * @param cx\r\n     *  The cursor's origin on the y-axis.\r\n     * @param ox\r\n     *  The object's origin on the x-axis.\r\n     * @param oy\r\n     *  The object's origin on the y-axis.\r\n     * @param anchors\r\n     *  The set of anchors to track.\r\n     */\r\n    public reset(\r\n        alignment: number, \r\n        cx: number, cy: number,\r\n        ox: number, oy: number,\r\n        anchors?: DiagramAnchorModel[]\r\n    ) {\r\n        this.dx = 0;\r\n        this.dy = 0;\r\n        this.ox = ox;\r\n        this.oy = oy;\r\n        this.odx = 0;\r\n        this.ody = 0;\r\n        this.anchor = undefined;\r\n        this._cx = cx;\r\n        this._cy = cy;\r\n        this._cdx = 0;\r\n        this._cdy = 0;\r\n        this._alignment = alignment;\r\n        this._anchors = anchors ?? [];\r\n    }\r\n\r\n    /**\r\n     * Calculates the actual delta from the current delta.\r\n     * @param dx\r\n     *  The current delta-x.\r\n     * @param dy\r\n     *  The current delta-y.\r\n     */\r\n    public updateDelta(dx: number, dy: number) {\r\n        this._cdx += dx;\r\n        this._cdy += dy;\r\n        let cursorX = this._cx + this._cdx;\r\n        let cursorY = this._cy + this._cdy;\r\n        // Assess anchors\r\n        let r, ax, ay, bb;\r\n        for(let anchor of this._anchors) {\r\n            bb = anchor.boundingBox;\r\n            r = anchor.radius;\r\n            ax = bb.xMid - cursorX;\r\n            ay = bb.yMid - cursorY;\r\n            if(ax * ax + ay * ay < r * r) {\r\n                this.dx = bb.xMid - (this.ox + this.odx);\r\n                this.dy = bb.yMid - (this.oy + this.ody);\r\n                this.odx += this.dx;\r\n                this.ody += this.dy;\r\n                this.anchor = anchor;\r\n                return;\r\n            }\r\n        }\r\n        // Assess position\r\n        this.anchor = undefined;\r\n        switch(this._alignment) {\r\n            case Alignment.Grid:\r\n                this.dx = round(this._cdx, this._gridX) - this.odx;\r\n                this.dy = round(this._cdy, this._gridY) - this.ody; \r\n                break;\r\n            case Alignment.Free:\r\n            default:\r\n                this.dx = this._cdx - this.odx;\r\n                this.dy = this._cdy - this.ody;\r\n                break;\r\n        }\r\n        this.odx += this.dx;\r\n        this.ody += this.dy;\r\n    }\r\n\r\n}\r\n","export class DiagramDisplaySettings {\r\n\r\n    /**\r\n     * If the grid should be displayed or not.\r\n     */\r\n    public showGrid: boolean;\r\n\r\n    /**\r\n     * If shadow's should be displayed or not.\r\n     */\r\n    public showShadows: boolean;\r\n    \r\n    /**\r\n     * If debug information should be displayed or not.\r\n     */\r\n    public showDebug: boolean;\r\n\r\n    /**\r\n     * The diagram's supersampling anti-aliasing (SSAA) level.\r\n     */\r\n    public ssaaScale: number;\r\n\r\n    /**\r\n     * Sets the scale level shadows disable at.\r\n     */\r\n    public shadowsDisableAt: number;\r\n\r\n    /**\r\n     * Creates a new {@link DiagramDisplaySettings}.\r\n     */\r\n    constructor() {\r\n        this.showGrid = true;\r\n        this.showShadows = true;\r\n        this.showDebug = false;\r\n        this.ssaaScale = 1;\r\n        this.shadowsDisableAt = 0;\r\n    }\r\n\r\n}\r\n","import * as d3 from \"d3\";\r\nimport { RasterCache } from \"./RasterCache\";\r\nimport { ViewportRegion } from \"./ViewportRegion\";\r\nimport { DiagramObjectMover } from \"./DiagramObjectMover\";\r\nimport { DiagramDisplaySettings } from \"./DiagramDisplaySettings\";\r\nimport {\r\n    EventEmitter,\r\n    floatEq,\r\n    MouseClick\r\n} from \"../Utilities\";\r\nimport {\r\n    CameraLocation,\r\n    DiagramLineModel,\r\n    DiagramAnchorModel,\r\n    DiagramObjectModel,\r\n    LocationType,\r\n    PageModel\r\n} from \"../DiagramModelTypes\";\r\nimport {\r\n    DiagramAnchorableView,\r\n    DiagramLineEndingView,\r\n    DiagramLineView,\r\n    DiagramObjectView,\r\n    PageView\r\n} from \"../DiagramViewTypes\";\r\nimport {\r\n    Alignment,\r\n    Cursor,\r\n    PositionSetByUser\r\n} from \"../Attributes\";\r\n\r\nexport class BlockDiagram extends EventEmitter {\r\n\r\n    /**\r\n     * The viewport's padding.\r\n     */\r\n    private static readonly VIEWPORT_PADDING = 0;\r\n\r\n    /**\r\n     * When a zoom action occurs, this constant defines that amount of time to\r\n     * wait (in milliseconds) before the raster cache is updated.\r\n     */\r\n    private static readonly RASTER_CACHE_UPDATE_DELAY = 100;\r\n\r\n\r\n    /**\r\n     * The diagram's canvas.\r\n     */\r\n    private _canvas: CanvasSelection | null;\r\n\r\n    /**\r\n     * The diagram's context.\r\n     */\r\n    private _context: CanvasRenderingContext2D | null;\r\n    \r\n    /**\r\n     * The diagram's display settings.\r\n     */\r\n    private _display: DiagramDisplaySettings;\r\n\r\n    /**\r\n     * The diagram container's height.\r\n     */\r\n    private _elHeight: number;\r\n\r\n    /**\r\n     * The diagram container's width.\r\n     */\r\n    private _elWidth: number;\r\n\r\n    /**\r\n     * The object currently being hovered over.\r\n     */\r\n    private _hovObj: DiagramObjectModel | undefined;\r\n\r\n    /**\r\n     * The diagram's object mover.\r\n     */\r\n    private _mover: DiagramObjectMover;\r\n\r\n    /**\r\n     * The diagram's current page.\r\n     */\r\n    private _page: PageView;\r\n\r\n    /**\r\n     * The id of the last animation frame request.\r\n     */\r\n    private _rafId: number;\r\n\r\n    /**\r\n     * The diagram's raster cache.\r\n     */\r\n    private _rasterCache: RasterCache;\r\n\r\n    /**\r\n     * An observer that monitors the size of the diagram's container.\r\n     */\r\n    private _resizeObserver: ResizeObserver | null;\r\n    \r\n    /**\r\n     * The context's current transform.\r\n     */\r\n    private _transform: d3.ZoomTransform;\r\n\r\n    /**\r\n     * The context's viewport.\r\n     */\r\n    private _viewport: ViewportRegion;\r\n    \r\n    /**\r\n     * The id of the late zoom timeout request.\r\n     */\r\n    private _ztoId: number;\r\n\r\n    /**\r\n     * The diagram's zoom behavior.\r\n     */\r\n    private _zoom: CanvasZoomBehavior;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link BlockDiagram}.\r\n     */\r\n    constructor() {\r\n        super();\r\n        let page = PageModel.createDummy();\r\n        let cache = new RasterCache();\r\n        this._canvas = null;\r\n        this._context = null;\r\n        this._display = new DiagramDisplaySettings();\r\n        this._elWidth = 0;\r\n        this._elHeight = 0;\r\n        this._mover = new DiagramObjectMover(...page.grid);\r\n        this._page = page.createView(cache); \r\n        this._rafId = 0;\r\n        this._rasterCache = cache;\r\n        this._resizeObserver = null;\r\n        this._transform = d3.zoomIdentity;\r\n        this._viewport = new ViewportRegion();\r\n        this._ztoId = 0;\r\n        this._zoom =  d3.zoom<HTMLCanvasElement, unknown>()\r\n            .scaleExtent([1 / 8, 6])\r\n            .on(\"zoom\", this.onCanvasZoom.bind(this))\r\n            .on(\"end\", (event) => this.onCanvasZoomEnd(event));\r\n        // `null` ensures cursor is updated immediately\r\n        this._hovObj = null as any;\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Inject and Destroy  ////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Configures the diagram's current page.\r\n     * @param page\r\n     *  The diagram page.\r\n     */\r\n    public setPage(page: PageModel) {\r\n        // Update page\r\n        this._page = page.createView(this._rasterCache);\r\n        // Update mover\r\n        this._mover = new DiagramObjectMover(...page.grid);\r\n    }\r\n\r\n    /**\r\n     * Injects the diagram into a container and updates the view.\r\n     * @param container\r\n     *  The container to inject the diagram into.\r\n     */\r\n    public inject(container: HTMLElement): void {\r\n\r\n        // Set sizing\r\n        this._elWidth = container.clientWidth;\r\n        this._elHeight = container.clientHeight;\r\n\r\n        // Setup canvas & context\r\n        this._canvas = d3.select(container)\r\n            .append(\"canvas\")\r\n                .attr(\"style\", \"display:block;\")\r\n                .attr(\"width\", this._elWidth)\r\n                .attr(\"height\", this._elHeight)\r\n            .on(\"mousemove\", (event) => {\r\n                this.onHoverSubject(...d3.pointer(event));\r\n            })\r\n            .on(\"contextmenu\", (e: any) => e.preventDefault());\r\n        this._context = this._canvas.node()!.getContext(\"2d\", { alpha: false });\r\n\r\n        // Configure resize observer\r\n        this._resizeObserver = new ResizeObserver(\r\n            entries => this.onCanvasResize(entries[0].target)\r\n        );\r\n        this._resizeObserver.observe(container);\r\n\r\n        // Configure canvas interactions\r\n        this._canvas\r\n            .call(d3.drag<HTMLCanvasElement, unknown>()\r\n                .filter(() => true)\r\n                .subject(this.onSelectSubject.bind(this))\r\n                .on(\"start\", this.onObjectDragStarted.bind(this))\r\n                .on(\"drag\", this.onObjectDragged.bind(this))\r\n                .on(\"end\", this.onObjectDragEnded.bind(this))\r\n            ).call(this._zoom);\r\n        \r\n        // Update view\r\n        this.updateView(0);\r\n\r\n    }\r\n\r\n    /**\r\n     * Removes the diagram from the container and removes all event listeners.\r\n     */\r\n    public destroy() {\r\n        this._canvas?.remove();\r\n        this._canvas = null;\r\n        this._context = null;\r\n        this.removeAllListeners();\r\n        this._resizeObserver?.disconnect();\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  2. Event Subscription  ////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Adds an event listener to the diagram.\r\n     * @param event\r\n     *  The event to subscribe to.\r\n     * @param callback\r\n     *  The function to call once the event has fired.\r\n     */\r\n    public override on<K extends keyof DiagramEvents>(event: K, callback: DiagramEvents[K]): void {\r\n        super.on(event, callback);\r\n    }\r\n\r\n    /**\r\n     * Adds an event listener to the diagram that will be fired once and then\r\n     * removed.\r\n     * @param event\r\n     *  The event to subscribe to.\r\n     * @param callback\r\n     *  The function to call once the event has fired. \r\n     */\r\n    public override once<K extends keyof DiagramEvents>(event: K, callback: DiagramEvents[K]): void {\r\n        super.once(event, callback);\r\n    }\r\n\r\n    /**\r\n     * Removes all event listeners associated with a given event. If no event\r\n     * name is specified, all event listeners are removed.\r\n     * @param event\r\n     *  The name of the event.\r\n     */\r\n    public override removeAllListeners<K extends keyof DiagramEvents>(event?: K): void {\r\n        super.removeAllListeners(event);\r\n    }\r\n\r\n    /**\r\n     * Dispatches the event listeners associated with a given event.\r\n     * @param event\r\n     *  The name of the event to raise.\r\n     * @param args\r\n     *  The arguments to pass to the event listeners.\r\n     */\r\n    protected override emit<K extends keyof DiagramEvents>(event: K, ...args: Parameters<DiagramEvents[K]>): void {\r\n        super.emit(event, ...args);\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  3. Rendering  /////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Enables/Disables the grid.\r\n     * @param display\r\n     *  [true]\r\n     *   Enables the grid.\r\n     *  [false]\r\n     *   Disables the grid.\r\n     */\r\n    public setGridDisplay(display: boolean) {\r\n        this._display.showGrid = display;\r\n    }\r\n\r\n    /**\r\n     * Enables/Disables shadows.\r\n     * @param display\r\n     *  [true]\r\n     *   Enables shadows.\r\n     *  [false]\r\n     *   Disables shadows.\r\n     */\r\n    public setShadowsDisplay(display: boolean) {\r\n        this._display.showShadows = display;        \r\n    }\r\n\r\n    /**\r\n     * Enables/Disables the debug display. If enabled, the diagram will display\r\n     * additional information that can be used to debug issues with the block\r\n     * diagram API.\r\n     * @param display\r\n     *  [true]\r\n     *   Enables debug mode.\r\n     *  [false]\r\n     *   Disables debug mode.\r\n     */\r\n    public setDebugDisplay(display: boolean) {\r\n        this._display.showDebug = display;\r\n    }\r\n\r\n    /**\r\n     * Sets the diagram's supersampling anti-aliasing (SSAA) level.\r\n     * @param k\r\n     *  The supersampling scale.\r\n     */\r\n    public setSsaaScale(k: number) {\r\n        this._display.ssaaScale = k;\r\n        this._rasterCache.setScale(k);\r\n    }\r\n\r\n    /**\r\n     * Sets the scale level shadows disable at.\r\n     * @param k\r\n     *  The scale level shadows disable at.\r\n     */\r\n    public setShadowsDisableAt(k: number) {\r\n        this._display.shadowsDisableAt = k;\r\n    }\r\n\r\n    /**\r\n     * Renders the block diagram.\r\n     */\r\n    public render() {\r\n        if (this._rafId != 0)\r\n            return;\r\n        this._rafId = requestAnimationFrame(() => {\r\n            this._rafId = 0;\r\n            this.executeRenderPipeline();\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Executes the diagram rendering pipeline.\r\n     */\r\n    private executeRenderPipeline() {\r\n        // Return if there's no context to render to\r\n        if(this._context === null)\r\n            return;\r\n        let d = this._display;\r\n        // Render page surface\r\n        this._page.renderPageSurfaceTo(this._context, this._viewport, d.showGrid);\r\n        // Render page contents\r\n        if(d.showShadows && d.shadowsDisableAt <= this._transform.k) {\r\n            // With drop shadow\r\n            this._page.renderTo(this._context, this._viewport);\r\n        } else {\r\n            // Without drop shadow\r\n            this._page.renderTo(this._context, this._viewport, 0, 0);\r\n        }\r\n        // Render debug display\r\n        if(d.showDebug) {\r\n            this._page.renderDebugTo(this._context, this._viewport);\r\n        }\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  4. Canvas Interactions  ///////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Canvas hover behavior.\r\n     * @param x\r\n     *  The pointer's position on the x-axis.\r\n     * @param y\r\n     *  The pointer's position on the y-axis.\r\n     * @param cursor\r\n     *  The cursor to use.\r\n     *  (Default: The subject's cursor)\r\n     */\r\n    private onHoverSubject(x: number, y: number, cursor?: number) {\r\n        x = this._transform.invertX(x);\r\n        y = this._transform.invertY(y);\r\n        let hovObj = this._page.el.getObjectAt(x, y);\r\n        if(this._hovObj !== hovObj) {\r\n            // Update hover object\r\n            this._hovObj = hovObj;\r\n            // Pick cursor\r\n            cursor = cursor ?? hovObj?.getCursor() ?? Cursor.Default;\r\n            // Emit\r\n            this.emit(\"object-hover\", hovObj, cursor);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Canvas click behavior.\r\n     * @param event\r\n     *  The click event.\r\n     * @returns\r\n     *  The drag action to perform or `undefined` if no object was clicked.\r\n     */\r\n     private onSelectSubject(event: any): DragAction | undefined {\r\n        let evt = event.sourceEvent;\r\n        let x = this._transform.invertX(event.x);\r\n        let y = this._transform.invertY(event.y);\r\n        let obj = this._page.el.getObjectAt(x, y);\r\n        let rc = evt.button === MouseClick.Right;\r\n        let mv: DiagramObjectView[];\r\n\r\n        // If no object:\r\n        if(!obj) {\r\n            this.emit(\"canvas-click\", evt, event.x, event.y);\r\n            return undefined; \r\n        }\r\n        \r\n        // If object is an anchor:\r\n        if(obj instanceof DiagramAnchorModel) {\r\n            // Select canvas\r\n            this.emit(\"canvas-click\", evt, event.x, event.y);\r\n            if(rc) {\r\n                return undefined;\r\n            }\r\n            // Create line\r\n            let line = obj.makeLine();\r\n            // Configure line\r\n            let x = obj.boundingBox.xMid;\r\n            let y = obj.boundingBox.yMid;\r\n            line.srcEnding.moveTo(x, y);\r\n            line.trgEnding.moveTo(x, y);\r\n            // Create line view\r\n            let view = line\r\n                .createView(this._rasterCache)\r\n                .updateView() as DiagramLineView;\r\n            // Initiate line move\r\n            return {\r\n                type: DragActionType.CreateLine,\r\n                line: view,\r\n                parent: this._page, \r\n                anchor: obj,\r\n                obj: view.trgEnding\r\n            };\r\n        }\r\n\r\n        // If object is child of line:\r\n        if(obj.parent instanceof DiagramLineModel) { \r\n            // Select line\r\n            this.emit(\"object-click\", evt, obj.parent, event.x, event.y);\r\n            if(rc) {\r\n                return undefined;\r\n            }\r\n            // Move the child\r\n            mv = [this._page.lookup(obj.id)!];\r\n        } \r\n        \r\n        // If any other object type:\r\n        else {\r\n            // Select object\r\n            this.emit(\"object-click\", evt, obj, event.x, event.y);\r\n            if(rc) {\r\n                return undefined;\r\n            }\r\n            // Move the current selection\r\n            mv = this._page.selects;   \r\n        }\r\n\r\n        // Initiate object move\r\n        if(mv[0] instanceof DiagramAnchorableView && mv.length === 1) {\r\n            return { type: DragActionType.MoveAnchorable, obj: mv[0] }\r\n        } else {\r\n            return { type: DragActionType.Move, objs: mv }\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Object drag start behavior.\r\n     * @param event\r\n     *  The drag event.\r\n     */\r\n    private onObjectDragStarted(event: any) {\r\n        let s = event.subject as DragAction;\r\n        let cx = this._transform.invertX(event.x);\r\n        let cy = this._transform.invertY(event.y);\r\n        let ox = 0;\r\n        let oy = 0;\r\n        let al = Alignment.Free;\r\n        let an = undefined;\r\n        switch(s.type) {\r\n            case DragActionType.Move:\r\n                for(let obj of s.objs) {\r\n                    ox += obj.x;\r\n                    oy += obj.y;\r\n                    al = Math.max(al, obj.el.getAlignment());\r\n                }\r\n                ox /= s.objs.length;\r\n                oy /= s.objs.length;\r\n                break;\r\n            case DragActionType.CreateLine:\r\n                s.parent.children.push(s.line);\r\n            case DragActionType.MoveAnchorable:\r\n                ox = s.obj.x;\r\n                oy = s.obj.y;\r\n                al = s.obj.el.getAlignment();\r\n                an = this._page.el.anchorCache;\r\n                break;\r\n        }\r\n        this._mover.reset(al, cx, cy, ox, oy, an);\r\n    }\r\n\r\n    /**\r\n     * Object dragged behavior.\r\n     * @param event\r\n     *  The drag event.\r\n     */\r\n    private onObjectDragged(event: any) {\r\n        let s = event.subject as DragAction;\r\n        // Calculate delta\r\n        this._mover.updateDelta(\r\n            event.dx / this._transform.k,\r\n            event.dy / this._transform.k\r\n        );\r\n        // Move elements\r\n        let attrs;\r\n        switch(s.type) {\r\n            case DragActionType.Move:\r\n                for(let obj of s.objs) {\r\n                    attrs = obj.fakePositionSetByUser(PositionSetByUser.True);\r\n                    obj.moveBy(this._mover.dx, this._mover.dy, attrs);\r\n                }\r\n                break;\r\n            case DragActionType.CreateLine:\r\n                s.obj.el.moveBy(this._mover.dx, this._mover.dy);\r\n            case DragActionType.MoveAnchorable:\r\n                this.onHoverSubject(event.x, event.y, s.obj.el.getCursor());\r\n                attrs = s.obj.fakePositionSetByUser(PositionSetByUser.True);\r\n                s.obj.moveBy(this._mover.dx, this._mover.dy, attrs);\r\n                break;\r\n        }\r\n        // Render\r\n        this.render();\r\n    }\r\n\r\n    /**\r\n     * Object drag end behavior.\r\n     * @param event\r\n     *  The drag event.\r\n     */\r\n    private onObjectDragEnded(event: any) {\r\n        let s = event.subject as DragAction;\r\n        let tdx = this._mover.odx;\r\n        let tdy = this._mover.ody;\r\n        switch(s.type) {\r\n            case DragActionType.Move:\r\n                if(!(tdx || tdy)) {\r\n                    // If no movement, bail\r\n                    return;\r\n                }\r\n                let ids = s.objs.map((o: any) => o.el);\r\n                this.emit(\"object-move\", ids, tdx, tdy);\r\n                break;\r\n            case DragActionType.MoveAnchorable:\r\n                if(!(tdx || tdy)) {\r\n                    // If no movement, bail\r\n                    return;\r\n                }\r\n                if(this._mover.anchor) {\r\n                    let anchor = this._mover.anchor;\r\n                    let object = s.obj.el;\r\n                    this.emit(\"object-attach\", object, anchor);\r\n                } else if(s.obj.el.isAttached()) {\r\n                    let object = s.obj.el;\r\n                    this.emit(\"object-detach\", object, tdx, tdy);\r\n                } else {\r\n                    let ids = [s.obj.el];\r\n                    this.emit(\"object-move\", ids, tdx, tdy);\r\n                }\r\n                break;\r\n            case DragActionType.CreateLine:\r\n                if((tdx || tdy) && s.anchor !== this._mover.anchor) {\r\n                    let obj = s.line.el;\r\n                    let par = s.parent.el;\r\n                    let src = s.anchor;\r\n                    let trg = this._mover.anchor;\r\n                    this.emit(\"line-create\", obj, par, src, trg);\r\n                } else {\r\n                    // If no movement, reset view and bail\r\n                    this.updateView(0);\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Canvas zoom behavior.\r\n     * @param event\r\n     *  The zoom event.\r\n     */\r\n    private onCanvasZoom(event: any) {\r\n        // Update cache\r\n        if (this._transform.k !== event.transform.k) {\r\n            clearTimeout(this._ztoId);\r\n            this._ztoId = setTimeout(() => {\r\n                let k = this._transform.k * this._display.ssaaScale;\r\n                if(this._rasterCache.getScale() !== k) {\r\n                    this._rasterCache.setScale(k);\r\n                    this.render();\r\n                }\r\n            }, BlockDiagram.RASTER_CACHE_UPDATE_DELAY)\r\n        }\r\n        // Update transform\r\n        this._transform = event.transform;\r\n        // Update viewport\r\n        this.updateViewportBounds();\r\n        this._context?.setTransform(\r\n            this._transform.k, 0, 0,\r\n            this._transform.k, this._transform.x, this._transform.y\r\n        );\r\n        // If no source event, then we are already\r\n        // running inside a requestAnimationFrame()\r\n        if(event.sourceEvent === null) {\r\n            // If no render scheduled, run render pipeline\r\n            if(this._rafId === 0) {\r\n                this.executeRenderPipeline();\r\n            }\r\n        } else {\r\n            this.render();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Canvas zoom end behavior.\r\n     * @param event\r\n     *  The zoom end event.\r\n     */\r\n    private onCanvasZoomEnd(event: any) {\r\n        // Canvas transform\r\n        this.emit(\"canvas-transform\", \r\n            this._transform.x,\r\n            this._transform.y,\r\n            this._transform.k\r\n        );\r\n        // Camera move\r\n        let [x,y] = this.getCameraOriginOffset();\r\n        // If no source event, then the zoom event was not prompted\r\n        // by the user, it came from a camera update action.\r\n        if(!event.sourceEvent)\r\n            return;\r\n        this.emit(\"camera-move\", { \r\n            type: LocationType.Point,\r\n            x: (x - this._transform.x) / this._transform.k,\r\n            y: (y - this._transform.y) / this._transform.k,\r\n            k: this._transform.k\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Canvas resize behavior.\r\n     * @param el\r\n     *  The block diagram's container.\r\n     */\r\n    private onCanvasResize(el: Element) {\r\n        let newWidth = el.clientWidth;\r\n        let newHeight = el.clientHeight;\r\n        // Center viewport\r\n        (this._transform as any).x += (newWidth - this._elWidth) / 2;\r\n        (this._transform as any).y += (newHeight - this._elHeight) / 2;\r\n        // Update dimensions\r\n        this._elWidth = newWidth;\r\n        this._elHeight = newHeight;\r\n        this._canvas\r\n            ?.attr(\"width\", this._elWidth)\r\n            ?.attr(\"height\", this._elHeight);\r\n        // Update viewport\r\n        this.updateViewportBounds();\r\n        // Adjust viewport\r\n        this._context?.setTransform(\r\n            this._transform.k, 0, 0,\r\n            this._transform.k, this._transform.x, this._transform.y\r\n        );\r\n        // Immediately redraw diagram to context, if possible\r\n        if(this._context)\r\n            this.executeRenderPipeline();\r\n        // Camera is moved back to where it was before\r\n        // the resize, no camera update is needed.\r\n    }\r\n\r\n    /**\r\n     * Recalculates the viewport's bounds based on the container's current\r\n     * dimensions.\r\n     */\r\n    private updateViewportBounds() {\r\n        let t = this._transform;\r\n        let padding = BlockDiagram.VIEWPORT_PADDING;\r\n        this._viewport.xMin = Math.round(t.invertX(-padding));\r\n        this._viewport.xMax = Math.round(t.invertX(this._elWidth + padding));\r\n        this._viewport.yMin = Math.round(t.invertY(-padding));\r\n        this._viewport.yMax = Math.round(t.invertY(this._elHeight + padding));\r\n        this._viewport.scale = t.k;\r\n    }\r\n\r\n    /**\r\n     * Returns the camera origin's offset.\r\n     * @returns\r\n     *  An array containing the [x,y] offset.\r\n     */\r\n    private getCameraOriginOffset(): [number, number] {\r\n        return [\r\n            Math.round(this._elWidth / 2),\r\n            Math.round(this._elHeight / 2)\r\n        ]\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  5. Data  //////////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n    \r\n    /**\r\n     * Syncs the view with the underlying model and re-renders the diagram.\r\n     * @param animate\r\n     *  The length of time (in milliseconds) the camera move animation takes.\r\n     *  (Default: 1000)\r\n     */\r\n    public updateView(animate: number = 1000) {\r\n        // Update page\r\n        this._page.updateView();\r\n        // Update camera\r\n        if(!this._canvas)\r\n            return;\r\n        let { location } = this._page.el;\r\n        // Calculate x, y, and k\r\n        let [x, y, k] = [...this.getCameraOriginOffset(), 1];\r\n        switch(location.type) {\r\n            case LocationType.Point:\r\n                k = location.k;\r\n                x -= (location.x * k);\r\n                y -= (location.y * k);\r\n                break;\r\n            case LocationType.Region:\r\n                let w = location.w / this._elWidth;\r\n                let h = location.h / this._elHeight;\r\n                let r = Math.max(w, h);\r\n                k = Math.min(.9 / r, 1.5);\r\n                x = Math.round(x - (location.x * k));\r\n                y = Math.round(y - (location.y * k));\r\n                break;\r\n        }\r\n        // If camera hasn't moved, don't animate\r\n        let t = this._transform;\r\n        if(floatEq(t.x, x) && floatEq(t.y, y) && floatEq(t.k, k)) {\r\n            this.render();\r\n            return;\r\n        }\r\n        // Move camera\r\n        this._canvas.transition()\r\n            .duration(animate)\r\n            .call(this._zoom.transform, \r\n                d3.zoomIdentity.translate(x, y).scale(k)\r\n            )\r\n    }\r\n\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  Internal Types  ///////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n// D3 types\r\ntype CanvasZoomBehavior = \r\n    d3.ZoomBehavior<HTMLCanvasElement, unknown>;\r\ntype CanvasSelection = \r\n    d3.Selection<HTMLCanvasElement, unknown, null, undefined>;\r\n\r\n// Event types\r\ninterface DiagramEvents {\r\n    \"object-hover\"  : (\r\n        obj: DiagramObjectModel | undefined, cursor: number\r\n    ) => void;\r\n    \"object-click\"  : (\r\n        event: PointerEvent, obj: DiagramObjectModel, x: number, y: number\r\n    ) => void;\r\n    \"canvas-click\"  : (\r\n        event: PointerEvent, x: number, y: number\r\n    ) => void;\r\n    \"canvas-transform\": (\r\n        x: number, y: number, k: number\r\n    ) => void,\r\n    \"object-move\"   : (\r\n        objs: DiagramObjectModel[], dx: number, dy: number\r\n    ) => void;\r\n    \"object-attach\" : (\r\n        obj: DiagramObjectModel, anchor: DiagramAnchorModel\r\n    ) => void;\r\n    \"object-detach\" : (\r\n        obj: DiagramObjectModel, dx: number, dy: number\r\n    ) => void;\r\n    \"line-create\"   : (\r\n        obj: DiagramLineModel, parent: DiagramObjectModel, \r\n        src: DiagramAnchorModel, trg?: DiagramAnchorModel\r\n    ) => void;\r\n    \"camera-move\"   : (\r\n        loc: CameraLocation\r\n    ) => void\r\n}\r\n\r\n// Drag Actions\r\ntype DragAction\r\n    = MoveDragAction\r\n    | MoveAnchorableDragAction\r\n    | CreateLineDragAction;\r\n\r\n\r\nenum DragActionType { \r\n    Move,\r\n    MoveAnchorable,\r\n    CreateLine\r\n}\r\n\r\ntype MoveDragAction = {\r\n\r\n    /**\r\n     * The move type.\r\n     */\r\n    type: DragActionType.Move,\r\n    \r\n    /**\r\n     * The objects to move.\r\n     */\r\n    objs: DiagramObjectView[]\r\n\r\n}\r\n\r\ntype MoveAnchorableDragAction = {\r\n\r\n    /**\r\n     * The move type.\r\n     */\r\n    type: DragActionType.MoveAnchorable,\r\n\r\n    /**\r\n     * The anchorable to move.\r\n     */\r\n    obj: DiagramAnchorableView\r\n}\r\n\r\ntype CreateLineDragAction = {\r\n\r\n    /**\r\n     * The move type.\r\n     */\r\n    type: DragActionType.CreateLine,\r\n    \r\n    /**\r\n     * The line.\r\n     */\r\n    line: DiagramLineView,\r\n\r\n    /**\r\n     * The line's parent.\r\n     */\r\n    parent: DiagramObjectView,\r\n\r\n    /**\r\n     * The anchor that created the line.\r\n     */\r\n    anchor: DiagramAnchorModel, \r\n\r\n    /**\r\n     * The line ending to move.\r\n     */\r\n    obj: DiagramLineEndingView\r\n\r\n}\r\n","import { PageModel } from \"../DiagramModelTypes\";\r\nimport { RasterCache } from \"../Diagram/RasterCache\";\r\nimport { ViewportRegion } from \"../Diagram\";\r\n\r\nexport class PageImage {\r\n\r\n    /**\r\n     * The page.\r\n     */\r\n    private _page: PageModel;\r\n\r\n    /**\r\n     * The image's padding.\r\n     */\r\n    private _padding: number;\r\n\r\n    /**\r\n     * If the grid should be displayed or not.\r\n     */\r\n    private _showGrid: boolean;\r\n\r\n    /**\r\n     * If shadow's should be displayed or not.\r\n     */\r\n    private _showShadows: boolean;\r\n     \r\n    /**\r\n     * If debug information should be displayed or not.\r\n     */\r\n    private _showDebug: boolean;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link PageImage}.\r\n     * @param page\r\n     *  The page to image.\r\n     * @param padding\r\n     *  The image's padding.\r\n     * @param grid\r\n     *  If the grid should be displayed or not.\r\n     *  (Default: true)\r\n     * @param shadows\r\n     *  If shadow's should be displayed or not.\r\n     *  (Default: true)\r\n     * @param debug\r\n     *  If debug information should be displayed or not.\r\n     *  (Default: false)\r\n     */\r\n    constructor(\r\n        page: PageModel,\r\n        padding: number = 30,\r\n        grid: boolean = true,\r\n        shadows: boolean = true,\r\n        debug: boolean = false\r\n    ) {\r\n        this._page = page;\r\n        this._padding = padding;\r\n        this._showGrid = grid;\r\n        this._showShadows = shadows;\r\n        this._showDebug = debug;\r\n    }\r\n\r\n\r\n    /**\r\n     * Returns an image of the page.\r\n     * @returns\r\n     *  The generated image.\r\n     */\r\n    public capture(): HTMLCanvasElement;\r\n\r\n    /**\r\n     * Returns an image of the specified page objects.\r\n     * @param ids\r\n     *  A list of object ids.\r\n     * @returns\r\n     *  The generated image.\r\n     */\r\n    public capture(ids: string[]): HTMLCanvasElement;\r\n    public capture(ids?: string[]): HTMLCanvasElement {\r\n        \r\n        // Calculate region\r\n        let xMin, yMin, xMax, yMax;\r\n        if(ids?.length) {\r\n            xMin = Infinity;\r\n            yMin = Infinity;\r\n            xMax = -Infinity;\r\n            yMax = -Infinity;\r\n            for(let id of ids) {\r\n                let obj = this._page.lookup(id);\r\n                if(!obj) {\r\n                    throw new Error(`'${ id }' does not exist.`);\r\n                }\r\n                xMin = Math.min(xMin, obj.boundingBox.xMin);\r\n                yMin = Math.min(yMin, obj.boundingBox.yMin);\r\n                xMax = Math.max(xMax, obj.boundingBox.xMax);\r\n                yMax = Math.max(yMax, obj.boundingBox.yMax);\r\n            }\r\n        } else {\r\n            xMin = this._page.boundingBox.xMin;\r\n            yMin = this._page.boundingBox.yMin;\r\n            xMax = this._page.boundingBox.xMax;\r\n            yMax = this._page.boundingBox.yMax;\r\n        }\r\n        \r\n        // Create view\r\n        let cache = new RasterCache();\r\n        let view = this._page.createView(cache);\r\n        view.updateView();\r\n        \r\n        // Configure canvas\r\n        let can = document.createElement(\"canvas\");\r\n        can.width  = Math.round(xMax - xMin) + (this._padding * 2);\r\n        can.height = Math.round(yMax - yMin) + (this._padding * 2);\r\n        \r\n        // Configure context\r\n        let ctx = can.getContext(\"2d\")!;\r\n        ctx.setTransform(\r\n            1, 0, 0, 1, \r\n            -xMin + this._padding,\r\n            -yMin + this._padding\r\n        );\r\n\r\n        // Configure viewport\r\n        let viewport = new ViewportRegion();\r\n        viewport.xMin = xMin - this._padding;\r\n        viewport.yMin = yMin - this._padding;\r\n        viewport.xMax = xMax + this._padding;\r\n        viewport.yMax = yMax + this._padding;\r\n\r\n        // Render image\r\n        view.renderPageSurfaceTo(ctx, viewport, this._showGrid);\r\n        if(this._showShadows) {\r\n            view.renderTo(ctx, viewport);\r\n        } else {\r\n            view.renderTo(ctx, viewport, 0, 0);\r\n        }\r\n        if(this._showDebug) {\r\n            view.renderDebugTo(ctx, viewport);\r\n        }\r\n\r\n        // Return image\r\n        return can;\r\n\r\n    }\r\n\r\n}\r\n","import pkg from \"~/package.json\";\r\nimport { PageEditor } from \"./PageEditor\";\r\nimport {\r\n    DiagramObjectModel,\r\n    PageModel\r\n} from \"./DiagramModelTypes\";\r\nimport {\r\n    BlockDiagramDocumentExport,\r\n    BlockDiagramSchema,\r\n    DiagramFactory,\r\n    DiagramObjectExport\r\n} from \"./DiagramFactory\";\r\n\r\nexport class BlockDiagramDocument {\r\n\r\n    /**\r\n     * The document's name.\r\n     */\r\n    public name: string;\r\n\r\n    /**\r\n     * The document's diagram factory.\r\n     */\r\n    public readonly factory: DiagramFactory;\r\n\r\n    /**\r\n     * The document's page.\r\n     */\r\n    public readonly page: PageModel;\r\n\r\n    /**\r\n     * The document's page editor.\r\n     */\r\n    public readonly editor: PageEditor;\r\n\r\n    /**\r\n     * The API's version number.\r\n     */\r\n    public readonly apiVersion: string;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link BlockDiagramDocument}.\r\n     * @param name\r\n     *  The document's name.\r\n     * @param factory\r\n     *  The document's diagram factory. \r\n     * @param page\r\n     *  The document's block diagram.\r\n     * @param apiVersion\r\n     *  The API's version number.\r\n     */\r\n    private constructor(name: string, factory: DiagramFactory, page: PageModel, apiVersion: string) {\r\n        this.name = name;\r\n        this.factory = factory;\r\n        this.page = page;\r\n        this.editor = new PageEditor(page);\r\n        this.apiVersion = apiVersion;\r\n    }\r\n\r\n    \r\n    /**\r\n     * Returns a dummy {@link BlockDiagramDocument}.\r\n     * @returns \r\n     *  A dummy {@link BlockDiagramDocument}.\r\n     */\r\n    public static createDummy(): BlockDiagramDocument {\r\n        return new this(\r\n            \"@__builtin__dummy_document\", \r\n            DiagramFactory.createDummy(),\r\n            PageModel.createDummy(),\r\n            \"0.0.0\"\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Creates a new {@link BlockDiagramDocument}.\r\n     * @param name\r\n     *  The document's name.\r\n     * @param schema\r\n     *  The document's internal schema.\r\n     * @returns\r\n     *  The {@link BlockDiagramDocument}.\r\n     */\r\n    public static async create(\r\n        name: string,\r\n        schema: BlockDiagramSchema\r\n    ): Promise<BlockDiagramDocument> {\r\n        let factory = await DiagramFactory.create(schema);\r\n        let page = factory.createObject(schema.page_template) as PageModel;\r\n        return new this(name, factory, page, pkg.version);\r\n    }\r\n   \r\n    /**\r\n     * Creates a new {@link BlockDiagramDocument} from a serialized block \r\n     * diagram document.\r\n     * @param document\r\n     *  The serialized block diagram document.\r\n     * @returns\r\n     *  The {@link BlockDiagramDocument}.\r\n     */\r\n    public static async deserialize(\r\n        document: string\r\n    ): Promise<BlockDiagramDocument>;\r\n\r\n    /**\r\n     * Creates a new {@link BlockDiagramDocument} from a \r\n     * {@link BlockDiagramDocumentExport}.\r\n     * @param document\r\n     *  The block diagram document export.\r\n     * @returns\r\n     *  The {@link BlockDiagramDocument}.\r\n     */\r\n    public static async deserialize(\r\n        document: BlockDiagramDocumentExport\r\n    ): Promise<BlockDiagramDocument>;\r\n    public static async deserialize(\r\n        document: BlockDiagramDocumentExport | string\r\n    ): Promise<BlockDiagramDocument> {\r\n        \r\n        // Convert document to object\r\n        if(document.constructor.name === String.name) {\r\n            document = JSON.parse(document as string) as BlockDiagramDocumentExport;\r\n        }\r\n        document = document as BlockDiagramDocumentExport;\r\n\r\n        // Initialize diagram factory\r\n        let factory = await DiagramFactory.create(document.schema);\r\n        \r\n        // Compile export index\r\n        let index = new Map<string, DiagramObjectExport>();\r\n        for(let obj of document.objects) {\r\n            index.set(obj.id, obj);\r\n        }\r\n\r\n        // Create page\r\n        let pageExp = index.get(document.page)!\r\n        let pageObj = (function deserialize(\r\n            exp: DiagramObjectExport,\r\n            expIndex: Map<string, DiagramObjectExport>,\r\n            objIndex: Map<string, DiagramObjectModel>,\r\n            factory: DiagramFactory\r\n        ): DiagramObjectModel {\r\n            \r\n            // Create object\r\n            if(!objIndex.has(exp.id)) {\r\n                let children: DiagramObjectModel[] = []\r\n                for(let id of exp.children) {\r\n                    children.push(deserialize(\r\n                        index.get(id)!,\r\n                        expIndex,\r\n                        objIndex,\r\n                        factory\r\n                    ));\r\n                }\r\n                let obj = factory.createObject({ ...exp, children });\r\n                objIndex.set(obj.id, obj);\r\n            }\r\n            \r\n            // Return object\r\n            return objIndex.get(exp.id)!;\r\n\r\n        })(pageExp, index, new Map(), factory) as PageModel;\r\n\r\n        // Return document\r\n        return new this(document.name, factory, pageObj, document.api_version);\r\n    }\r\n\r\n    /**\r\n     * Exports the {@link BlockDiagramDocument}.\r\n     * @returns\r\n     *  The {@link BlockDiagramDocumentExport}.\r\n     */\r\n    public toExport(): BlockDiagramDocumentExport {\r\n        return {\r\n            api_version: this.apiVersion,\r\n            name: this.name,\r\n            schema: this.factory.getSchema(),\r\n            page: this.page.id,\r\n            objects: [...this.page.getSubtree()].map(o => o.toExport())\r\n        }\r\n    }\r\n\r\n}\r\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./TabBox.vue?vue&type=style&index=0&id=2649b21e&scoped=true&lang=css\"","export class DiagramFactoryError extends Error {\r\n\r\n    /**\r\n     * Creates a new {@link DiagramFactoryError}.\r\n     * @param message\r\n     *  The error message.\r\n     */\r\n    constructor(message: string) {\r\n        super(message);\r\n    } \r\n\r\n}","import { RestrictedPropertyDescriptor } from \"../Property\";\r\nimport { Font, FontDescriptor } from \"../Utilities\";\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  1. Block Diagram Schema  //////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport type BlockDiagramSchema = {\r\n    page_template: string,\r\n    templates: SerializedTemplate[]\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  2. Template Types  ////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport enum TemplateType {\r\n    AnchorPoint          = 0,\r\n    DictionaryBlock      = 1,\r\n    LineEndingPoint      = 2,\r\n    LineHandlePoint      = 3,\r\n    LineHorizontalElbow  = 4,\r\n    LineVerticalElbow    = 5,\r\n    Page                 = 6,\r\n    TextBlock            = 7,\r\n}\r\n\r\nexport enum SemanticRole {\r\n    None                 = 0b0000000000000000,\r\n    Node                 = 0b0010000000000000,\r\n    Edge                 = 0b0100000000000000,\r\n    EdgeSource           = 0b0110000000000000,\r\n    EdgeTarget           = 0b1000000000000000\r\n}\r\n\r\nexport type Template \r\n    = AnchorPointTemplate\r\n    | DictionaryBlockTemplate\r\n    | LineEndingPointTemplate\r\n    | LineHandlePointTemplate\r\n    | LineHorizontalElbowTemplate\r\n    | LineVerticalElbowTemplate\r\n    | PageTemplate\r\n\r\nexport type SerializedTemplate = SubstituteType<Template, Font, FontDescriptor>;\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  3. Generic Template  //////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport type ObjectTemplate = {\r\n    id: string;\r\n    name: string;\r\n    properties?: { \r\n        [key: string]: RestrictedPropertyDescriptor\r\n    }\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  4. Diagram Anchor Template  ///////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport type AnchorTemplate = ObjectTemplate & {\r\n    radius: number,\r\n    line_templates: {\r\n        [key: number]: string\r\n    }\r\n}\r\n\r\nexport enum AnchorAngle {\r\n    DEG_0  = 0,\r\n    DEG_90 = 1\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  5. Diagram Line Template  /////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport type LineTemplate = ObjectTemplate & {\r\n    hitbox_width: number,\r\n    line_handle_template: string,\r\n    line_ending_template: {\r\n        source: string,\r\n        target: string\r\n    }\r\n    style: LineStyle\r\n}\r\n\r\nexport type LineStyle = {\r\n    width: number,\r\n    cap_size: number,\r\n    color: string,\r\n    select_colors: {\r\n        solo_color: string,\r\n        many_color: string,\r\n    }\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  6. Line Ending Point Template  ////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport type LineEndingPointTemplate = ObjectTemplate & {\r\n    type: TemplateType.LineEndingPoint,\r\n    role: SemanticRole.None | SemanticRole.EdgeSource | SemanticRole.EdgeTarget\r\n    style: LineEndingPointStyle\r\n}\r\n\r\nexport type LineEndingPointStyle = {\r\n    radius: number,\r\n    fill_color: string,\r\n    stroke_color: string,\r\n    stroke_width: number\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  7. Line Handle Point Template  ////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport type LineHandlePointTemplate = ObjectTemplate & {\r\n    type: TemplateType.LineHandlePoint,\r\n    role: SemanticRole.None,\r\n    style: LineHandlePointStyle;\r\n}\r\n\r\nexport type LineHandlePointStyle = {\r\n    radius: number,\r\n    fill_color: string,\r\n    stroke_color: string,\r\n    stroke_width: number\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  8. Anchor Point Template  /////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport type AnchorPointTemplate = AnchorTemplate & {\r\n    type: TemplateType.AnchorPoint,\r\n    role: SemanticRole.None,\r\n    style: AnchorPointStyle\r\n}\r\n\r\nexport type AnchorPointStyle = {\r\n    color: string\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  9. Dictionary Block Template  /////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport type DictionaryBlockTemplate = ObjectTemplate & {\r\n    type: TemplateType.DictionaryBlock,\r\n    role: SemanticRole.None | SemanticRole.Node,\r\n    title_key: string,\r\n    anchor_template: string,\r\n    style: DictionaryBlockStyle\r\n}\r\n\r\nexport type DictionaryBlockStyle = {\r\n    max_width: number,\r\n    head: {\r\n        fill_color: string,\r\n        stroke_color: string,\r\n        title: {\r\n            font: Font,\r\n            color: string,\r\n            padding: number\r\n        },\r\n        subtitle:  {\r\n            font: Font,\r\n            color: string,\r\n            lineHeight: number\r\n        },\r\n        vertical_padding: number\r\n    },\r\n    body: {\r\n        fill_color: string,\r\n        stroke_color: string,\r\n        field_name: {\r\n            font: Font,\r\n            color: string,\r\n            padding: number\r\n        },\r\n        field_value: {\r\n            font: Font,\r\n            color: string,\r\n            line_height: number,\r\n            padding: number\r\n        },\r\n        vertical_padding: number,\r\n    },\r\n    select_outline: {\r\n        padding: number\r\n        solo_color: string,\r\n        many_color: string,\r\n        border_radius: number,\r\n    },\r\n    anchor_markers: {\r\n        color: string,\r\n        size: number\r\n    }\r\n    border_radius: number,\r\n    horizontal_padding: number\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  11. Line Horizontal Elbow Template  ///////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport type LineHorizontalElbowTemplate = LineTemplate & {\r\n    type: TemplateType.LineHorizontalElbow\r\n    role: SemanticRole.None | SemanticRole.Edge\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  12. Line Horizontal Elbow Template  ///////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport type LineVerticalElbowTemplate = LineTemplate & {\r\n    type: TemplateType.LineVerticalElbow\r\n    role: SemanticRole.None | SemanticRole.Edge\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  13. Page Template  ////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport type PageTemplate = ObjectTemplate & {\r\n    type: TemplateType.Page\r\n    role: SemanticRole.None\r\n    grid: [number, number]\r\n    style: PageStyle\r\n}\r\n\r\nexport type PageStyle = {\r\n    grid_color: string,\r\n    background_color: string,\r\n    drop_shadow: {\r\n        color: string,\r\n        offset: [number, number]\r\n    }\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  14. Type Helpers  /////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n/**\r\n * Substitutes all types of type `A` in type `T` with type `B`.\r\n * ({@link https://stackoverflow.com/a/59833891 Source})\r\n */\r\ntype SubstituteType<T, A, B> =\r\n    T extends A\r\n    ? B\r\n    : T extends {}\r\n    ? { [K in keyof T]: SubstituteType<T[K], A, B> }\r\n    : T;\r\n","import { AnchorAngle, SemanticRole, SerializedTemplate, TemplateType } from \".\";\r\n\r\nconst BUILTIN_PREFIX = \"@__builtin__\";\r\n\r\nexport const BuiltinTemplates: SerializedTemplate[] = [\r\n    {\r\n        id: `${ BUILTIN_PREFIX }page`,\r\n        name: \"Page\",\r\n        type: TemplateType.Page,\r\n        role: SemanticRole.None,\r\n        grid: [10, 10],\r\n        style: {\r\n            grid_color: \"#1d1d1d\",\r\n            background_color: \"#141414\",\r\n            drop_shadow: {\r\n                color: \"rgba(0,0,0,.4)\",\r\n                offset: [3, 3]\r\n            }\r\n        }\r\n    },\r\n    {\r\n        id: `${ BUILTIN_PREFIX }anchor`,\r\n        name: \"Anchor\",\r\n        type: TemplateType.AnchorPoint,\r\n        role: SemanticRole.None,\r\n        radius: 10,\r\n        line_templates: {\r\n            [AnchorAngle.DEG_0] : `${ BUILTIN_PREFIX }line_horizontal_elbow`,\r\n            [AnchorAngle.DEG_90]: `${ BUILTIN_PREFIX }line_vertical_elbow`\r\n        },\r\n        style: {\r\n            color: \"rgba(255, 255, 255, 0.25)\"\r\n        }\r\n    },\r\n    {\r\n        id: `${ BUILTIN_PREFIX }line_handle`,\r\n        name: \"Line Handle\",\r\n        type: TemplateType.LineHandlePoint,\r\n        role: SemanticRole.None,\r\n        style: {\r\n            radius: 6,\r\n            fill_color: \"#fedb22\",\r\n            stroke_color: \"#141414\",\r\n            stroke_width: 1.5\r\n        }\r\n    },\r\n    {\r\n        id: `${ BUILTIN_PREFIX }line_source`,\r\n        name: \"Line Source\",\r\n        type: TemplateType.LineEndingPoint,\r\n        role: SemanticRole.EdgeSource,\r\n        style: {\r\n            radius: 6,\r\n            fill_color: \"#fedb22\",\r\n            stroke_color: \"#141414\",\r\n            stroke_width: 1.5\r\n        }\r\n    },\r\n    {\r\n        id: `${ BUILTIN_PREFIX }line_target`,\r\n        name: \"Line Target\",\r\n        type: TemplateType.LineEndingPoint,\r\n        role: SemanticRole.EdgeTarget,\r\n        style: {\r\n            radius: 6,\r\n            fill_color: \"#fedb22\",\r\n            stroke_color: \"#141414\",\r\n            stroke_width: 1.5\r\n        }\r\n    },\r\n    {\r\n        id: `${ BUILTIN_PREFIX }line_horizontal_elbow`,\r\n        name: \"Horizontal Elbow\",\r\n        type: TemplateType.LineHorizontalElbow,\r\n        role: SemanticRole.Edge,\r\n        hitbox_width: 20,\r\n        line_handle_template: `${ BUILTIN_PREFIX }line_handle`,\r\n        line_ending_template: {\r\n            source: `${ BUILTIN_PREFIX }line_source`,\r\n            target: `${ BUILTIN_PREFIX }line_target`\r\n        },\r\n        style: {\r\n            width: 5,\r\n            cap_size: 16,\r\n            color: \"#646464\",\r\n            select_colors: {\r\n                solo_color: \"#646464\",\r\n                many_color: \"#646464\"\r\n            }\r\n        }\r\n    },\r\n    {\r\n        id: `${ BUILTIN_PREFIX }line_vertical_elbow`,\r\n        name: \"Vertical Elbow\",\r\n        type: TemplateType.LineVerticalElbow,\r\n        role: SemanticRole.Edge,\r\n        hitbox_width: 20,\r\n        line_handle_template: `${ BUILTIN_PREFIX }line_handle`,\r\n        line_ending_template: {\r\n            source: `${ BUILTIN_PREFIX }line_source`,\r\n            target: `${ BUILTIN_PREFIX }line_target`\r\n        },\r\n        style: {\r\n            width: 5,\r\n            cap_size: 16,\r\n            color: \"#646464\",\r\n            select_colors: {\r\n                solo_color: \"#646464\",\r\n                many_color: \"#646464\"\r\n            }\r\n        }\r\n    }\r\n]\r\n","import { \r\n    Font,\r\n    FontDescriptor,\r\n    GlobalFontStore\r\n} from \"../Utilities\";\r\nimport { \r\n    AnchorPointModel,\r\n    DiagramAnchorModel,\r\n    DiagramObjectModel,\r\n    DictionaryBlockModel,\r\n    LineEndingPointModel,\r\n    LineHandlePointModel,\r\n    LineHorizontalElbowModel,\r\n    LineVerticalElbowModel,\r\n    PageModel\r\n} from \"../DiagramModelTypes\";\r\nimport { \r\n    BlockDiagramSchema,\r\n    BuiltinTemplates,\r\n    DiagramFactoryError,\r\n    DiagramObjectValues,\r\n    SerializedTemplate,\r\n    Template,\r\n    TemplateType,\r\n} from \".\";\r\n\r\nexport class DiagramFactory {\r\n\r\n    /**\r\n     * The diagram's schema.\r\n     */\r\n    public readonly schema: BlockDiagramSchema;\r\n\r\n    /**\r\n     * The diagram factory's list of templates.\r\n     */\r\n    public readonly templates: Map<string, Template>\r\n\r\n\r\n    /**\r\n     * Creates a new {@link DiagramFactory}.\r\n     * @param pageTemplate\r\n     *  The schema's page template.\r\n     * @param templates\r\n     *  THe diagram factory's list of templates.\r\n     */\r\n    private constructor(schema: BlockDiagramSchema, templates: Map<string, Template>) {\r\n        this.schema = schema;\r\n        this.templates = templates;\r\n    }\r\n\r\n\r\n    /**\r\n     * Returns a dummy {@link DiagramFactory}.\r\n     * @returns \r\n     *  A dummy {@link DiagramFactory}.\r\n     */\r\n    public static createDummy(): DiagramFactory {\r\n        return new this({ page_template: \"\", templates: [] }, new Map());\r\n    }\r\n\r\n    /**\r\n     * Creates a new {@link DiagramFactory}.\r\n     * @param schema\r\n     *  The diagram factory's internal schema.\r\n     * @throws { DiagramFactoryError }\r\n     *  If two or more templates share the same name.\r\n     * @throws { Error }\r\n     *  If any of the schema's fonts failed to load.\r\n     */\r\n    public static async create(schema: BlockDiagramSchema) {\r\n        \r\n        // Clone schema\r\n        let copy = structuredClone(schema);\r\n\r\n        // Validate unique ids\r\n        let ids = new Set();\r\n        for(let template of copy.templates) {\r\n            if(ids.has(template.id)){\r\n                throw new DiagramFactoryError(\r\n                    `Template '${ template.id }' can only be defined once.`\r\n                );\r\n            }\r\n            ids.add(template.id);\r\n        }\r\n\r\n        // Register schema templates\r\n        let templates = new Map<string, SerializedTemplate>();\r\n        for(let template of [...BuiltinTemplates, ...copy.templates]) {\r\n            templates.set(template.id, template);\r\n        }\r\n\r\n        // Load font descriptors\r\n        let fonts: FontDescriptor[] = [];\r\n        for(let template of templates.values()) {\r\n            fonts = fonts.concat(\r\n                this.getFontDescriptorsFromTemplate(template)\r\n            );\r\n        }\r\n        await GlobalFontStore.loadFonts(fonts);\r\n        \r\n        // Swap font descriptors for fonts\r\n        for(let template of templates.values()) {\r\n            this.swapFontDescriptorsWithFonts(template);\r\n        }\r\n        \r\n        // Return new diagram factory \r\n        return new this(\r\n            schema,\r\n            templates as Map<string, Template>\r\n        );\r\n    \r\n    }\r\n\r\n    \r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Templates  /////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    \r\n\r\n    /**\r\n     * Returns a template from the factory.\r\n     * @param template\r\n     *  The template's id.\r\n     * @returns\r\n     *  The template. `undefined` if no template with that id exists.\r\n     */\r\n    public getTemplate(template: string): Template | undefined {\r\n        return this.templates.get(template);\r\n    }\r\n\r\n    /**\r\n     * Returns all block templates.\r\n     * @returns \r\n     *  All block templates.\r\n     */\r\n    public getBlockTemplates(): Template[] {\r\n        let templates = [];\r\n        for(let template of this.templates.values()) {\r\n            switch(template.type) {\r\n                case TemplateType.DictionaryBlock:\r\n                    templates.push(template);\r\n                    break;\r\n                \r\n            }\r\n        }\r\n        return templates;\r\n    }\r\n\r\n    /**\r\n     * Returns all line templates.\r\n     * @returns \r\n     *  All line templates.\r\n     */\r\n    public getLineTemplates(): Template[] {\r\n        let templates = [];\r\n        for(let template of this.templates.values()) {\r\n            switch(template.type) {\r\n                case TemplateType.LineVerticalElbow:\r\n                case TemplateType.LineHorizontalElbow:\r\n                    templates.push(template);\r\n                    break;\r\n            }\r\n        }\r\n        return templates;\r\n    }\r\n\r\n    \r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  2. Object Creation  ///////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Instantiates a diagram object.\r\n     * @param template\r\n     *  The name of the object's template.\r\n     * @returns\r\n     *  The newly created diagram object.\r\n     * @throws { DiagramFactoryError }\r\n     *  If no template with the specified name exists.\r\n     */\r\n    public createObject(template: string): DiagramObjectModel;\r\n    \r\n    /**\r\n     * Instantiates a diagram object.\r\n     * @param object\r\n     *  The object's values.\r\n     * @returns\r\n     *  The newly created diagram object.\r\n     * @throws { DiagramFactoryError }\r\n     *  If `object` specifies a template that doesn't exist.\r\n     */\r\n    public createObject(object: DiagramObjectValues): DiagramObjectModel;\r\n    public createObject(param1: DiagramObjectValues | string): DiagramObjectModel {\r\n        let name, vals: any;\r\n        if(param1 instanceof Object) {\r\n            name = param1.template,\r\n            vals = param1\r\n        } else {\r\n            name = param1;\r\n        }\r\n        // Resolve template\r\n        let temp = this.templates.get(name);\r\n        if(!temp) {\r\n            throw new DiagramFactoryError(\r\n                `Template '${ name }' does not exist.`\r\n            );\r\n        }\r\n        // Create diagram object\r\n        switch(temp.type) {\r\n            case TemplateType.Page:\r\n                return new PageModel(this, temp, vals);\r\n            case TemplateType.AnchorPoint:\r\n                return new AnchorPointModel(this, temp, vals);\r\n            case TemplateType.DictionaryBlock:\r\n                return new DictionaryBlockModel(this, temp, vals);\r\n            case TemplateType.LineEndingPoint:\r\n                return new LineEndingPointModel(this, temp, vals);\r\n            case TemplateType.LineHandlePoint:\r\n                return new LineHandlePointModel(this, temp, vals);\r\n            case TemplateType.LineVerticalElbow:\r\n                return new LineVerticalElbowModel(this, temp, vals);\r\n            case TemplateType.LineHorizontalElbow:\r\n                return new LineHorizontalElbowModel(this, temp, vals);\r\n            default:\r\n                throw new DiagramFactoryError(\r\n                    `Unknown template type: '${ (temp as any).type }'.`\r\n                );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clones one or more diagram objects.\r\n     * @param objects\r\n     *  The object(s) to clone.\r\n     * @returns\r\n     *  The cloned objects.\r\n     */\r\n    public cloneObjects(...objects: DiagramObjectModel[]): DiagramObjectModel[] {\r\n        // Clone objects\r\n        let clones = new Map<string, DiagramObjectModel>();\r\n        let anchors = new Map<DiagramAnchorModel, string[]>();\r\n        let objs = objects.map(o => this.cloneObject(o, clones, anchors));\r\n        // Link clones\r\n        for(let [anchor, links] of anchors) {\r\n            for(let link of links) {\r\n                let obj = clones.get(link);\r\n                if(obj) {\r\n                    anchor.addChild(obj);\r\n                }\r\n            }\r\n        }\r\n        // Return clones\r\n        return objs;\r\n    }\r\n\r\n    /**\r\n     * Clones a single object. Supports `cloneObjects()`.\r\n     * @param object\r\n     *  The object to clone.\r\n     * @param clones\r\n     *  The clone index. This maps objects to their clones.\r\n     * @param anchors\r\n     *  The anchor index. The maps anchor clones to their original children.\r\n     * @returns\r\n     *  The cloned object.\r\n     */\r\n    private cloneObject(\r\n        object: DiagramObjectModel,\r\n        clones: Map<string, DiagramObjectModel>,\r\n        anchors: Map<DiagramAnchorModel, string[]>\r\n    ): DiagramObjectModel {\r\n        // Clone anchor\r\n        if(object instanceof DiagramAnchorModel) {\r\n            let clone = this.createObject({\r\n                ...object.toExport(),\r\n                id: crypto.randomUUID(),\r\n                children: []\r\n            }) as DiagramAnchorModel;\r\n            clones.set(object.id, clone);\r\n            anchors.set(clone, object.children.map(o => o.id));\r\n            return clone;\r\n        };\r\n        // Clone children\r\n        let children = [];\r\n        for(let obj of object.children) {\r\n            children.push(this.cloneObject(obj, clones, anchors));\r\n        }\r\n        // Clone object\r\n        let clone = this.createObject({\r\n            ...object.toExport(),\r\n            id: crypto.randomUUID(),\r\n            children\r\n        });\r\n        clones.set(object.id, clone);\r\n        return clone;\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  3. Font Management  ///////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Returns all {@link FontDescriptor} defined by a template.\r\n     * @returns\r\n     *  All {@link FontDescriptor} defined by a template.\r\n     */\r\n    private static getFontDescriptorsFromTemplate(template: SerializedTemplate): FontDescriptor[] {\r\n        switch(template.type) {\r\n            case TemplateType.DictionaryBlock:\r\n                let { style } = template;\r\n                return [\r\n                    style.head.title.font,\r\n                    style.head.subtitle.font,\r\n                    style.body.field_name.font,\r\n                    style.body.field_value.font\r\n                ]\r\n            default:\r\n                return [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Swaps all {@link FontDescriptor} defined by a template with \r\n     * {@link Font} objects.\r\n     * @param template\r\n     *  The template to modify.\r\n     */\r\n    private static swapFontDescriptorsWithFonts(template: SerializedTemplate) {\r\n        let font = GlobalFontStore.getFont.bind(GlobalFontStore);\r\n        switch(template.type) {\r\n            case TemplateType.DictionaryBlock:\r\n                let { head: h, body: b } = template.style as any;\r\n                h.title.font = font(h.title.font);\r\n                h.subtitle.font = font(h.subtitle.font);\r\n                b.field_name.font = font(b.field_name.font);\r\n                b.field_value.font = font(b.field_value.font);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  4. Serialization  /////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Returns the diagram factory's internal schema.\r\n     * @returns\r\n     *  The diagram factory's internal schema.\r\n     */\r\n    public getSchema(): BlockDiagramSchema {\r\n        // Compile templates\r\n        let templates: SerializedTemplate[] = []\r\n        for(let template of this.templates.values()) {\r\n            let cloneTemplate = JSON.stringify(template, \r\n                (_: string, obj: any) => obj instanceof Font ? obj.descriptor : obj\r\n            );\r\n            templates.push(JSON.parse(cloneTemplate));\r\n        }\r\n        // Return schema\r\n        return {\r\n            page_template: this.schema.page_template,\r\n            templates: templates\r\n        }\r\n    }\r\n\r\n}\r\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./TitleBar.vue?vue&type=style&index=0&id=73631bd3&scoped=true&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./BlockDiagram.vue?vue&type=style&index=0&id=40949232&scoped=true&lang=css\"","///////////////////////////////////////////////////////////////////////////////\r\n//  1. Value Types  ///////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\ntype ValueListDescriptorBase<T extends ValueTypes> = {\r\n    type: PropertyType.List,\r\n    form: ValueDescriptorBase<T>,\r\n    values?: ValueTypeScriptType[T][]\r\n}\r\n\r\ntype ValueDescriptorBase<K extends ValueTypes> = {\r\n    type: K,\r\n    value: ValueTypeScriptType[K]\r\n    is_required? : boolean,\r\n    is_editable? : boolean,\r\n    is_visible?: boolean\r\n}\r\n\r\ntype ValueTypes\r\n    = PropertyType.Int\r\n    | PropertyType.Float\r\n    | PropertyType.String\r\n    | PropertyType.Date\r\n    | PropertyType.Dropdown\r\n\r\ntype ValueTypeScriptType = {\r\n    [PropertyType.Int]: number,\r\n    [PropertyType.Float]: number,\r\n    [PropertyType.String]: string,\r\n    [PropertyType.Date]: Date,\r\n    [PropertyType.Dropdown]: number\r\n}\r\n\r\nexport enum PropertyType {\r\n    Int        = 0,\r\n    Float      = 1,\r\n    String     = 2,\r\n    Date       = 3,\r\n    Dropdown   = 4,\r\n    List       = 5,\r\n    Dictionary = 6,\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  2. Standard Property Descriptors  /////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n/**\r\n * Standard Property Descriptor:\r\n * Allows recursive definitions of both arrays and dictionaries.\r\n */\r\n export type PropertyDescriptor\r\n    = StringPropertyDescriptor\r\n    | NumberPropertyDescriptor\r\n    | DatePropertyDescriptor\r\n    | DropdownPropertyDescriptor\r\n    | ListPropertyDescriptor\r\n    | DictionaryPropertyDescriptor\r\n\r\nexport type StringPropertyDescriptor\r\n    = ValueDescriptorBase<PropertyType.String>;\r\n\r\nexport type NumberPropertyDescriptor\r\n    = ValueDescriptorBase<PropertyType.Int>\r\n    | ValueDescriptorBase<PropertyType.Float>;\r\n\r\nexport type DatePropertyDescriptor\r\n    = ValueDescriptorBase<PropertyType.Date>;\r\n\r\nexport type DropdownPropertyDescriptor\r\n    = ValueDescriptorBase<PropertyType.Dropdown>;\r\n\r\nexport type ListPropertyDescriptor = {\r\n    type: PropertyType.List,\r\n    form: PropertyDescriptor\r\n    values?: any[]\r\n}\r\n\r\nexport type DictionaryPropertyDescriptor = {\r\n    type: PropertyType.Dictionary,\r\n    form: { \r\n        [key: string]: PropertyDescriptor\r\n    },\r\n    text_key: string\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  3. Restricted Property Descriptor  ////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n/**\r\n * Restricted Property Descriptor:\r\n * Restricts recursive definitions of both arrays and dictionaries.\r\n */\r\n export type RestrictedPropertyDescriptor\r\n    = ValueDescriptor\r\n    | ValueListDescriptor\r\n    | ValueDictionaryDescriptor\r\n    | ValueDictionaryListDescriptor\r\n\r\ntype ValueDictionaryListDescriptor = {\r\n    type: PropertyType.List,\r\n    form: ValueDictionaryDescriptor,\r\n    values?: any[]\r\n}\r\n\r\ntype ValueDictionaryDescriptor = {\r\n    type: PropertyType.Dictionary,\r\n    form: {\r\n        [key: string]\r\n            : ValueDescriptor\r\n            | ValueListDescriptor\r\n    },\r\n    text_key: string\r\n}\r\n\r\ntype ValueListDescriptor\r\n    = ValueListDescriptorBase<PropertyType.String>\r\n    | ValueListDescriptorBase<PropertyType.Int>\r\n    | ValueListDescriptorBase<PropertyType.Float>\r\n    | ValueListDescriptorBase<PropertyType.Date>\r\n    | ValueListDescriptorBase<PropertyType.Dropdown>\r\n\r\ntype ValueDescriptor\r\n    = StringPropertyDescriptor\r\n    | NumberPropertyDescriptor\r\n    | DatePropertyDescriptor\r\n    | DropdownPropertyDescriptor\r\n","import { \r\n    DateProperty,\r\n    DictionaryProperty,\r\n    ListProperty,\r\n    NumberProperty,\r\n    PropertyDescriptor,\r\n    PropertyType,\r\n    StringProperty\r\n} from \".\";\r\n\r\nexport abstract class Property {\r\n\r\n    /**\r\n     * The property's type.\r\n     */\r\n    public type: PropertyType;\r\n\r\n    /**\r\n     * The property's descriptor.\r\n     */\r\n    public descriptor: PropertyDescriptor;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link Property}.\r\n     * @param descriptor\r\n     *  The property's descriptor.\r\n     */\r\n    constructor(descriptor: PropertyDescriptor) {\r\n        this.type = descriptor.type;\r\n        this.descriptor = descriptor;\r\n    }\r\n\r\n\r\n    /**\r\n     * Creates a new {@link Property}.\r\n     * @param descriptor\r\n     *  The property's descriptor.\r\n     * @param values\r\n     *  The property's values.\r\n     * @returns\r\n     *  The {@link Property}.\r\n     */\r\n    public static create(descriptor: PropertyDescriptor, values?: any): Property {\r\n        switch(descriptor.type) {\r\n            case PropertyType.String:\r\n                return new StringProperty(descriptor, values);\r\n            case PropertyType.Int:\r\n            case PropertyType.Float:\r\n                return new NumberProperty(descriptor, values);\r\n            case PropertyType.Date:\r\n                return new DateProperty(descriptor, values);\r\n            case PropertyType.List:\r\n                return new ListProperty(descriptor, values);\r\n            case PropertyType.Dictionary:\r\n                return new DictionaryProperty(descriptor, values);\r\n            default:\r\n                throw new Error(\r\n                    `Unknown property type: '${ descriptor.type }'.`\r\n                );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the property's raw value.\r\n     * @returns\r\n     *  The property's raw value.\r\n     */\r\n    public abstract toRawValue(): any;\r\n    \r\n    /**\r\n     * Returns the property as a string.\r\n     * @returns\r\n     *  The property as a string.\r\n     */\r\n    public abstract toString(): string;\r\n\r\n}\r\n","import { DatePropertyDescriptor, Property } from \".\";\r\n\r\nexport class DateProperty extends Property {\r\n    \r\n    /**\r\n     * The property's descriptor.\r\n     */\r\n    public override descriptor: DatePropertyDescriptor;\r\n\r\n    /**\r\n     * The property's value.\r\n     */\r\n    public value: Date;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link DateProperty}.\r\n     * @param descriptor\r\n     *  The property's descriptor.\r\n     * @param value\r\n     *  The property's value.\r\n     */\r\n    constructor(descriptor: DatePropertyDescriptor, value?: any) {\r\n        super(descriptor);\r\n        this.descriptor = descriptor;\r\n        if(typeof value === 'string') {\r\n            this.value = new Date(value);\r\n        } else {\r\n            this.value = descriptor.value;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Returns the property's raw value.\r\n     * @returns\r\n     *  The property's raw value.\r\n     */\r\n    public toRawValue(): string {\r\n        return this.value.toISOString();\r\n    }\r\n\r\n    /**\r\n     * Returns the property as a string.\r\n     * @returns\r\n     *  The property as a string.\r\n     */\r\n    public toString(): string {\r\n        return `${ this.value }`;\r\n    }\r\n\r\n}\r\n","import { Property, StringPropertyDescriptor } from \".\";\r\n\r\nexport class StringProperty extends Property {\r\n    \r\n    /**\r\n     * The property's descriptor.\r\n     */\r\n    public override descriptor: StringPropertyDescriptor;\r\n\r\n    /**\r\n     * The property's value.\r\n     */\r\n    public value: string;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link StringProperty}.\r\n     * @param descriptor\r\n     *  The property's descriptor.\r\n     * @param value\r\n     *  The property's value.\r\n     */\r\n    constructor(descriptor: StringPropertyDescriptor, value?: any) {\r\n        super(descriptor);\r\n        this.descriptor = descriptor;\r\n        this.value = `${ value ?? descriptor.value }`;\r\n    }\r\n\r\n\r\n    /**\r\n     * Returns the property's raw value.\r\n     * @returns\r\n     *  The property's raw value.\r\n     */\r\n    public toRawValue(): string {\r\n        return this.value;\r\n    }\r\n\r\n    /**\r\n     * Returns the property as a string.\r\n     * @returns\r\n     *  The property as a string.\r\n     */\r\n    public toString(): string {\r\n        return this.value;\r\n    }\r\n\r\n}\r\n","import { NumberPropertyDescriptor, Property } from \".\";\r\n\r\nexport class NumberProperty extends Property {\r\n    \r\n    /**\r\n     * The property's descriptor.\r\n     */\r\n    public override descriptor: NumberPropertyDescriptor;\r\n\r\n    /**\r\n     * The property's value.\r\n     */\r\n    public value: number;\r\n    \r\n\r\n    /**\r\n     * Creates a new {@link NumberProperty}.\r\n     * @param descriptor\r\n     *  The property's descriptor.\r\n     * @param value\r\n     *  The property's value.\r\n     */\r\n    constructor(descriptor: NumberPropertyDescriptor, value?: any) {\r\n        super(descriptor);\r\n        this.descriptor = descriptor;\r\n        if(typeof value === 'number') {\r\n            this.value = value;\r\n        } else {\r\n            this.value = descriptor.value;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Returns the property's raw value.\r\n     * @returns\r\n     *  The property's raw value.\r\n     */\r\n    public toRawValue(): number {\r\n        return this.value;\r\n    }\r\n\r\n    /**\r\n     * Returns the property as a string.\r\n     * @returns\r\n     *  The property as a string.\r\n     */\r\n    public toString(): string {\r\n        return `${ this.value }`;\r\n    }\r\n\r\n}\r\n","import { computeHash } from \"../Utilities\";\r\nimport { \r\n    DictionaryPropertyDescriptor,\r\n    ListPropertyDescriptor,\r\n    Property\r\n} from \".\";\r\n\r\nexport abstract class CollectionProperty extends Property {\r\n\r\n    /**\r\n     * The property's descriptor.\r\n     */\r\n    public override descriptor: CollectionPropertyDescriptor;\r\n    \r\n    /**\r\n     * The set of properties.\r\n     */\r\n    public value: Map<string, Property>;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link CollectionProperty}.\r\n     * @param descriptor\r\n     *  The property's descriptor.\r\n     */\r\n    constructor(descriptor: CollectionPropertyDescriptor) {\r\n        super(descriptor);\r\n        this.descriptor = descriptor;\r\n        this.value = new Map();\r\n    }\r\n    \r\n\r\n    /**\r\n     * Returns a hash of the collection's textual content.\r\n     * @returns\r\n     *  A hash of the collection's textual content.\r\n     */\r\n    public getHash(): number {\r\n        return computeHash([...this.value.values()].map(v => v.toString()).join(\".\"));\r\n    }\r\n\r\n    /**\r\n     * Returns the property's raw value.\r\n     * @returns\r\n     *  The property's raw value.\r\n     */\r\n    public toRawValue(): RawCollectionProperty {\r\n        return [...this.value.entries()].map(([id, v]) => [id, v.toRawValue()]);\r\n    }\r\n\r\n}\r\n\r\nexport type RawCollectionProperty\r\n    = [string, RawCollectionProperty | string | number][]\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  Internal Types  ///////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\ntype CollectionPropertyDescriptor\r\n    = ListPropertyDescriptor\r\n    | DictionaryPropertyDescriptor\r\n","import { \r\n    CollectionProperty,\r\n    DictionaryPropertyDescriptor,\r\n    Property,\r\n    RawCollectionProperty\r\n} from \".\";\r\n\r\nexport class DictionaryProperty extends CollectionProperty {\r\n\r\n    /**\r\n     * The property's descriptor.\r\n     */\r\n    public override descriptor: DictionaryPropertyDescriptor;\r\n    \r\n\r\n    /**\r\n     * Creates a new {@link DictionaryProperty}.\r\n     * @param descriptor\r\n     *  The property's descriptor.\r\n     * @param values\r\n     *  The property's values.\r\n     */\r\n    constructor(descriptor: DictionaryPropertyDescriptor, values?: RawCollectionProperty) {\r\n        super(descriptor);\r\n        this.descriptor = descriptor;\r\n        // Configure values\r\n        this.value = new Map();\r\n        for(let key in descriptor.form) {\r\n            let val = values?.find(o => o[0] === key)?.at(1)\r\n            this.value.set(key, Property.create(descriptor.form[key], val));\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Returns the property as a string.\r\n     * @returns\r\n     *  The property as a string.\r\n     */\r\n    public toString(): string {\r\n        let tk = this.descriptor.text_key;\r\n        return this.value.get(tk)?.toString() ?? `Unknown key: '${ tk }'`;\r\n    }\r\n\r\n}\r\n","import { \r\n    CollectionProperty,\r\n    ListPropertyDescriptor,\r\n    Property,\r\n    RawCollectionProperty\r\n} from \".\";\r\n\r\nexport class ListProperty extends CollectionProperty {\r\n    \r\n    /**\r\n     * The property's descriptor.\r\n     */\r\n    public override descriptor: ListPropertyDescriptor;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link ListProperty}.\r\n     * @param descriptor\r\n     *  The property's descriptor.\r\n     * @param values\r\n     *  The property's values.\r\n     */\r\n    constructor(descriptor: ListPropertyDescriptor, values?: RawCollectionProperty) {\r\n        super(descriptor);\r\n        this.descriptor = descriptor;\r\n        // Configure values\r\n        this.value = new Map();\r\n        if(Array.isArray(values)) {\r\n            for(let [id, value] of values) {\r\n                let prop = Property.create(descriptor.form, value);\r\n                this.value.set(id, prop);\r\n            }\r\n        } else if(descriptor.values) {\r\n            for(let value of descriptor.values) {\r\n                let id = crypto.randomUUID();\r\n                let prop = Property.create(descriptor.form, value);\r\n                this.value.set(id, prop);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Adds a new item to the list property.\r\n     */\r\n    public addItem() {\r\n        let id = crypto.randomUUID();\r\n        let prop = Property.create(this.descriptor.form);\r\n        this.value.set(id, prop);\r\n    }\r\n\r\n    /**\r\n     * Removes an item from the list property.\r\n     * @param id\r\n     *  The property's id.\r\n     */\r\n    public deleteItem(id: string) {\r\n        this.value.delete(id);\r\n    }\r\n\r\n    /**\r\n     * Returns the property as a string.\r\n     * @returns\r\n     *  The property as a string.\r\n     */\r\n    public toString(): string {\r\n        return [...this.value.values()].map(v => v.toString()).join(\", \");\r\n    }\r\n\r\n}\r\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./ContextMenuListing.vue?vue&type=style&index=0&id=431fe6dc&scoped=true&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./Tab.vue?vue&type=style&index=0&id=450513ef&scoped=true&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./EditorTabs.vue?vue&type=style&index=0&id=3fa6d5c0&scoped=true&lang=css\"","import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveDynamicComponent as _resolveDynamicComponent, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-4e98de71\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"object-field-contents-input\" }\nconst _hoisted_2 = { class: \"field-name\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.property.value, ([key, value]) => {\n      return (_openBlock(), _createElementBlock(\"div\", {\n        class: \"field-item\",\n        key: key\n      }, [\n        _createElementVNode(\"p\", _hoisted_2, _toDisplayString(_ctx.titleCase(key)), 1),\n        (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.getField(value.type)), {\n          property: value,\n          align: _ctx.align,\n          onChange: _ctx.onChange\n        }, null, 40, [\"property\", \"align\", \"onChange\"]))\n      ]))\n    }), 128))\n  ]))\n}","\r\n// Dependencies\r\nimport { defineAsyncComponent, defineComponent, PropType } from \"vue\";\r\nimport { DictionaryProperty, Property, PropertyType } from \"@/assets/scripts/BlockDiagram\";\r\n\r\nconst TextField = defineAsyncComponent(() => import(\"./TextField.vue\"));\r\nconst ListField = defineAsyncComponent(() => import(\"./ListField.vue\"));\r\nconst DictionaryField = defineAsyncComponent(() => import(\"./DictionaryField.vue\")) as any;\r\n\r\nexport default defineComponent({\r\n  name: \"DictionaryFieldContents\",\r\n  props: {\r\n    property: {\r\n      type: Object as PropType<DictionaryProperty>,\r\n      required: true\r\n    },\r\n    align: {\r\n      type: String,\r\n      default: \"left\"\r\n    }\r\n  },\r\n  methods: {\r\n   \r\n    /**\r\n     * Returns a field component of a specific type.\r\n     * @param type\r\n     *  The type of field component.\r\n     * @returns\r\n     *  The field component.\r\n     */\r\n    getField(type: PropertyType): string | undefined {\r\n      switch(type) {\r\n        case PropertyType.String:\r\n          return \"TextField\";\r\n        case PropertyType.List:\r\n          return \"ListField\";\r\n        case PropertyType.Dictionary:\r\n          return \"DictionaryField\";\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Field change behavior.\r\n     * @param property\r\n     *  The field's property.\r\n     * @param value\r\n     *  The field's new value.\r\n     */\r\n    onChange(property: Property, value: any): void {\r\n      this.$emit(\"change\", property, value);\r\n    },\r\n\r\n    /**\r\n     * Capitalizes the first letter in a string.\r\n     * @param text\r\n     *  The string to capitalize.\r\n     * @returns\r\n     *  The capitalized string.\r\n     */\r\n    capitalize(text: string): string {\r\n      return `${ text[0].toLocaleUpperCase() }${ text.substring(1) }`\r\n    },\r\n\r\n    /**\r\n     * Casts a string to title case.\r\n     * \r\n     * ex. \"foo_bar\" -> \"Foo Bar\" \r\n     * \r\n     * @param text\r\n     *  The string to cast to title case.\r\n     * @returns\r\n     *  The string cast to title case.\r\n     */\r\n    titleCase(text: string): string {\r\n      return text.split(/\\s+|_/).map(s => this.capitalize(s)).join(\" \");\r\n    }\r\n\r\n  },\r\n  emits: [\"change\"],\r\n  components: { TextField, ListField, DictionaryField }\r\n});\r\n","import { render } from \"./DictionaryFieldContents.vue?vue&type=template&id=4e98de71&scoped=true&ts=true\"\nimport script from \"./DictionaryFieldContents.vue?vue&type=script&lang=ts\"\nexport * from \"./DictionaryFieldContents.vue?vue&type=script&lang=ts\"\n\nimport \"./DictionaryFieldContents.vue?vue&type=style&index=0&id=4e98de71&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\mcarenzo\\\\Desktop\\\\attack-flow-private\\\\src\\\\attack_flow_builder\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4e98de71\"]])\n\nexport default __exports__","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./DictionaryFieldContents.vue?vue&type=style&index=0&id=4e98de71&scoped=true&lang=css\"","import { RasterCache } from \"../../Diagram/RasterCache\";\r\nimport { ViewportRegion } from \"../../Diagram\";\r\nimport { DiagramObjectModel } from \"../../DiagramModelTypes\";\r\nimport {\r\n    DiagramAnchorView,\r\n    DiagramAnchorableView\r\n} from \"./BaseViews\";\r\nimport { \r\n    AlignmentMask,\r\n    CursorMask,\r\n    HoverMask,\r\n    InheritAlignmentMask,\r\n    PositionSetByUserMask,\r\n    PriorityMask,\r\n    SelectMask\r\n} from \"../../Attributes\";\r\n\r\nexport abstract class DiagramObjectView {\r\n\r\n    /**\r\n     * The underlying model.\r\n     */\r\n    public el: DiagramObjectModel;\r\n\r\n    /**\r\n     * The object's (central) x coordinate.\r\n     */\r\n    public x: number;\r\n\r\n    /**\r\n     * The object's (central) y coordinate.\r\n     */\r\n    public y: number;\r\n\r\n    /**\r\n     * The object's parent.\r\n     */\r\n    public parent: DiagramObjectView | undefined;\r\n\r\n    /**\r\n     * The object's children.\r\n     */\r\n    public children: DiagramObjectView[]\r\n\r\n    /**\r\n     * The view's raster cache.\r\n     */\r\n    protected _rasterCache: RasterCache; \r\n\r\n\r\n    /**\r\n     * Creates a new {@link DiagramObjectView}.\r\n     * @param el\r\n     *  The underlying model.\r\n     * @param rasterCache\r\n     *  The view's raster cache.\r\n     */\r\n    constructor(el: DiagramObjectModel, rasterCache: RasterCache) {\r\n        this.el = el;\r\n        this.x = el.boundingBox.xMid;\r\n        this.y = el.boundingBox.yMid;\r\n        this.parent = undefined;\r\n        this.children = [];\r\n        this._rasterCache = rasterCache;\r\n    }\r\n\r\n    \r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Structure  /////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Returns this object and all child objects (in a breadth-first fashion).\r\n     * @param match\r\n     *  A predicate which is applied to each object. If the predicate returns\r\n     *  false, the object is not included in the enumeration.\r\n     * @returns\r\n     *  This object and all child objects.\r\n     */\r\n     public *getSubtree(\r\n        match?: (o: DiagramObjectView) => boolean\r\n     ): IterableIterator<DiagramObjectView> {\r\n        let visited = new Set<string>([this.el.id]);\r\n        let queue: DiagramObjectView[] = [this];\r\n        while(queue.length != 0) {\r\n            let obj = queue.shift()!;\r\n            // Yield object\r\n            if(!match || match(obj)) {\r\n                yield obj;\r\n            }\r\n            // Don't traverse anchors\r\n            if(obj instanceof DiagramAnchorView) {\r\n                continue;\r\n            }\r\n            // Enumerate children\r\n            for(let child of obj.children){\r\n                if(!visited.has(child.el.id)) {\r\n                    visited.add(child.el.id);\r\n                    queue.push(child);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  2. Movement  //////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Moves the object to a specific coordinate.\r\n     * @param x\r\n     *  The x coordinate.\r\n     * @param y\r\n     *  The y coordinate.\r\n     * @param attrs\r\n     *  If specified, this set of attributes will override the object's\r\n     *  underlying attributes.\r\n     */\r\n     public moveTo(x: number, y: number, attrs?: number) {\r\n        this.moveBy(\r\n            x - this.x,\r\n            y - this.y\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Moves the object relative to its current position. \r\n     * @param dx\r\n     *  The change in x.\r\n     * @param dy \r\n     *  The change in y.\r\n     * @param attrs\r\n     *  If specified, this set of attributes will override the object's\r\n     *  underlying attributes.\r\n     */\r\n    public moveBy(dx: number, dy: number, attrs?: number) {\r\n        // Move self\r\n        this.x += dx;\r\n        this.y += dy;\r\n        // Move non-anchored children\r\n        for(let obj of this.children) {\r\n            if(obj instanceof DiagramAnchorableView && obj.el.isAttached()) {\r\n                continue;\r\n            }\r\n            obj.moveBy(dx, dy);\r\n        }\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  3. Render  ////////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Renders the object to a context.\r\n     * @param ctx\r\n     *  The context to render to.\r\n     * @param vr\r\n     *  The context's viewport.\r\n     * @param dsx\r\n     *  The drop shadow's x-offset.\r\n     *  (Default: 0)\r\n     * @param dsy\r\n     *  The drop shadow's y-offset.\r\n     *  (Default: 0)\r\n     * @param attrs\r\n     *  If specified, this set of attributes will override the object's\r\n     *  underlying attributes.\r\n     */\r\n    public renderTo(\r\n        ctx: CanvasRenderingContext2D, vr: ViewportRegion,\r\n        dsx: number = 0, dsy: number = 0, attrs?: number\r\n    ) { \r\n        if(!this.isVisible(vr)) {\r\n            return;\r\n        }\r\n        for(let obj of this.children) {\r\n            obj.renderTo(ctx, vr, dsx, dsy);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Renders the object's debug information to a context.\r\n     * @param ctx\r\n     *  The context to render to.\r\n     * @param vr\r\n     *  The context's viewport.\r\n     */\r\n    public renderDebugTo(ctx: CanvasRenderingContext2D, vr: ViewportRegion) {\r\n        if(!this.isVisible(vr)) {\r\n            return;\r\n        }\r\n        // Configure canvas\r\n        for(let obj of this.children) {\r\n            obj.renderDebugTo(ctx, vr);\r\n        }\r\n        // Draw bounding box\r\n        let bb = this.el.boundingBox;\r\n        ctx.beginPath();\r\n        ctx.moveTo(bb.xMin + 0.5, bb.yMin + 0.5);\r\n        ctx.lineTo(bb.xMax - 0.5, bb.yMin + 0.5);\r\n        ctx.lineTo(bb.xMax - 0.5, bb.yMax - 0.5);\r\n        ctx.lineTo(bb.xMin + 0.5, bb.yMax - 0.5);\r\n        ctx.lineTo(bb.xMin + 0.5, bb.yMin + 0.5);\r\n        ctx.lineTo(bb.xMax - 0.5, bb.yMax - 0.5);\r\n        ctx.stroke();\r\n    }\r\n\r\n    /**\r\n     * Tests if the object overlaps the given viewport.\r\n     * @param viewport\r\n     *  The viewport.\r\n     * @returns\r\n     *  True if the object overlaps the viewport, false otherwise.\r\n     */\r\n    public isVisible(viewport: ViewportRegion) {\r\n        let { xMin, yMin, xMax, yMax } = this.el.boundingBox;\r\n        return (viewport.xMin <= xMax && viewport.xMax >= xMin) && \r\n               (viewport.yMin <= yMax && viewport.yMax >= yMin)\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  4. Model Synchronization  /////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Synchronizes the view with the underlying model.\r\n     * @returns\r\n     *  The view.\r\n     */\r\n    public updateView(): DiagramObjectView {\r\n        // Update children\r\n        let children = new Array<DiagramObjectView>(this.el.children.length);\r\n        for(let i = 0; i < children.length; i++) {\r\n            let id = this.el.children[i].id;\r\n            let obj = this.children.find(o => o.el.id === id);\r\n            // Update child\r\n            children[i] = obj ?? this.el.children[i].createView(this._rasterCache);\r\n            // Update child's parent\r\n            children[i].parent = this;\r\n            // Update child's view\r\n            children[i].updateView();\r\n        }\r\n        this.children = children;\r\n        // Update position\r\n        this.x = this.el.boundingBox.xMid;\r\n        this.y = this.el.boundingBox.yMid;\r\n        // Return\r\n        return this;\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  5. Attribute Faking  //////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Returns the object's attributes with the alignment altered.\r\n     * @param alignment\r\n     *  The alignment to use.\r\n     * @returns\r\n     *  The altered attributes.\r\n     */\r\n    public fakeAlignment(alignment: number): number {\r\n        return (this.el.attrs & ~AlignmentMask) | alignment;\r\n    }\r\n\r\n    /**\r\n     * Returns the object's attributes with the cursor altered.\r\n     * @param cursor\r\n     *  The cursor to use.\r\n     * @returns\r\n     *  The altered attributes.\r\n     */\r\n    public fakeCursor(cursor: number) {\r\n       return (this.el.attrs & ~CursorMask) | cursor;\r\n    }\r\n\r\n    /**\r\n     * Returns the object's attributes with the hover state altered.\r\n     * @param hover\r\n     *  The hover state to use.\r\n     * @returns\r\n     *  The altered attributes.\r\n     */\r\n    public fakeHover(hover: number) {\r\n        return (this.el.attrs & ~HoverMask) | hover;\r\n    }\r\n\r\n    /**\r\n     * Returns the object's attributes with the 'inherit alignment' attribute\r\n     * altered.\r\n     * @param inherit\r\n     *  The attribute to use.\r\n     * @returns\r\n     *  The altered attributes.\r\n     */\r\n    public fakeInheritAlignment(inherit: number) {\r\n        return (this.el.attrs & ~InheritAlignmentMask) | inherit;\r\n    }\r\n\r\n    /**\r\n     * Returns the object's attributes with the 'position set by user'\r\n     * attribute altered.\r\n     * @param positionSetByUser\r\n     *  The attribute to use.\r\n     * @returns\r\n     *  The altered attributes.\r\n     */\r\n    public fakePositionSetByUser(positionSetByUser: number) {\r\n        return (this.el.attrs & ~PositionSetByUserMask) | positionSetByUser;\r\n    }\r\n\r\n    /**\r\n     * Returns the object's attributes with the selection priority altered.\r\n     * @param priority\r\n     *  The selection priority to use.\r\n     * @returns\r\n     *  The altered attributes.\r\n     */\r\n    public fakePriority(priority: number) {\r\n        return (this.el.attrs & ~PriorityMask) | priority;\r\n    }\r\n\r\n    /**\r\n     * Returns the object's attributes with the selection state altered.\r\n     * @param select\r\n     *  The selection state to use.\r\n     * @returns\r\n     *  The altered attributes.\r\n     */\r\n    public fakeSelect(select: number) {\r\n        return (this.el.attrs & ~SelectMask) | select;\r\n    }\r\n\r\n}\r\n","import { RasterCache } from \"../../Diagram/RasterCache\";\r\nimport { DiagramAnchorModel } from \"../../DiagramModelTypes\";\r\nimport {\r\n    DiagramAnchorableView,\r\n    DiagramObjectView\r\n} from \"./BaseViews\";\r\n\r\nexport abstract class DiagramAnchorView extends DiagramObjectView {\r\n\r\n    /**\r\n     * The underlying model.\r\n     */\r\n    public override el: DiagramAnchorModel;\r\n\r\n    /**\r\n     * The anchor's children.\r\n     */\r\n    public override children: DiagramAnchorableView[];\r\n\r\n\r\n    /**\r\n     * Creates a new {@link DiagramAnchorView}.\r\n     * @param el\r\n     *  The underlying model.\r\n     * @param rasterCache\r\n     *  The view's raster cache.\r\n     */\r\n    constructor(el: DiagramAnchorModel, rasterCache: RasterCache) {\r\n        super(el, rasterCache);\r\n        this.children = [];\r\n        this.el = el;\r\n    }\r\n\r\n    \r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Movement  //////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n    \r\n    /**\r\n     * Moves the object relative to its current position. \r\n     * @param dx\r\n     *  The change in x.\r\n     * @param dy \r\n     *  The change in y.\r\n     * @param attrs\r\n     *  If specified, this set of attributes will override the object's\r\n     *  underlying attributes.\r\n     */\r\n    public override moveBy(dx: number, dy: number, attrs?: number) {\r\n        // Move self\r\n        this.x += dx;\r\n        this.y += dy;\r\n        // Move anchored children\r\n        for(let obj of this.children) {\r\n            if(!obj.el.isAttached(this.el)) {\r\n                console.warn(`'${ obj.el.id }' incorrectly attached to anchor.`);\r\n                continue;\r\n            }\r\n            obj.moveTo(this.x, this.y);\r\n        }\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  2. Model Synchronization  /////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Synchronizes the view with the underlying model.\r\n     * \r\n     * NOTE:\r\n     * Anchors simply reference other objects in the tree. Anchors cannot spawn\r\n     * view objects on behalf of their children. Instead, the root of the tree\r\n     * will ensure that each anchor receives a reference to their children. Due\r\n     * to this limitation, anchor linkage cannot be updated independently.\r\n     * \r\n     * @returns\r\n     *  The view.\r\n     */\r\n    public override updateView(): DiagramAnchorView {\r\n        // Update position\r\n        this.x = this.el.boundingBox.xMid;\r\n        this.y = this.el.boundingBox.yMid;\r\n        return this;\r\n    }\r\n\r\n}\r\n","import { RasterCache } from \"../../Diagram/RasterCache\";\r\nimport { DiagramAnchorableModel } from \"../../DiagramModelTypes\"\r\nimport { \r\n    DiagramAnchorView,\r\n    DiagramObjectView\r\n} from \"./BaseViews\";\r\n\r\nexport abstract class DiagramAnchorableView extends DiagramObjectView {\r\n\r\n    /**\r\n     * The underlying model.\r\n     */\r\n    public override el: DiagramAnchorableModel;\r\n\r\n    /**\r\n     * The anchorable's anchor.\r\n     */\r\n    public anchor: DiagramAnchorView | undefined;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link DiagramAnchorableView}.\r\n     * @param el\r\n     *  The underlying model.\r\n     * @param rasterCache\r\n     *  The view's raster cache.\r\n     */\r\n    constructor(el: DiagramAnchorableModel, rasterCache: RasterCache) {\r\n        super(el, rasterCache);\r\n        this.el = el;\r\n    }\r\n\r\n}\r\n","import { RasterCache } from \"../../Diagram/RasterCache\";\r\nimport { DiagramLineEndingModel } from \"../../DiagramModelTypes\";\r\nimport {\r\n    DiagramLineView,\r\n    DiagramAnchorableView\r\n} from \"./BaseViews\";\r\n\r\nexport abstract class DiagramLineEndingView extends DiagramAnchorableView {\r\n\r\n    /**\r\n     * The underlying model.\r\n     */\r\n    public override el: DiagramLineEndingModel;\r\n\r\n    /**\r\n     * The line ending's parent.\r\n     */\r\n    public override parent: DiagramLineView | undefined;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link DiagramLineEndingView}.\r\n     * @param el\r\n     *  The underlying model.\r\n     * @param rasterCache\r\n     *  The view's raster cache.\r\n     */\r\n    constructor(el: DiagramLineEndingModel, rasterCache: RasterCache) {\r\n        super(el, rasterCache);\r\n        this.el = el;\r\n    }\r\n\r\n    \r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Movement  //////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n    \r\n    /**\r\n     * Moves the object relative to its current position. \r\n     * @param dx\r\n     *  The change in x.\r\n     * @param dy \r\n     *  The change in y.\r\n     * @param attrs\r\n     *  If specified, this set of attributes will override the object's\r\n     *  underlying attributes.\r\n     * @param useSuper\r\n     *  If true, the object will use its inherited `moveBy()` function.\r\n     */\r\n    public override moveBy(dx: number, dy: number, attrs?: number, useSuper: boolean = false): void {\r\n        if(useSuper) {\r\n            super.moveBy(dx, dy, attrs);\r\n        } else {\r\n            this.parent?.moveChild(this.el.id, dx, dy, attrs);\r\n        }\r\n    }\r\n\r\n}\r\n","import { RasterCache } from \"../../Diagram/RasterCache\";\r\nimport { DiagramLineHandleModel } from \"../../DiagramModelTypes\";\r\nimport {\r\n    DiagramLineView,\r\n    DiagramObjectView\r\n} from \"./BaseViews\";\r\n\r\nexport abstract class DiagramLineHandleView extends DiagramObjectView {\r\n\r\n    /**\r\n     * The underlying model.\r\n     */\r\n    public override el: DiagramLineHandleModel;\r\n\r\n    /**\r\n     * The line handle's parent.\r\n     */\r\n    public override parent: DiagramLineView | undefined;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link DiagramLineHandleView}.\r\n     * @param el\r\n     *  The underlying model.\r\n     * @param rasterCache\r\n     *  The view's raster cache.\r\n     */\r\n    constructor(el: DiagramLineHandleModel, rasterCache: RasterCache) {\r\n        super(el, rasterCache);\r\n        this.el = el;\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Movement  //////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Moves the object relative to its current position. \r\n     * @param dx\r\n     *  The change in x.\r\n     * @param dy \r\n     *  The change in y.\r\n     * @param attrs\r\n     *  If specified, this set of attributes will override the object's\r\n     *  underlying attributes.\r\n     * @param useSuper\r\n     *  If true, the object will use its inherited `moveBy()` function.\r\n     */\r\n    public override moveBy(dx: number, dy: number, attrs?: number, useSuper: boolean = false): void {\r\n        if(useSuper) {\r\n            super.moveBy(dx, dy, attrs);\r\n        } else {\r\n            this.parent?.moveChild(this.el.id, dx, dy, attrs);\r\n        }\r\n    }\r\n\r\n}\r\n","import { RasterCache } from \"../../Diagram/RasterCache\";\r\nimport { DiagramLineModel } from \"../../DiagramModelTypes\";\r\nimport {\r\n    DiagramObjectView,\r\n    DiagramLineEndingView,\r\n    DiagramLineHandleView\r\n} from \"./BaseViews\";\r\n\r\nexport abstract class DiagramLineView extends DiagramObjectView {\r\n\r\n    /**\r\n     * The underlying model.\r\n     */\r\n    public override el: DiagramLineModel;\r\n\r\n    /**\r\n     * The line's children.\r\n     */\r\n    public override children: DiagramLineObjectView[];\r\n\r\n    /**\r\n     * The line's source ending.\r\n     */\r\n    public get srcEnding(): DiagramLineEndingView {\r\n        return this.children.at(0) as DiagramLineEndingView;\r\n    }\r\n\r\n    /**\r\n     * The line's target ending.\r\n     */\r\n    public get trgEnding(): DiagramLineEndingView {\r\n        return this.children.at(-1) as DiagramLineEndingView;\r\n    }\r\n\r\n    \r\n    /**\r\n     * Creates a new {@link DiagramLineView}.\r\n     * @param el\r\n     *  The underlying model.\r\n     * @param rasterCache\r\n     *  The view's raster cache.\r\n     */\r\n    constructor(el: DiagramLineModel, rasterCache: RasterCache) {\r\n        super(el, rasterCache);\r\n        this.el = el;\r\n        this.children = [];\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Movement  //////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n    \r\n    /**\r\n     * Moves one of the line's children relative to its current position. \r\n     * @param id\r\n     *  The id of the child.\r\n     * @param dx\r\n     *  The change in x.\r\n     * @param dy\r\n     *  The change in y.\r\n     * @param attrs\r\n     *  If specified, this set of attributes will override the object's\r\n     *  underlying attributes.\r\n     */\r\n    public abstract moveChild(id: string, dx: number, dy: number, attrs?: number): void;\r\n\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  Internal Types  ///////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\ntype DiagramLineObjectView \r\n    = DiagramLineEndingView \r\n    | DiagramLineHandleView;\r\n","import { RasterCache } from \"../../Diagram/RasterCache\";\r\nimport { ViewportRegion } from \"../../Diagram\";\r\nimport { DiagramRootModel } from \"../../DiagramModelTypes\";\r\nimport {\r\n    DiagramAnchorView,\r\n    DiagramObjectView\r\n} from \"./BaseViews\";\r\n\r\nexport abstract class DiagramRootView extends DiagramObjectView {\r\n\r\n    /**\r\n     * The underlying model.\r\n     */\r\n    public override el: DiagramRootModel;\r\n\r\n    /**\r\n     * The root's internal object cache.\r\n     */\r\n    private _objectCache: Map<string, DiagramObjectView>;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link DiagramRootView}.\r\n     * @param el\r\n     *  The underlying model.\r\n     * @param rasterCache\r\n     *  The view's raster cache.\r\n     */\r\n    constructor(el: DiagramRootModel, rasterCache: RasterCache) {\r\n        super(el, rasterCache);\r\n        this.el = el;\r\n        this._objectCache = new Map();\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Render  ////////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Renders the object's debug information to a context.\r\n     * @param ctx\r\n     *  The context to render to.\r\n     * @param vr\r\n     *  The context's viewport.\r\n     */\r\n    public override renderDebugTo(ctx: CanvasRenderingContext2D, vr: ViewportRegion) {\r\n        ctx.save();\r\n        ctx.lineWidth = 1\r\n        ctx.fillStyle = \"#00ff00\";\r\n        ctx.strokeStyle = \"#ffffff\";\r\n        ctx.setLineDash([2, 2]);\r\n        super.renderDebugTo(ctx, vr);\r\n        ctx.restore();\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  2. Model Synchronization  /////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Synchronizes the view with the underlying model.\r\n     * @returns\r\n     *  The view.\r\n     */\r\n    public override updateView(): DiagramRootView {\r\n        // Update root\r\n        super.updateView();\r\n        // Update cache\r\n        this._objectCache.clear();\r\n        for(let obj of this.getSubtree()) {\r\n            this._objectCache.set(obj.el.id, obj);\r\n        }\r\n        // Update anchors\r\n        for(let obj of this.el.anchorCache) {\r\n            let anchor = this.lookup<DiagramAnchorView>(obj.id)!;\r\n            anchor.children = new Array(obj.children.length);\r\n            for(let i = 0; i < anchor.children.length; i++) {\r\n                let child = obj.children[i]; \r\n                // Add object to anchor\r\n                anchor.children[i] = this.lookup(child.id)!;\r\n                // Add anchor to object\r\n                anchor.children[i].anchor = anchor;\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    \r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  3. Object Lookup  /////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Returns an object from the diagram.\r\n     * @param id\r\n     *  The id of the object.\r\n     * @returns\r\n     *  The object or `undefined` if no object with that id exists.\r\n     */\r\n    public lookup<T extends DiagramObjectView>(id: string): T | undefined {\r\n        return this._objectCache.get(id) as T;\r\n    }\r\n\r\n}\r\n","import { RasterCache } from \"../Diagram/RasterCache\";\r\nimport { ViewportRegion } from \"../Diagram\";\r\nimport { LineEndingPointModel } from \"../DiagramModelTypes\";\r\nimport { DiagramLineEndingView } from \"./BaseTypes/BaseViews\";\r\n\r\nexport class LineEndingPointView extends DiagramLineEndingView {\r\n    \r\n    /**\r\n     * The underlying model.\r\n     */\r\n    public override el: LineEndingPointModel;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link LineEndingPointView}.\r\n     * @param el\r\n     *  The underlying model.\r\n     * @param rasterCache\r\n     *  The view's raster cache.\r\n     */\r\n    constructor(el: LineEndingPointModel, rasterCache: RasterCache) {\r\n        super(el, rasterCache);\r\n        this.el = el;\r\n    }\r\n\r\n    \r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Render  ////////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Renders the object to a context.\r\n     * @param ctx\r\n     *  The context to render to.\r\n     * @param vr\r\n     *  The context's viewport.\r\n     * @param dsx\r\n     *  The drop shadow's x-offset.\r\n     *  (Default: 0)\r\n     * @param dsy\r\n     *  The drop shadow's y-offset.\r\n     *  (Default: 0)\r\n     * @param attrs\r\n     *  If specified, these attributes will override the object's underlying\r\n     *  attributes.\r\n     */\r\n    public override renderTo(\r\n        ctx: CanvasRenderingContext2D, vr: ViewportRegion,\r\n        dsx: number = 0, dsy: number = 0, attrs?: number\r\n    ) { \r\n        \r\n        // Init\r\n        let { \r\n            radius,\r\n            fill_color,\r\n            stroke_color,\r\n            stroke_width\r\n        } = this.el.style;\r\n        \r\n        // Configure canvas\r\n        ctx.fillStyle = fill_color;\r\n        ctx.lineWidth = stroke_width;\r\n        ctx.strokeStyle = stroke_color;\r\n\r\n        // Draw ending\r\n        ctx.beginPath();\r\n        ctx.arc(this.x, this.y, radius, 0, 2 * Math.PI);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n        ctx.stroke();\r\n\r\n    }\r\n\r\n}\r\n","import { RasterCache } from \"../Diagram/RasterCache\";\r\nimport { ViewportRegion } from \"../Diagram\";\r\nimport { LineHandlePointModel } from \"../DiagramModelTypes\";\r\nimport { DiagramLineHandleView } from \"./BaseTypes/BaseViews\";\r\n\r\nexport class LineHandlePointView extends DiagramLineHandleView {\r\n    \r\n    /**\r\n     * The underlying model.\r\n     */\r\n    public override el: LineHandlePointModel;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link LineHandlePointView}.\r\n     * @param el\r\n     *  The underlying model.\r\n     * @param rasterCache\r\n     *  The view's raster cache.\r\n     */\r\n    constructor(el: LineHandlePointModel, rasterCache: RasterCache) {\r\n        super(el, rasterCache);\r\n        this.el = el;\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Render  ////////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    \r\n    \r\n    /**\r\n     * Renders the object to a context.\r\n     * @param ctx\r\n     *  The context to render to.\r\n     * @param vr\r\n     *  The context's viewport.\r\n     * @param dsx\r\n     *  The drop shadow's x-offset.\r\n     *  (Default: 0)\r\n     * @param dsy\r\n     *  The drop shadow's y-offset.\r\n     *  (Default: 0)\r\n     * @param attrs\r\n     *  If specified, these attributes will override the object's underlying\r\n     *  attributes.\r\n     */\r\n    public override renderTo(\r\n        ctx: CanvasRenderingContext2D, vr: ViewportRegion,\r\n        dsx: number = 0, dsy: number = 0, attrs?: number\r\n    ) { \r\n        \r\n        // Init\r\n        let { \r\n            radius,\r\n            fill_color,\r\n            stroke_color,\r\n            stroke_width\r\n        } = this.el.style;\r\n        \r\n        // Configure canvas\r\n        ctx.fillStyle = fill_color;\r\n        ctx.lineWidth = stroke_width;\r\n        ctx.strokeStyle = stroke_color;\r\n\r\n        // Stroke width offset\r\n        let wo = stroke_width % 2 ? 0.5 : 0;\r\n\r\n        // Draw handle\r\n        ctx.beginPath();\r\n        ctx.arc(this.x, this.y, radius + wo, 0, 2 * Math.PI);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n        ctx.stroke();\r\n    \r\n    }\r\n\r\n}\r\n","import { drawArrowHead } from \"../Utilities\";\r\nimport { RasterCache } from \"../Diagram/RasterCache\";\r\nimport { ViewportRegion } from \"../Diagram\";\r\nimport { LineHorizontalElbowModel } from \"../DiagramModelTypes\";\r\nimport { \r\n    DiagramLineEndingView,\r\n    DiagramLineView\r\n} from \".\";\r\nimport { Select, SelectMask } from \"../Attributes\";\r\n\r\nexport class LineHorizontalElbowView extends DiagramLineView {\r\n    \r\n    /**\r\n     * The underlying model.\r\n     */\r\n    public override el: LineHorizontalElbowModel;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link LineHorizontalElbowView}.\r\n     * @param el\r\n     *  The underlying model.\r\n     * @param rasterCache\r\n     *  The view's raster cache.\r\n     */\r\n    constructor(el: LineHorizontalElbowModel, rasterCache: RasterCache) {\r\n        super(el, rasterCache);\r\n        this.el = el;\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Movement  //////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Moves one of the line's children relative to its current position. \r\n     * @param id\r\n     *  The id of the child.\r\n     * @param dx\r\n     *  The change in x.\r\n     * @param dy\r\n     *  The change in y.\r\n     * @param attrs\r\n     *  If specified, this set of attributes will override the object's\r\n     *  underlying attributes.\r\n     */\r\n    public moveChild(id: string, dx: number, dy: number, attrs?: number): void {\r\n        // Select child\r\n        let obj = this.children.find(o => o.el.id === id)!;\r\n        if(!obj)\r\n            return;\r\n        // Move ending\r\n        if(obj instanceof DiagramLineEndingView) {\r\n            obj.moveBy(dx, dy, undefined, true);\r\n        }\r\n        let [e1, h1, e2] = this.children;\r\n        // Move handle\r\n        let hdx = ((e1.x + e2.x) / 2) - h1.x,\r\n            hdy = ((e1.y + e2.y) / 2) - h1.y;\r\n        // attrs must ONLY override the child being moved, we \r\n        // can't override h1 unless we're explicitly moving h1\r\n        if(!h1.el.hasUserSetPosition(obj === h1 ? attrs : undefined)) {\r\n            h1.moveBy(hdx, 0, undefined, true);\r\n        } else if(obj === h1) {\r\n            h1.moveBy(dx, 0, undefined, true);\r\n        }\r\n        h1.moveBy(0, hdy, undefined, true);\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  2. Render  ////////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Renders the object to a context.\r\n     * @param ctx\r\n     *  The context to render to.\r\n     * @param vr\r\n     *  The context's viewport.\r\n     * @param dsx\r\n     *  The drop shadow's x-offset.\r\n     *  (Default: 0)\r\n     * @param dsy\r\n     *  The drop shadow's y-offset.\r\n     *  (Default: 0)\r\n     * @param attrs\r\n     *  If specified, these attributes will override the object's underlying\r\n     *  attributes.\r\n     */\r\n    public override renderTo(\r\n        ctx: CanvasRenderingContext2D, vr: ViewportRegion,\r\n        dsx: number = 0, dsy: number = 0, attrs?: number\r\n    ) { \r\n        if(!this.isVisible(vr)) {\r\n            return;\r\n        }\r\n\r\n        // Init\r\n        let {\r\n            children: c\r\n        } = this;        \r\n        let {\r\n            cap_size: cs,\r\n            width,\r\n            color,\r\n            select_colors: sc\r\n        } = this.el.style;\r\n\r\n        // Configure line\r\n        ctx.lineWidth = width;\r\n        let lineColor;\r\n        switch(this.el.attrs & SelectMask) {            \r\n            case Select.Single:\r\n                lineColor = sc.solo_color;\r\n                break;\r\n            case Select.Multi:\r\n                lineColor = sc.many_color;\r\n                break;\r\n            case Select.Unselected:\r\n            default:\r\n                lineColor = color;\r\n                break;\r\n        }\r\n        ctx.fillStyle = lineColor;\r\n        ctx.strokeStyle = lineColor;\r\n\r\n        // Line width offset\r\n        let wo = width % 2 ? 0.5 : 0;\r\n        // End offset\r\n        let eo = Math.sign(c[2].x - c[1].x) * (cs >> 1);\r\n        \r\n        // Draw line\r\n        ctx.beginPath();\r\n        ctx.moveTo(c[0].x,      c[0].y + wo);\r\n        ctx.lineTo(c[1].x + wo, c[0].y + wo);\r\n        ctx.lineTo(c[1].x + wo, c[2].y + wo);\r\n        ctx.lineTo(c[2].x - eo, c[2].y + wo);\r\n        ctx.stroke();\r\n        \r\n        // Draw arrow head\r\n        drawArrowHead(\r\n            ctx, \r\n            c[1].x, c[2].y + wo, \r\n            c[2].x, c[2].y + wo, \r\n            cs\r\n        );\r\n        ctx.fill();\r\n\r\n        // Draw handles and ends\r\n        if(this.el.isSelected(attrs)) {\r\n            super.renderTo(ctx, vr, dsx, dsy);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Renders the object's debug information to a context.\r\n     * @param ctx\r\n     *  The context to render to.\r\n     * @param vr\r\n     *  The context's viewport.\r\n     */\r\n    public override renderDebugTo(ctx: CanvasRenderingContext2D, vr: ViewportRegion) {\r\n        if(!this.isVisible(vr)) {\r\n            return;\r\n        }\r\n        let radius = 2;\r\n        let p = Math.PI * 2;\r\n        // Draw hitbox points\r\n        ctx.beginPath();\r\n        for(let hitbox of this.el.hitboxes) {\r\n            for(let i = 0; i < hitbox.length; i += 2) {\r\n                ctx.moveTo(hitbox[i] + radius, hitbox[i + 1]);\r\n                ctx.arc(hitbox[i], hitbox[i + 1], radius, 0, p);\r\n            }\r\n        }\r\n        ctx.fill();\r\n        // Draw bounding box\r\n        super.renderDebugTo(ctx, vr);\r\n    }\r\n\r\n}\r\n","import { drawArrowHead } from \"../Utilities\";\r\nimport { RasterCache } from \"../Diagram/RasterCache\";\r\nimport { ViewportRegion } from \"../Diagram\";\r\nimport { LineVerticalElbowModel } from \"../DiagramModelTypes\";\r\nimport { \r\n    DiagramLineEndingView,\r\n    DiagramLineView\r\n} from \".\";\r\nimport { Select, SelectMask } from \"../Attributes\";\r\n\r\nexport class LineVerticalElbowView extends DiagramLineView {\r\n    \r\n    /**\r\n     * The underlying model.\r\n     */\r\n    public override el: LineVerticalElbowModel;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link LineVerticalElbowView}.\r\n     * @param el\r\n     *  The underlying model.\r\n     * @param rasterCache\r\n     *  The view's raster cache.\r\n     */\r\n    constructor(el: LineVerticalElbowModel, rasterCache: RasterCache) {\r\n        super(el, rasterCache);\r\n        this.el = el;\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Movement  //////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Moves one of the line's children relative to its current position. \r\n     * @param id\r\n     *  The id of the child.\r\n     * @param dx\r\n     *  The change in x.\r\n     * @param dy\r\n     *  The change in y.\r\n     * @param attrs\r\n     *  If specified, this set of attributes will override the object's\r\n     *  underlying attributes.\r\n     */\r\n    public moveChild(id: string, dx: number, dy: number, attrs?: number): void {\r\n        // Select child\r\n        let obj = this.children.find(o => o.el.id === id)!;\r\n        if(!obj)\r\n            return;\r\n        // Move ending\r\n        if(obj instanceof DiagramLineEndingView) {\r\n            obj.moveBy(dx, dy, undefined, true);\r\n        }\r\n        let [e1, h1, e2] = this.children;\r\n        // Move handle\r\n        let hdx = ((e1.x + e2.x) / 2) - h1.x,\r\n            hdy = ((e1.y + e2.y) / 2) - h1.y;\r\n        // attrs must ONLY override the child being moved, we \r\n        // can't override h1 unless we're explicitly moving h1\r\n        if(!h1.el.hasUserSetPosition(obj === h1 ? attrs : undefined)) {\r\n            h1.moveBy(0, hdy, undefined, true);\r\n        } else if(obj === h1) {\r\n            h1.moveBy(0, dy, undefined, true);\r\n        }\r\n        h1.moveBy(hdx, 0, undefined, true);\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  2. Render  ////////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Renders the object to a context.\r\n     * @param ctx\r\n     *  The context to render to.\r\n     * @param vr\r\n     *  The context's viewport.\r\n     * @param dsx\r\n     *  The drop shadow's x-offset.\r\n     *  (Default: 0)\r\n     * @param dsy\r\n     *  The drop shadow's y-offset.\r\n     *  (Default: 0)\r\n     * @param attrs\r\n     *  If specified, these attributes will override the object's underlying\r\n     *  attributes.\r\n     */\r\n    public override renderTo(\r\n        ctx: CanvasRenderingContext2D, vr: ViewportRegion,\r\n        dsx: number = 0, dsy: number = 0, attrs?: number\r\n    ) { \r\n        if(!this.isVisible(vr)) {\r\n            return;\r\n        }\r\n\r\n        // Init\r\n        let {\r\n            children: c\r\n        } = this;        \r\n        let {\r\n            cap_size: cs,\r\n            width,\r\n            color,\r\n            select_colors: sc\r\n        } = this.el.style;\r\n\r\n        // Configure line\r\n        ctx.lineWidth = width;\r\n        let lineColor;\r\n        switch(this.el.attrs & SelectMask) {            \r\n            case Select.Single:\r\n                lineColor = sc.solo_color;\r\n                break;\r\n            case Select.Multi:\r\n                lineColor = sc.many_color;\r\n                break;\r\n            case Select.Unselected:\r\n            default:\r\n                lineColor = color;\r\n                break;\r\n        }\r\n        ctx.fillStyle = lineColor;\r\n        ctx.strokeStyle = lineColor;\r\n\r\n        // Line width offset\r\n        let wo = width % 2 ? 0.5 : 0;\r\n        // End offset\r\n        let eo = Math.sign(c[1].y - c[2].y) * (cs >> 1);\r\n        \r\n        // Draw line\r\n        ctx.beginPath();\r\n        ctx.moveTo(c[0].x + wo, c[0].y);\r\n        ctx.lineTo(c[0].x + wo, c[1].y + wo);\r\n        ctx.lineTo(c[2].x + wo, c[1].y + wo);\r\n        ctx.lineTo(c[2].x + wo, c[2].y + eo);\r\n        ctx.stroke();\r\n\r\n        // Draw arrow head\r\n        drawArrowHead(\r\n            ctx, \r\n            c[2].x + wo, c[1].y,\r\n            c[2].x + wo, c[2].y,\r\n            cs\r\n        );\r\n        ctx.fill();\r\n\r\n        // Draw handles and ends\r\n        if(this.el.isSelected(attrs)) {\r\n            super.renderTo(ctx, vr, dsx, dsy);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Renders the object's debug information to a context.\r\n     * @param ctx\r\n     *  The context to render to.\r\n     * @param vr\r\n     *  The context's viewport.\r\n     */\r\n    public override renderDebugTo(ctx: CanvasRenderingContext2D, vr: ViewportRegion) {\r\n        if(!this.isVisible(vr)) {\r\n            return;\r\n        }\r\n        let radius = 2;\r\n        let p = Math.PI * 2;\r\n        // Draw hitbox points\r\n        ctx.beginPath();\r\n        for(let hitbox of this.el.hitboxes) {\r\n            for(let i = 0; i < hitbox.length; i += 2) {\r\n                ctx.moveTo(hitbox[i] + radius, hitbox[i + 1]);\r\n                ctx.arc(hitbox[i], hitbox[i + 1], radius, 0, p);\r\n            }\r\n        }\r\n        ctx.fill();\r\n        // Draw bounding box\r\n        super.renderDebugTo(ctx, vr);\r\n    }\r\n\r\n}\r\n","import { RasterCache } from \"../Diagram/RasterCache\";\r\nimport { ViewportRegion } from \"../Diagram\";\r\nimport { AnchorPointModel } from \"../DiagramModelTypes\";\r\nimport { DiagramAnchorView } from \".\";\r\n\r\nexport class AnchorPointView extends DiagramAnchorView {\r\n\r\n    /**\r\n     * The underlying model.\r\n     */\r\n    public override el: AnchorPointModel;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link AnchorPointView}.\r\n     * @param el\r\n     *  The underlying model.\r\n     * @param rasterCache\r\n     *  The view's raster cache.\r\n     */\r\n    constructor(el: AnchorPointModel, rasterCache: RasterCache) {\r\n        super(el, rasterCache);\r\n        this.el = el;\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Render  ////////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Renders the object to a context.\r\n     * @param ctx\r\n     *  The context to render to.\r\n     * @param vr\r\n     *  The context's viewport.\r\n     * @param dsx\r\n     *  The drop shadow's x-offset.\r\n     *  (Default: 0)\r\n     * @param dsy\r\n     *  The drop shadow's y-offset.\r\n     *  (Default: 0)\r\n     * @param attrs\r\n     *  If specified, these attributes will override the object's underlying\r\n     *  attributes.\r\n     */\r\n    public override renderTo(\r\n        ctx: CanvasRenderingContext2D, vr: ViewportRegion,\r\n        dsx: number = 0, dsy: number = 0, attrs?: number\r\n    ) { \r\n        // Only visible when hovered\r\n        if(!this.el.isHovered(attrs))\r\n            return;\r\n        ctx.fillStyle = this.el.style.color;\r\n        ctx.beginPath();\r\n        ctx.arc(this.x, this.y, this.el.radius, 0, 2 * Math.PI);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n\r\n}\r\n","import { drawRect } from \"../Utilities\";\r\nimport { RasterCache } from \"../Diagram/RasterCache\";\r\nimport { ViewportRegion } from \"../Diagram\";\r\nimport { DictionaryBlockModel } from \"../DiagramModelTypes\";\r\nimport { DiagramObjectView } from \".\";\r\nimport { Select, SelectMask } from \"../Attributes\";\r\n\r\nexport class DictionaryBlockView extends DiagramObjectView {\r\n    \r\n    /**\r\n     * The underlying model.\r\n     */\r\n    public override el: DictionaryBlockModel;\r\n\r\n    /**\r\n     * The block's top-left x coordinate.\r\n     */\r\n    public tlx: number;\r\n\r\n    /**\r\n     * The block's top-left y coordinate.\r\n     */\r\n    public tly: number;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link DictionaryBlockView}.\r\n     * @param el\r\n     *  The underlying model.\r\n     * @param rasterCache\r\n     *  The view's raster cache.\r\n     */\r\n    constructor(el: DictionaryBlockModel, rasterCache: RasterCache) {\r\n        super(el, rasterCache);\r\n        this.el = el;\r\n        this.tlx = 0;\r\n        this.tly = 0;\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Movement  //////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Moves the object relative to its current position. \r\n     * @param dx\r\n     *  The change in x.\r\n     * @param dy \r\n     *  The change in y.\r\n     * @param attrs\r\n     *  If specified, this set of attributes will override the object's\r\n     *  underlying attributes.\r\n     */\r\n    public override moveBy(dx: number, dy: number, attrs?: number) {\r\n        super.moveBy(dx, dy);\r\n        // Move top left corner\r\n        this.tlx += dx;\r\n        this.tly += dy;\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  2. Render  ////////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n    \r\n    /**\r\n     * Renders the object to a context.\r\n     * @param ctx\r\n     *  The context to render to.\r\n     * @param vr\r\n     *  The context's viewport.\r\n     * @param dsx\r\n     *  The drop shadow's x-offset.\r\n     *  (Default: 0)\r\n     * @param dsy\r\n     *  The drop shadow's y-offset.\r\n     *  (Default: 0)\r\n     * @param attrs\r\n     *  If specified, these attributes will override the object's underlying\r\n     *  attributes.\r\n     */\r\n    public override renderTo(\r\n        ctx: CanvasRenderingContext2D, vr: ViewportRegion,\r\n        dsx: number = 0, dsy: number = 0, attrs?: number\r\n    ) { \r\n        if(!this.isVisible(vr)) {\r\n            return;\r\n        }\r\n\r\n        // Init\r\n        let { tlx: x, tly: y } = this;\r\n        let { \r\n            body, \r\n            head,\r\n            select_outline: so,\r\n            border_radius: br,\r\n        } = this.el.style;\r\n        let {\r\n            width: w,\r\n            height: h,\r\n            headHeight: hh,\r\n        } = this.el.layout;\r\n\r\n        // Draw body\r\n        ctx.lineWidth = 1.1;\r\n        if(dsx | dsy){\r\n            drawRect(ctx, x, y, w, h, br);\r\n            ctx.shadowOffsetX = dsx + (0.5 * vr.scale);\r\n            ctx.shadowOffsetY = dsy + (0.5 * vr.scale);\r\n            ctx.fillStyle = body.fill_color;\r\n            ctx.strokeStyle = body.stroke_color;\r\n            ctx.fill();\r\n            ctx.shadowOffsetX = 0;\r\n            ctx.shadowOffsetY = 0;\r\n            ctx.stroke();\r\n        } else {\r\n            drawRect(ctx, x, y + hh - 1, w, h - hh + 1, { br: br, bl: br });\r\n            ctx.fillStyle = body.fill_color;\r\n            ctx.strokeStyle = body.stroke_color;\r\n            ctx.fill();\r\n            ctx.stroke();\r\n        }\r\n\r\n        // Draw head\r\n        drawRect(ctx, x, y, w, hh, { tr: br, tl: br });\r\n        ctx.fillStyle = head.fill_color;\r\n        ctx.strokeStyle = head.stroke_color;\r\n        ctx.fill();\r\n        ctx.stroke();\r\n\r\n        // Draw all text placements with the title font.\r\n        let tf = head.title;\r\n        ctx.font = tf.font.css;\r\n        ctx.fillStyle = tf.color;\r\n        for(let text of this.el.layout.titleFont) {\r\n            ctx.fillText(text.t, x + text.x, y + text.y)\r\n        }\r\n\r\n        // Draw all text placements with the subtitle font.\r\n        let stf = head.subtitle;\r\n        ctx.font = stf.font.css;\r\n        ctx.fillStyle = stf.color;\r\n        for(let text of this.el.layout.subtitleFont) {\r\n            ctx.fillText(text.t, x + text.x, y + text.y)\r\n        }\r\n\r\n        // Draw all text placements with the field name font.\r\n        let fnf = body.field_name;\r\n        ctx.font = fnf.font.css;\r\n        ctx.fillStyle = fnf.color;\r\n        for(let text of this.el.layout.fieldNameFont) {\r\n            ctx.fillText(text.t, x + text.x, y + text.y)\r\n        }\r\n\r\n        // Draw all text placements with the field value font.\r\n        let fvf = body.field_value;\r\n        ctx.font = fvf.font.css;\r\n        ctx.fillStyle = fvf.color;\r\n        for(let text of this.el.layout.fieldValueFont) {\r\n            ctx.fillText(text.t, x + text.x, y + text.y)\r\n        }\r\n\r\n        if(this.el.isSelected(attrs)) {\r\n            \r\n            // Init\r\n            let { \r\n                padding: p, \r\n                solo_color: sc,\r\n                many_color: mc,\r\n                border_radius: br\r\n            } = so;\r\n            p += 1;\r\n\r\n            // Draw select border\r\n            drawRect(ctx, x - p, y - p, w + p*2, h + p*2, br, 1);\r\n            switch(this.el.attrs & SelectMask) {\r\n                case Select.Single:\r\n                    ctx.strokeStyle = sc;\r\n                    break;\r\n                case Select.Multi:\r\n                    ctx.strokeStyle = mc;\r\n                    break;\r\n            }\r\n            ctx.stroke();\r\n\r\n        } else if(this.el.isHovered(attrs)) {\r\n\r\n            // Init\r\n            let {\r\n                color,\r\n                size\r\n            } = this.el.style.anchor_markers;\r\n            \r\n            // Draw anchors\r\n            super.renderTo(ctx, vr, dsx, dsy);    \r\n\r\n            // Draw anchor markers\r\n            ctx.strokeStyle = color;\r\n            ctx.beginPath();\r\n            for(let o of this.children) {\r\n                ctx.moveTo(o.x - size, o.y - size);\r\n                ctx.lineTo(o.x + size, o.y + size);\r\n                ctx.moveTo(o.x + size, o.y - size);\r\n                ctx.lineTo(o.x - size, o.y + size);\r\n            }\r\n            ctx.stroke();\r\n        \r\n        }\r\n\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  3. Model Synchronization  /////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Synchronizes the view with the underlying model.\r\n     * @returns\r\n     *  The view.\r\n     */\r\n    public override updateView(): DictionaryBlockView {\r\n        // Update view\r\n        super.updateView();\r\n        // Update top-left corner\r\n        this.tlx = this.el.boundingBox.xMin + this.el.layout.dx;\r\n        this.tly = this.el.boundingBox.yMin + this.el.layout.dy;\r\n        // Return\r\n        return this;\r\n    }\r\n\r\n}\r\n","import { RasterCache } from \"../Diagram/RasterCache\";\r\nimport { ViewportRegion } from \"../Diagram\";\r\nimport { PageModel } from \"../DiagramModelTypes\";\r\nimport { \r\n    DiagramObjectView,\r\n    DiagramRootView\r\n} from \".\";\r\n\r\nexport class PageView extends DiagramRootView {\r\n    \r\n    /**\r\n     * The underlying model.\r\n     */\r\n    public override el: PageModel;    \r\n    \r\n    /**\r\n     * The page's grid pattern.\r\n     */\r\n    private _gridPattern: CanvasPattern;\r\n\r\n    /**\r\n     * The page's current selection.\r\n     */\r\n    public get selects(): DiagramObjectView[] {\r\n        return [...this.getSubtree(o => o.el.isSelected())];\r\n    }\r\n\r\n\r\n    /**\r\n     * Creates a new {@link PageView}.\r\n     * @param el\r\n     *  The underlying model.\r\n     * @param rasterCache\r\n     *  The view's raster cache.\r\n     */\r\n    constructor(el: PageModel, rasterCache: RasterCache) {\r\n        super(el, rasterCache);\r\n        this.el = el;\r\n        // Create grid pattern\r\n        let { \r\n            grid_color: gc, background_color: bc\r\n        } = this.el.style;\r\n        this._gridPattern = this.createGridPattern(\r\n            ...this.el.grid, bc, gc\r\n        );\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Render  ////////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Renders the page surface to a context.\r\n     * @param grid\r\n     *  [true]\r\n     *   Show the grid.\r\n     *  [false]\r\n     *   Hide the grid.\r\n     */\r\n    public renderPageSurfaceTo(ctx: CanvasRenderingContext2D, vr: ViewportRegion, grid: boolean) {\r\n        // Draw page\r\n        ctx.fillStyle = grid ? this._gridPattern : this.el.style.background_color;\r\n        ctx.fillRect(\r\n            vr.xMin,  vr.yMin,\r\n            vr.xMax - vr.xMin,\r\n            vr.yMax - vr.yMin\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Renders the object to a context.\r\n     * @param ctx\r\n     *  The context to render to.\r\n     * @param vr\r\n     *  The context's viewport.\r\n     * @param dsx\r\n     *  The drop shadow's x-offset.\r\n     *  (Default: The page's styled x-offset)\r\n     * @param dsy\r\n     *  The drop shadow's y-offset.\r\n     *  (Default: The page's styled y-offset)\r\n     * @param attrs\r\n     *  If specified, these attributes will override the object's underlying\r\n     *  attributes.\r\n     */\r\n    public override renderTo(\r\n        ctx: CanvasRenderingContext2D, vr: ViewportRegion,\r\n        dsx: number = this.el.style.drop_shadow.offset[0], \r\n        dsy: number = this.el.style.drop_shadow.offset[1],\r\n        attrs?: number\r\n    ) { \r\n        // Configure drop shadow\r\n        ctx.shadowColor = this.el.style.drop_shadow.color;\r\n        // Draw contents\r\n        super.renderTo(ctx, vr, dsx * vr.scale, dsy * vr.scale);\r\n    }\r\n\r\n    /**\r\n     * Generates a grid canvas pattern.\r\n     * @param gridX\r\n     *  The grid size on the x-axis.\r\n     * @param gridY\r\n     *  The grid size on the y-axis.\r\n     * @param fillColor\r\n     *  The background color.\r\n     * @param strokeColor\r\n     *  The line color.\r\n     * @returns\r\n     *  The grid canvas pattern centered on the origin.\r\n     */\r\n    private createGridPattern(gridX: number, gridY: number, fillColor: string, strokeColor: string): CanvasPattern {\r\n        let can = document.createElement(\"canvas\");\r\n        let ctx = can.getContext(\"2d\", { alpha: false })!;\r\n        can.width = gridX;\r\n        can.height = gridY;\r\n        ctx.fillStyle = fillColor;\r\n        ctx.lineWidth = 2;\r\n        ctx.strokeStyle = strokeColor;\r\n        ctx.fillRect(0, 0, gridX, gridY);\r\n        ctx.moveTo(0, 0);\r\n        ctx.lineTo(0, gridY);\r\n        ctx.lineTo(gridX, gridY);\r\n        ctx.stroke();\r\n        let ptr = ctx.createPattern(can, \"repeat\")!;\r\n        ptr.setTransform(new DOMMatrix().translate(0, 1));\r\n        return ptr;\r\n    }\r\n\r\n}\r\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./AppFooterBar.vue?vue&type=style&index=0&id=0ec2c908&scoped=true&lang=css\"","import { RasterCache } from \"../Diagram/RasterCache\";\r\nimport { LineEndingPointView } from \"../DiagramViewTypes\";\r\nimport { \r\n    DiagramLineEndingModel,\r\n    DiagramObjectModel,\r\n    LayoutUpdateReason\r\n} from \"./BaseTypes/BaseModels\";\r\nimport {\r\n    DiagramFactory,\r\n    DiagramObjectValues,\r\n    LineEndingPointStyle,\r\n    LineEndingPointTemplate\r\n} from \"../DiagramFactory\";\r\nimport { Cursor } from \"../Attributes\";\r\n\r\nexport class LineEndingPointModel extends DiagramLineEndingModel {\r\n\r\n    /**\r\n     * The template the object was configured with.\r\n     */\r\n    public override readonly template: LineEndingPointTemplate;\r\n\r\n    /**\r\n     * The line ending's style.\r\n     */\r\n    public readonly style: LineEndingPointStyle;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link LineEndingPointModel}.\r\n     * @param factory\r\n     *  The line ending point's diagram factory.\r\n     * @param template\r\n     *  The line ending point's template.\r\n     * @param values\r\n     *  The line ending point's values.\r\n     */\r\n    constructor(\r\n        factory: DiagramFactory,\r\n        template: LineEndingPointTemplate,\r\n        values?: DiagramObjectValues\r\n    ) {\r\n        super(factory, template, values);\r\n        this.setCursor(Cursor.Pointer);\r\n        // Template configuration\r\n        this.setSemanticRole(template.role);\r\n        this.template = template;\r\n        this.style = template.style;\r\n        // Update Layout\r\n        this.updateLayout(LayoutUpdateReason.ObjectInit);\r\n    }\r\n    \r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Selection  /////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Returns the topmost object at the given coordinate.\r\n     * @param x\r\n     *  The x coordinate.\r\n     * @param y\r\n     *  The y coordinate.\r\n     * @returns\r\n     *  The topmost object, undefined if there isn't one.\r\n     */\r\n    public override getObjectAt(x: number, y: number): DiagramObjectModel | undefined {\r\n        let dx = x - this.boundingBox.xMid;\r\n        let dy = y - this.boundingBox.yMid;\r\n        let r = this.style.radius;\r\n        return dx * dx + dy * dy < r * r ? this : undefined;\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  2. Layout & View  /////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Updates the line ending's bounding box.\r\n     * @param reasons\r\n     *  The reasons the layout was updated. \r\n     * @param updateParent\r\n     *  If the parent's layout should be updated.\r\n     *  (Default: true)\r\n     */\r\n    public override updateLayout(reasons: number, updateParent: boolean = true) {\r\n        let bb = this.boundingBox;\r\n        // Update bounding box\r\n        bb.xMin = bb.xMid - this.style.radius;\r\n        bb.yMin = bb.yMid - this.style.radius;\r\n        bb.xMax = bb.xMid + this.style.radius;\r\n        bb.yMax = bb.yMid + this.style.radius;\r\n        // Update parent\r\n        if(updateParent) {\r\n            this.parent?.updateLayout(reasons);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns this object wrapped inside a view object.\r\n     *  @param cache\r\n     *   The view's raster cache.\r\n     *  @returns\r\n     *   This object wrapped inside a view object.\r\n     */\r\n    public createView(cache: RasterCache): LineEndingPointView {\r\n        return new LineEndingPointView(this, cache);\r\n    }\r\n\r\n}\r\n","import { RasterCache } from \"../Diagram/RasterCache\";\r\nimport { LineHandlePointView } from \"../DiagramViewTypes\";\r\nimport {\r\n    DiagramLineHandleModel,\r\n    DiagramObjectModel,\r\n    LayoutUpdateReason\r\n} from \"./BaseTypes/BaseModels\";\r\nimport {\r\n    DiagramFactory,\r\n    DiagramObjectValues,\r\n    LineHandlePointStyle,\r\n    LineHandlePointTemplate\r\n} from \"../DiagramFactory\";\r\nimport { Cursor } from \"../Attributes\";\r\n\r\nexport class LineHandlePointModel extends DiagramLineHandleModel {\r\n    \r\n    /**\r\n     * The template the object was configured with.\r\n     */\r\n    public override readonly template: LineHandlePointTemplate;\r\n\r\n    /**\r\n     * The line handle's style.\r\n     */\r\n    public readonly style: LineHandlePointStyle;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link LineHandlePointModel}.\r\n     * @param factory\r\n     *  The line handle point's diagram factory.\r\n     * @param template\r\n     *  The line handle point's template.\r\n     * @param values\r\n     *  The line handle point's values.\r\n     */\r\n    constructor(\r\n        factory: DiagramFactory,\r\n        template: LineHandlePointTemplate,\r\n        values?: DiagramObjectValues\r\n    ) {\r\n        super(factory, template, values);\r\n        this.setCursor(Cursor.Move);\r\n        // Template configuration\r\n        this.setSemanticRole(template.role);\r\n        this.template = template;\r\n        this.style = template.style;\r\n        // Update Layout\r\n        this.updateLayout(LayoutUpdateReason.ObjectInit);\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Selection  /////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Returns the topmost object at the given coordinate.\r\n     * @param x\r\n     *  The x coordinate.\r\n     * @param y\r\n     *  The y coordinate.\r\n     * @returns\r\n     *  The topmost object, undefined if there isn't one.\r\n     */\r\n    public override getObjectAt(x: number, y: number): DiagramObjectModel | undefined {\r\n        let dx = x - this.boundingBox.xMid;\r\n        let dy = y - this.boundingBox.yMid;\r\n        let r = this.style.radius;\r\n        return dx * dx + dy * dy < r * r ? this : undefined;\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  2. Layout & View  /////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Updates the line handle's bounding box.\r\n     * @param reasons\r\n     *  The reasons the layout was updated.\r\n     * @param updateParent\r\n     *  If the parent's layout should be updated.\r\n     *  (Default: true)\r\n     */\r\n    public override updateLayout(reasons: number, updateParent: boolean = true) {\r\n        let bb = this.boundingBox;\r\n        // Update bounding box\r\n        bb.xMin = bb.xMid - this.style.radius;\r\n        bb.yMin = bb.yMid - this.style.radius;\r\n        bb.xMax = bb.xMid + this.style.radius;\r\n        bb.yMax = bb.yMid + this.style.radius;\r\n        // Update parent\r\n        if(updateParent) {\r\n            this.parent?.updateLayout(reasons);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns this object wrapped inside a view object.\r\n     *  @param cache\r\n     *   The view's raster cache.\r\n     *  @returns\r\n     *   This object wrapped inside a view object.\r\n     */\r\n    public createView(cache: RasterCache): LineHandlePointView {\r\n        return new LineHandlePointView(this, cache);\r\n    }\r\n\r\n}\r\n","import { RasterCache } from \"../Diagram/RasterCache\";\r\nimport { LineHorizontalElbowView } from \"../DiagramViewTypes\";\r\nimport { getLineHitbox, isInsideRegion } from \"../Utilities\";\r\nimport {\r\n    DiagramLineModel,\r\n    DiagramObjectModel,\r\n    LayoutUpdateReason,\r\n    LineEndingPointModel,\r\n    LineHandlePointModel\r\n} from \".\";\r\nimport {\r\n    DiagramFactory,\r\n    DiagramObjectValues,\r\n    LineHorizontalElbowTemplate\r\n} from \"../DiagramFactory\";\r\nimport { Cursor } from \"../Attributes\";\r\n\r\nexport class LineHorizontalElbowModel extends DiagramLineModel {\r\n\r\n    /**\r\n     * The template the object was configured with.\r\n     */\r\n    public override readonly template: LineHorizontalElbowTemplate;\r\n\r\n    /**\r\n     * The line's hitboxes.\r\n     *  [0] = The 1st horizontal segment's hitbox.\r\n     *  [1] = The vertical segment's hitbox.\r\n     *  [2] = The 2nd horizontal segment's hitbox.\r\n     */\r\n    public readonly hitboxes: number[][];\r\n\r\n\r\n    /**\r\n     * Creates a new {@link LineHorizontalElbowModel}.\r\n     * @param factory\r\n     *  The line's diagram factory.\r\n     * @param template\r\n     *  The line's template.\r\n     * @param values\r\n     *  The line's values.\r\n     */\r\n     constructor(\r\n        factory: DiagramFactory, \r\n        template: LineHorizontalElbowTemplate,\r\n        values?: DiagramObjectValues\r\n    ) {\r\n        super(factory, template, values);\r\n        this.hitboxes = [[],[],[]];\r\n        this.setCursor(Cursor.Move);\r\n        // Template configuration\r\n        this.setSemanticRole(template.role);\r\n        this.template = template;\r\n        // Define children \r\n        if(!this.children.length) {\r\n            let x = this.boundingBox.xMid;\r\n            let y = this.boundingBox.yMid;\r\n            // Define Caps and Handles\r\n            let src = template.line_ending_template.source;\r\n            let han = template.line_handle_template;\r\n            let trg = template.line_ending_template.target;\r\n            this.addChild(factory.createObject(src) as LineEndingPointModel, 0, false);\r\n            this.addChild(factory.createObject(han) as LineHandlePointModel, 1, false);\r\n            this.addChild(factory.createObject(trg) as LineEndingPointModel, 2, false);\r\n            // Define position\r\n            for(let obj of this.children) {\r\n                obj.moveTo(x, y);\r\n            }\r\n            this.children[0].moveBy(-100, 50);\r\n            this.children[2].moveBy(100, -50);\r\n        }        \r\n        // Update layout\r\n        this.updateLayout(LayoutUpdateReason.ObjectInit);\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Selection  /////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    \r\n\r\n    /**\r\n     * Returns the topmost object at the given coordinate.\r\n     * @param x\r\n     *  The x coordinate.\r\n     * @param y\r\n     *  The y coordinate.\r\n     * @returns\r\n     *  The topmost object, undefined if there isn't one.\r\n     */\r\n    public override getObjectAt(x: number, y: number): DiagramObjectModel | undefined {\r\n        if(this.isAnchored()) {\r\n            // Try points\r\n            let obj = super.getObjectAt(x, y);\r\n            if(obj) {\r\n                return obj;\r\n            }\r\n            // Try segments\r\n            for(let i = 0; i < this.hitboxes.length; i++) {\r\n                if(!isInsideRegion(x, y, this.hitboxes[i]))\r\n                    continue;\r\n                if(i === 1) {\r\n                    return this.children[i];\r\n                } else {\r\n                    return this;\r\n                }\r\n            }\r\n        } else {\r\n            if(this.isSelected()) {\r\n                // Try points\r\n                let obj = super.getObjectAt(x, y);\r\n                if(obj) {\r\n                    return obj;\r\n                }\r\n            }\r\n            // Try segments\r\n            for(let hitbox of this.hitboxes) {\r\n                if(isInsideRegion(x, y, hitbox)) {\r\n                    return this;\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    }   \r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  2. Movement  //////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Moves one of the line's children relative to its current position. \r\n     * @param id\r\n     *  The id of the child.\r\n     * @param dx\r\n     *  The change in x.\r\n     * @param dy\r\n     *  The change in y.\r\n     * @param updateParent\r\n     *  If the parent's layout should be updated.\r\n     *  (Default: true)\r\n     */\r\n    public moveChild(id: string, dx: number, dy: number, updateParent: boolean = true) {\r\n        // Select child\r\n        let obj = this.children.find(o => o.id === id)!;\r\n        if(!obj)\r\n            return;\r\n        // Move ending\r\n        if(obj instanceof LineEndingPointModel) {\r\n            obj.moveBy(dx, dy, updateParent, true);\r\n        }\r\n        // Move handle\r\n        let [e1, h1, e2] = this.children;\r\n        let e1x = e1.boundingBox.xMid,\r\n            e1y = e1.boundingBox.yMid,\r\n            e2x = e2.boundingBox.xMid,\r\n            e2y = e2.boundingBox.yMid,\r\n            h1x = h1.boundingBox.xMid,\r\n            h2y = h1.boundingBox.yMid,\r\n            hdx = ((e1x + e2x) / 2) - h1x,\r\n            hdy = ((e1y + e2y) / 2) - h2y;\r\n        if(!h1.hasUserSetPosition()) {\r\n            h1.moveBy(hdx, 0, updateParent, true);\r\n        } else if(obj === h1) {\r\n            h1.moveBy(dx, 0, updateParent, true);\r\n        }\r\n        h1.moveBy(0, hdy, updateParent, true);\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  3. Layout & View  /////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    \r\n\r\n    /**\r\n     * Updates the line's alignment, cursor, bounding box, and hitbox.\r\n     * @param reasons\r\n     *  The reasons the layout was updated.\r\n     * @param updateParent\r\n     *  If the parent's layout should be updated.\r\n     *  (Default: true)\r\n     */\r\n    public override updateLayout(reasons: number, updateParent: boolean = true) {\r\n        let [e1, h1, e2] = this.children.map(o => o.boundingBox);\r\n        // Update hitboxes\r\n        let w = this.hitboxWidth;\r\n        this.hitboxes[0] = getLineHitbox(e1.xMid, e1.yMid, h1.xMid, e1.yMid, w);\r\n        this.hitboxes[1] = getLineHitbox(h1.xMid, e1.yMid, h1.xMid, e2.yMid, w);\r\n        this.hitboxes[2] = getLineHitbox(h1.xMid, e2.yMid, e2.xMid, e2.yMid, w);\r\n        // Update cursor\r\n        this.children[1].setCursor(Cursor.Col_Resize);\r\n        // Update bounding box\r\n        super.updateLayout(reasons, updateParent);\r\n    }\r\n\r\n    /**\r\n     * Returns this object wrapped inside a view object.\r\n     *  @param cache\r\n     *   The view's raster cache.\r\n     *  @returns\r\n     *   This object wrapped inside a view object.\r\n     */\r\n    public createView(cache: RasterCache): LineHorizontalElbowView {\r\n        return new LineHorizontalElbowView(this, cache);\r\n    }\r\n\r\n}\r\n","import { RasterCache } from \"../Diagram/RasterCache\";\r\nimport { LineVerticalElbowView } from \"../DiagramViewTypes\";\r\nimport { getLineHitbox, isInsideRegion } from \"../Utilities\";\r\nimport {\r\n    DiagramLineModel,\r\n    DiagramObjectModel,\r\n    LayoutUpdateReason,\r\n    LineEndingPointModel,\r\n    LineHandlePointModel\r\n} from \".\";\r\nimport {\r\n    DiagramFactory,\r\n    DiagramObjectValues,\r\n    LineVerticalElbowTemplate\r\n} from \"../DiagramFactory\";\r\nimport { Cursor } from \"../Attributes\";\r\n\r\nexport class LineVerticalElbowModel extends DiagramLineModel {\r\n    \r\n    /**\r\n     * The template the object was configured with.\r\n     */\r\n    public override readonly template: LineVerticalElbowTemplate;\r\n\r\n    /**\r\n     * The line's hitboxes.\r\n     *  [0] = The 1st vertical segment's hitbox.\r\n     *  [1] = The horizontal segment's hitbox.\r\n     *  [2] = The 2nd vertical segment's hitbox.\r\n     */\r\n    public readonly hitboxes: number[][];\r\n\r\n\r\n    /**\r\n     * Creates a new {@link LineVerticalElbowModel}.\r\n     * @param factory\r\n     *  The line's diagram factory.\r\n     * @param template\r\n     *  The line's template.\r\n     * @param values\r\n     *  The line's values.\r\n     */\r\n     constructor(\r\n        factory: DiagramFactory, \r\n        template: LineVerticalElbowTemplate,\r\n        values?: DiagramObjectValues\r\n    ) {\r\n        super(factory, template, values);\r\n        this.hitboxes = [[],[],[]];\r\n        this.setCursor(Cursor.Move);\r\n        // Template configuration\r\n        this.setSemanticRole(template.role);\r\n        this.template = template;\r\n        // Define children \r\n        if(!this.children.length) {\r\n            let x = this.boundingBox.xMid;\r\n            let y = this.boundingBox.yMid;\r\n            // Define Caps and Handles\r\n            let src = template.line_ending_template.source;\r\n            let han = template.line_handle_template;\r\n            let trg = template.line_ending_template.target;\r\n            this.addChild(factory.createObject(src) as LineEndingPointModel, 0, false);\r\n            this.addChild(factory.createObject(han) as LineHandlePointModel, 1, false);\r\n            this.addChild(factory.createObject(trg) as LineEndingPointModel, 2, false);\r\n            // Define position\r\n            for(let obj of this.children) {\r\n                obj.moveTo(x, y);\r\n            }\r\n            this.children[0].moveBy(-50, 100);\r\n            this.children[2].moveBy(50, -100);\r\n        }        \r\n        // Update layout\r\n        this.updateLayout(LayoutUpdateReason.ObjectInit);\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Selection  /////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    \r\n\r\n    /**\r\n     * Returns the topmost object at the given coordinate.\r\n     * @param x\r\n     *  The x coordinate.\r\n     * @param y\r\n     *  The y coordinate.\r\n     * @returns\r\n     *  The topmost object, undefined if there isn't one.\r\n     */\r\n    public override getObjectAt(x: number, y: number): DiagramObjectModel | undefined {\r\n        if(this.isAnchored()) {\r\n            // Try points\r\n            let obj = super.getObjectAt(x, y);\r\n            if(obj) {\r\n                return obj;\r\n            }\r\n            // Try segments\r\n            for(let i = 0; i < this.hitboxes.length; i++) {\r\n                if(!isInsideRegion(x, y, this.hitboxes[i]))\r\n                    continue;\r\n                if(i === 1) {\r\n                    return this.children[i];\r\n                } else {\r\n                    return this;\r\n                }\r\n            }\r\n        } else {\r\n            if(this.isSelected()) {\r\n                // Try points\r\n                let obj = super.getObjectAt(x, y);\r\n                if(obj) {\r\n                    return obj;\r\n                }\r\n            }\r\n            // Try segments\r\n            for(let hitbox of this.hitboxes) {\r\n                if(isInsideRegion(x, y, hitbox)) {\r\n                    return this;\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    }   \r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  2. Movement  //////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Moves one of the line's children relative to its current position. \r\n     * @param id\r\n     *  The id of the child.\r\n     * @param dx\r\n     *  The change in x.\r\n     * @param dy\r\n     *  The change in y.\r\n     * @param updateParent\r\n     *  If the parent's layout should be updated.\r\n     *  (Default: true)\r\n     */\r\n    public moveChild(id: string, dx: number, dy: number, updateParent: boolean = true) {\r\n        // Select child\r\n        let obj = this.children.find(o => o.id === id)!;\r\n        if(!obj)\r\n            return;\r\n        // Move ending\r\n        if(obj instanceof LineEndingPointModel) {\r\n            obj.moveBy(dx, dy, updateParent, true);\r\n        }\r\n        // Move handle\r\n        let [e1, h1, e2] = this.children;\r\n        let e1x = e1.boundingBox.xMid,\r\n            e1y = e1.boundingBox.yMid,\r\n            e2x = e2.boundingBox.xMid,\r\n            e2y = e2.boundingBox.yMid,\r\n            h1x = h1.boundingBox.xMid,\r\n            h2y = h1.boundingBox.yMid,\r\n            hdx = ((e1x + e2x) / 2) - h1x,\r\n            hdy = ((e1y + e2y) / 2) - h2y;\r\n        if(!h1.hasUserSetPosition()) {\r\n            h1.moveBy(0, hdy, updateParent, true);\r\n        } else if(obj === h1) {\r\n            h1.moveBy(0, dy, updateParent, true);\r\n        }\r\n        h1.moveBy(hdx, 0, updateParent, true);\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  3. Layout & View  /////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    \r\n\r\n    /**\r\n     * Updates the line's alignment, cursor, bounding box, and hitbox.\r\n     * @param reasons\r\n     *  The reasons the layout was updated.\r\n     * @param updateParent\r\n     *  If the parent's layout should be updated.\r\n     *  (Default: true)\r\n     */\r\n    public override updateLayout(reasons: number, updateParent: boolean = true) {\r\n        let [e1, h1, e2] = this.children.map(o => o.boundingBox);\r\n        // Update hitboxes\r\n        let w = this.hitboxWidth;\r\n        this.hitboxes[0] = getLineHitbox(e1.xMid, e1.yMid, e1.xMid, h1.yMid, w);\r\n        this.hitboxes[1] = getLineHitbox(e1.xMid, h1.yMid, e2.xMid, h1.yMid, w);\r\n        this.hitboxes[2] = getLineHitbox(e2.xMid, h1.yMid, e2.xMid, e2.yMid, w);\r\n        // Update cursor\r\n        this.children[1].setCursor(Cursor.Row_Resize);\r\n        // Update bounding box\r\n        super.updateLayout(reasons, updateParent);\r\n    }\r\n\r\n    /**\r\n     * Returns this object wrapped inside a view object.\r\n     *  @param cache\r\n     *   The view's raster cache.\r\n     *  @returns\r\n     *   This object wrapped inside a view object.\r\n     */\r\n    public createView(cache: RasterCache): LineVerticalElbowView {\r\n        return new LineVerticalElbowView(this, cache);\r\n    }\r\n\r\n}\r\n","import { RasterCache } from \"../Diagram/RasterCache\";\r\nimport { AnchorPointView } from \"../DiagramViewTypes\";\r\nimport { \r\n    DiagramAnchorModel,\r\n    LayoutUpdateReason\r\n} from \".\";\r\nimport {\r\n    AnchorPointStyle,\r\n    AnchorPointTemplate,\r\n    DiagramAnchorValues,\r\n    DiagramFactory\r\n} from \"../DiagramFactory\";\r\n\r\nexport class AnchorPointModel extends DiagramAnchorModel {\r\n    \r\n    /**\r\n     * The template the object was configured with.\r\n     */\r\n    public override readonly template: AnchorPointTemplate;\r\n\r\n    /**\r\n     * The point's style.\r\n     */\r\n    public readonly style: AnchorPointStyle;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link AnchorPointModel}.\r\n     * @param factory\r\n     *  The anchor point's diagram factory.\r\n     * @param template\r\n     *  The anchor point's template.\r\n     * @param values\r\n     *  The anchor point's values.\r\n     */\r\n    constructor(\r\n        factory: DiagramFactory,\r\n        template: AnchorPointTemplate,\r\n        values?: DiagramAnchorValues\r\n    ) {\r\n        super(factory, template, values);\r\n        // Template configuration\r\n        this.setSemanticRole(template.role);\r\n        this.template = template;\r\n        this.style = template.style;\r\n        // Update Layout\r\n        this.updateLayout(LayoutUpdateReason.ObjectInit);\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Layout & View  /////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Updates the anchor point's bounding box.\r\n     * @param reasons\r\n     *  The reasons the layout was updated. \r\n     * @param updateParent\r\n     *  If the parent's layout should be updated.\r\n     *  (Default: true)\r\n     */\r\n    public override updateLayout(reasons: number, updateParent: boolean = true) {\r\n        let bb = this.boundingBox;\r\n        // Update bounding box\r\n        bb.xMin = bb.xMid - this.radius;\r\n        bb.yMin = bb.yMid - this.radius;\r\n        bb.xMax = bb.xMid + this.radius;\r\n        bb.yMax = bb.yMid + this.radius;\r\n        // Update parent\r\n        if(updateParent) {\r\n            this.parent?.updateLayout(reasons);\r\n        }   \r\n    }\r\n\r\n    /**\r\n     * Returns this object wrapped inside a view object.\r\n     *  @param cache\r\n     *   The view's raster cache.\r\n     *  @returns\r\n     *   This object wrapped inside a view object.\r\n     */\r\n    public override createView(cache: RasterCache): AnchorPointView {\r\n        return new AnchorPointView(this, cache);\r\n    }\r\n    \r\n}\r\n","import { RasterCache } from \"../Diagram/RasterCache\";\r\nimport { PageView } from \"../DiagramViewTypes\";\r\nimport {\r\n    DiagramRootModel,\r\n    LayoutUpdateReason\r\n} from \"./BaseTypes/BaseModels\"\r\nimport {\r\n    DiagramFactory,\r\n    PageValues,\r\n    PageStyle,\r\n    PageTemplate,\r\n    TemplateType,\r\n    PageExport,\r\n    SemanticRole\r\n} from \"../DiagramFactory\";\r\n\r\nexport class PageModel extends DiagramRootModel {\r\n\r\n    /**\r\n     * The template the object was configured with.\r\n     */\r\n    public override readonly template: PageTemplate;\r\n\r\n    /**\r\n     * The page's camera location.\r\n     */\r\n    public location: CameraLocation;\r\n    \r\n    /**\r\n     * The page's grid size.\r\n     */\r\n    public readonly grid: [number, number];\r\n    \r\n    /**\r\n     * The page's style.\r\n     */\r\n    public readonly style: PageStyle;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link PageModel}.\r\n     * @param factory\r\n     *  The page's diagram factory.\r\n     * @param template\r\n     *  The page's template.\r\n     * @param values\r\n     *  The page's values.\r\n     */\r\n    constructor(\r\n        factory: DiagramFactory,\r\n        template: PageTemplate,\r\n        values?: PageValues\r\n    ) {\r\n        super(factory, template, values);\r\n        // Template configuration\r\n        this.setSemanticRole(template.role);\r\n        this.template = template;\r\n        this.grid = template.grid;\r\n        this.style = template.style;\r\n        // Value configuration\r\n        this.location = values?.location ?? { \r\n            type: LocationType.Point,\r\n            x: 0,\r\n            y: 0,\r\n            k: 1\r\n        };\r\n        // Update layout\r\n        this.updateLayout(LayoutUpdateReason.ObjectInit);\r\n    }\r\n\r\n\r\n    /**\r\n     * Returns a dummy {@link PageModel} not associated with any document.\r\n     * @returns\r\n     *  A dummy {@link PageModel}.\r\n     */\r\n    public static createDummy(): PageModel {\r\n        return new this(\r\n            DiagramFactory.createDummy(),\r\n            { \r\n                id: \"\",\r\n                name: \"\",\r\n                type: TemplateType.Page, \r\n                role: SemanticRole.None,\r\n                grid: [10, 10],\r\n                style: { \r\n                    grid_color: \"#1d1d1d\",\r\n                    background_color: \"#141414\",\r\n                    drop_shadow: {\r\n                        color: \"rgba(0,0,0,.4)\",\r\n                        offset: [3, 3]\r\n                    }\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Layout & View  /////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Returns this object wrapped inside a view object.\r\n     *  @param cache\r\n     *   The view's raster cache.\r\n     *  @returns\r\n     *   This object wrapped inside a view object.\r\n     */\r\n    public override createView(cache: RasterCache): PageView {\r\n        return new PageView(this, cache);\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  2. Content  ///////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Exports the {@link PageModel}.\r\n     * @returns\r\n     *  The {@link PageExport}.\r\n     */\r\n    public override toExport(): PageExport {\r\n        return {\r\n            ...super.toExport(),\r\n            location: this.location\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  Camera Types  /////////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport type CameraLocation\r\n    = CameraPointLocation\r\n    | CameraRegionLocation\r\n\r\nexport enum LocationType {\r\n    Point  = 0,\r\n    Region = 1\r\n}\r\n\r\nexport type CameraPointLocation = { \r\n    \r\n    /**\r\n     * The location's definition type.\r\n     */\r\n    type: LocationType.Point\r\n\r\n    /**\r\n     * The x-axis coordinate.\r\n     */\r\n    x: number,\r\n    \r\n    /**\r\n     * The y-axis coordinate.\r\n     */\r\n    y: number,\r\n    \r\n    /**\r\n     * The scale.\r\n     */\r\n    k: number\r\n\r\n};\r\n\r\nexport type CameraRegionLocation = {\r\n\r\n    /**\r\n     * The location's definition type.\r\n     */\r\n    type: LocationType.Region,\r\n\r\n    /**\r\n     * The x-axis coordinate.\r\n     */\r\n    x: number,\r\n\r\n    /**\r\n     * The y-axis coordinate.\r\n     */\r\n    y: number,\r\n\r\n    /**\r\n     * The width of the focus region.\r\n     */\r\n    w: number,\r\n\r\n    /**\r\n     * The height of the focus region.\r\n     */\r\n    h: number\r\n\r\n}\r\n","import { computeHash } from \"../Utilities\";\r\nimport { RasterCache } from \"../Diagram/RasterCache\";\r\nimport { DictionaryBlockView } from \"../DiagramViewTypes\";\r\nimport {\r\n    AnchorPointModel,\r\n    DiagramObjectModel,\r\n    LayoutUpdateReason\r\n} from \".\";\r\nimport {\r\n    AnchorAngle,\r\n    DiagramFactory,\r\n    DiagramObjectValues,\r\n    DictionaryBlockStyle,\r\n    DictionaryBlockTemplate\r\n} from \"../DiagramFactory\";\r\nimport { Alignment, Cursor, InheritAlignment } from \"../Attributes\";\r\n\r\nexport class DictionaryBlockModel extends DiagramObjectModel {\r\n\r\n    /**\r\n     * The template the object was configured with.\r\n     */\r\n    public override readonly template: DictionaryBlockTemplate;\r\n\r\n    /**\r\n     * The block's style.\r\n     */\r\n    public readonly style: DictionaryBlockStyle\r\n\r\n    /**\r\n     * The block's render layout.\r\n     */\r\n    public layout: DictionaryBlockRenderLayout;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link DictionaryBlockModel}.\r\n     * @param factory\r\n     *  The block's diagram factory.\r\n     * @param template\r\n     *  The block's template.\r\n     * @param values\r\n     *  The block's values.\r\n     */\r\n    constructor(\r\n        factory: DiagramFactory, \r\n        template: DictionaryBlockTemplate, \r\n        values?: DiagramObjectValues\r\n    ) {\r\n        super(factory, template, values);\r\n        this.setInheritAlignment(InheritAlignment.False);\r\n        this.setAlignment(Alignment.Grid);\r\n        this.setCursor(Cursor.Move);\r\n        this.layout = {} as any;\r\n        // Template configuration\r\n        this.setSemanticRole(template.role);\r\n        this.template = template;\r\n        this.style = template.style;\r\n        // Anchor configuration\r\n        if(!this.children.length) {\r\n            let t = template.anchor_template;\r\n            let a = [AnchorAngle.DEG_90, AnchorAngle.DEG_0];\r\n            for(let i = 0, anchor; i < 12; i++) {\r\n                anchor = factory.createObject(t) as AnchorPointModel;\r\n                anchor.angle = a[Math.floor(i / 3) % 2];\r\n                this.addChild(anchor, i, false);\r\n            }\r\n        }\r\n        // Update Layout\r\n        this.updateLayout(LayoutUpdateReason.ObjectInit);\r\n    }\r\n    \r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Selection  /////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Returns the topmost object at the given coordinate.\r\n     * @param x\r\n     *  The x coordinate.\r\n     * @param y\r\n     *  The y coordinate.\r\n     * @returns\r\n     *  The topmost object, undefined if there isn't one.\r\n     */\r\n    public override getObjectAt(x: number, y: number): DiagramObjectModel | undefined {\r\n        // Try anchors\r\n        let obj = super.getObjectAt(x, y);\r\n        if(obj) {\r\n            return obj;\r\n        }\r\n        // Try object\r\n        let bb = this.boundingBox;\r\n        if(\r\n            bb.xMin <= x && x <= bb.xMax &&\r\n            bb.yMin <= y && y <= bb.yMax  \r\n        ) {\r\n            return this;\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  2. Layout & View  /////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Updates the block's bounding box and render layout.\r\n     * @param reasons\r\n     *  The reasons the layout was updated. \r\n     * @param updateParent\r\n     *  If the parent's layout should be updated.\r\n     *  (Default: true)\r\n     */\r\n    public override updateLayout(reasons: number, updateParent: boolean = true) {\r\n        let contentHash = this.props.getHash();\r\n\r\n        // Update layout (if content has changed)\r\n        if(this.layout.contentHash !== contentHash) {\r\n\r\n            let { max_width, head, body, horizontal_padding } = this.style;\r\n            let tf = head.title;\r\n            let sbf = head.subtitle;\r\n            let fnf = body.field_name;\r\n            let fvf = body.field_value;\r\n            let strokeWidth = 1;\r\n            let titleFont: TextPlacement[] = [];\r\n            let subtitleFont: TextPlacement[] = [];\r\n            let fieldNameFont: TextPlacement[] = [];\r\n            let fieldValueFont: TextPlacement[] = [];\r\n            \r\n            // Configure title and subtitle\r\n            let tk = this.template.title_key;\r\n            let prop = this.props.value.get(tk);\r\n            let titleText = this.template.id.toLocaleUpperCase();\r\n            let subtitleText = prop?.toString() ?? `Unknown key: '${ tk }'`;\r\n            \r\n            // Calculate max width\r\n            let mw = max_width;\r\n            mw = Math.max(mw, head.title.font.measureWidth(titleText));\r\n            for(let key of this.props.value.keys()) {\r\n                mw = Math.max(mw, body.field_name.font.measureWidth(key));\r\n            }\r\n\r\n            // Calculate text\r\n            let m = null;\r\n            let w = 0;\r\n            let x = strokeWidth + horizontal_padding;\r\n            let y = strokeWidth + head.vertical_padding;\r\n            \r\n            // Calculate title text\r\n            m = tf.font.measure(titleText);\r\n            w = Math.max(w, m.width);\r\n            y += m.ascent;\r\n            titleFont.push({ x, y, t: titleText });\r\n            y += m.descent + head.title.padding;\r\n            \r\n            // Calculate subtitle text\r\n            let lines = sbf.font.wordWrap(subtitleText, mw);\r\n            m = sbf.font.measure(lines[0]);\r\n            w = Math.max(w, m.width);\r\n            y += m.ascent;\r\n            subtitleFont.push({ x, y, t: lines[0] });\r\n            for(let i = 1; i < lines.length; i++) {\r\n                m = sbf.font.measure(lines[i]);\r\n                w = Math.max(w, m.width);\r\n                y += sbf.lineHeight;\r\n                subtitleFont.push({ x, y, t: lines[i] });\r\n            }\r\n            y += head.vertical_padding + strokeWidth;\r\n\r\n            let headHeight = Math.round(y);\r\n\r\n            // Calculate fields\r\n            y += body.vertical_padding;\r\n            for(let [key, value] of this.props.value) {\r\n\r\n                // Ignore title key\r\n                if(key === this.template.title_key)\r\n                    continue;\r\n                key = key.toLocaleUpperCase();\r\n                \r\n                // Calculate field name text\r\n                m = fnf.font.measure(key);\r\n                w = Math.max(w, m.width);\r\n                y += m.ascent;\r\n                fieldNameFont.push({ x, y, t: key });\r\n                y += m.descent + body.field_name.padding;\r\n                \r\n                // Calculate field value text\r\n                let lines = fvf.font.wordWrap(`${ value.toString() }`, mw);\r\n                m = fvf.font.measure(lines[0]);\r\n                w = Math.max(w, m.width);\r\n                y += m.ascent;\r\n                fieldValueFont.push({ x, y, t: lines[0] });\r\n                for(let i = 1; i < lines.length; i++) {\r\n                    m = fvf.font.measure(lines[i]);\r\n                    w = Math.max(w, m.width);\r\n                    y += fvf.line_height;\r\n                    fieldValueFont.push({ x, y, t: lines[i] });\r\n                }\r\n                y += body.field_value.padding;\r\n                \r\n            }\r\n            y -= body.field_value.padding;\r\n\r\n            // Calculate block's size\r\n            let width = Math.round(((horizontal_padding + strokeWidth) * 2) + w);\r\n            let height = Math.round(y + body.vertical_padding + strokeWidth);\r\n            \r\n            // Calculate block's bounding box\r\n            let bb = this.boundingBox;\r\n            let xMin = Math.round(bb.xMid - (width / 2));\r\n            let yMin = Math.round(bb.yMid - (height / 2));\r\n            let xMax = Math.round(bb.xMid + (width / 2));\r\n            let yMax = Math.round(bb.yMid + (height / 2));\r\n\r\n            // Update anchors\r\n            let xo = (bb.xMid - xMin) / 2;\r\n            let yo = (bb.yMid - yMin) / 2;\r\n            let anchors = [\r\n                bb.xMid - xo, yMin,\r\n                bb.xMid, yMin,\r\n                bb.xMid + xo, yMin,\r\n                xMax, bb.yMid - yo,\r\n                xMax, bb.yMid,\r\n                xMax, bb.yMid + yo,\r\n                bb.xMid + xo, yMax,\r\n                bb.xMid, yMax,\r\n                bb.xMid - xo, yMax,\r\n                xMin, bb.yMid + yo,\r\n                xMin, bb.yMid,\r\n                xMin, bb.yMid - yo\r\n            ];\r\n            for(let i = 0; i < anchors.length; i += 2) {\r\n                this.children[i / 2].moveTo(anchors[i], anchors[i + 1], false);\r\n            }\r\n\r\n            // Update object's bounding box\r\n            super.updateLayout(reasons, false);\r\n\r\n            // Update layout\r\n            this.layout = {\r\n                contentHash,\r\n                dx: xMin - bb.xMin,\r\n                dy: yMin - bb.yMin,\r\n                width,\r\n                height,\r\n                headHeight,   \r\n                titleFont,\r\n                subtitleFont,\r\n                fieldNameFont,\r\n                fieldValueFont\r\n            };\r\n\r\n        }\r\n\r\n        // Update parent\r\n        if(updateParent) {\r\n            this.parent?.updateLayout(reasons);\r\n        }\r\n        \r\n    }\r\n\r\n    /**\r\n     * Returns this object wrapped inside a view object.\r\n     *  @param cache\r\n     *   The view's raster cache.\r\n     *  @returns\r\n     *   This object wrapped inside a view object.\r\n     */\r\n    public override createView(cache: RasterCache): DictionaryBlockView {\r\n        return new DictionaryBlockView(this, cache);\r\n    }\r\n\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  Internal Types  ///////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\ntype DictionaryBlockRenderLayout = {\r\n    \r\n    /**\r\n     * The layout's content hash.\r\n     */\r\n    contentHash: number\r\n    \r\n    /**\r\n     * The block's x offset from the top-left corner of the bounding box.\r\n     */\r\n    dx: number;\r\n\r\n    /**\r\n     * The block's y offset from the top-left corner of the bounding box.\r\n     */\r\n    dy: number;\r\n\r\n    /**\r\n     * The block's width.\r\n     */\r\n    width: number,\r\n\r\n    /**\r\n     * The blocks's height.\r\n     */\r\n    height: number,\r\n\r\n    /**\r\n     * The block's header height.\r\n     */\r\n    headHeight: number,\r\n\r\n    /**\r\n     * Text placements with the title font.\r\n     */\r\n    titleFont: TextPlacement[],\r\n\r\n    /**\r\n     * Text placements with the subtitle font.\r\n     */\r\n    subtitleFont: TextPlacement[],    \r\n    \r\n    /**\r\n     * Text placements with the field name font.\r\n     */\r\n    fieldNameFont: TextPlacement[],\r\n    \r\n    /**\r\n     * Text placements with the field value font.\r\n     */\r\n    fieldValueFont: TextPlacement[],\r\n\r\n}\r\n\r\ntype TextPlacement = { \r\n    \r\n    /**\r\n     * The x-axis coordinate relative to the top-left coordinate of the block.\r\n     */\r\n    x: number,\r\n\r\n    /**\r\n     * The y-axis coordinate relative to the top-left coordinate of the block.\r\n     */\r\n    y: number,\r\n\r\n    /**\r\n     * The text.\r\n     */\r\n    t: string\r\n\r\n}\r\n","import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { id: \"app-body\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_AppTitleBar = _resolveComponent(\"AppTitleBar\")!\n  const _component_BlockDiagram = _resolveComponent(\"BlockDiagram\")!\n  const _component_EditorTabs = _resolveComponent(\"EditorTabs\")!\n  const _component_AppFooterBar = _resolveComponent(\"AppFooterBar\")!\n  const _component_AppHotkeyBox = _resolveComponent(\"AppHotkeyBox\")!\n\n  return (_openBlock(), _createBlock(_component_AppHotkeyBox, { id: \"main\" }, {\n    default: _withCtx(() => [\n      _createVNode(_component_AppTitleBar, { id: \"app-title-bar\" }),\n      _createElementVNode(\"div\", _hoisted_1, [\n        _createVNode(_component_BlockDiagram, { id: \"block-diagram\" }),\n        _createVNode(_component_EditorTabs, { id: \"app-tabs\" }),\n        _createVNode(_component_AppFooterBar, { id: \"app-footer-bar\" })\n      ])\n    ]),\n    _: 1\n  }))\n}","import { ValidationErrorResult } from \"./ValidationErrorResult\";\r\nimport {\r\n    DiagramObjectModel,\r\n    GraphObjectExport,\r\n    Template\r\n} from \"../BlockDiagram\";\r\n\r\nexport class DiagramValidator {\r\n\r\n    /**\r\n     * The validator's error list.\r\n     */\r\n    private _errors: ValidationErrorResult[];\r\n\r\n\r\n    /**\r\n     * Creates a new {@link DiagramValidator}.\r\n     */\r\n    constructor() {\r\n        this._errors = [];\r\n    } \r\n\r\n\r\n    /**\r\n     * Resets and runs the validator.\r\n     * @param object\r\n     *  The diagram object to validate.\r\n     */\r\n    public run(object: DiagramObjectModel) {\r\n        this.reset();\r\n        this.validate(object);\r\n    }\r\n\r\n    /**\r\n     * Validates a diagram.\r\n     * @param diagram\r\n     *  The diagram to validate.\r\n     */\r\n    protected validate(diagram: DiagramObjectModel) {}\r\n\r\n    /**\r\n     * Returns the validator's current set of errors.\r\n     * @returns\r\n     *  The validator's current set of errors.\r\n     */\r\n    public getErrors(): ValidationErrorResult[] {\r\n        return this._errors;\r\n    }\r\n\r\n    /**\r\n     * Adds an error to the validator.\r\n     * @param object\r\n     *  The object that failed to validate.\r\n     * @param reason\r\n     *  The reason the object failed to validate.\r\n     */\r\n    protected addError(object: GraphObjectExport, reason: string) {\r\n        this._errors.push({\r\n            object: object.id,\r\n            reason\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Tests if the validator is in a valid state.\r\n     * @returns\r\n     *  True if the validator is in a valid state, false otherwise.\r\n     */\r\n    public inValidState(): boolean {\r\n        return this._errors.length === 0;\r\n    }\r\n\r\n    /**\r\n     * Resets the validator's state.\r\n     */\r\n    public reset() {\r\n        this._errors = [];\r\n    }\r\n\r\n}\r\n","import { DiagramValidator } from \"./scripts/DiagramValidator/DiagramValidator\";\r\nimport { DiagramObjectModel, SemanticAnalyzer } from \"./scripts/BlockDiagram\";\r\n\r\nclass AttackFlowValidator extends DiagramValidator {\r\n\r\n    /**\r\n     * Validates a diagram.\r\n     * @param diagram\r\n     *  The diagram to validate.\r\n     */\r\n    protected override validate(diagram: DiagramObjectModel): void {\r\n        let graph = SemanticAnalyzer.toGraph(diagram);\r\n        \r\n        // Do some validating...\r\n        for(let edge of graph.edges) {\r\n            if(edge.prev.length === 1 && edge.next.length === 1) {\r\n                continue;\r\n            } else {\r\n                this.addError(edge, \"Everything should be connected\");\r\n            }\r\n        }\r\n        \r\n    }\r\n    \r\n}\r\n\r\nexport default AttackFlowValidator;\r\n","import { DiagramObjectModel } from \"../BlockDiagram\";\r\n\r\nexport class DiagramPublisher {\r\n\r\n    /**\r\n     * Returns the published diagram in text form.\r\n     * @param diagram\r\n     *  The diagram to publish.\r\n     * @returns\r\n     *  The published diagram in text form.\r\n     */\r\n    public publish(diagram: DiagramObjectModel): string {\r\n        return \"\";\r\n    };\r\n\r\n}\r\n","import { DiagramPublisher } from \"./scripts/DiagramPublisher/DiagramPublisher\";\r\nimport { DiagramObjectModel, SemanticAnalyzer } from \"./scripts/BlockDiagram\";\r\n\r\nclass AttackFlowPublisher extends DiagramPublisher {\r\n    \r\n    /**\r\n     * Returns the published diagram in text form.\r\n     * @param diagram\r\n     *  The diagram to publish.\r\n     * @returns\r\n     *  The published diagram in text form.\r\n     */\r\n    public override publish(diagram: DiagramObjectModel): string {\r\n        let graph = SemanticAnalyzer.toGraph(diagram);\r\n        \r\n        // Do some publishing...\r\n        console.log(\"DID IT!\")\r\n\r\n        return \"\";\r\n    }\r\n    \r\n}\r\n\r\nexport default AttackFlowPublisher;\r\n","import validator from \"./builder.config.validator\";\r\nimport publisher from \"./builder.config.publisher\";\r\nimport { AppConfiguration } from \"@/store/StoreTypes\";\r\nimport { PropertyType } from \"./scripts/BlockDiagram/Property\";\r\nimport { SemanticRole, TemplateType } from \"./scripts/BlockDiagram/DiagramFactory\";\r\n\r\n/**\r\n * Standard Dictionary Block Style\r\n */\r\nconst StandardDictionaryBlockStyle = {\r\n    max_width: 320,\r\n    head: {\r\n        fill_color: \"#000\",\r\n        stroke_color: \"#000\",\r\n        title: {\r\n            font: { family: \"Inter\", size: \"8pt\", weight: 600 },\r\n            color: \"#d8d8d8\",\r\n            padding: 8\r\n        },\r\n        subtitle:  {\r\n            font: { family: \"Inter\", size: \"13pt\", weight: 800 },\r\n            color: \"#d8d8d8\",\r\n            lineHeight: 23\r\n        },\r\n        vertical_padding: 14\r\n    },\r\n    body: {\r\n        fill_color: \"#1f1f1f\",\r\n        stroke_color: \"#383838\",\r\n        field_name: {\r\n            font: { family: \"Inter\", size: \"8pt\", weight: 600 },\r\n            color: \"#b3b3b3\",\r\n            padding: 12\r\n        },\r\n        field_value: {\r\n            font: { family: \"Inter\", size: \"10.5pt\" },\r\n            color: \"#bfbfbf\",\r\n            line_height: 20,\r\n            padding: 22\r\n        },\r\n        vertical_padding: 18\r\n    },\r\n    select_outline: {\r\n        padding: 4,\r\n        solo_color: \"#e6d845\",\r\n        many_color: \"#e6d845\",\r\n        border_radius: 9\r\n    },\r\n    anchor_markers: {\r\n        color: \"#ffffff\",\r\n        size: 3\r\n    },\r\n    border_radius: 5,\r\n    horizontal_padding: 20\r\n}\r\n\r\n/**\r\n * Action Block Style\r\n */\r\nconst ActionBlockStyle = structuredClone(StandardDictionaryBlockStyle);\r\nActionBlockStyle.head.fill_color = \"#637bc9\";\r\nActionBlockStyle.head.stroke_color = \"#708ce6\"\r\n\r\n/**\r\n * Asset Block Style\r\n */\r\n const AssetBlockStyle = structuredClone(StandardDictionaryBlockStyle);\r\n AssetBlockStyle.head.fill_color = \"#c26130\";\r\n AssetBlockStyle.head.stroke_color = \"#e57339\"\r\n\r\n/**\r\n * Condition Block Style\r\n */\r\nconst ConditionBlockStyle = structuredClone(StandardDictionaryBlockStyle);\r\nConditionBlockStyle.head.fill_color = \"#2a9642\";\r\nConditionBlockStyle.head.stroke_color = \"#32b34e\"\r\n\r\n /**\r\n  * App Configuration\r\n  */\r\nconst config: AppConfiguration = {\r\n    file_type_name: \"Attack Flow\",\r\n    file_type_extension: \"afb\", \r\n    schema: {\r\n        page_template: \"@__builtin__page\",\r\n        templates: [\r\n            {\r\n                id: \"action\",\r\n                name: \"Action Block\",\r\n                type: TemplateType.DictionaryBlock,\r\n                role: SemanticRole.Node,\r\n                title_key: \"technique_name\",\r\n                properties: {\r\n                    spec_version   : { type: PropertyType.String, value: \"2.1\" },\r\n                    technique_id   : { type: PropertyType.String, value: \"\" },\r\n                    technique_name : { type: PropertyType.String, value: \"\" },\r\n                    technique_ref  : { type: PropertyType.String, value: \"\" },\r\n                    description    : { type: PropertyType.String, value: \"\" }\r\n                },\r\n                anchor_template: \"@__builtin__anchor\",\r\n                style: ActionBlockStyle\r\n            },\r\n            {\r\n                id: \"asset\",\r\n                name: \"Asset Block\",\r\n                type: TemplateType.DictionaryBlock,\r\n                role: SemanticRole.Node,\r\n                title_key: \"name\",\r\n                properties: {\r\n                    spec_version : { type: PropertyType.String, value: \"2.1\" },\r\n                    name         : { type: PropertyType.String, value: \"\" },\r\n                    description  : { type: PropertyType.String, value: \"\" }\r\n                },\r\n                anchor_template: \"@__builtin__anchor\",\r\n                style: AssetBlockStyle\r\n            },\r\n            {\r\n                id: \"condition\",\r\n                name: \"Condition Block\",\r\n                type: TemplateType.DictionaryBlock,\r\n                role: SemanticRole.Node,\r\n                title_key: \"description\",\r\n                properties: {\r\n                    spec_version    : { type: PropertyType.String, value: \"2.1\" },\r\n                    description     : { type: PropertyType.String, value: \"\" },\r\n                    pattern         : { type: PropertyType.String, value: \"\" },\r\n                    pattern_type    : { type: PropertyType.String, value: \"\" },\r\n                    pattern_version : { type: PropertyType.String, value: \"\" },\r\n                },\r\n                anchor_template: \"@__builtin__anchor\",\r\n                style: ConditionBlockStyle\r\n            },\r\n        ]\r\n    },\r\n    help_links: [\r\n        { \r\n            text: \"Attack Flow GitHub\",\r\n            url: \"https://github.com/center-for-threat-informed-defense/attack-flow\"\r\n        },\r\n        {\r\n            text: \"MITRE ATT&CK Framework\",\r\n            url: \"https://attack.mitre.org/\"\r\n        }\r\n    ],\r\n    validator,\r\n    publisher\r\n};\r\n\r\nexport default config;\r\n","import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-34dfc6e8\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"logo\" }, \"AFB\", -1))\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_TitleBar = _resolveComponent(\"TitleBar\")!\n\n  return (_openBlock(), _createBlock(_component_TitleBar, {\n    class: \"app-title-bar-element\",\n    menus: _ctx.menus,\n    onSelect: _ctx.onItemSelect\n  }, {\n    icon: _withCtx(() => [\n      _hoisted_1\n    ]),\n    _: 1\n  }, 8, [\"menus\", \"onSelect\"]))\n}","import { renderSlot as _renderSlot, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withModifiers as _withModifiers, createBlock as _createBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, withCtx as _withCtx, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-73631bd3\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"icon\" }\nconst _hoisted_2 = [\"onMouseenter\", \"onClick\"]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ContextMenuListing = _resolveComponent(\"ContextMenuListing\")!\n  const _component_FocusBox = _resolveComponent(\"FocusBox\")!\n\n  return (_openBlock(), _createBlock(_component_FocusBox, {\n    class: \"title-bar-control\",\n    onUnfocus: _ctx.menuClose\n  }, {\n    default: _withCtx(() => [\n      _createElementVNode(\"li\", _hoisted_1, [\n        _renderSlot(_ctx.$slots, \"icon\", {}, undefined, true)\n      ]),\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.menus, (menu) => {\n        return (_openBlock(), _createElementBlock(\"li\", {\n          key: menu.id,\n          class: _normalizeClass({ focused: menu.id === _ctx.focusedMenu }),\n          onMouseenter: ($event: any) => (_ctx.menuEnter(menu.id)),\n          onClick: ($event: any) => (_ctx.menuOpen(menu.id))\n        }, [\n          _createElementVNode(\"p\", null, _toDisplayString(menu.text), 1),\n          (menu.id === _ctx.focusedMenu)\n            ? (_openBlock(), _createBlock(_component_ContextMenuListing, {\n                key: 0,\n                class: \"menu-listing\",\n                sections: menu.sections,\n                select: _ctx.menuSelect,\n                onClick: _cache[0] || (_cache[0] = _withModifiers(() => {}, [\"stop\"]))\n              }, null, 8, [\"sections\", \"select\"]))\n            : _createCommentVNode(\"\", true)\n        ], 42, _hoisted_2))\n      }), 128))\n    ]),\n    _: 3\n  }, 8, [\"onUnfocus\"]))\n}","import { renderSlot as _renderSlot, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", {\n    onClick: _cache[0] || (_cache[0] = ($event: any) => (_ctx.$emit('focus'))),\n    class: \"focus-box-container\"\n  }, [\n    _renderSlot(_ctx.$slots, \"default\")\n  ]))\n}","\r\nimport { defineComponent } from 'vue';\r\n\r\nexport default defineComponent({\r\n  name: 'FocusBox',\r\n  data() {\r\n    return {\r\n      onFocusOut: (\r\n        function(this: any, event: MouseEvent) {\r\n          // If clicked item isn't this container or a child of it, emit\r\n          // unfocus.\r\n          if (this.$el != event.target && !this.$el.contains(event.target)) {\r\n            this.$emit(\"unfocus\");\r\n          }\r\n        }\r\n      ).bind(this)\r\n    }\r\n  },\r\n  emits: [\"focus\", \"unfocus\"],\r\n  mounted() {\r\n    // Exit current event chain before binding to the pointerdown event.\r\n    // Otherwise, any click event that triggered mounted() will bubble up to\r\n    // this bound document event and cause focus to be left immediately.\r\n    setTimeout(() => {\r\n        document.body.addEventListener(\"pointerdown\", this.onFocusOut)\r\n    }, 0);\r\n  },\r\n  unmounted() {\r\n    document.body.removeEventListener('pointerdown', this.onFocusOut)\r\n  },\r\n});\r\n","import { render } from \"./FocusBox.vue?vue&type=template&id=78bf848c&ts=true\"\nimport script from \"./FocusBox.vue?vue&type=script&lang=ts\"\nexport * from \"./FocusBox.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"C:\\\\Users\\\\mcarenzo\\\\Desktop\\\\attack-flow-private\\\\src\\\\attack_flow_builder\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, vShow as _vShow, withDirectives as _withDirectives, withModifiers as _withModifiers, normalizeStyle as _normalizeStyle, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-431fe6dc\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = [\"onMouseenter\"]\nconst _hoisted_2 = { class: \"item\" }\nconst _hoisted_3 = { class: \"text\" }\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"more-arrow\" }, null, -1))\nconst _hoisted_5 = {\n  key: 0,\n  class: \"submenu\"\n}\nconst _hoisted_6 = [\"onClick\"]\nconst _hoisted_7 = [\"href\"]\nconst _hoisted_8 = { class: \"check\" }\nconst _hoisted_9 = { class: \"text\" }\nconst _hoisted_10 = {\n  key: 0,\n  class: \"shortcut\"\n}\nconst _hoisted_11 = {\n  key: 0,\n  class: \"section-divider\"\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ContextMenuListing = _resolveComponent(\"ContextMenuListing\", true)!\n\n  return (_openBlock(), _createElementBlock(\"div\", {\n    class: \"context-menu-listing-control\",\n    style: _normalizeStyle(_ctx.offset),\n    onContextmenu: _cache[2] || (_cache[2] = _withModifiers(() => {}, [\"prevent\"]))\n  }, [\n    _createElementVNode(\"input\", {\n      type: \"file\",\n      ref: \"file\",\n      style: {\"display\":\"none\"},\n      onChange: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.readFile && _ctx.readFile(...args)))\n    }, null, 544),\n    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.sections, (section, i) => {\n      return (_openBlock(), _createElementBlock(\"div\", {\n        class: \"section\",\n        key: section.name\n      }, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(section.items, (item) => {\n          return (_openBlock(), _createElementBlock(_Fragment, {\n            key: item.id\n          }, [\n            (item.action === _ctx.MenuAction.OpenSubmenu)\n              ? (_openBlock(), _createElementBlock(\"li\", {\n                  key: 0,\n                  class: _normalizeClass({ disabled: item.disabled }),\n                  onMouseenter: ($event: any) => (_ctx.submenuEnter(item)),\n                  onMouseleave: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.submenuLeave && _ctx.submenuLeave(...args)))\n                }, [\n                  _createElementVNode(\"a\", _hoisted_2, [\n                    _createElementVNode(\"span\", _hoisted_3, _toDisplayString(item.text), 1),\n                    _hoisted_4\n                  ]),\n                  (item.id === _ctx.focusedSubMenu)\n                    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [\n                        _createVNode(_component_ContextMenuListing, {\n                          sections: item.sections,\n                          select: _ctx.selectItem\n                        }, null, 8, [\"sections\", \"select\"])\n                      ]))\n                    : _createCommentVNode(\"\", true)\n                ], 42, _hoisted_1))\n              : (_openBlock(), _createElementBlock(\"li\", {\n                  key: 1,\n                  class: _normalizeClass({ disabled: item.disabled }),\n                  onClick: ($event: any) => (_ctx.onItemClick(item))\n                }, [\n                  _createElementVNode(\"a\", {\n                    class: \"item\",\n                    href: item.disabled ? null : item.link,\n                    target: \"_blank\"\n                  }, [\n                    _withDirectives(_createElementVNode(\"span\", _hoisted_8, \"✓\", 512), [\n                      [_vShow, item.value]\n                    ]),\n                    _createElementVNode(\"span\", _hoisted_9, _toDisplayString(item.text), 1),\n                    (item.shortcut)\n                      ? (_openBlock(), _createElementBlock(\"span\", _hoisted_10, _toDisplayString(_ctx.formatShortcut(item.shortcut)), 1))\n                      : _createCommentVNode(\"\", true)\n                  ], 8, _hoisted_7)\n                ], 10, _hoisted_6))\n          ], 64))\n        }), 128)),\n        (i < _ctx.sections.length - 1)\n          ? (_openBlock(), _createElementBlock(\"a\", _hoisted_11))\n          : _createCommentVNode(\"\", true)\n      ]))\n    }), 128))\n  ], 36))\n}","///////////////////////////////////////////////////////////////////////////////\r\n//  1. Context Menu  //////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport enum MenuAction {\r\n    OpenSubmenu = 0,\r\n    RunTask = 1,\r\n    OpenFile = 2,\r\n    OpenLink = 3,\r\n    ToggleValue = 4,\r\n}\r\n\r\nexport type ContextMenu = \r\n    | OpenSubMenuContextMenu \r\n    | RunTaskContextMenu \r\n    | OpenFileContextMenu \r\n    | OpenLinkContextMenu \r\n    | ToggleValueContextMenu;\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  2. Generic Context Menu  //////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\ninterface ContextMenuBase<T extends MenuAction> {\r\n    id   : string,\r\n    text : string,\r\n    action : T,\r\n    disabled?: boolean,\r\n    data?: any\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  3. Open SubMenu Context Menu  /////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport interface OpenSubMenuContextMenu extends ContextMenuBase<MenuAction.OpenSubmenu> {\r\n    sections : ContextMenuSection[]\r\n}\r\n\r\nexport interface ContextMenuSection {\r\n    id: string,\r\n    items: ContextMenu[]\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  4. Run Task Context Menu  /////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport interface RunTaskContextMenu extends ContextMenuBase<MenuAction.RunTask> {\r\n    shortcut?: string\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  5. Open File Context Menu  ////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport interface OpenFileContextMenu extends ContextMenuBase<MenuAction.OpenFile> {\r\n    shortcut?: string\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  6. Open Link Context Menu  ////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport interface OpenLinkContextMenu extends ContextMenuBase<MenuAction.OpenLink> {\r\n    link: string\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  7. Toggle Value Context Menu  /////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport interface ToggleValueContextMenu extends ContextMenuBase<MenuAction.ToggleValue> {\r\n    shortcut?: string\r\n    value: boolean\r\n}\r\n","\r\nimport { defineComponent, PropType, Ref, ref } from 'vue';\r\nimport { ContextMenu, ContextMenuSection, MenuAction } from \"@/assets/scripts/ContextMenuTypes\";\r\n\r\nconst KeyToText: { [key: string]: string } = {\r\n  Control    : \"Ctrl\",\r\n  Escape     : \"Esc\",\r\n  ArrowLeft  : \"←\",\r\n  ArrowUp    : \"↑\",\r\n  ArrowRight : \"→\",\r\n  ArrowDown  : \"↓\",\r\n  Delete     : \"Del\"\r\n}\r\n\r\nexport default defineComponent({\r\n  name: 'ContextMenuListing',\r\n  setup() {\r\n    return { \r\n      file: ref(null) as Ref<HTMLElement | null>\r\n    }\r\n  },\r\n  props: {\r\n    sections: {\r\n      type: Array as PropType<ContextMenuSection[]>,\r\n      required: true\r\n    },\r\n    select: {\r\n      type: Function as PropType<(id: string, cs: boolean, data?: any) => void>,\r\n      required: true\r\n    },\r\n    forceInsideWindow: {\r\n      type: Boolean,\r\n      default: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      xOffset: 0,\r\n      yOffset: 0,\r\n      leaveTimeout: 500,\r\n      leaveTimeoutId: 0,\r\n      focusedSubMenu: null as string | null,\r\n      selectedFileId: null as string | null,\r\n      MenuAction\r\n    }\r\n  },\r\n  computed: {\r\n\r\n    /**\r\n     * Returns the ContextMenuListing's offset styling.\r\n     * @returns\r\n     *  The ContextMenuListing's offset styling.\r\n     */\r\n    offset(): { marginTop: string, marginLeft: string } {\r\n      return {\r\n        marginTop: `${ this.yOffset }px`,\r\n        marginLeft: `${ this.xOffset }px`\r\n      }\r\n    }\r\n\r\n  },\r\n  methods: {\r\n    \r\n    /**\r\n     * Submenu mouse enter behavior.\r\n     * @param item\r\n     *  The hovered submenu item.\r\n     */\r\n    submenuEnter(item: ContextMenu) {\r\n      clearTimeout(this.leaveTimeoutId);\r\n      if(!item.disabled) {\r\n        this.focusedSubMenu = item.id;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Submenu mouse leave behavior.\r\n     */\r\n    submenuLeave() {\r\n      this.leaveTimeoutId = setTimeout(() => {\r\n        this.focusedSubMenu = null;\r\n      }, this.leaveTimeout)\r\n    },\r\n\r\n    /**\r\n     * Menu item selection behavior.\r\n     * @param item\r\n     *  The selected menu item.\r\n     */\r\n    onItemClick(item: ContextMenu) {\r\n      if(item.disabled)\r\n        return;\r\n      switch(item.action) {\r\n        case MenuAction.OpenFile:\r\n          this.file!.click();\r\n          this.selectedFileId = item.id;\r\n          this.select(`__preload_${ item.id }`, true, item.data);\r\n          break;\r\n        case MenuAction.ToggleValue:\r\n          this.select(item.id, false, { ...item.data, value: item.value });\r\n          break;\r\n        default:\r\n          this.select(item.id, true, item.data);\r\n          break;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Reads a file from a file select event and completes the initiating\r\n     * menu-item selection.\r\n     * @param event\r\n     *  The file select event.\r\n     */\r\n    readFile(event: Event) {\r\n      let file = (event.target as any).files[0];\r\n      let reader = new FileReader();\r\n      reader.onload = (e: ProgressEvent<FileReader>) => {\r\n        this.select(this.selectedFileId!, true, {\r\n          filename: file.name,\r\n          file: e.target?.result\r\n        })\r\n        this.selectedFileId = null;\r\n      }\r\n      reader.readAsText(file);\r\n    },\r\n\r\n    /**\r\n     * Emits an item selection event.\r\n     * @param id\r\n     *  The id of the selected menu item.\r\n     * @param closeSubmenu\r\n     *  [true]\r\n     *   The active submenu will close after the selection event.\r\n     *  [false]\r\n     *   The active submenu will remain open after the selection event.\r\n     * @param data\r\n     *  Any auxillary data associated with the selection.\r\n     */\r\n    selectItem(id: string, closeSubmenu: boolean, data?: any) {\r\n      // Vue no longer forwards $emits to parent if the element is unmounted.\r\n      // This breaks file open actions where file read events need to be raised\r\n      // after the menu is gone. Switched to using a callback prop instead.\r\n      this.select(id, closeSubmenu, data);\r\n      if(closeSubmenu) this.focusedSubMenu = null;\r\n    },\r\n\r\n    /**\r\n     * Formats a keyboard shortcut.\r\n     * @param shortcut\r\n     *  The keyboard shortcut to format.\r\n     * @returns\r\n     *  The formatted keyboard shortcut.\r\n     */\r\n    formatShortcut(shortcut?: string): string | undefined {\r\n      if(!shortcut) {\r\n        return shortcut;\r\n      } else {\r\n        return shortcut\r\n          .split(\"+\")\r\n          .map(c => c in KeyToText ? KeyToText[c] : c)\r\n          .join(\"+\");\r\n      }\r\n    }\r\n\r\n  },\r\n  mounted() {\r\n    if(!this.forceInsideWindow) return;\r\n    // Offset submenu if outside of viewport\r\n    let viewWidth  = window.innerWidth;\r\n    let viewHeight = window.innerHeight;\r\n    let { top, left, bottom, right } = this.$el.getBoundingClientRect();\r\n    this.xOffset = right > viewWidth ? -Math.min(left, right - viewWidth) : 0;\r\n    this.yOffset = bottom > viewHeight ? -Math.min(top, bottom - viewHeight) : 0;\r\n  }\r\n});\r\n","import { render } from \"./ContextMenuListing.vue?vue&type=template&id=431fe6dc&scoped=true&ts=true\"\nimport script from \"./ContextMenuListing.vue?vue&type=script&lang=ts\"\nexport * from \"./ContextMenuListing.vue?vue&type=script&lang=ts\"\n\nimport \"./ContextMenuListing.vue?vue&type=style&index=0&id=431fe6dc&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\mcarenzo\\\\Desktop\\\\attack-flow-private\\\\src\\\\attack_flow_builder\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-431fe6dc\"]])\n\nexport default __exports__","\r\n// Dependencies\r\nimport { defineComponent, PropType } from 'vue';\r\nimport { ContextMenu } from \"@/assets/scripts/ContextMenuTypes\";\r\n// Components\r\nimport FocusBox from \"@/components/Containers/FocusBox.vue\";\r\nimport ContextMenuListing from \"./ContextMenuListing.vue\";\r\n\r\nexport default defineComponent({\r\n  name: 'TitleBar',\r\n  props: {\r\n    menus: {\r\n      type: Array as PropType<ContextMenu[]>,\r\n      default: []\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      focusedMenu: null as string | null\r\n    }\r\n  },\r\n  emits: [\"select\"],\r\n  methods: {\r\n    \r\n    /**\r\n     * Menu selection behavior.\r\n     * @param id\r\n     *  The id of the selected menu.\r\n     */\r\n    menuOpen(id: string) {\r\n      this.focusedMenu = id;\r\n    },\r\n\r\n    /**\r\n     * Menu mouse enter behavior.\r\n     * @param id\r\n     *  The id of the hovered menu.\r\n     */\r\n    menuEnter(id: string) {\r\n      if(this.focusedMenu === null)\r\n        return;\r\n      this.focusedMenu = id;\r\n    },\r\n\r\n    /**\r\n     * Menu close behavior.\r\n     */\r\n    menuClose() {\r\n      this.focusedMenu = null;\r\n    },\r\n\r\n    /**\r\n     * Menu item selection behavior.\r\n     * @param id\r\n     *  The id of the selected menu item.\r\n     * @param closeMenu\r\n     *  [true]\r\n     *   The active menu will close after the selection event.\r\n     *  [false]\r\n     *   The active menu will remain open after the selection event.\r\n     * @param data\r\n     *  Any auxillary data associated with the selection.\r\n     */\r\n    menuSelect(id: string, closeMenu: boolean, data: any) {\r\n      this.$emit(\"select\", id, data);\r\n      if(closeMenu) this.focusedMenu = null;\r\n    }\r\n\r\n  },\r\n  components: { FocusBox, ContextMenuListing }\r\n});\r\n","import { render } from \"./TitleBar.vue?vue&type=template&id=73631bd3&scoped=true&ts=true\"\nimport script from \"./TitleBar.vue?vue&type=script&lang=ts\"\nexport * from \"./TitleBar.vue?vue&type=script&lang=ts\"\n\nimport \"./TitleBar.vue?vue&type=style&index=0&id=73631bd3&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\mcarenzo\\\\Desktop\\\\attack-flow-private\\\\src\\\\attack_flow_builder\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-73631bd3\"]])\n\nexport default __exports__","\r\n// Dependencies\r\nimport { ContextMenu } from \"@/assets/scripts/ContextMenuTypes\";\r\nimport { defineComponent } from \"vue\";\r\nimport { mapActions, mapGetters } from \"vuex\";\r\n// Components\r\nimport TitleBar from \"@/components/Controls/TitleBar.vue\";\r\n\r\nexport default defineComponent({\r\n  name: \"AppTitleBar\",\r\n  computed: {\r\n\r\n    /**\r\n     * Context Menu Store data\r\n     */\r\n    ...mapGetters(\"ContextMenuStore\", [\r\n      \"fileMenu\",\r\n      \"editMenu\",\r\n      \"layoutMenu\",\r\n      \"viewMenu\",\r\n      \"helpMenu\"\r\n    ]),\r\n    \r\n    /**\r\n     * Returns the application's menus.\r\n     * @returns\r\n     *  The application's menus.\r\n     */\r\n    menus(): ContextMenu[] {\r\n      return [\r\n        this.fileMenu, \r\n        this.editMenu,\r\n        this.layoutMenu,\r\n        this.viewMenu,\r\n        this.helpMenu\r\n      ]\r\n    }\r\n\r\n  },\r\n  methods: {\r\n\r\n    /**\r\n     * App Actions Store actions\r\n     */\r\n    ...mapActions(\"AppActionsStore\", [\"executeAppAction\"]),\r\n\r\n    /**\r\n     * Menu item selection behavior.\r\n     * @param id\r\n     *  The id of the selected menu.\r\n     * @param data\r\n     *  Auxillary data included with the selection.\r\n     */\r\n    async onItemSelect(id: string, data: any) {\r\n      try {\r\n        await this.executeAppAction({ id, data });\r\n      } catch(ex: any) {\r\n        console.error(ex);\r\n      }\r\n    }\r\n\r\n  },\r\n  components: { TitleBar }\r\n});\r\n","import { render } from \"./AppTitleBar.vue?vue&type=template&id=34dfc6e8&scoped=true&ts=true\"\nimport script from \"./AppTitleBar.vue?vue&type=script&lang=ts\"\nexport * from \"./AppTitleBar.vue?vue&type=script&lang=ts\"\n\nimport \"./AppTitleBar.vue?vue&type=style&index=0&id=34dfc6e8&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\mcarenzo\\\\Desktop\\\\attack-flow-private\\\\src\\\\attack_flow_builder\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-34dfc6e8\"]])\n\nexport default __exports__","import { renderSlot as _renderSlot, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_HotkeyBox = _resolveComponent(\"HotkeyBox\")!\n\n  return (_openBlock(), _createBlock(_component_HotkeyBox, {\n    class: \"app-hotkey-box-element\",\n    hotkeys: _ctx.hotkeys,\n    onFire: _ctx.onHotkeyFired\n  }, {\n    default: _withCtx(() => [\n      _renderSlot(_ctx.$slots, \"default\")\n    ]),\n    _: 3\n  }, 8, [\"hotkeys\", \"onFire\"]))\n}","import { renderSlot as _renderSlot, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-54b3aeda\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = {\n  class: \"hotkey-box-container\",\n  tabindex: \"0\"\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _renderSlot(_ctx.$slots, \"default\", {}, undefined, true)\n  ]))\n}","import { Hotkey, RunTaskHotkey, HotkeyAction } from \"./\";\r\n\r\nexport class HotkeyObserver {\r\n\r\n    /**\r\n     * The advance key state function, bound to the current object.\r\n     */\r\n    private _boundAdvanceKeyState: (e: KeyboardEvent) => void;\r\n\r\n     /**\r\n      * The reverse key state function, bound to the current object.\r\n      */\r\n    private _boundReverseKeyState: (e: KeyboardEvent) => void;\r\n\r\n    /**\r\n     * The function to call when a hotkey sequence is matched.\r\n     */\r\n    private _callback: (id: string, data?: any) => void;\r\n    \r\n    /**\r\n     * The hotkey observer's call loop.\r\n     */\r\n    private _callLoop: number | undefined;\r\n\r\n    /**\r\n     * The DOM element the hotkey observer is watching.\r\n     */\r\n    private _container: HTMLElement | null;\r\n\r\n    /**\r\n     * A file <input> element used for loading files.\r\n     */\r\n    private _fileInput: HTMLInputElement;\r\n\r\n    /**\r\n     * The hotkey observer's hotkey-id-to-item map.\r\n     */\r\n    private _hotkeyIdMap: Map<string, Hotkey>;\r\n\r\n    /**\r\n     * The current key state.\r\n     */\r\n    private _keyState: string;\r\n    \r\n    /**\r\n     * The amount of time (in milliseconds) a hotkey sequence needs to be held\r\n     * before its raised.\r\n     */\r\n    private _recognitionDelay: number;\r\n\r\n    /**\r\n     * The id of the hotkey item that triggered the last file read.\r\n     */\r\n    private _selectedFileId: string | null;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link HotkeyObserver}.\r\n     * @param callback\r\n     *  The function to call once a hotkey sequence is triggered.\r\n     * @param recognitionDelay\r\n     *  The time to wait (in milliseconds) before firing the hotkey callback.\r\n     */\r\n    constructor(callback: (id: string) => void, recognitionDelay: number) {\r\n        \r\n        // Configure state\r\n        this._boundAdvanceKeyState = this.advanceKeyState.bind(this);\r\n        this._boundReverseKeyState = this.reverseKeyState.bind(this);\r\n        this._callback = callback;\r\n        this._callLoop = undefined;\r\n        this._container = null;\r\n        this._hotkeyIdMap = new Map();\r\n        this._keyState = \".\";\r\n        this._recognitionDelay = recognitionDelay;\r\n        this._selectedFileId = null;\r\n        \r\n        // Configure file input element\r\n        this._fileInput = document.createElement(\"input\");\r\n        this._fileInput.type = \"file\";\r\n        this._fileInput.addEventListener(\"change\", this.readFile.bind(this));\r\n        \r\n    }\r\n\r\n\r\n    /**\r\n     * Binds the HotkeyObserver to an HTML element.\r\n     * @param container\r\n     *  The HTML element to bind to.\r\n     */\r\n    public observe(container: HTMLElement) {\r\n        this._container = container;\r\n        this._container.addEventListener(\"keydown\", this._boundAdvanceKeyState);\r\n        this._container.addEventListener(\"keyup\", this._boundReverseKeyState);\r\n    }\r\n\r\n    /**\r\n     * Unbinds the HotkeyObserver from the HTML element.\r\n     */\r\n    public disconnect() {\r\n        this._container?.removeEventListener(\"keydown\", this._boundAdvanceKeyState);\r\n        this._container?.removeEventListener(\"keyup\", this._boundReverseKeyState);\r\n    }\r\n\r\n    /**\r\n     * Configures the hotkeys to listen for.\r\n     * @param keyMap\r\n     *  An array of hotkeys.\r\n     * @throws { OverlappingHotkeysError }\r\n     *  If any hotkey sequences overlap with each other.\r\n     */\r\n    public setHotkeys(keyMap: Hotkey[]) {\r\n        this._hotkeyIdMap = new Map<string, Hotkey>();\r\n        for (let item of keyMap) {\r\n            if (item.shortcut === \"\") continue;\r\n            // Derive hotkey id\r\n            let hotkeyId = this.keySequenceToHotKeyId(item.shortcut);\r\n            // Ensure hotkey id doesn't overlap with others \r\n            for (let id of this._hotkeyIdMap.keys()) {\r\n                if (id.startsWith(hotkeyId) || hotkeyId.startsWith(id)) {\r\n                    throw new OverlappingHotkeysError(\r\n                        `Overlapping key sequences ('${\r\n                            id\r\n                        }' and '${\r\n                            hotkeyId\r\n                        }') are not allowed.`\r\n                    );\r\n                }\r\n            }\r\n            // Add hotkey\r\n            this._hotkeyIdMap.set(hotkeyId, item);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the recognition delay for triggered hotkeys.\r\n     * @param recognitionDelay\r\n     *  The delay in milliseconds.\r\n     */\r\n    public setRecognitionDelay(recognitionDelay: number) {\r\n        this._recognitionDelay = recognitionDelay;\r\n    }\r\n\r\n    /**\r\n     * Tests if a hotkey sequence is active.\r\n     * @param sequence\r\n     *  The hotkey sequence.\r\n     * @param strict\r\n     *  [true]\r\n     *   The active keys must match the provided hotkey sequence exactly.\r\n     *  [false]\r\n     *   The active keys only need to contain the provided hotkey sequence.\r\n     *  (Default: true)\r\n     * @returns\r\n     *  True if the provided hotkey sequence is active, false otherwise.\r\n     */\r\n    public isHotkeyActive(sequence: string, strict: boolean = true): boolean {\r\n        let id = this.keySequenceToHotKeyId(sequence);\r\n        return strict ? this._keyState === id : this._keyState.includes(id);\r\n    }\r\n\r\n    /**\r\n     * Adds a key event to the current key state.\r\n     * @param e\r\n     *  The keydown event.\r\n     */\r\n    private advanceKeyState(e: KeyboardEvent) {\r\n        let key = e.key.toLocaleLowerCase();\r\n        // Only acknowledge a key once\r\n        if (this._keyState.endsWith(`.${ key }.`))\r\n            return;\r\n        // Advanced current key state\r\n        clearTimeout(this._callLoop);\r\n        this._keyState += `${ key }.`\r\n        // If inside input field, ignore hotkeys\r\n        if((e.target as any).tagName === \"INPUT\")\r\n            return;\r\n        // Check key state\r\n        if (this._hotkeyIdMap.has(this._keyState)) {\r\n            let hotkey = this._hotkeyIdMap.get(this._keyState)!;\r\n            // Disable browser default behavior if not requested\r\n            if (!hotkey.allowBrowserBehavior)\r\n                e.preventDefault();\r\n            // Execute shortcut\r\n            this.triggerHotkey(hotkey);\r\n        } else {\r\n            // If no key matched, block browser behavior by default\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes a key event from the current key state. \r\n     * @param e\r\n     *  The keyup event.\r\n     */\r\n    private reverseKeyState(e: KeyboardEvent) {\r\n        clearTimeout(this._callLoop);\r\n        let key = e.key.toLocaleLowerCase();\r\n        this._keyState = this._keyState.replace(`.${ key }.`, \".\");\r\n    }\r\n\r\n    /**\r\n     * Triggers the provided hotkey.\r\n     * @param hotkey\r\n     *  The hotkey item to trigger.\r\n     */\r\n    private triggerHotkey(hotkey: Hotkey) {\r\n        if (hotkey.disabled)\r\n            return;\r\n        this._callLoop = setTimeout(() => {\r\n            switch (hotkey.action) {\r\n                case HotkeyAction.RunTask:\r\n                    this._callback(hotkey.id);\r\n                    if (hotkey.repeat)\r\n                        this.runRepeat(hotkey);\r\n                    break;\r\n                case HotkeyAction.ToggleValue:\r\n                    this._callback(hotkey.id, { value: hotkey.value });\r\n                    break;\r\n                case HotkeyAction.OpenLink:\r\n                    window.open(hotkey.link, \"_blank\");\r\n                    this._keyState = \".\";\r\n                    this._callback(hotkey.id);\r\n                    break;\r\n                case HotkeyAction.OpenFile:\r\n                    this._fileInput.click();\r\n                    this._selectedFileId = hotkey.id;\r\n                    this._callback(`__preload_${hotkey.id}`);\r\n                    break;\r\n            }\r\n        }, this._recognitionDelay);\r\n    }\r\n\r\n    /**\r\n     * Fires the provided {@link RunTaskHotkey} at its configured interval.\r\n     * @param info\r\n     *  The hotkey item.\r\n     */\r\n    private runRepeat(info: RunTaskHotkey) {\r\n        let repeat = function (this: any) {\r\n            // Call hotkey callback\r\n            this._callback(info.id);\r\n            // Schedule next call\r\n            this._callLoop = setTimeout(repeat, info.repeat!.interval);\r\n        }.bind(this);\r\n        // Kick off call loop\r\n        this._callLoop = setTimeout(repeat, info.repeat!.delay);\r\n    }\r\n\r\n    /**\r\n     * Completes a file hotkey trigger. \r\n     * @param event\r\n     *  The file read event.\r\n     */\r\n    private readFile(event: Event) {\r\n        let file = (event.target as any).files[0];\r\n        let reader = new FileReader();\r\n        reader.onload = (e: ProgressEvent<FileReader>) => {\r\n            this._callback(this._selectedFileId!, {\r\n                filename: file.name,\r\n                file: e.target?.result\r\n            })\r\n            this._selectedFileId = null;\r\n        }\r\n        reader.readAsText(file);\r\n    }\r\n\r\n    /**\r\n     * Converts a key sequence to its hotkey id.\r\n     * @param sequence\r\n     *  The sequence to evaluate.\r\n     * @returns\r\n     *  The sequence's hotkey id.\r\n     */\r\n    private keySequenceToHotKeyId(sequence: string): string {\r\n        let hotkeyId = sequence\r\n            .toLocaleLowerCase()\r\n            .replace(/\\s+/g, '')\r\n            .split(\"+\")\r\n            .join(\".\");\r\n        return `.${hotkeyId}.`\r\n    }\r\n\r\n}\r\n\r\nexport class OverlappingHotkeysError extends Error {\r\n\r\n    /**\r\n     * Creates a new OverlappingHotkeysError.\r\n     * @param message\r\n     *  The error message.\r\n     */\r\n    constructor(message: string) {\r\n        super(message);\r\n    }\r\n\r\n}\r\n","///////////////////////////////////////////////////////////////////////////////\r\n//  1. Hotkey  ////////////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport enum HotkeyAction {\r\n    RunTask = 0,\r\n    OpenFile = 1,\r\n    OpenLink = 2,\r\n    ToggleValue = 3\r\n}\r\n\r\nexport type Hotkey\r\n    = RunTaskHotkey \r\n    | HotkeyBase<HotkeyAction.OpenFile> \r\n    | OpenLinkHotkey \r\n    | ToggleValueHotkey;\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  2. Generic Hotkey  ////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport interface HotkeyBase<T extends HotkeyAction> {\r\n    id: string,\r\n    action: T;\r\n    shortcut: string,\r\n    disabled?: boolean,\r\n    allowBrowserBehavior?: boolean\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  3. Run Task Hotkey  ///////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport interface RunTaskHotkey extends HotkeyBase<HotkeyAction.RunTask> {\r\n    repeat?: {\r\n        delay: number,\r\n        interval: number\r\n    }\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  4. Open Link Hotkey  //////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\ninterface OpenLinkHotkey extends HotkeyBase<HotkeyAction.OpenLink> {\r\n    link: string\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  5. Toggle Value Hotkey  ///////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\ninterface ToggleValueHotkey extends HotkeyBase<HotkeyAction.ToggleValue> {\r\n    value: boolean\r\n}\r\n","\r\nimport { Hotkey, HotkeyObserver } from \"@/assets/scripts/HotkeyObserver\";\r\nimport { defineComponent, markRaw, PropType, provide } from \"vue\";\r\n\r\nexport default defineComponent({\r\n  name: \"HotkeyBox\",\r\n  provide() {\r\n    return {\r\n\r\n      /**\r\n       * Tests if a hotkey sequence is active.\r\n       * @param sequence\r\n       *  The hotkey sequence.\r\n       * @param strict\r\n       *  [true]\r\n       *   The active keys must match the provided hotkey sequence exactly.\r\n       *  [false]\r\n       *   The active keys only need to contain the provided hotkey sequence.\r\n       *  (Default: true)\r\n       * @returns\r\n       *  True if the provided hotkey sequence is active, false otherwise.\r\n       */\r\n      isHotkeyActive: (sequence: string, strict: boolean = true): boolean => {\r\n        return this.observer.isHotkeyActive(sequence, strict)\r\n      }\r\n\r\n    }\r\n  },\r\n  props: {\r\n    hotkeys: {\r\n      type: Array as PropType<Hotkey[]>,\r\n      default: [],\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      observer: markRaw(new HotkeyObserver(\r\n        (id: string, data?: any) => this.$emit(\"fire\", id, data)\r\n      , 0))\r\n    };\r\n  },\r\n  emits: [\"fire\"],\r\n  watch: {\r\n    // On hotkeys change\r\n    hotkeys() {\r\n      this.observer.setHotkeys(this.hotkeys);\r\n    },\r\n  },\r\n  mounted() {\r\n    this.observer.observe(this.$el);\r\n    this.observer.setHotkeys(this.hotkeys);\r\n  },\r\n});\r\n","import { render } from \"./HotkeyBox.vue?vue&type=template&id=54b3aeda&scoped=true&ts=true\"\nimport script from \"./HotkeyBox.vue?vue&type=script&lang=ts\"\nexport * from \"./HotkeyBox.vue?vue&type=script&lang=ts\"\n\nimport \"./HotkeyBox.vue?vue&type=style&index=0&id=54b3aeda&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\mcarenzo\\\\Desktop\\\\attack-flow-private\\\\src\\\\attack_flow_builder\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-54b3aeda\"]])\n\nexport default __exports__","\r\n// Dependencies\r\nimport { Hotkey } from \"@/assets/scripts/HotkeyObserver\";\r\nimport { defineComponent } from \"vue\";\r\nimport { mapActions, mapGetters } from \"vuex\";\r\n// Components\r\nimport HotkeyBox from \"@/components/Containers/HotkeyBox.vue\";\r\n\r\nexport default defineComponent({\r\n  name: \"AppHotkeyBox\",\r\n  computed: {\r\n\r\n    /**\r\n     * Hotkey Store data\r\n     */\r\n    ...mapGetters(\"HotkeyStore\", [\r\n      \"nativeHotkeys\",\r\n      \"fileHotkeys\",\r\n      \"editHotKeys\",\r\n      \"layoutHotkeys\",\r\n      \"viewHotkeys\"\r\n    ]),\r\n    \r\n    /**\r\n     * Returns the application's hotkeys.\r\n     * @returns\r\n     *  The application's hotkeys.\r\n     */\r\n    hotkeys(): Hotkey[] {\r\n      return [\r\n        ...this.nativeHotkeys, \r\n        ...this.fileHotkeys,\r\n        ...this.editHotKeys,\r\n        ...this.layoutHotkeys,\r\n        ...this.viewHotkeys\r\n      ]\r\n    }\r\n\r\n  },\r\n  methods: {\r\n\r\n    /**\r\n     * App Actions Store actions\r\n     */\r\n    ...mapActions(\"AppActionsStore\", [\"executeAppAction\"]),\r\n\r\n    /**\r\n     * Hotkey fired behavior.\r\n     * @param id\r\n     *  The id of the hotkey action.\r\n     * @param data\r\n     *  Auxillary data included with the action.\r\n     */\r\n    async onHotkeyFired(id: string, data: any) {\r\n      try {\r\n        await this.executeAppAction({ id, data });\r\n      } catch(ex: any) {\r\n        console.error(ex);\r\n      }\r\n    }\r\n\r\n  },\r\n  components: { HotkeyBox }\r\n});\r\n","import { render } from \"./AppHotkeyBox.vue?vue&type=template&id=c0434638&ts=true\"\nimport script from \"./AppHotkeyBox.vue?vue&type=script&lang=ts\"\nexport * from \"./AppHotkeyBox.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"C:\\\\Users\\\\mcarenzo\\\\Desktop\\\\attack-flow-private\\\\src\\\\attack_flow_builder\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ContextMenu = _resolveComponent(\"ContextMenu\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", {\n    class: \"block-diagram-element\",\n    style: _normalizeStyle(_ctx.cursorStyle)\n  }, [\n    (_ctx.menu.show)\n      ? (_openBlock(), _createBlock(_component_ContextMenu, {\n          key: 0,\n          class: \"block-diagram-menu\",\n          style: _normalizeStyle(_ctx.menuStyle),\n          sections: _ctx.menuOptions,\n          onSelect: _ctx.onItemSelect,\n          onUnfocus: _ctx.closeContextMenu\n        }, null, 8, [\"style\", \"sections\", \"onSelect\", \"onUnfocus\"]))\n      : _createCommentVNode(\"\", true)\n  ], 4))\n}","import { resolveComponent as _resolveComponent, createVNode as _createVNode, withModifiers as _withModifiers, normalizeStyle as _normalizeStyle, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ContextMenuListing = _resolveComponent(\"ContextMenuListing\")!\n  const _component_FocusBox = _resolveComponent(\"FocusBox\")!\n\n  return (_openBlock(), _createBlock(_component_FocusBox, {\n    style: _normalizeStyle(_ctx.offset),\n    class: \"context-menu-control\",\n    onUnfocus: _cache[0] || (_cache[0] = ($event: any) => (_ctx.$emit('unfocus'))),\n    onContextmenu: _cache[1] || (_cache[1] = _withModifiers(() => {}, [\"prevent\"]))\n  }, {\n    default: _withCtx(() => [\n      _createVNode(_component_ContextMenuListing, {\n        sections: _ctx.sections,\n        select: (id, _, data) => _ctx.$emit('select', id, data),\n        forceInsideWindow: false\n      }, null, 8, [\"sections\", \"select\"])\n    ]),\n    _: 1\n  }, 8, [\"style\"]))\n}","\r\n// Dependencies\r\nimport { defineComponent, PropType } from 'vue';\r\nimport { ContextMenuSection } from \"@/assets/scripts/ContextMenuTypes\";\r\n// Components\r\nimport FocusBox from \"@/components/Containers/FocusBox.vue\";\r\nimport ContextMenuListing from \"./ContextMenuListing.vue\";\r\n\r\nexport default defineComponent({\r\n  name: 'ContextMenu',\r\n  props: {\r\n    sections: {\r\n      type: Array as PropType<ContextMenuSection[]>,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      xOffset: 0,\r\n      yOffset: 0,\r\n    }\r\n  },\r\n  computed: {\r\n\r\n    /**\r\n     * Returns the ContextMenu's offset styling.\r\n     * @returns\r\n     *  The ContextMenu's offset styling.\r\n     */\r\n    offset(): { marginTop: string, marginLeft: string } {\r\n      return {\r\n        marginTop: `${ this.yOffset }px`,\r\n        marginLeft: `${ this.xOffset }px`\r\n      }\r\n    }\r\n\r\n  },\r\n  emits: [\"select\", \"unfocus\"],\r\n  mounted() {\r\n    // Offset menu if outside of viewport\r\n    let viewWidth  = window.innerWidth;\r\n    let viewHeight = window.innerHeight;\r\n    let { bottom, right } = this.$el.getBoundingClientRect();\r\n    // -1 ensures cursor is over menu and not the element beneath it\r\n    this.xOffset = right > viewWidth ? -(this.$el.clientWidth - 1) : 0;\r\n    this.yOffset = bottom > viewHeight ? -(this.$el.clientHeight - 1) : 0;\r\n  },\r\n  components: { FocusBox, ContextMenuListing }\r\n});\r\n","import { render } from \"./ContextMenu.vue?vue&type=template&id=6ed3d4b3&scoped=true&ts=true\"\nimport script from \"./ContextMenu.vue?vue&type=script&lang=ts\"\nexport * from \"./ContextMenu.vue?vue&type=script&lang=ts\"\n\nimport \"./ContextMenu.vue?vue&type=style&index=0&id=6ed3d4b3&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\mcarenzo\\\\Desktop\\\\attack-flow-private\\\\src\\\\attack_flow_builder\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6ed3d4b3\"]])\n\nexport default __exports__","\r\nimport * as Store from \"@/store/StoreTypes\";\r\n// Dependencies\r\nimport { defineComponent, inject, markRaw } from 'vue';\r\nimport { mapActions, mapGetters, mapState } from \"vuex\";\r\nimport { ContextMenuSection } from \"@/assets/scripts/ContextMenuTypes\";\r\nimport { \r\n  BlockDiagram,Cursor, CursorCssName,\r\n  DiagramObjectModel, MouseClick, PageModel\r\n} from \"@/assets/scripts/BlockDiagram\";\r\n// Components\r\nimport ContextMenu from \"@/components/Controls/ContextMenu.vue\";\r\n\r\nexport default defineComponent({\r\n  name: 'BlockDiagram',\r\n  setup() {\r\n    return {\r\n      isHotkeyActive: inject(\"isHotkeyActive\") as \r\n        (sequence: string, strict?: boolean) => boolean\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      cursor: Cursor.Default,\r\n      diagram: markRaw(new BlockDiagram()),\r\n      menu: {\r\n        x: 0,\r\n        y: 0,\r\n        show: false,\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n\r\n    /**\r\n     * Active Page Store data\r\n     */\r\n    ...mapState(\"ActivePageStore\", {\r\n      page(state: Store.ActivePageStore): PageModel {\r\n        return state.page.ref;\r\n      },\r\n      hovers(state: Store.ActivePageStore): DiagramObjectModel[] {\r\n        return state.hovers;\r\n      },\r\n      selects(state: Store.ActivePageStore): number {\r\n        return state.selects.trigger;\r\n      },\r\n      pageUpdate(state: Store.ActivePageStore): number {\r\n        return state.page.trigger;\r\n      }\r\n    }),\r\n\r\n    ...mapGetters(\"ActivePageStore\", [\"hasSelection\"]),\r\n    \r\n    /**\r\n     * App Settings Store data\r\n     */\r\n    ...mapState(\"AppSettingsStore\", {\r\n      displayGrid(state: Store.AppSettingsStore): boolean {\r\n        return state.settings.view.diagram.display_grid;\r\n      },\r\n      displayShadows(state: Store.AppSettingsStore): boolean {\r\n        return state.settings.view.diagram.display_shadows;\r\n      },\r\n      displayDebugMode(state: Store.AppSettingsStore): boolean {\r\n        return state.settings.view.diagram.display_debug_mode;\r\n      },\r\n      renderHighQuality(state: Store.AppSettingsStore): boolean {\r\n        return state.settings.view.diagram.render_high_quality;\r\n      },\r\n      disableShadowsAt(state: Store.AppSettingsStore): number {\r\n        return state.settings.view.diagram.disable_shadows_at;\r\n      },\r\n      multiselectHotkey(state: Store.AppSettingsStore): string {\r\n        return state.settings.hotkeys.select.many;\r\n      }\r\n    }),\r\n\r\n    /**\r\n     * Context Menu Store data\r\n     */\r\n    ...mapGetters(\"ContextMenuStore\", [\r\n      \"deleteMenu\",\r\n      \"clipboardMenu\",\r\n      \"duplicateMenu\",\r\n      \"layeringMenu\",\r\n      \"jumpMenu\",\r\n      \"createMenu\",\r\n      \"undoRedoMenu\",\r\n      \"selectAllMenu\",\r\n      \"zoomMenu\",\r\n      \"diagramViewMenu\"\r\n    ]),\r\n\r\n    /**\r\n     * Returns the current cursor style.\r\n     * @returns\r\n     *  The current cursor style.\r\n     */\r\n    cursorStyle(): { cursor: string } {\r\n      return { cursor: CursorCssName[this.cursor] }\r\n    },\r\n\r\n    /**\r\n     * Returns the context menu's style.\r\n     * @returns\r\n     *  The context menu's style.\r\n     */\r\n    menuStyle(): { top: string; left: string } {\r\n      return {\r\n        top: `${this.menu.y}px`,\r\n        left: `${this.menu.x}px`,\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Returns the context menu options.\r\n     * @returns\r\n     *  The context menu options.\r\n     */\r\n    menuOptions(): ContextMenuSection[] {\r\n      if(this.hasSelection) {\r\n        return [\r\n          this.deleteMenu,\r\n          this.clipboardMenu,\r\n          this.duplicateMenu,\r\n          this.layeringMenu,\r\n          this.jumpMenu\r\n        ];\r\n      } else {\r\n        return [\r\n          this.undoRedoMenu,\r\n          this.createMenu,\r\n          this.selectAllMenu,\r\n          this.zoomMenu,\r\n          this.diagramViewMenu\r\n        ];\r\n      }\r\n    }\r\n\r\n  },\r\n  methods: {\r\n\r\n    /**\r\n     * Active Page Store actions\r\n     */\r\n    ...mapActions(\"ActivePageStore\", [\r\n      \"select\", \"unselectAll\", \"attach\", \"detach\", \"hover\",\r\n      \"unhoverAll\", \"moveBy\", \"addLineObject\", \"moveCameraTo\",\r\n      \"setViewTransform\"\r\n    ]),\r\n\r\n    /**\r\n     * App Actions Store actions\r\n     */\r\n    ...mapActions(\"AppActionsStore\", [\"executeAppAction\"]),\r\n\r\n    /**\r\n     * Menu item selection behavior.\r\n     * @param id\r\n     *  The id of the selected menu.\r\n     * @param data\r\n     *  Auxillary data included with the selection.\r\n     */\r\n    onItemSelect(id: string, data: any) {\r\n      try {\r\n        if(id === \"create_object\") {\r\n          this.executeAppAction({ \r\n            id, data: { ...data, x: this.menu.x, y: this.menu.y }\r\n          });\r\n        } else {\r\n          this.executeAppAction({ \r\n            id, data\r\n          });\r\n        }\r\n      } catch(ex) {\r\n        console.error(ex);\r\n      }\r\n      this.closeContextMenu();\r\n    },\r\n\r\n    /**\r\n     * Opens the context menu.\r\n     * @param x\r\n     *  The menu's x coordinate (relative to the container).\r\n     * @param y\r\n     *  The menu's y coordinate (relative to the container).\r\n     */\r\n    openContextMenu(x: number, y: number) {\r\n      // Allow unfocus event to run first (if context\r\n      // menu is already present) then show context menu.\r\n      requestAnimationFrame(() => {\r\n        this.menu.show = true;\r\n        this.menu.x = x;\r\n        this.menu.y = y;\r\n      })\r\n    },\r\n\r\n    /**\r\n     * Closes the context menu.\r\n     */\r\n    closeContextMenu() {\r\n      this.menu.show = false;\r\n    },\r\n\r\n  },\r\n  watch: {\r\n    // On page change\r\n    page() {\r\n      this.diagram.setPage(markRaw(this.page));\r\n      this.diagram.updateView(0);\r\n    },\r\n    // On hover change\r\n    hovers() {\r\n      this.diagram.render();\r\n    },\r\n    // On select change\r\n    selects() {\r\n      this.diagram.render();\r\n    },\r\n    // On page update\r\n    pageUpdate() {\r\n      this.diagram.updateView();\r\n    },\r\n    // On display grid change\r\n    displayGrid() {\r\n      this.diagram.setGridDisplay(this.displayGrid);\r\n      this.diagram.render();\r\n    },\r\n    // On display shadows change\r\n    displayShadows() {\r\n      this.diagram.setShadowsDisplay(this.displayShadows);\r\n      this.diagram.render();\r\n    },\r\n    // On display debug change\r\n    displayDebugMode() {\r\n      this.diagram.setDebugDisplay(this.displayDebugMode);\r\n      this.diagram.render();\r\n    },\r\n    // On render quality change\r\n    renderHighQuality() {\r\n      this.diagram.setSsaaScale(this.renderHighQuality ? 2 : 1);\r\n      this.diagram.render();\r\n    },\r\n    // On 'disable shadows at' change\r\n    disableShadowsAt() {\r\n      this.diagram.setShadowsDisableAt(this.disableShadowsAt);\r\n      this.diagram.render();\r\n    }\r\n  },\r\n  mounted() {\r\n    \r\n    // Subscribe to diagram events\r\n    this.diagram.on(\"object-hover\", (obj, cursor) => {\r\n      this.cursor = cursor;\r\n      if(obj) {\r\n        this.hover(obj.id);\r\n      } else {\r\n        this.unhoverAll();\r\n      }\r\n    });\r\n    this.diagram.on(\"object-click\", (evt, obj, x, y) => {\r\n      // Unselect last item, if needed\r\n      if(\r\n        !this.isHotkeyActive(this.multiselectHotkey) &&\r\n        !obj.isSelected()\r\n      ) {\r\n        this.unselectAll();\r\n      }\r\n      // Select item\r\n      this.select(obj.id);\r\n      // Open context menu, if needed\r\n      if (evt.button === MouseClick.Right) {\r\n        this.openContextMenu(x, y);\r\n      }\r\n    });\r\n    this.diagram.on(\"canvas-click\", (evt, x, y) => {\r\n      this.unselectAll();\r\n      if (evt.button === MouseClick.Right) {\r\n        this.openContextMenu(x, y);\r\n      }\r\n    });\r\n    this.diagram.on(\"canvas-transform\", (x, y, k) => {\r\n        this.setViewTransform({ x, y, k });\r\n    });\r\n    this.diagram.on(\"object-move\", (objs, dx, dy) => {\r\n      this.moveBy({ objects: objs.map(o => o.id), dx, dy });\r\n    });\r\n    this.diagram.on(\"object-attach\", (object, anchor) => {\r\n      this.attach({ object: object.id, anchor: anchor.id });\r\n    });\r\n    this.diagram.on(\"object-detach\", (obj, dx, dy) => {\r\n      this.detach({ object: obj.id, dx, dy });\r\n    });\r\n    this.diagram.on(\"line-create\", (obj, par, src, trg) => {\r\n      this.addLineObject({\r\n        object: obj,\r\n        source: src.id,\r\n        target: trg?.id,\r\n        parent: par.id\r\n      });\r\n      this.unselectAll();\r\n      this.select(obj.id);\r\n    });\r\n    this.diagram.on(\"camera-move\", (location) => {\r\n      this.moveCameraTo(location);\r\n    });\r\n\r\n    // Configure the current page\r\n    this.diagram.setGridDisplay(this.displayGrid);\r\n    this.diagram.setShadowsDisplay(this.displayShadows);\r\n    this.diagram.setDebugDisplay(this.displayDebugMode);\r\n    this.diagram.setSsaaScale(this.renderHighQuality ? 2 : 1);\r\n    this.diagram.setShadowsDisableAt(this.disableShadowsAt);\r\n    this.diagram.setPage(markRaw(this.page));\r\n    \r\n    // Inject the diagram\r\n    this.diagram.inject(this.$el);\r\n\r\n  },\r\n  unmounted() {\r\n    this.diagram.destroy();\r\n  },\r\n  components: { ContextMenu }\r\n});\r\n","import { render } from \"./BlockDiagram.vue?vue&type=template&id=40949232&scoped=true&ts=true\"\nimport script from \"./BlockDiagram.vue?vue&type=script&lang=ts\"\nexport * from \"./BlockDiagram.vue?vue&type=script&lang=ts\"\n\nimport \"./BlockDiagram.vue?vue&type=style&index=0&id=40949232&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\mcarenzo\\\\Desktop\\\\attack-flow-private\\\\src\\\\attack_flow_builder\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-40949232\"]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-0ec2c908\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"app-footer-bar-element\" }\nconst _hoisted_2 = { class: \"info left\" }\nconst _hoisted_3 = { class: \"selected\" }\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"Selected:\", -1))\nconst _hoisted_5 = { class: \"info right\" }\nconst _hoisted_6 = {\n  key: 0,\n  class: \"page-check valid\"\n}\nconst _hoisted_7 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"✓\", -1))\nconst _hoisted_8 = {\n  key: 1,\n  class: \"page-check invalid\"\n}\nconst _hoisted_9 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"⚠\", -1))\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"p\", _hoisted_3, [\n        _hoisted_4,\n        _createTextVNode(\" \" + _toDisplayString(_ctx.selects), 1)\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_5, [\n      (_ctx.isPageValid)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [\n            _hoisted_7,\n            _createTextVNode(\" Valid \" + _toDisplayString(_ctx.fileName), 1)\n          ]))\n        : (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [\n            _hoisted_9,\n            _createTextVNode(\" Invalid \" + _toDisplayString(_ctx.fileName), 1)\n          ]))\n    ])\n  ]))\n}","\r\nimport * as Store from \"@/store/StoreTypes\";\r\n// Dependencies\r\nimport { defineComponent } from \"vue\";\r\nimport { mapGetters, mapState } from \"vuex\";\r\nimport Configuration from \"@/assets/builder.config\";\r\n\r\nexport default defineComponent({\r\n  name: \"AppFooterBar\",\r\n  data(){\r\n    return {\r\n      fileName: Configuration.file_type_name\r\n    }\r\n  },\r\n  computed: {\r\n\r\n    /**\r\n     * Active Page Store data\r\n     */\r\n    ...mapState(\"ActivePageStore\", {\r\n      selects(state: Store.ActivePageStore): number {\r\n        // Using trigger to trip the reactivity system\r\n        if(1 + state.selects.trigger === 0) {\r\n          return 0;  // Will never run\r\n        }\r\n        return state.selects.ref.size;\r\n      },\r\n    }),\r\n\r\n    ...mapGetters(\"ActivePageStore\", [\"isPageValid\"]),\r\n    \r\n  }\r\n});\r\n","import { render } from \"./AppFooterBar.vue?vue&type=template&id=0ec2c908&scoped=true&ts=true\"\nimport script from \"./AppFooterBar.vue?vue&type=script&lang=ts\"\nexport * from \"./AppFooterBar.vue?vue&type=script&lang=ts\"\n\nimport \"./AppFooterBar.vue?vue&type=style&index=0&id=0ec2c908&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\mcarenzo\\\\Desktop\\\\attack-flow-private\\\\src\\\\attack_flow_builder\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0ec2c908\"]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ObjectEditor = _resolveComponent(\"ObjectEditor\")!\n  const _component_Tab = _resolveComponent(\"Tab\")!\n  const _component_TabBox = _resolveComponent(\"TabBox\")!\n\n  return (_openBlock(), _createBlock(_component_TabBox, {\n    class: \"editor-tabs-element\",\n    modelValue: _ctx.active,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.active) = $event))\n  }, {\n    default: _withCtx(() => [\n      _createVNode(_component_Tab, {\n        class: \"object-properties\",\n        name: \"Properties\"\n      }, {\n        default: _withCtx(() => [\n          _createVNode(_component_ObjectEditor)\n        ]),\n        _: 1\n      })\n    ]),\n    _: 1\n  }, 8, [\"modelValue\"]))\n}","import { renderSlot as _renderSlot, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-450513ef\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = {\n  key: 0,\n  class: \"tab-container\"\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_ctx.isActive)\n    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        _renderSlot(_ctx.$slots, \"default\", {}, undefined, true)\n      ]))\n    : _createCommentVNode(\"\", true)\n}","\r\nimport { \r\n  inject,\r\n  computed,\r\n  watchEffect,\r\n  defineComponent, \r\n  getCurrentInstance, \r\n  ComponentInternalInstance\r\n} from \"vue\";\r\n\r\nexport default defineComponent({\r\n  name: \"Tab\",\r\n  setup() {\r\n\r\n    // Get tabsState from ancestor\r\n    let instance = getCurrentInstance()!;\r\n    let tabsState = inject(\"tabsState\") as { active: any, tabs: any } | undefined;\r\n\r\n    // Load tabState\r\n    if(tabsState === undefined) {\r\n      throw new TypeError(\"<Tab> can only be used within a <TabBox>.\");\r\n    }\r\n    let { active, tabs } = tabsState;\r\n\r\n    // Create reactive state properties\r\n    let index = computed(() => {\r\n      return tabs.value.findIndex(\r\n        (target: ComponentInternalInstance) => \r\n          target.props.name === instance.props.name)\r\n      }\r\n    )\r\n    let isActive = computed(() => index.value === active.value)\r\n\r\n    // Add tab if not present in list\r\n    watchEffect(() => {\r\n      if(index.value === -1) {\r\n        tabs.value.push(instance);\r\n      }\r\n    })\r\n\r\n    // Return properties\r\n    return { isActive }\r\n\r\n  },\r\n  props: {\r\n    name: {\r\n      type: String,\r\n      required: true \r\n    }\r\n  }\r\n});\r\n","import { render } from \"./Tab.vue?vue&type=template&id=450513ef&scoped=true&ts=true\"\nimport script from \"./Tab.vue?vue&type=script&lang=ts\"\nexport * from \"./Tab.vue?vue&type=script&lang=ts\"\n\nimport \"./Tab.vue?vue&type=style&index=0&id=450513ef&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\mcarenzo\\\\Desktop\\\\attack-flow-private\\\\src\\\\attack_flow_builder\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-450513ef\"]])\n\nexport default __exports__","import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, renderSlot as _renderSlot, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-2649b21e\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"tab-box-container\" }\nconst _hoisted_2 = { class: \"tab-box-header\" }\nconst _hoisted_3 = [\"onClick\"]\nconst _hoisted_4 = { class: \"tab-box-body\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.tabs, (tab, i) => {\n        return (_openBlock(), _createElementBlock(\"li\", {\n          key: i,\n          class: _normalizeClass(['tab-link', { active: _ctx.active === i }]),\n          onClick: ($event: any) => (_ctx.select(i))\n        }, [\n          _createElementVNode(\"p\", null, _toDisplayString(tab.props.name), 1)\n        ], 10, _hoisted_3))\n      }), 128)),\n      (_ctx.canClose)\n        ? (_openBlock(), _createElementBlock(\"li\", {\n            key: 0,\n            class: \"close-link\",\n            onClick: _cache[0] || (_cache[0] = ($event: any) => (_ctx.$emit('close')))\n          }, \"✗\"))\n        : _createCommentVNode(\"\", true)\n    ]),\n    _createElementVNode(\"div\", _hoisted_4, [\n      _renderSlot(_ctx.$slots, \"default\", {}, undefined, true)\n    ])\n  ]))\n}","\r\nimport { ref, provide, computed, defineComponent } from \"vue\";\r\n\r\nexport default defineComponent({\r\n  name: \"TabBox\",\r\n  setup(props, { emit }) {\r\n\r\n    // Create reactive state properties\r\n    let active = computed(() => props.modelValue);\r\n    let tabs = ref([]);\r\n\r\n    // Provide them to descendants\r\n    provide(\"tabsState\", { active, tabs });\r\n    \r\n    // Define tab selection function\r\n    function select(tab: number) {\r\n      emit(\"update:modelValue\", tab);\r\n    }\r\n    \r\n    // Return properties\r\n    return { active, tabs, select }\r\n  \r\n  },\r\n  props: {\r\n    canClose: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    modelValue: {\r\n      type: [String, Number],\r\n    },\r\n  },\r\n  emits: [\"update:modelValue\", \"close\"],\r\n});\r\n","import { render } from \"./TabBox.vue?vue&type=template&id=2649b21e&scoped=true&ts=true\"\nimport script from \"./TabBox.vue?vue&type=script&lang=ts\"\nexport * from \"./TabBox.vue?vue&type=script&lang=ts\"\n\nimport \"./TabBox.vue?vue&type=style&index=0&id=2649b21e&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\mcarenzo\\\\Desktop\\\\attack-flow-private\\\\src\\\\attack_flow_builder\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2649b21e\"]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, Fragment as _Fragment, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-2fefc0d5\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"object-editor-element\" }\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\" Nothing \")\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_DictionaryFieldContents = _resolveComponent(\"DictionaryFieldContents\")!\n  const _component_ScrollBox = _resolveComponent(\"ScrollBox\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    (_ctx.selected)\n      ? (_openBlock(), _createBlock(_component_ScrollBox, {\n          key: 0,\n          class: \"scrollbox\",\n          alwaysShowScrollBar: true,\n          scrollColor: \"#1f1f1f\"\n        }, {\n          default: _withCtx(() => [\n            _createVNode(_component_DictionaryFieldContents, {\n              class: \"contents\",\n              property: _ctx.property,\n              onChange: _ctx.onChange\n            }, null, 8, [\"property\", \"onChange\"])\n          ]),\n          _: 1\n        }))\n      : (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, [\n          _hoisted_2\n        ], 64))\n  ]))\n}","import { renderSlot as _renderSlot, createElementVNode as _createElementVNode, vShow as _vShow, normalizeStyle as _normalizeStyle, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-8005e880\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"scrollbox-container\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", {\n      ref: \"content\",\n      class: \"scroll-content\",\n      onWheelPassive: _cache[0] || (_cache[0] = ($event: any) => (_ctx.moveScrollPosition(_ctx.scrollTop + $event.deltaY, $event)))\n    }, [\n      _renderSlot(_ctx.$slots, \"default\", {}, undefined, true)\n    ], 544),\n    _withDirectives(_createElementVNode(\"div\", {\n      class: \"scroll-bar\",\n      style: _normalizeStyle(_ctx.scroll.sty),\n      onWheelPassive: _cache[3] || (_cache[3] = ($event: any) => (_ctx.moveScrollPosition(_ctx.scrollTop + $event.deltaY, $event)))\n    }, [\n      _withDirectives(_createElementVNode(\"div\", {\n        class: \"scroll-handle\",\n        style: _normalizeStyle(_ctx.handle.sty),\n        onPointerdown: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.startDrag && _ctx.startDrag(...args))),\n        onPointerup: _cache[2] || (_cache[2] = \n//@ts-ignore\n(...args) => (_ctx.stopDrag && _ctx.stopDrag(...args)))\n      }, null, 36), [\n        [_vShow, _ctx.showScrollbar]\n      ])\n    ], 36), [\n      [_vShow, _ctx.alwaysShowScrollBar || _ctx.showScrollbar]\n    ])\n  ]))\n}","export class PointerTracker {\r\n\r\n    /**\r\n     * The pointer's total delta-x.\r\n     */\r\n    public deltaX: number;\r\n\r\n    /**\r\n     * The pointer's total delta-y.\r\n     */\r\n    public deltaY: number;\r\n\r\n    /**\r\n     * The pointer's current delta-x.\r\n     */\r\n    public movementX: number;\r\n\r\n    /**\r\n     * The pointer's current delta-y.\r\n     */\r\n    public movementY: number;\r\n    \r\n    /**\r\n     * The drag target.\r\n     */\r\n    public target: HTMLElement | null;\r\n\r\n    /**\r\n     * The pointer's origin on the x-axis.\r\n     */\r\n    private _originX: number;\r\n\r\n    /**\r\n     * The pointer's origin on the y-axis.\r\n     */\r\n    private _originY: number;\r\n\r\n    /**\r\n     * The pointer's last position on the x-axis.\r\n     */\r\n    private _lastX: number;\r\n\r\n    /**\r\n     * The pointer's last position on the y-axis.\r\n     */\r\n    private _lastY: number;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link PointerTracker}.\r\n     */\r\n    constructor() {\r\n        this.deltaX = 0;\r\n        this.deltaY = 0;\r\n        this.movementX = 0;\r\n        this.movementY = 0;\r\n        this.target = null;\r\n        this._originX = 0;\r\n        this._originY = 0;\r\n        this._lastX = 0;\r\n        this._lastY = 0;\r\n    }\r\n\r\n\r\n    /**\r\n     * Captures the pointer and resets the pointer tracker.\r\n     * @param event\r\n     *  The pointer down event.\r\n     * @param callback\r\n     *  The function to call on pointer movement.\r\n     */\r\n    public capture(event: PointerEvent, callback: (e: PointerEvent, t: PointerTracker) => void) {\r\n        this._originX = event.clientX;\r\n        this._originY = event.clientY;\r\n        this._lastX = this._originX;\r\n        this._lastY = this._originY;\r\n        this.target = event.target as HTMLElement;\r\n        this.target.setPointerCapture(event.pointerId);\r\n        this.target.onpointermove = (e) => {\r\n            this.update(e);\r\n            callback(e, this);\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Updates the pointer tracker.\r\n     * @param event\r\n     *  The pointer move event.\r\n     */\r\n    private update(event: PointerEvent) {\r\n        this.deltaX = event.clientX - this._originX;\r\n        this.deltaY = event.clientY - this._originY;\r\n        this.movementX = event.clientX - this._lastX;\r\n        this.movementY = event.clientY - this._lastY;\r\n        this._lastX = event.clientX;\r\n        this._lastY = event.clientY;\r\n    }\r\n\r\n    /**\r\n     * Releases the current pointer.\r\n     * @param event\r\n     *  The pointer up event.\r\n     */\r\n    public release(event: PointerEvent) {\r\n        if(this.target !== null) {\r\n            this.target.releasePointerCapture(event.pointerId);\r\n            this.target.onpointermove = null;\r\n            this.target = null;\r\n        }\r\n    }\r\n\r\n}\r\n","\r\nimport { clamp } from \"@/assets/scripts/BlockDiagram\";\r\nimport { PointerTracker } from \"@/assets/scripts/PointerTracker\";\r\nimport { defineComponent, markRaw, Ref, ref } from 'vue';\r\n\r\nexport default defineComponent({\r\n  name: \"ScrollBox\",\r\n  setup() {\r\n    return { \r\n      content: ref(null) as Ref<HTMLElement | null> \r\n    }\r\n  },\r\n  props: {\r\n    resetScrollOnChange: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    alwaysShowScrollBar: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    handleColor: {\r\n      type: String,\r\n      default: \"#333333\"\r\n    },\r\n    scrollColor: {\r\n      type: String,\r\n      default: \"none\"\r\n    },\r\n    borderColor: {\r\n      type: String,\r\n      default: \"#404040\"\r\n    },\r\n    width: {\r\n      type: Number,\r\n      default: 17\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      scrollTop: 0,\r\n      windowMax: 0,\r\n      scroll: {\r\n        sty: { \r\n          width: `${this.width}px`,\r\n          background: this.scrollColor\r\n        },\r\n      },\r\n      handle: {\r\n        trk: markRaw(new PointerTracker()),\r\n        hei: 0, \r\n        max: 0, \r\n        pos: 0,\r\n        sty: { \r\n          height: \"0px\", \r\n          transform: \"translateY(0px)\", \r\n          background: this.handleColor, \r\n          borderColor: this.borderColor,\r\n        },\r\n      },\r\n      showScrollbar: false,\r\n      onResizeObserver: null as ResizeObserver | null,\r\n      onMutateObserver: null as MutationObserver | null,\r\n    };\r\n  },\r\n  methods: {\r\n\r\n    /**\r\n     * Scroll handle drag start behavior.\r\n     * @param event\r\n     *  The pointer event.\r\n     */\r\n    startDrag(event: PointerEvent) {\r\n      this.handle.trk.capture(event, this.onDrag);\r\n      document.addEventListener(\"pointerup\", this.stopDrag, { once: true });\r\n    },\r\n\r\n    /**\r\n     * Scroll handle drag behavior.\r\n     * @param event\r\n     *  The pointer event.\r\n     * @param track\r\n     *  The mouse tracker.\r\n     */\r\n    onDrag(_: PointerEvent, track: PointerTracker) {\r\n      this.moveScrollPosition(\r\n        this.handleTopToTop(this.handle.pos + track.movementY)\r\n      );\r\n    },\r\n\r\n    /**\r\n     * Scroll handle drag stop behavior.\r\n     * @param event\r\n     *  The pointer event.\r\n     */\r\n    stopDrag(event: PointerEvent) {\r\n      this.handle.trk.release(event);\r\n    },\r\n\r\n    /**\r\n     * Calculates and configures the parameters required to mimic scrolling.\r\n     * \r\n     * NOTE:\r\n     * This function should be called anytime:\r\n     *  - The height of the scroll box changes.\r\n     *  - The height of the scroll content changes.\r\n     * \r\n     * @param resetTop\r\n     *  [true]\r\n     *   The scroll position will be set to 0, after recalculation.\r\n     *  [false]\r\n     *   The scroll position will go to its original spot, after recalculation.\r\n     *  (Default: true)\r\n     */\r\n    recalculateScrollState(resetTop: boolean = true) {\r\n      let showScrollbar = this.showScrollbar;\r\n      let content = this.content!;\r\n      // Ignore scroll content with no height\r\n      if(content.clientHeight === 0) {\r\n       this.showScrollbar = false;\r\n       return;\r\n      }\r\n      // Compute ratio\r\n      let ratio = content.clientHeight / content.scrollHeight;\r\n      // Update scroll state (-4 for the 2px of padding around the scrollbar)\r\n      this.handle.hei = Math.max(15, Math.round((content.clientHeight - 4) * ratio));\r\n      this.handle.max = content.clientHeight - this.handle.hei - 4;\r\n      this.windowMax = content.scrollHeight - content.clientHeight;\r\n      // Update scroll handle\r\n      this.showScrollbar = ratio !== 1;\r\n      this.handle.sty.height = `${this.handle.hei}px`;\r\n      // Update scroll position\r\n      this.moveScrollPosition(resetTop ? 0 : content.scrollTop);\r\n      // If scrollbar added, recalculate state after scrollbar applied\r\n      if(!showScrollbar && this.showScrollbar) {\r\n        setTimeout(() => this.recalculateScrollState(resetTop), 0);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Moves the scroll position.\r\n     * @param position\r\n     *  The new scroll position.\r\n     * @param event\r\n     *  The scroll wheel event, if applicable.\r\n     */\r\n    moveScrollPosition(position: number, event: WheelEvent | null = null) {\r\n      let scrollTop = this.scrollTop;\r\n      this.scrollTop = clamp(position, 0, this.windowMax);\r\n      this.handle.pos = this.topToHandleTop(this.scrollTop);\r\n      this.handle.sty.transform = `translateY(${this.handle.pos}px)`;\r\n      this.content!.scrollTop = this.scrollTop;\r\n      // Selectively propagate scroll event\r\n      let hasMoved = scrollTop - this.scrollTop !== 0;\r\n      if(hasMoved || 0 < this.scrollTop && this.scrollTop < this.windowMax) {\r\n        event?.stopPropagation();\r\n      }\r\n    },\r\n    \r\n    /**\r\n     * Calculates the scroll handle position from the scroll position.\r\n     * @param top\r\n     *  The current scroll position.\r\n     * @returns\r\n     *  The calculated scroll handle position.\r\n     */\r\n    topToHandleTop(top: number): number {\r\n      return (top / this.windowMax) * this.handle.max;\r\n    },\r\n\r\n    /**\r\n     * Calculates the scroll position from the scroll handle position.\r\n     * @param top\r\n     *  The current scroll handle position.\r\n     * @returns\r\n     *  The calculated scroll position.\r\n     */\r\n    handleTopToTop(top: number): number {\r\n      return (top / this.handle.max) * this.windowMax;\r\n    }\r\n\r\n  },\r\n  mounted() {\r\n    // Configure mutation observer\r\n    let mutateOptions = { childList: true, characterData: true, subtree: true };\r\n    this.onMutateObserver = new MutationObserver(() =>\r\n      this.recalculateScrollState(this.resetScrollOnChange)\r\n    );\r\n    // Configure resize observer\r\n    this.onResizeObserver = new ResizeObserver(() =>\r\n      this.recalculateScrollState(false)\r\n    );\r\n    this.onResizeObserver.observe(this.$el);\r\n    this.onMutateObserver.observe(this.content!, mutateOptions);\r\n  },\r\n  unmounted() {\r\n    this.onResizeObserver!.disconnect();\r\n    this.onMutateObserver!.disconnect();\r\n  },\r\n});\r\n","import { render } from \"./ScrollBox.vue?vue&type=template&id=8005e880&scoped=true&ts=true\"\nimport script from \"./ScrollBox.vue?vue&type=script&lang=ts\"\nexport * from \"./ScrollBox.vue?vue&type=script&lang=ts\"\n\nimport \"./ScrollBox.vue?vue&type=style&index=0&id=8005e880&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\mcarenzo\\\\Desktop\\\\attack-flow-private\\\\src\\\\attack_flow_builder\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-8005e880\"]])\n\nexport default __exports__","\r\nimport * as Store from \"@/store/StoreTypes\";\r\n// Dependencies\r\nimport { defineComponent } from \"vue\";\r\nimport { mapActions, mapState } from \"vuex\";\r\nimport {\r\n    DiagramObjectModel,\r\n    DictionaryBlockModel,\r\n    DictionaryProperty,\r\n    Property\r\n} from \"@/assets/scripts/BlockDiagram\";\r\n// Components\r\nimport ScrollBox from \"@/components/Containers/ScrollBox.vue\";\r\nimport DictionaryFieldContents from \"@/components/Controls/Fields/DictionaryFieldContents.vue\";\r\n\r\nexport default defineComponent({\r\n  name: \"ObjectEditor\",\r\n  computed: {\r\n\r\n    /**\r\n     * Active Page Store data\r\n     */\r\n    ...mapState(\"ActivePageStore\", {\r\n      selects(state: Store.ActivePageStore): Map<string, DiagramObjectModel> {\r\n        return state.selects.ref;\r\n      },\r\n      selectTrigger(state: Store.ActivePageStore): number {\r\n        return state.selects.trigger;\r\n      },\r\n      pageUpdate(state: Store.ActivePageStore): number {\r\n        return state.page.trigger;\r\n      }\r\n    }),\r\n\r\n    selected(): DictionaryBlockModel | undefined {\r\n        // Using trigger to trip the reactivity system\r\n        if(1 + this.selectTrigger === 0) {\r\n          return undefined;  // Will never run\r\n        }\r\n        if(this.selects.size === 1) {\r\n            let item = this.selects.values().next().value;\r\n            if(item instanceof DictionaryBlockModel) {\r\n                return item;\r\n            }\r\n        }\r\n        return undefined;\r\n    },\r\n\r\n    property(): DictionaryProperty | undefined {\r\n        // Using trigger to trip the reactivity system\r\n        if(1 + this.pageUpdate === 0) {\r\n          return undefined;  // Will never run\r\n        }\r\n        return this.selected?.props;\r\n    }\r\n\r\n  },\r\n  methods: {\r\n\r\n    /**\r\n     * App Actions Store actions\r\n     */\r\n    ...mapActions(\"AppActionsStore\", [\"executeAppAction\"]),\r\n    \r\n    /**\r\n     * Active Page Store actions\r\n     */\r\n    ...mapActions(\"ActivePageStore\", [\"setObjectProperty\"]),\r\n\r\n    onChange(property: Property, value: any) {\r\n      // TODO: All this is really ugly, for now, please ignore\r\n      this.setObjectProperty({\r\n        object: this.selected!.id,property, value\r\n      });\r\n    }\r\n\r\n  },\r\n  components: { ScrollBox, DictionaryFieldContents }\r\n});\r\n","import { render } from \"./ObjectEditor.vue?vue&type=template&id=2fefc0d5&scoped=true&ts=true\"\nimport script from \"./ObjectEditor.vue?vue&type=script&lang=ts\"\nexport * from \"./ObjectEditor.vue?vue&type=script&lang=ts\"\n\nimport \"./ObjectEditor.vue?vue&type=style&index=0&id=2fefc0d5&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\mcarenzo\\\\Desktop\\\\attack-flow-private\\\\src\\\\attack_flow_builder\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2fefc0d5\"]])\n\nexport default __exports__","\r\n// Dependencies\r\nimport { ContextMenu } from \"@/assets/scripts/ContextMenuTypes\";\r\nimport { defineComponent, ref } from \"vue\";\r\nimport { mapActions, mapGetters } from \"vuex\";\r\n// Components\r\nimport Tab from \"@/components/Containers/Tab.vue\";\r\nimport TabBox from \"@/components/Containers/TabBox.vue\";\r\nimport ObjectEditor from \"@/components/Elements/ObjectEditor.vue\";\r\n\r\nexport default defineComponent({\r\n  name: \"EditorTabs\",\r\n  setup() {\r\n    return { active: ref(0) }\r\n  },\r\n  computed: {\r\n\r\n    /**\r\n     * Context Menu Store data\r\n     */\r\n    ...mapGetters(\"ContextMenuStore\", [\r\n      \"fileMenu\",\r\n      \"editMenu\",\r\n      \"layoutMenu\",\r\n      \"viewMenu\",\r\n      \"helpMenu\"\r\n    ]),\r\n    \r\n    /**\r\n     * Returns the application's menus.\r\n     * @returns\r\n     *  The application's menus.\r\n     */\r\n    menus(): ContextMenu[] {\r\n      return [\r\n        this.fileMenu, \r\n        this.editMenu,\r\n        this.layoutMenu,\r\n        this.viewMenu,\r\n        this.helpMenu\r\n      ]\r\n    }\r\n\r\n  },\r\n  methods: {\r\n\r\n    /**\r\n     * App Actions Store actions\r\n     */\r\n    ...mapActions(\"AppActionsStore\", [\"executeAppAction\"]),\r\n\r\n    /**\r\n     * Menu item selection behavior.\r\n     * @param id\r\n     *  The id of the selected menu.\r\n     * @param data\r\n     *  Auxillary data included with the selection.\r\n     */\r\n    async onItemSelect(id: string, data: any) {\r\n      try {\r\n        await this.executeAppAction({ id, data });\r\n      } catch(ex: any) {\r\n        console.error(ex);\r\n      }\r\n    }\r\n\r\n  },\r\n  components: { TabBox, Tab, ObjectEditor }\r\n});\r\n","import { render } from \"./EditorTabs.vue?vue&type=template&id=3fa6d5c0&scoped=true&ts=true\"\nimport script from \"./EditorTabs.vue?vue&type=script&lang=ts\"\nexport * from \"./EditorTabs.vue?vue&type=script&lang=ts\"\n\nimport \"./EditorTabs.vue?vue&type=style&index=0&id=3fa6d5c0&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\mcarenzo\\\\Desktop\\\\attack-flow-private\\\\src\\\\attack_flow_builder\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3fa6d5c0\"]])\n\nexport default __exports__","\n// Dependencies\nimport { mapActions } from 'vuex';\nimport { defineComponent } from 'vue';\nimport Configuration from \"@/assets/builder.config\";\n// Components\nimport AppTitleBar from \"@/components/Elements/AppTitleBar.vue\";\nimport AppHotkeyBox from \"@/components/Elements/AppHotkeyBox.vue\";\nimport BlockDiagram from \"@/components/Elements/BlockDiagram.vue\";\nimport AppFooterBar from \"@/components/Elements/AppFooterBar.vue\";\nimport EditorTabs from \"@/components/Elements/EditorTabs.vue\";\n\nimport FILE from \"../test_file_2.json\";\n\nexport default defineComponent({\n  name: 'App',\n  methods: {\n    \n    /**\n     * Active Document Store actions\n     */\n    ...mapActions(\"ActiveDocumentStore\", [\n      \"createEmptyDocument\", \"openDocument\"\n    ]),\n\n    /**\n     * App Settings Store actions\n     */\n    ...mapActions(\"AppSettingsStore\", [\n      \"loadSettings\"\n    ]),\n\n  },\n  async created() {\n    await this.loadSettings();\n    await this.createEmptyDocument(`Untitled ${ Configuration.file_type_name }`);\n    // await this.openDocument(FILE);\n  },\n  components: {\n    AppHotkeyBox,\n    AppTitleBar,\n    BlockDiagram,\n    AppFooterBar,\n    EditorTabs\n  },\n});\n","import { render } from \"./App.vue?vue&type=template&id=7635c1be&ts=true\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=7635c1be&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\mcarenzo\\\\Desktop\\\\attack-flow-private\\\\src\\\\attack_flow_builder\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import Configuration from \"@/assets/builder.config\";\r\nimport { Module } from \"vuex\"\r\nimport { markRaw } from \"vue\";\r\nimport { ModuleStore, ActivePageStore } from \"@/store/StoreTypes\";\r\nimport { \r\n    Alignment,\r\n    CameraLocation,\r\n    DiagramLineModel,\r\n    DiagramObjectModel,\r\n    Hover,\r\n    Layer,\r\n    LocationType,\r\n    PageEditor,\r\n    PageImage,\r\n    PageModel,\r\n    Property,\r\n    round,\r\n    Select,\r\n    SemanticAnalyzer,\r\n    SemanticRole\r\n} from \"@/assets/scripts/BlockDiagram\";\r\n\r\nexport default {\r\n    namespaced: true,\r\n    state: {\r\n        page: {\r\n            trigger: 0,\r\n            editor: markRaw(new PageEditor(PageModel.createDummy())),\r\n            ref: PageModel.createDummy()\r\n        },\r\n        hovers: [],\r\n        selects: {\r\n            trigger: 0,\r\n            ref: markRaw(new Map())\r\n        },\r\n        transform: {\r\n            x: 0,\r\n            y: 0,\r\n            k: 1\r\n        },\r\n        validator: undefined\r\n    },\r\n    getters: {\r\n        \r\n        /**\r\n         * Tests if the active page has a selection.\r\n         * @param state\r\n         *  The Vuex state.\r\n         * @returns\r\n         *  True if the active page has a selection, false otherwise.\r\n         */\r\n        hasSelection(state): boolean {\r\n            // Using trigger to trip the reactivity system\r\n            if(1 + state.selects.trigger === 0) {\r\n                return false;  // Will never run\r\n            }\r\n            return 0 < state.selects.ref.size;\r\n        },\r\n\r\n        /**\r\n         * Tests if the active page can undo.\r\n         * @param state\r\n         *  The Vuex state.\r\n         * @returns\r\n         *  True if the active page can undo, false otherwise.\r\n         */\r\n        canUndo(state): boolean {\r\n            // Using trigger to trip the reactivity system\r\n            if(1 + state.page.trigger === 0) {\r\n                return false;  // Will never run\r\n            }\r\n            return state.page.editor.canUndo();\r\n        },\r\n\r\n        /**\r\n         * Tests if the active page can redo.\r\n         * @param state\r\n         *  The Vuex state.\r\n         * @returns\r\n         *  True if the active page can undo, false otherwise.\r\n         */\r\n        canRedo(state): boolean {\r\n            // Using trigger to trip the reactivity system\r\n            if(1 + state.page.trigger === 0) {\r\n                return false;  // Will never run\r\n            }\r\n            return state.page.editor.canRedo();\r\n        },\r\n\r\n        /**\r\n         * Tests if the active page represents a valid diagram per the\r\n         * configured validator. If the application is not configured with a\r\n         * validator, `true` is returned by default.\r\n         * @param state\r\n         *  The Vuex state.\r\n         * @returns\r\n         *  True if the active page is valid, false otherwise.\r\n         */\r\n        isPageValid(state) {\r\n            return state.validator?.inValidState() ?? true;\r\n        }\r\n        \r\n    },\r\n    actions: {\r\n\r\n\r\n        ///////////////////////////////////////////////////////////////////////\r\n        //  1. Select Page Objects  ///////////////////////////////////////////\r\n        ///////////////////////////////////////////////////////////////////////\r\n\r\n\r\n        /**\r\n         * Adds one or more objects to the current selection.\r\n         * @param ctx\r\n         *  The Vuex context.\r\n         * @param ids\r\n         *  The object ids.\r\n         */\r\n        select({ commit }, ids: string[] | string) {\r\n            if(Array.isArray(ids)) {\r\n                for(let id of ids) {\r\n                    commit(\"addToSelection\", id);\r\n                }   \r\n            } else {\r\n                commit(\"addToSelection\", ids);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Selects all objects immediately belonging to the page.\r\n         * @param ctx\r\n         *  The Vuex context.\r\n         */\r\n        selectAll({ dispatch, state }) {\r\n            let objs = state.page.ref.children;\r\n            dispatch(\"unselectAll\");\r\n            dispatch(\"select\", objs.map(o => o.id));\r\n        },\r\n\r\n        /**\r\n         * Removes all objects from the current selection.\r\n         * @param ctx\r\n         *  The Vuex context.\r\n         */\r\n        unselectAll({ commit, state }) {\r\n            let s = state.selects;\r\n            if(s.ref.size === 0)\r\n                return;\r\n            for (let id of s.ref.keys()) {\r\n                commit(\"removeFromSelection\", id);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Updates the selection index.\r\n         * @param ctx\r\n         *  The Vuex context.\r\n         */\r\n        updateSelect({ commit, state }) {\r\n            for(let id of state.selects.ref.keys()) {\r\n                if(!state.page.ref.lookup(id)) {\r\n                    commit(\"removeFromSelection\", id);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Interprets the selection as a graph and pivots to its parents.\r\n         * @param ctx\r\n         *  The Vuex context.\r\n         */\r\n        pivotSelectGraphParents({ dispatch }) {\r\n            let resolver = SemanticAnalyzer.getPrevGraphLinks.bind(SemanticAnalyzer);\r\n            dispatch(\"__pivotSelectGraph\", resolver);\r\n        },\r\n\r\n        /**\r\n         * Interprets the selection as a graph and pivots to its children.\r\n         * @param ctx\r\n         *  The Vuex context.\r\n         */\r\n        pivotSelectGraphChildren({ commit, dispatch, state }) {\r\n            let resolver = SemanticAnalyzer.getNextGraphLinks.bind(SemanticAnalyzer);\r\n            dispatch(\"__pivotSelectGraph\", resolver);\r\n        },\r\n\r\n        /**\r\n         * [INTERNAL USE ONLY]\r\n         * Pivots the selection using the specified graph link resolver.\r\n         * @param ctx\r\n         *  The Vuex context.\r\n         * @param getLinks\r\n         *  The graph link resolver. \r\n         */\r\n        __pivotSelectGraph({ commit, dispatch, state }, getLinks: GraphLinkResolver) {\r\n            let selects = [...state.selects.ref.values()];\r\n            // Unselect all\r\n            dispatch(\"unselectAll\");\r\n            // Pivot selection\r\n            for(let obj of selects) {\r\n                let links = getLinks(obj);\r\n                if(obj.hasRole(SemanticRole.Node)) {\r\n                    for(let link of links) {\r\n                        let nodes = getLinks(link);\r\n                        if(nodes.length) {\r\n                            for(let next of nodes) {\r\n                                commit(\"addToSelection\", next.id);\r\n                            }\r\n                        } else {\r\n                            commit(\"addToSelection\", link.id);\r\n                        }\r\n                    }\r\n                } else {\r\n                    for(let link of links) {\r\n                        commit(\"addToSelection\", link.id);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n\r\n        ///////////////////////////////////////////////////////////////////////\r\n        //  2. Hover Page Objects  ////////////////////////////////////////////\r\n        ///////////////////////////////////////////////////////////////////////\r\n\r\n        \r\n        /**\r\n         * Updates the current hover.\r\n         * @param ctx\r\n         *  The Vuex context.\r\n         * @param id\r\n         *  The id of the object to hover.\r\n         */\r\n        hover({ commit }, id: string) {\r\n            commit(\"clearHover\");\r\n            commit(\"setHover\", id);\r\n        },\r\n\r\n        /**\r\n         * Removes all objects from the current hover.\r\n         * @param ctx\r\n         *  The Vuex context.\r\n         */\r\n        unhoverAll({ commit }) {\r\n            commit(\"clearHover\");\r\n        },\r\n\r\n        /**\r\n         * Updates the hover chain.\r\n         * @param ctx\r\n         *  The Vuex context.\r\n         */\r\n        updateHover({ commit, state }) {\r\n            let h = state.hovers;\r\n            if(h.length && !state.page.ref.lookup(h[0].id)) {\r\n                commit(\"clearHover\");\r\n            }\r\n        },\r\n\r\n        \r\n        ///////////////////////////////////////////////////////////////////////\r\n        //  3. Add & Remove Page Objects  /////////////////////////////////////\r\n        ///////////////////////////////////////////////////////////////////////\r\n\r\n\r\n        /**\r\n         * Creates and adds an object to the diagram.\r\n         * @param ctx\r\n         *  The Vuex context.\r\n         * @param params\r\n         *  [template]\r\n         *   The object's template.\r\n         *  [parent]\r\n         *   The id of the object to append to.\r\n         *   (Default: This page)\r\n         *  [x]\r\n         *   The location on the x-axis relative to the page's container.\r\n         *   (Default: The container's center.)\r\n         *  [y]\r\n         *   The location on the y-axis relative to the page's container.\r\n         *   (Default: The container's center.)\r\n         */\r\n        spawnObject({ commit, state }, { template, parent, x, y }: CreateObjectParams) {\r\n            // Create object\r\n            let obj = state.page.ref.factory.createObject(template);\r\n            // Move object\r\n            let t = state.transform;\r\n            if(x === undefined) {\r\n                // Position in center of screen\r\n                x = t.x + (state.page.ref.location.x - t.x);\r\n            } else {\r\n                // Position left-side of object at x \r\n                let { xMid, xMin } = obj.boundingBox;\r\n                x = ((x - t.x) / t.k) + xMid - xMin;\r\n            }\r\n            if(y === undefined) {\r\n                // Position in middle of screen\r\n                y = t.y + (state.page.ref.location.y - t.y);\r\n            } else {\r\n                // Position top-side of object at y \r\n                let { yMid, yMin } = obj.boundingBox;\r\n                y = ((y - t.y) / t.k) + yMid - yMin;\r\n            }\r\n            if(obj.getAlignment() === Alignment.Grid) {\r\n                // If aligned to grid, snap x and y\r\n                x = round(x, state.page.ref.grid[0]);\r\n                y = round(y, state.page.ref.grid[1]);\r\n            }\r\n            obj.moveTo(x, y);\r\n            // Add object\r\n            commit(\"addObjects\", { objects: obj, parent });\r\n        },\r\n\r\n        /**\r\n         * Adds one or more objects to the diagram.\r\n         * @param ctx\r\n         *  The Vuex context.\r\n         * @param params\r\n         *  [objects]\r\n         *   The objects.\r\n         *  [parent]\r\n         *   The id of the object to append to.\r\n         *   (Default: This page)\r\n         */\r\n        addObjects({ commit }, params: AddObjectsParams) {\r\n            commit(\"addObjects\", params);\r\n        },\r\n\r\n        /**\r\n         * Adds a line object to the diagram and links it to the specified\r\n         * anchors.\r\n         * @param ctx\r\n         *  The Vuex context\r\n         * @param params\r\n         *  [object]\r\n         *   The line object.\r\n         *  [source]\r\n         *   The source anchor's id.\r\n         *  [target]\r\n         *   The target anchor's id.\r\n         *  [parent]\r\n         *   The id of the object to append to.\r\n         *   (Default: This page)\r\n         */\r\n        addLineObject({ commit }, params: AddLineObjectParams) {\r\n            commit(\"addLineObject\", params);\r\n        },\r\n\r\n        /**\r\n         * Removes an object from the diagram.\r\n         * @param ctx\r\n         *  The Vuex context.\r\n         * @param object\r\n         *  The id of the object.\r\n         */\r\n        removeObject({ commit, dispatch }, object: string) {\r\n            commit(\"removeObject\", object);\r\n            dispatch(\"updateSelect\");\r\n            dispatch(\"updateHover\");\r\n        },\r\n\r\n        /**\r\n         * Removes all selected objects from the diagram.\r\n         * @param ctx\r\n         *  The Vuex context.\r\n         */\r\n        removeSelected({ commit, dispatch }) {\r\n            commit(\"removeSelected\");\r\n            dispatch(\"updateSelect\");\r\n            dispatch(\"updateHover\");\r\n        },\r\n\r\n        /**\r\n         * Duplicates all selected objects in the diagram and shifts selection\r\n         * to the duplicated objects.\r\n         * @param ctx\r\n         *  The Vuex context.\r\n         */\r\n        duplicateSelected({ commit, dispatch, state, rootState }) {\r\n            let s = state.selects.ref;\r\n            let f = state.page.ref.factory;\r\n            let o = rootState.AppSettingsStore.settings.edit.clone_offset;\r\n            if(!s.size)\r\n                return;\r\n            // Clone objects\r\n            let objects = f.cloneObjects(...s.values());\r\n            // Offset clones\r\n            let [ gridX, gridY ] = state.page.ref.grid;\r\n            for(let obj of objects) {\r\n                obj.moveBy(o[0] * gridX, o[1] * gridY);\r\n            }\r\n            // Add clones\r\n            commit(\"addObjects\", { objects });\r\n            // Clear selection\r\n            dispatch(\"unselectAll\");\r\n            // Select clones\r\n            dispatch(\"select\", objects.map(o => o.id));\r\n        },\r\n\r\n\r\n        ///////////////////////////////////////////////////////////////////////\r\n        //  4. Anchor Page Objects  ///////////////////////////////////////////\r\n        ///////////////////////////////////////////////////////////////////////\r\n        \r\n\r\n        /**\r\n         * Links an object to an anchor.\r\n         * @param ctx\r\n         *  The Vuex context.\r\n         * @param params\r\n         *  [object]\r\n         *   The id of the object.\r\n         *  [anchor]\r\n         *   The id of the anchor.\r\n         *  @throws { Error }\r\n         *   If either the anchor or object can't be found, the object itself\r\n         *   is an anchor, or the object is already anchored to something else.\r\n         */\r\n        attach({ commit }, params: AttachParams) {\r\n            commit(\"attach\", params);\r\n        },\r\n\r\n        /**\r\n         * Unlinks an object from its anchor and moves it relative to its\r\n         * current position.\r\n         * @param ctx\r\n         *  The Vuex context.\r\n         * @param params\r\n         *  [object]\r\n         *   The object's id.\r\n         *  [dx]\r\n         *   The change in x.\r\n         *  [dy]\r\n         *   The change in y.\r\n         */\r\n        detach({ commit }, params: DetachParams) {\r\n            commit(\"detach\", params);\r\n        },\r\n\r\n        \r\n        ///////////////////////////////////////////////////////////////////////\r\n        //  5. Move Page Objects  /////////////////////////////////////////////\r\n        ///////////////////////////////////////////////////////////////////////\r\n\r\n\r\n        /**\r\n         * Moves one or more objects relative to their current position. \r\n         * @param ctx\r\n         *  The Vuex context. \r\n         * @param params\r\n         *  [ids]\r\n         *   The ids of one or more objects to move.\r\n         *  [dx]\r\n         *   The change in x.\r\n         *  [dy]\r\n         *   The change in y.\r\n         */\r\n        moveBy({ commit }, params: MoveParams) {\r\n            commit(\"moveObjectsBy\", params);\r\n        },\r\n\r\n\r\n        ///////////////////////////////////////////////////////////////////////\r\n        //  6. Edit Page Object Property  /////////////////////////////////////\r\n        ///////////////////////////////////////////////////////////////////////\r\n\r\n\r\n        /**\r\n         * Sets a property.\r\n         * @param ctx\r\n         *  The Vuex context.\r\n         * @param params\r\n         *  [object]\r\n         *   The id of the objects to edit.\r\n         *  [property]\r\n         *   The object's property.\r\n         *  [value]\r\n         *   The property's new value.\r\n         */\r\n        setObjectProperty({ commit }, params: EditPropertyParams) {\r\n            // NOTE: This is only temporary. Property edits will be saved to the clipboard.\r\n            commit(\"setObjectProperty\", params);\r\n        },\r\n\r\n\r\n        ///////////////////////////////////////////////////////////////////////\r\n        //  7. Layer Page Objects  ////////////////////////////////////////////\r\n        ///////////////////////////////////////////////////////////////////////\r\n\r\n\r\n        /**\r\n         * Moves all selected objects to a different layer in their parents.\r\n         * @param state\r\n         *  The Vuex state.\r\n         * @param layer\r\n         *  The layer to move the objects to.\r\n         */\r\n        reorderSelected({ commit, state }, layer: Layer) {\r\n            let s = state.selects.ref;\r\n            if(!s.size)\r\n                return;\r\n            commit(\"reorderObjects\", { objects: [...s.keys()].reverse(), layer });\r\n        },\r\n\r\n\r\n        ///////////////////////////////////////////////////////////////////////\r\n        //  8. Move Page Camera  //////////////////////////////////////////////\r\n        ///////////////////////////////////////////////////////////////////////\r\n\r\n\r\n        /**\r\n         * Moves the camera to the specified location. \r\n         * @param ctx\r\n         *  The Vuex context.\r\n         * @param loc\r\n         *  The camera's location.\r\n         */\r\n        moveCameraTo({ commit }, loc: CameraLocation) {\r\n            commit(\"setCameraLocation\", loc);\r\n        },\r\n\r\n        /**\r\n         * Moves the camera to the page's origin.\r\n         * @param ctx\r\n         *  The Vuex context.\r\n         */\r\n        resetView({ commit }) {\r\n            commit(\"setCameraLocation\", {\r\n                type: LocationType.Point,\r\n                x: 0, y: 0, k: 1\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Zooms the camera in.\r\n         * @param ctx\r\n         *  The Vuex context.\r\n         */\r\n        zoomIn({ commit, state }) {\r\n            let k;\r\n            let l = state.page.ref.location;\r\n            switch(l.type) {\r\n                case LocationType.Region:\r\n                    k = state.transform.k + 0.25;    \r\n                    break;\r\n                case LocationType.Point:\r\n                    k = l.k + 0.25;\r\n                    break;\r\n            }\r\n            commit(\"setCameraLocation\", {\r\n                type: LocationType.Point,\r\n                x: l.x, y: l.y, k\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Zooms the camera out.\r\n         * @param ctx\r\n         *  The Vuex context.\r\n         */\r\n        zoomOut({ commit, state }) {\r\n            let k;\r\n            let l = state.page.ref.location;\r\n            switch(l.type) {\r\n                case LocationType.Region:\r\n                    k = state.transform.k - 0.25; \r\n                    break;\r\n                case LocationType.Point:\r\n                    k = l.k - 0.25;\r\n                    break;\r\n            }\r\n            commit(\"setCameraLocation\", {\r\n                type: LocationType.Point,\r\n                x: l.x, y: l.y, k\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Moves the camera to the current selection.\r\n         * @param ctx\r\n         *  The Vuex context.\r\n         */\r\n        moveCameraToSelection({ commit, state }) {\r\n            if(state.selects.ref.size === 0)\r\n                return;\r\n            // Calculate bounding box\r\n            let xMin = Infinity;\r\n            let yMin = Infinity;\r\n            let xMax = -Infinity;\r\n            let yMax = -Infinity;\r\n            for(let obj of state.selects.ref.values()) {\r\n                xMin = Math.min(xMin, obj.boundingBox.xMin);\r\n                yMin = Math.min(yMin, obj.boundingBox.yMin);\r\n                xMax = Math.max(xMax, obj.boundingBox.xMax);\r\n                yMax = Math.max(yMax, obj.boundingBox.yMax);\r\n            }\r\n            // Calculate camera position\r\n            let w = xMax - xMin;\r\n            let h = yMax - yMin;\r\n            let x = Math.round((xMin + xMax) / 2);\r\n            let y = Math.round((yMin + yMax) / 2);\r\n            // Set camera position\r\n            commit(\"setCameraLocation\", { \r\n                type: LocationType.Region,\r\n                x, y, w, h\r\n            });\r\n        },\r\n\r\n\r\n        ///////////////////////////////////////////////////////////////////////\r\n        //  9. View Transform  ////////////////////////////////////////////////\r\n        ///////////////////////////////////////////////////////////////////////\r\n\r\n\r\n        /**\r\n         * Sets the page view's current transform.\r\n         * @param ctx\r\n         *  The Vuex context.\r\n         * @param transform\r\n         *  The transform\r\n         */\r\n        setViewTransform({ commit }, transform: ViewTransform) {\r\n            commit(\"setViewTransform\", transform);\r\n        },\r\n\r\n\r\n        ///////////////////////////////////////////////////////////////////////\r\n        //  10. Page History Controls  ////////////////////////////////////////\r\n        ///////////////////////////////////////////////////////////////////////\r\n\r\n\r\n        /**\r\n         * Undoes the last page action.\r\n         * @param ctx\r\n         *  The Vuex context.\r\n         */\r\n        undo({ commit, dispatch }) {\r\n            commit(\"undo\");\r\n            dispatch(\"updateSelect\");\r\n            dispatch(\"updateHover\");\r\n        },\r\n\r\n        /**\r\n         * Undoes the last undone page action.\r\n         * @param ctx\r\n         *  The Vuex context.\r\n         */\r\n        redo({ commit, dispatch }) {\r\n            commit(\"redo\");\r\n            dispatch(\"updateSelect\");\r\n            dispatch(\"updateHover\");\r\n        },\r\n\r\n\r\n        ///////////////////////////////////////////////////////////////////////\r\n        //  11. Image Capture  ////////////////////////////////////////////////\r\n        ///////////////////////////////////////////////////////////////////////\r\n\r\n\r\n        /**\r\n         * Snaps an image of the page.\r\n         * @param ctx\r\n         *  The Vuex context.\r\n         * @param ids\r\n         *  The ids of the objects to capture, if no objects are specified the\r\n         *  whole page is captured.\r\n         * @returns\r\n         *  The image.\r\n         */\r\n        snapImage({ commit, state, rootState }, ids: string[]): HTMLCanvasElement {\r\n            commit(\"toggleHover\", false);\r\n            commit(\"toggleSelect\", false);\r\n            // Snap image\r\n            let { diagram } = rootState.AppSettingsStore.settings.view;         \r\n            let { image_export } = rootState.AppSettingsStore.settings.file;\r\n            let image = new PageImage(\r\n                state.page.ref,\r\n                image_export.padding,\r\n                diagram.display_grid,\r\n                diagram.display_shadows,\r\n                diagram.display_debug_mode\r\n            );\r\n            let can: HTMLCanvasElement;\r\n            if(ids.length) {\r\n                can = image.capture(ids);\r\n            } else {\r\n                can = image.capture();\r\n            }\r\n            commit(\"toggleSelect\", true);\r\n            commit(\"toggleHover\", true);\r\n            return can;\r\n        }\r\n\r\n    },\r\n    mutations: {\r\n\r\n        /**\r\n         * Sets the active page.\r\n         * @param state\r\n         *  The Vuex state.\r\n         * @param editor\r\n         *  The page's editor.\r\n         */\r\n        setActivePage(state, editor: PageEditor){\r\n            // Clear selection\r\n            for(let obj of state.selects.ref.values()) {\r\n                obj.setSelect(Select.Unselected);\r\n            }\r\n            state.selects.ref = markRaw(new Map());\r\n            // Clear hover\r\n            for(let obj of state.hovers) {\r\n                obj.setHover(Hover.Off);\r\n            }\r\n            state.hovers = [];\r\n            // Set page\r\n            state.page.editor = markRaw(editor);\r\n            state.page.ref = markRaw(editor.page);\r\n            // Set validator\r\n            if(Configuration.validator) {\r\n                state.validator = new Configuration.validator();\r\n                state.validator.reset();\r\n            }\r\n        },\r\n\r\n\r\n        ///////////////////////////////////////////////////////////////////////\r\n        //  1. Select Page Objects  ///////////////////////////////////////////\r\n        ///////////////////////////////////////////////////////////////////////\r\n        \r\n\r\n        /**\r\n         * Adds an object to the current selection.\r\n         * @param state\r\n         *  The Vuex state.\r\n         * @param id\r\n         *  The id of the object to select.\r\n         */\r\n        addToSelection(state, id: string) {\r\n            let s = state.selects.ref;\r\n            let obj = state.page.ref.lookup(id);\r\n            // Check object\r\n            if(!obj) {\r\n                throw new Error(`'${ id }' does not exist.`);\r\n            }\r\n            if (s.has(id)) {\r\n                return;\r\n            }\r\n            // Set selection bit\r\n            if (s.size === 0) {\r\n                obj.setSelect(Select.Single);\r\n            } else if (s.size === 1) {\r\n                let fst = s.values().next().value;\r\n                fst.setSelect(Select.Multi);\r\n                obj.setSelect(Select.Multi);\r\n            } else {\r\n                obj.setSelect(Select.Multi);\r\n            }\r\n            // Add item to selection\r\n            s.set(obj.id, obj);\r\n            // Increment update trigger\r\n            state.selects.trigger++;\r\n        },\r\n\r\n        /**\r\n         * Removes an object from the current selection.\r\n         * @param state\r\n         *  The Vuex state.\r\n         * @param id\r\n         *  The object's id.\r\n         */\r\n        removeFromSelection(state, id: string) {\r\n            let s = state.selects.ref;\r\n            if (!s.has(id))\r\n                return;\r\n            let obj = s.get(id)!;\r\n            // Clear selection bit\r\n            obj.setSelect(Select.Unselected);\r\n            // Remove item\r\n            s.delete(id);\r\n            // Set remaining node to single selection (if applicable)\r\n            if (s.size === 1) {\r\n                let obj = s.values().next().value;\r\n                obj.setSelect(Select.Single);\r\n            }\r\n            // Increment update trigger\r\n            state.selects.trigger++;\r\n        },\r\n\r\n        /**\r\n         * Toggle's the current selection on or off.\r\n         * @param state\r\n         *  The Vuex state.\r\n         * @param on\r\n         *  [true]\r\n         *   Toggle select on.\r\n         *  [false]\r\n         *   Toggle select off.\r\n         */\r\n        toggleSelect(state, on: boolean) {\r\n            let s = state.selects.ref;\r\n            if(on) {\r\n                if(s.size === 1) {\r\n                    let obj = s.values().next().value;\r\n                    obj.setSelect(Select.Single);\r\n                } else {\r\n                    for(let obj of s.values()) {\r\n                        obj.setSelect(Select.Multi);\r\n                    }\r\n                }\r\n            } else {\r\n                for(let obj of s.values()) {\r\n                    obj.setSelect(Select.Unselected)\r\n                }\r\n            }\r\n        },\r\n\r\n\r\n        ///////////////////////////////////////////////////////////////////////\r\n        //  2. Hover Page Objects  ////////////////////////////////////////////\r\n        ///////////////////////////////////////////////////////////////////////\r\n        \r\n        \r\n        /**\r\n         * Sets the current hover chain.\r\n         * @param state\r\n         *  The Vuex state.\r\n         * @param id\r\n         *  The id of the object to hover.\r\n         */\r\n        setHover(state, id: string) {\r\n            let obj = state.page.ref.lookup(id);\r\n            if(!obj) {\r\n                throw new Error(`'${ id }' does not exist.`);\r\n            }\r\n            // Object is directly hovered\r\n            let chain = [obj];\r\n            obj.setHover(Hover.Direct);\r\n            // Parents are indirectly hovered\r\n            let p = obj.parent;\r\n            while(p) {\r\n                chain.push(p);\r\n                p.setHover(Hover.Indirect);\r\n                p = p.parent;\r\n            }\r\n            // Set hover chain\r\n            state.hovers = chain;\r\n        },\r\n\r\n        /**\r\n         * Clears the current hover chain.\r\n         * @param state\r\n         *  The Vuex state.\r\n         */\r\n        clearHover(state) {\r\n            let h = state.hovers;\r\n            // Unhover object and parents\r\n            for(let i = 0; i < h.length; i++){\r\n                h[i].setHover(Hover.Off);\r\n            }\r\n            // Clear hover chain\r\n            state.hovers = [];\r\n        },\r\n\r\n        /**\r\n         * Toggles the current hover chain on or off.\r\n         * @param state\r\n         *  The Vuex state.\r\n         * @param on\r\n         *  [true]\r\n         *   Toggle hover on.\r\n         *  [false]\r\n         *   Toggle hover off.\r\n         */\r\n        toggleHover(state, on: boolean) {\r\n            let h = state.hovers;\r\n            if(on && h.length) {\r\n                h[0].setHover(Hover.Direct);\r\n                for(let i = 1; i < h.length; i++) {\r\n                    h[i].setHover(Hover.Indirect);\r\n                }\r\n            } else {\r\n                for(let obj of h) {\r\n                    obj.setHover(Hover.Off);\r\n                }\r\n            }\r\n        },\r\n\r\n\r\n        ///////////////////////////////////////////////////////////////////////\r\n        //  3. Add & Remove Page Objects  /////////////////////////////////////\r\n        ///////////////////////////////////////////////////////////////////////\r\n\r\n\r\n        /**\r\n         * Adds one or more objects to the diagram.\r\n         * @param state\r\n         *  The Vuex state.\r\n         * @param params\r\n         *  [objects]\r\n         *   The objects.\r\n         *  [parent]\r\n         *   The id of the object to append to.\r\n         *   (Default: This page)\r\n         */\r\n        addObjects(state, { objects, parent }: AddObjectsParams) {\r\n            // Add objects\r\n            if(Array.isArray(objects)) {\r\n                state.page.editor.beginTransaction();\r\n                for(let obj of objects) {\r\n                    state.page.editor.addObject(obj, parent);\r\n                }\r\n                state.page.editor.endTransaction();\r\n            } else {\r\n                state.page.editor.addObject(objects, parent);\r\n            }\r\n            // Validate \r\n            state.validator?.run(state.page.ref);\r\n            // Increment update trigger\r\n            state.page.trigger++;\r\n        },\r\n\r\n        /**\r\n         * Adds a line object to the diagram and links it to the specified\r\n         * anchors.\r\n         * @param state\r\n         *  The Vuex state\r\n         * @param params\r\n         *  [object]\r\n         *   The line object.\r\n         *  [source]\r\n         *   The source anchor's id.\r\n         *  [target]\r\n         *   The target anchor's id.\r\n         *  [parent]\r\n         *   The id of the object to append to.\r\n         *   (Default: This page)\r\n         */\r\n        addLineObject(state, { object, source, target, parent }: AddLineObjectParams) {\r\n            // Add line object\r\n            state.page.editor.addLineObject(object, source, target, parent);\r\n            // Validate\r\n            state.validator?.run(state.page.ref);\r\n            // Increment update trigger\r\n            state.page.trigger++;\r\n        },\r\n\r\n        /**\r\n         * Removes an object from the diagram.\r\n         * @param state\r\n         *  The Vuex state.\r\n         * @param object\r\n         *  The id of the object.\r\n         */\r\n        removeObject(state, object: string) {\r\n            // Remove object\r\n            state.page.editor.removeObjects(object);\r\n            // Validate\r\n            state.validator?.run(state.page.ref);\r\n            // Increment update trigger\r\n            state.page.trigger++;\r\n        },\r\n\r\n        /**\r\n         * Removes all selected objects from the diagram.\r\n         * @param state\r\n         *  The Vuex state.\r\n         */\r\n        removeSelected(state) {\r\n            let s = state.selects.ref;\r\n            if(!s.size)\r\n                return;\r\n            // Remove selection\r\n            state.page.editor.removeObjects(...s.keys());\r\n            // Validate\r\n            state.validator?.run(state.page.ref);\r\n            // Increment update trigger\r\n            state.page.trigger++;\r\n        },\r\n\r\n        \r\n        ///////////////////////////////////////////////////////////////////////\r\n        //  4. Anchor Page Objects  ///////////////////////////////////////////\r\n        ///////////////////////////////////////////////////////////////////////\r\n\r\n\r\n        /**\r\n         * Links an object to an anchor.\r\n         * @param state\r\n         *  The Vuex state.\r\n         * @param params\r\n         *  [object]\r\n         *   The id of the object.\r\n         *  [anchor]\r\n         *   The id of the anchor.\r\n         *  @throws { Error }\r\n         *   If either the anchor or object can't be found, the object itself\r\n         *   is an anchor, or the object is already anchored to something else.\r\n         */\r\n        attach(state, { object, anchor }: AttachParams) {\r\n            // Link object\r\n            state.page.editor.attach(object, anchor);\r\n            // Validate\r\n            state.validator?.run(state.page.ref);\r\n            // Increment update trigger\r\n            state.page.trigger++;\r\n        },\r\n\r\n        /**\r\n         * Unlinks an object from its anchor and moves it relative to its\r\n         * current position.\r\n         * @param state\r\n         *  The Vuex state.\r\n         * @param params\r\n         *  [object]\r\n         *   The object's id.\r\n         *  [dx]\r\n         *   The change in x.\r\n         *  [dy]\r\n         *   The change in y.\r\n         */\r\n        detach(state, { object, dx, dy }: DetachParams) {\r\n            dx = dx ?? 0;\r\n            dy = dy ?? 0;\r\n            // Unlink object\r\n            if(dx || dy) {\r\n                state.page.editor.beginTransaction();\r\n                state.page.editor.moveObjectsBy(object, dx, dy);\r\n                state.page.editor.detach(object);\r\n                state.page.editor.endTransaction();\r\n            } else {\r\n                state.page.editor.detach(object);\r\n            }\r\n            // Validate\r\n            state.validator?.run(state.page.ref);\r\n            // Increment update trigger\r\n            state.page.trigger++;\r\n        },\r\n\r\n\r\n        ///////////////////////////////////////////////////////////////////////\r\n        //  5. Move Page Objects  /////////////////////////////////////////////\r\n        ///////////////////////////////////////////////////////////////////////\r\n\r\n\r\n        /**\r\n         * Moves one or more objects relative to their current position.\r\n         * @param state\r\n         *  The Vuex state.\r\n         * @param params\r\n         *  [objects]\r\n         *   The ids of one or more objects to move.\r\n         *  [dx]\r\n         *   The change in x.\r\n         *  [dy]\r\n         *   The change in y.\r\n         */\r\n        moveObjectsBy(state, { objects, dx, dy }: MoveParams) {\r\n            // Round dx & dy\r\n            dx = Math.round(dx);\r\n            dy = Math.round(dy);\r\n            // Move objects\r\n            state.page.editor.moveObjectsBy(objects, dx, dy);\r\n            // Increment update trigger\r\n            state.page.trigger++;\r\n        },\r\n\r\n\r\n        ///////////////////////////////////////////////////////////////////////\r\n        //  6. Edit Page Object Property  /////////////////////////////////////\r\n        ///////////////////////////////////////////////////////////////////////\r\n\r\n\r\n        /**\r\n         * Sets a property.\r\n         * @param state\r\n         *  The Vuex state.\r\n         * @param params\r\n         *  [object]\r\n         *   The id of the objects to edit.\r\n         *  [property]\r\n         *   The object's property.\r\n         *  [value]\r\n         *   The property's new value.\r\n         */\r\n        setObjectProperty(state, { object, property, value }: EditPropertyParams) {\r\n            // NOTE: This is only temporary. Property edits will be saved to the clipboard.\r\n            let obj = state.page.ref.lookup(object);\r\n            if(!obj) {\r\n                throw new Error(`No object with id: '${ object }'.`);\r\n            }\r\n            obj.setProperty(property, value);\r\n            // Increment update trigger\r\n            state.page.trigger++;\r\n        },\r\n\r\n        \r\n        ///////////////////////////////////////////////////////////////////////\r\n        //  7. Layer Page Objects  ////////////////////////////////////////////\r\n        ///////////////////////////////////////////////////////////////////////\r\n\r\n\r\n        /**\r\n         * Moves one or more objects to a different layer in their parents.\r\n         * @param state\r\n         *  The Vuex state.\r\n         * @param params\r\n         *  [objects]\r\n         *   The ids of one or more objects to move.\r\n         *  [layer]\r\n         *   The layer to move the objects to.\r\n         */\r\n        reorderObjects(state, { objects, layer }: ReorderObjectLayerParams) {\r\n            if(Array.isArray(objects)) {\r\n                state.page.editor.beginTransaction();\r\n                for(let id of objects) {\r\n                    state.page.editor.reorderObjectLayer(id, layer);\r\n                }\r\n                state.page.editor.endTransaction();\r\n            } else {\r\n                state.page.editor.reorderObjectLayer(objects, layer);\r\n            }\r\n            // Increment update trigger\r\n            state.page.trigger++;\r\n        },\r\n\r\n        \r\n        ///////////////////////////////////////////////////////////////////////\r\n        //  8. Move Page Camera  //////////////////////////////////////////////\r\n        ///////////////////////////////////////////////////////////////////////\r\n\r\n        \r\n        /**\r\n         * Moves the camera to the specified location. \r\n         * @param state\r\n         *  The Vuex state.\r\n         * @param loc\r\n         *  The camera's location.\r\n         */\r\n        setCameraLocation(state, loc: CameraLocation) {\r\n            // Move camera\r\n            state.page.editor.setCameraLocation(loc);\r\n            // Increment update trigger\r\n            state.page.trigger++;\r\n        },\r\n\r\n\r\n        ///////////////////////////////////////////////////////////////////////\r\n        //  9. View Transform  ////////////////////////////////////////////////\r\n        ///////////////////////////////////////////////////////////////////////\r\n\r\n\r\n        /**\r\n         * Sets the page view's current transform.\r\n         * @param state\r\n         *  The Vuex state.\r\n         * @param transform\r\n         *  The transform\r\n         */\r\n        setViewTransform(state, transform: ViewTransform) {\r\n            state.transform = transform;\r\n        },\r\n\r\n\r\n        ///////////////////////////////////////////////////////////////////////\r\n        //  10. Page History Controls  ////////////////////////////////////////\r\n        ///////////////////////////////////////////////////////////////////////\r\n\r\n        \r\n        /**\r\n         * Undoes the last page action.\r\n         * @param state\r\n         *  The Vuex state.\r\n         */\r\n        undo(state) {\r\n            // Undo\r\n            state.page.editor.undo();\r\n            // Validate\r\n            state.validator?.run(state.page.ref);\r\n            // Increment update trigger\r\n            state.page.trigger++;\r\n        },\r\n\r\n        /**\r\n         * Undoes the last undone page action.\r\n         * @param state\r\n         *  The Vuex state.\r\n         */\r\n        redo(state) {\r\n            // Redo\r\n            state.page.editor.redo();\r\n            // Validate\r\n            state.validator?.run(state.page.ref);\r\n            // Increment update trigger\r\n            state.page.trigger++;\r\n        }\r\n\r\n    }\r\n} as Module<ActivePageStore, ModuleStore>\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  Internal Types  ///////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\ntype CreateObjectParams = {\r\n    template: string,\r\n    parent?: string,\r\n    x?: number,\r\n    y?: number\r\n}\r\n\r\ntype AddObjectsParams = {\r\n    objects: DiagramObjectModel[] | DiagramObjectModel,\r\n    parent?: string\r\n}\r\n\r\ntype AddLineObjectParams = {\r\n    object: DiagramLineModel,\r\n    source: string,\r\n    target?: string,\r\n    parent?: string\r\n}\r\n\r\ntype AttachParams = {\r\n    object: string,\r\n    anchor: string\r\n}\r\n\r\ntype DetachParams = {\r\n    object: string,\r\n    dx?: number,\r\n    dy?: number\r\n}\r\n\r\ntype MoveParams = {\r\n    objects: string[] | string,\r\n    dx: number,\r\n    dy: number\r\n}\r\n\r\ntype EditPropertyParams = {\r\n    object: string,\r\n    property: Property\r\n    value: any\r\n}\r\n\r\ntype ReorderObjectLayerParams = {\r\n    objects: string[] | string,\r\n    layer: Layer\r\n}\r\n\r\ntype ViewTransform = {\r\n    x: number,\r\n    y: number,\r\n    k: number\r\n}\r\n\r\ntype GraphLinkResolver = (obj: DiagramObjectModel) => DiagramObjectModel[];\r\n","export class Download {\r\n\r\n    /**\r\n     * The internal download link used to initiate downloads.\r\n     */\r\n    private static _aLink = document.createElement(\"a\");\r\n\r\n    /**\r\n     * Downloads a text file.\r\n     * @param filename\r\n     *  The text file's name.\r\n     * @param text\r\n     *  The text file's contents.\r\n     * @param ext\r\n     *  The text file's extension.\r\n     *  (Default: 'txt')\r\n     */\r\n    public static textFile(filename: string, text: string, ext = \"txt\") {\r\n        let blob = new Blob([text], { type: \"octet/stream\" });\r\n        let url = window.URL.createObjectURL(blob);\r\n        this._aLink.href = url;\r\n        this._aLink.download = `${ filename }.${ ext }`;\r\n        this._aLink.click();\r\n        window.URL.revokeObjectURL(url);\r\n    }\r\n\r\n    /**\r\n     * Downloads an image file.\r\n     * @param filename\r\n     *  The image file's name.\r\n     * @param canvas\r\n     *  The image file's contents.\r\n     */\r\n    public static imageFile(filename: string, canvas: HTMLCanvasElement) {\r\n        canvas.toBlob(blob => {\r\n            if(!blob)\r\n                return;\r\n            let url = window.URL.createObjectURL(blob);\r\n            this._aLink.href = url;\r\n            this._aLink.download = `${ filename }.png`\r\n            this._aLink.click();\r\n            window.URL.revokeObjectURL(url);\r\n        }, \"image/octet-stream\")\r\n    }\r\n\r\n}\r\n","import Configuration from \"@/assets/builder.config\";\r\nimport { Module } from \"vuex\"\r\nimport { markRaw } from \"vue\";\r\nimport { Download } from \"@/assets/scripts/Download\";\r\nimport { ModuleStore, ActiveDocumentStore } from \"@/store/StoreTypes\"\r\nimport { \r\n    BlockDiagramDocument,\r\n    DiagramObjectModel\r\n} from \"@/assets/scripts/BlockDiagram\";\r\n\r\nconst ROOT = { root: true };\r\n\r\nexport default {\r\n    namespaced: true,\r\n    state: {\r\n        document: markRaw(BlockDiagramDocument.createDummy()),\r\n        clipboard: [],\r\n        publisher: undefined,\r\n    },\r\n    getters: {\r\n\r\n        /**\r\n         * Tests if the clipboard has contents.\r\n         * @param state\r\n         *  The Vuex state.\r\n         * @returns\r\n         *  True if the clipboard has contents, false otherwise.\r\n         */\r\n        hasClipboardContents(state) {\r\n            return 0 < state.clipboard.length;\r\n        }\r\n\r\n    },\r\n    actions: {\r\n\r\n\r\n        ///////////////////////////////////////////////////////////////////////\r\n        //  1. Document Control  //////////////////////////////////////////////\r\n        ///////////////////////////////////////////////////////////////////////\r\n\r\n\r\n        /**\r\n         * Creates and opens an empty block diagram document.\r\n         * @param ctx\r\n         *  The Vuex context.\r\n         * @param name\r\n         *  The name of the new document.\r\n         */\r\n        async createEmptyDocument(ctx, name: string) {\r\n            let { commit, state } = ctx;\r\n            let schema = structuredClone(Configuration.schema);\r\n            commit(\"setActiveDocument\", await BlockDiagramDocument.create(name, schema));\r\n            commit(\"ActivePageStore/setActivePage\", state.document.editor, ROOT);\r\n        },\r\n\r\n        /**\r\n         * Opens a block diagram document.\r\n         * @param ctx\r\n         *  The Vuex context.\r\n         * @param document\r\n         *  The serialized block diagram document.\r\n         */\r\n        async openDocument(ctx, document: string) {\r\n            let { commit, state } = ctx;\r\n            commit(\"setActiveDocument\", await BlockDiagramDocument.deserialize(document));\r\n            commit(\"ActivePageStore/setActivePage\", state.document.editor, ROOT);\r\n        },\r\n\r\n\r\n        ///////////////////////////////////////////////////////////////////////\r\n        //  2. Document Export  ///////////////////////////////////////////////\r\n        ///////////////////////////////////////////////////////////////////////\r\n\r\n\r\n        /**\r\n         * Saves the open document to the device.\r\n         * @param ctx\r\n         *  The Vuex context.\r\n         */\r\n        saveDocumentToDevice({ state }) {\r\n            let file = JSON.stringify(state.document.toExport());\r\n            Download.textFile(state.document.name, file, Configuration.file_type_extension);\r\n        },\r\n\r\n        /**\r\n         * Saves the active page as an image to the device.\r\n         * @param ctx\r\n         *  The Vuex context.\r\n         */\r\n        async saveActivePageImageToDevice({ dispatch, state }) {\r\n            let can = await dispatch(\"ActivePageStore/snapImage\", [], ROOT);\r\n            Download.imageFile(state.document.name, can);\r\n        },\r\n\r\n        /**\r\n         * Saves the active selection as an image to the device.\r\n         * @param ctx\r\n         *  The Vuex context.\r\n         */\r\n        async saveActiveSelectionImageToDevice({ dispatch, state, rootState }) {\r\n            let s = rootState.ActivePageStore.selects.ref;\r\n            if(!s.size)\r\n                return;\r\n            let can = await dispatch(\"ActivePageStore/snapImage\", [...s.keys()], ROOT);\r\n            Download.imageFile(state.document.name, can);\r\n        },\r\n\r\n        /**\r\n         * Publishes the active page to the device.\r\n         * @param ctx\r\n         *  The Vuex store.\r\n         */\r\n        async publishActivePageToDevice({ dispatch, state, rootState, rootGetters }) {\r\n            let page = rootState.ActivePageStore.page.ref;\r\n            // Ensure there's a publisher\r\n            if(!state.publisher) {\r\n                return;\r\n            }\r\n            // Validate page\r\n            if(!rootGetters[\"ActivePageStore/isPageValid\"]) {\r\n                return;\r\n            }\r\n            // Publish page\r\n            let publish = state.publisher.publish(page);\r\n            Download.textFile(state.document.name, publish, \"json\");\r\n        },\r\n\r\n        \r\n        ///////////////////////////////////////////////////////////////////////\r\n        //  3. Clipboard  /////////////////////////////////////////////////////\r\n        ///////////////////////////////////////////////////////////////////////\r\n\r\n\r\n        /**\r\n         * Cuts the active selection to the clipboard.\r\n         * @param ctx\r\n         *  The Vuex context.\r\n         */\r\n        clipboardCut({ commit, dispatch, state, rootState }) {\r\n            let f = state.document.factory;\r\n            let s = rootState.ActivePageStore.selects.ref;\r\n            if(!s.size)\r\n                return;\r\n            // Copy selection\r\n            commit(\"setClipboard\", f.cloneObjects(...s.values()));\r\n            // Remove selection\r\n            dispatch(\"ActivePageStore/removeSelected\", null, ROOT);\r\n        },\r\n        \r\n        /**\r\n         * Copies the active selection to the clipboard.\r\n         * @param ctx\r\n         *  The Vuex context.\r\n         */\r\n        clipboardCopy({ commit, state, rootState }) {\r\n            let f = state.document.factory;\r\n            let s = rootState.ActivePageStore.selects.ref;\r\n            let o = rootState.AppSettingsStore.settings.edit.clone_offset;\r\n            if(!s.size)\r\n                return;\r\n            // Copy selection\r\n            commit(\"setClipboard\", f.cloneObjects(...s.values()));\r\n            // Offset copies\r\n            let [ gridX, gridY ] = rootState.ActivePageStore.page.ref.grid;\r\n            commit(\"offsetClipboard\", { dx: o[0] * gridX, dy: o[1] * gridY });\r\n        },\r\n\r\n        /**\r\n         * Pastes the clipboard's contents to the active page.\r\n         * @param ctx\r\n         *  The Vuex context.\r\n         */\r\n        clipboardPaste({ commit, dispatch, state, rootState }) {\r\n            let f = state.document.factory;\r\n            let o = rootState.AppSettingsStore.settings.edit.clone_offset;\r\n            // Clone objects\r\n            let objects = f.cloneObjects(...state.clipboard);\r\n            // Add clones\r\n            dispatch(\"ActivePageStore/addObjects\", { objects }, ROOT);\r\n            // Clear selection\r\n            dispatch(\"ActivePageStore/unselectAll\", null, ROOT);\r\n            // Select clones\r\n            dispatch(\"ActivePageStore/select\", objects.map(o => o.id), ROOT);\r\n            // Offset clipboard objects\r\n            let [ gridX, gridY ] = rootState.ActivePageStore.page.ref.grid;\r\n            commit(\"offsetClipboard\", { dx: o[0] * gridX, dy: o[1] * gridY });\r\n        }\r\n\r\n    },\r\n    mutations: {\r\n\r\n        \r\n        ///////////////////////////////////////////////////////////////////////\r\n        //  1. Document Control  //////////////////////////////////////////////\r\n        ///////////////////////////////////////////////////////////////////////\r\n\r\n\r\n        /**\r\n         * Sets the active block diagram document.\r\n         * @param state\r\n         *  The Vuex state.\r\n         * @param document\r\n         *  The block diagram document.\r\n         */\r\n        setActiveDocument(state, document: BlockDiagramDocument) {\r\n            state.document = markRaw(document);\r\n            if(Configuration.publisher) {\r\n                state.publisher = new Configuration.publisher();\r\n            }\r\n        },\r\n\r\n\r\n        ///////////////////////////////////////////////////////////////////////\r\n        //  2. Clipboard  /////////////////////////////////////////////////////\r\n        ///////////////////////////////////////////////////////////////////////\r\n\r\n\r\n        /**\r\n         * Sets the clipboard's contents.\r\n         * @param state\r\n         *  The Vuex state.\r\n         * @param objects\r\n         *  The clipboard's contents.\r\n         */\r\n        setClipboard(state, objects: DiagramObjectModel[]) {\r\n            state.clipboard = objects;\r\n        },\r\n\r\n        /**\r\n         * Offsets the clipboard's contents.\r\n         * @param state\r\n         *  The Vuex state.\r\n         * @param params\r\n         *  [dx]\r\n         *   The x offset.\r\n         *  [dy]\r\n         *   The y offset.\r\n         */\r\n        offsetClipboard(state, { dx, dy }: { dx: number, dy: number }) {\r\n            for(let obj of state.clipboard) {\r\n                obj.moveBy(dx, dy);\r\n            }\r\n        }\r\n\r\n    }\r\n} as Module<ActiveDocumentStore, ModuleStore>\r\n","/**\r\n * Opens an element in fullscreen.\r\n * @param el\r\n *  The element to fullscreen.\r\n *  (Default: `document.body`)\r\n */\r\nexport function fullscreen(el: HTMLElement = document.body) {\r\n    let cast = el as any;\r\n    if (cast.requestFullscreen) {\r\n        cast.requestFullscreen();\r\n    } else if (cast.webkitRequestFullscreen) {\r\n        // Safari\r\n        cast.webkitRequestFullscreen();\r\n    } else if (cast.msRequestFullscreen) {\r\n        // IE11\r\n        cast.msRequestFullscreen();\r\n    }\r\n}\r\n","import Configuration from \"@/assets/builder.config\";\r\nimport { fullscreen } from \"@/assets/scripts/Browser\";\r\nimport { Layer } from \"@/assets/scripts/BlockDiagram\";\r\nimport { Module } from \"vuex\"\r\nimport { ModuleStore, ContextMenuStore } from \"../StoreTypes\";\r\n\r\nconst ROOT = { root: true };\r\n\r\nexport default {\r\n    namespaced: true,\r\n    actions: {\r\n\r\n        /**\r\n         * Executes an application action.\r\n         * @param ctx\r\n         *  The Vuex Context.\r\n         * @param params\r\n         *  [id]\r\n         *   The action id.\r\n         *  [data]\r\n         *   The action's auxillary data.\r\n         */\r\n        async executeAppAction({ dispatch, rootState }, { id, data }: { id: string, data: any }) {\r\n            switch(id) {\r\n          \r\n                ///////////////////////////////////////////////////////////////\r\n                //  1. File  //////////////////////////////////////////////////\r\n                ///////////////////////////////////////////////////////////////\r\n\r\n                case \"new_file\":\r\n                    await dispatch(\r\n                        \"ActiveDocumentStore/createEmptyDocument\",\r\n                        `Untitled ${ Configuration.file_type_name }`, ROOT\r\n                    );\r\n                    break;\r\n                case \"open_file\":\r\n                    await dispatch(\r\n                        \"ActiveDocumentStore/openDocument\",\r\n                        data.file, ROOT\r\n                    );\r\n                    break;\r\n                case \"save_file\":\r\n                    await dispatch(\r\n                        \"ActiveDocumentStore/saveDocumentToDevice\",\r\n                        null, ROOT\r\n                    );\r\n                    break;\r\n                case \"save_image\":\r\n                    await dispatch(\r\n                        \"ActiveDocumentStore/saveActivePageImageToDevice\",\r\n                        null, ROOT\r\n                    );\r\n                    break;\r\n                case \"save_select_image\":\r\n                    await dispatch(\r\n                        \"ActiveDocumentStore/saveActiveSelectionImageToDevice\",\r\n                        null, ROOT\r\n                    );\r\n                    break;\r\n                case \"publish_file\":\r\n                    await dispatch(\r\n                        \"ActiveDocumentStore/publishActivePageToDevice\",\r\n                        null, ROOT\r\n                    );\r\n                    break;\r\n                case \"open_library\":\r\n                    break;\r\n                case \"save_library\":\r\n                    break;\r\n                \r\n                ///////////////////////////////////////////////////////////////\r\n                //  2. Edit  //////////////////////////////////////////////////\r\n                ///////////////////////////////////////////////////////////////\r\n                \r\n                case \"undo\":\r\n                    await dispatch(\r\n                        \"ActivePageStore/undo\",\r\n                        null, ROOT\r\n                    );\r\n                    break;\r\n                case \"redo\":\r\n                    await dispatch(\r\n                        \"ActivePageStore/redo\",\r\n                        null, ROOT\r\n                    );\r\n                    break;\r\n                case \"cut\":\r\n                    await dispatch(\r\n                        \"ActiveDocumentStore/clipboardCut\",\r\n                        null, ROOT\r\n                    );\r\n                    break;\r\n                case \"copy\":\r\n                    await dispatch(\r\n                        \"ActiveDocumentStore/clipboardCopy\",\r\n                        null, ROOT\r\n                    );\r\n                    break;\r\n                case \"paste\":\r\n                    await dispatch(\r\n                        \"ActiveDocumentStore/clipboardPaste\",\r\n                        null, ROOT\r\n                    );\r\n                    break;\r\n                case \"create_object\":\r\n                    await dispatch(\r\n                        \"ActivePageStore/spawnObject\",\r\n                        { \r\n                            template: data.template, \r\n                            parent: data.parent,\r\n                            x: data.x,\r\n                            y: data.y\r\n                        }, ROOT\r\n                    );\r\n                    break;\r\n                case \"delete\":\r\n                    await dispatch(\r\n                        \"ActivePageStore/removeSelected\",\r\n                        null, ROOT\r\n                    );\r\n                    break;\r\n                case \"duplicate\":\r\n                    await dispatch(\r\n                        \"ActivePageStore/duplicateSelected\",\r\n                        null, ROOT\r\n                    );\r\n                    break;\r\n                case \"select_all\":\r\n                    await dispatch(\r\n                        \"ActivePageStore/selectAll\",\r\n                        null, ROOT\r\n                    );\r\n                    break;\r\n                \r\n                ///////////////////////////////////////////////////////////////\r\n                //  3. Layout  ////////////////////////////////////////////////\r\n                ///////////////////////////////////////////////////////////////\r\n\r\n                case \"selection_to_front\":\r\n                    await dispatch(\r\n                        \"ActivePageStore/reorderSelected\",\r\n                        Layer.Top, ROOT\r\n                    );\r\n                    break;\r\n                case \"selection_to_back\":\r\n                    await dispatch(\r\n                        \"ActivePageStore/reorderSelected\",\r\n                        Layer.Bottom, ROOT\r\n                    );\r\n                    break;\r\n                case \"bring_selection_forward\":\r\n                    await dispatch(\r\n                        \"ActivePageStore/reorderSelected\",\r\n                        Layer.OneAbove, ROOT\r\n                    );\r\n                    break;\r\n                case \"send_selection_backward\":\r\n                    await dispatch(\r\n                        \"ActivePageStore/reorderSelected\",\r\n                        Layer.OneBelow, ROOT\r\n                    );\r\n                    break;\r\n                case \"align_left\":\r\n                    break;\r\n                case \"align_center\":\r\n                    break;\r\n                case \"align_right\":\r\n                    break;\r\n                case \"align_top\":\r\n                    break;\r\n                case \"align_middle\":\r\n                    break;\r\n                case \"align_bottom\":\r\n                    break;\r\n                case \"group\":\r\n                    break;\r\n                case \"ungroup\":\r\n                    break;\r\n                case \"open_group\":\r\n                    break;\r\n                case \"close_group\":\r\n                    break;\r\n\r\n                ///////////////////////////////////////////////////////////////\r\n                //  4. View  //////////////////////////////////////////////////\r\n                ///////////////////////////////////////////////////////////////\r\n                \r\n                case \"toggle_grid\":\r\n                    await dispatch(\r\n                        \"AppSettingsStore/setGridDisplay\",\r\n                        !data.value, ROOT\r\n                    );\r\n                    break;\r\n                case \"toggle_shadows\":\r\n                    await dispatch(\r\n                        \"AppSettingsStore/setShadowsDisplay\",\r\n                        !data.value, ROOT\r\n                    );\r\n                    break;\r\n                case \"enable_high_quality_render\":\r\n                    await dispatch(\r\n                        \"AppSettingsStore/setHighRenderQuality\",\r\n                        true, ROOT\r\n                    );\r\n                    break;\r\n                case \"enable_low_quality_render\":\r\n                    await dispatch(\r\n                        \"AppSettingsStore/setHighRenderQuality\",\r\n                        false, ROOT\r\n                    );\r\n                    break;\r\n                case \"reset_view\":\r\n                    await dispatch(\r\n                        \"ActivePageStore/resetView\",\r\n                        null, ROOT\r\n                    );\r\n                    break;\r\n                case \"zoom_in\":\r\n                    await dispatch(\r\n                        \"ActivePageStore/zoomIn\",\r\n                        null, ROOT\r\n                    );\r\n                    break;\r\n                case \"zoom_out\":\r\n                    await dispatch(\r\n                        \"ActivePageStore/zoomOut\",\r\n                        null, ROOT\r\n                    );\r\n                    break;\r\n                case \"jump_to_selection\":\r\n                    await dispatch(\r\n                        \"ActivePageStore/moveCameraToSelection\",\r\n                        null, ROOT\r\n                    );\r\n                    break;\r\n                case \"jump_to_parents\":\r\n                    await dispatch(\r\n                        \"ActivePageStore/pivotSelectGraphParents\",\r\n                        null, ROOT\r\n                    );\r\n                    await dispatch(\r\n                        \"ActivePageStore/moveCameraToSelection\",\r\n                        null, ROOT\r\n                    );\r\n                    break;\r\n                case \"jump_to_children\":\r\n                    await dispatch(\r\n                        \"ActivePageStore/pivotSelectGraphChildren\",\r\n                        null, ROOT\r\n                    );\r\n                    await dispatch(\r\n                        \"ActivePageStore/moveCameraToSelection\",\r\n                        null, ROOT\r\n                    );\r\n                    break;\r\n                case \"fullscreen\":\r\n                    fullscreen();\r\n                    break;\r\n                case \"toggle_debug_view\":\r\n                    await dispatch(\r\n                        \"AppSettingsStore/setDebugDisplay\",\r\n                        !data.value, ROOT\r\n                    );\r\n                    break;\r\n        \r\n                ///////////////////////////////////////////////////////////////\r\n                //  5. Help  //////////////////////////////////////////////////\r\n                ///////////////////////////////////////////////////////////////\r\n\r\n                case \"open_about_window\":\r\n                    break;\r\n        \r\n                default:\r\n                    break;\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n} as Module<ContextMenuStore, ModuleStore>\r\n","import { Module } from \"vuex\"\r\nimport { \r\n    AppSettings,\r\n    AppSettingsStore,\r\n    DiagramDisplaySetting,\r\n    ModuleStore\r\n} from \"@/store/StoreTypes\";\r\n\r\nimport settings from \"../../../public/settings.json\"\r\n\r\nexport default {\r\n    namespaced: true,\r\n    state: {\r\n        settings: {\r\n            file: {\r\n                image_export: {\r\n                    padding: 0,\r\n                }\r\n            },\r\n            edit: {\r\n                clone_offset: [0, 0]\r\n            },\r\n            view: {\r\n                diagram: {\r\n                    display_grid: true,\r\n                    display_shadows: true,\r\n                    display_debug_mode: false,\r\n                    render_high_quality: true,\r\n                    disable_shadows_at: 0\r\n                }\r\n            },\r\n            hotkeys: {\r\n                file: { \r\n                    new_file: \"\",\r\n                    open_file: \"\",\r\n                    save_file: \"\",\r\n                    save_image: \"\",\r\n                    save_select_image: \"\",\r\n                    publish_file: \"\",\r\n                    open_library: \"\",\r\n                    save_library: \"\"\r\n                },\r\n                edit: {\r\n                    undo: \"\",\r\n                    redo: \"\",\r\n                    cut: \"\",\r\n                    copy: \"\",\r\n                    paste: \"\",\r\n                    delete: \"\",\r\n                    duplicate: \"\",\r\n                    select_all: \"\"\r\n                },\r\n                layout: {\r\n                    selection_to_front: \"\",\r\n                    selection_to_back: \"\",\r\n                    bring_selection_forward: \"\",\r\n                    send_selection_backward: \"\",\r\n                    align_left: \"\",\r\n                    align_center: \"\",\r\n                    align_right: \"\",\r\n                    align_top: \"\",\r\n                    align_middle: \"\",\r\n                    align_bottom: \"\",\r\n                    group: \"\",\r\n                    ungroup: \"\",\r\n                    open_group: \"\",\r\n                    close_group: \"\"\r\n                },\r\n                view: {\r\n                    toggle_grid: \"\",\r\n                    toggle_shadows: \"\",\r\n                    reset_view: \"\",\r\n                    zoom_in: \"\",\r\n                    zoom_out: \"\",\r\n                    fullscreen: \"\",\r\n                    jump_to_selection: \"\",\r\n                    jump_to_parents: \"\",\r\n                    jump_to_children: \"\",\r\n                    toggle_debug_view: \"\",\r\n                },\r\n                select: {\r\n                    many: \"\"\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    actions: {\r\n\r\n        /**\r\n         * Loads the app's default settings into the store.\r\n         * @param ctx\r\n         *  The Vuex context.\r\n         */\r\n        async loadSettings({ commit }) {\r\n            // let json = await (await fetch(\"./settings.json\")).json();\r\n            let json = settings;  // Build settings in for now\r\n            commit(\"loadSettings\", json);\r\n        },\r\n\r\n        /**\r\n         * Shows / Hides the diagram's grid.\r\n         * @param ctx\r\n         *  The Vuex context.\r\n         * @param value\r\n         *  [true]\r\n         *   Show the grid.\r\n         *  [false]\r\n         *   Hide the grid.\r\n         */\r\n        setGridDisplay({ commit }, value: boolean) {\r\n            commit(\"setDiagramSetting\", { key: \"display_grid\", value });\r\n        },\r\n\r\n        /**\r\n         * Shows / Hides the diagram's shadows.\r\n         * @param ctx\r\n         *  The Vuex context.\r\n         * @param value\r\n         *  [true]\r\n         *   Show the diagram's shadows.\r\n         *  [false]\r\n         *   Hide the diagram's shadows.\r\n         */\r\n        setShadowsDisplay({ commit }, value: boolean) {\r\n            commit(\"setDiagramSetting\", { key: \"display_shadows\", value });\r\n        },\r\n\r\n        /**\r\n         * Enables / Disables the diagram's high render quality.\r\n         * @param ctx\r\n         *  The Vuex context.\r\n         * @param value\r\n         *  [true]\r\n         *   Enables the diagram's high render quality.\r\n         *  [false]\r\n         *   Disables the diagram's high render quality.\r\n         */\r\n        setHighRenderQuality({ commit }, value: boolean) {\r\n            commit(\"setDiagramSetting\", { key: \"render_high_quality\", value });\r\n        },\r\n        \r\n        /**\r\n         * Shows / Hides the diagram's debug display.\r\n         * @param ctx\r\n         *  The Vuex context.\r\n         * @param value\r\n         *  [true]\r\n         *   Show the diagram's debug display.\r\n         *  [false]\r\n         *   Hide the diagram's debug display.\r\n         */\r\n        setDebugDisplay({ commit }, value: boolean) {\r\n            commit(\"setDiagramSetting\", { key: \"display_debug_mode\", value });\r\n        }\r\n        \r\n    },\r\n    \r\n    mutations: {\r\n\r\n        /**\r\n         * Sets the app's settings configuration.\r\n         * @param state\r\n         *  The Vuex state.\r\n         * @param settings\r\n         *  The settings configuration.\r\n         */\r\n        loadSettings(state, settings: AppSettings) {\r\n            state.settings = settings;\r\n        },\r\n\r\n        /**\r\n         * Sets the specified appearance setting.\r\n         * @param state\r\n         *  The Vuex state.\r\n         * @param settingParams\r\n         *  [id]\r\n         *   The id of the appearance setting to change.\r\n         *  [value]\r\n         *   The setting's new value. \r\n         */\r\n        setDiagramSetting(state, { key, value }: DiagramDisplaySetting) {\r\n            (state.settings.view.diagram as any)[key] = value;\r\n        }\r\n\r\n    }\r\n} as Module<AppSettingsStore, ModuleStore>\r\n","import Configuration from \"@/assets/builder.config\";\r\nimport { Module } from \"vuex\"\r\nimport { ContextMenuStore, ModuleStore } from \"../StoreTypes\";\r\nimport {\r\n    ContextMenu,\r\n    ContextMenuSection,\r\n    MenuAction\r\n} from \"@/assets/scripts/ContextMenuTypes\";\r\n\r\nexport default {\r\n    namespaced: true,\r\n    getters: {\r\n\r\n\r\n        ///////////////////////////////////////////////////////////////////////\r\n        //  1. File Menu  /////////////////////////////////////////////////////\r\n        ///////////////////////////////////////////////////////////////////////\r\n\r\n\r\n        /**\r\n         * Returns the file menu.\r\n         * @param _s\r\n         *  The Vuex state. (Unused)\r\n         * @param _g\r\n         *  The Vuex getters. (Unused)\r\n         * @param rootState\r\n         *  The Vuex root state.\r\n         * @param rootGetters\r\n         *  The Vuex root getters.\r\n         * @returns\r\n         *  The file menu.\r\n         */\r\n        fileMenu(_s, _g, rootState, rootGetters): ContextMenu | null {\r\n            let { file } = rootState.AppSettingsStore.settings.hotkeys;\r\n            let fileType = Configuration.file_type_name;\r\n            let canPublish = rootGetters[\"ActivePageStore/isPageValid\"];\r\n            let hasSelection = rootGetters[\"ActivePageStore/hasSelection\"];\r\n            return filterMenuOptions({\r\n                id: \"file_menu\",\r\n                text: \"File\",\r\n                action: MenuAction.OpenSubmenu,\r\n                sections: [\r\n                    {\r\n                        id: \"open_file_options\",\r\n                        items: [\r\n                            {\r\n                                id: \"new_file\",\r\n                                text: `New File`,\r\n                                action: MenuAction.RunTask,\r\n                                shortcut: file.new_file,\r\n                            },\r\n                            {\r\n                                id: \"open_file\",\r\n                                text: `Open File...`,\r\n                                action: MenuAction.OpenFile,\r\n                                shortcut: file.open_file,\r\n                            }\r\n                        ],\r\n                    },\r\n                    {\r\n                        id: \"save_file_options\",\r\n                        items: [\r\n                            {\r\n                                id: \"save_file\",\r\n                                text: \"Save\",\r\n                                action: MenuAction.RunTask,\r\n                                shortcut: file.save_file\r\n                            },\r\n                            {\r\n                                id: \"save_image\",\r\n                                text: \"Save as Image\",\r\n                                action: MenuAction.RunTask,\r\n                                shortcut: file.save_image\r\n                            },\r\n                            {\r\n                                id: \"save_select_image\",\r\n                                text: \"Save Selection as Image\",\r\n                                action: MenuAction.RunTask,\r\n                                shortcut: file.save_select_image,\r\n                                disabled: !hasSelection,\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        id: \"publish_options\",\r\n                        items: [\r\n                            {\r\n                                id: \"publish_file\",\r\n                                text: `Publish ${ fileType }`,\r\n                                action: MenuAction.RunTask,\r\n                                shortcut: file.publish_file,\r\n                                disabled: !canPublish\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        id: \"library_options\",\r\n                        items: [\r\n                            {\r\n                                id: \"open_library\",\r\n                                text: \"Import Library...\",\r\n                                action: MenuAction.OpenFile,\r\n                                shortcut: file.open_library,\r\n                            },\r\n                            {\r\n                                id: \"save_library\",\r\n                                text: \"Export Library\",\r\n                                action: MenuAction.RunTask,\r\n                                shortcut: file.save_library\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            }, {\r\n                publish_options: Configuration.publisher !== undefined\r\n            })!;\r\n        },\r\n\r\n        \r\n        ///////////////////////////////////////////////////////////////////////\r\n        //  2. Edit Menus  ////////////////////////////////////////////////////\r\n        ///////////////////////////////////////////////////////////////////////\r\n\r\n\r\n        /**\r\n         * Returns the edit menu.\r\n         * @param _s\r\n         *  The Vuex state. (Unused)\r\n         * @param getters\r\n         *  The Vuex getters.\r\n         * @param rootState\r\n         *  The Vuex root state.\r\n         * @returns\r\n         *  The edit menu.\r\n         */\r\n        editMenu(_s, getters, rootState): ContextMenu {\r\n            let { edit } = rootState.AppSettingsStore.settings.hotkeys;\r\n            return {\r\n                id: \"edit_menu\",\r\n                text: \"Edit\",\r\n                action: MenuAction.OpenSubmenu,\r\n                sections: [\r\n                    getters.undoRedoMenu,\r\n                    getters.clipboardMenu,\r\n                    getters.deleteMenu,\r\n                    getters.duplicateMenu,\r\n                    getters.createMenu,\r\n                    getters.selectAllMenu\r\n                ]\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Returns the undo/redo menu section.\r\n         * @param _s\r\n         *  The Vuex state. (Unused)\r\n         * @param _g\r\n         *  The Vuex getters. (Unused)\r\n         * @param rootState\r\n         *  The Vuex root state.\r\n         * @param rootGetters\r\n         *  The Vuex root getters.\r\n         * @returns\r\n         *  The undo/redo menu section.\r\n         */\r\n        undoRedoMenu(_s, _g, rootState, rootGetters): ContextMenuSection {\r\n            let { edit } = rootState.AppSettingsStore.settings.hotkeys;\r\n            return {\r\n                id: \"undo_redo_options\",\r\n                items: [\r\n                    {\r\n                        id: \"undo\",\r\n                        text: \"Undo\",\r\n                        action: MenuAction.RunTask,\r\n                        shortcut: edit.undo,\r\n                        disabled: !rootGetters[\"ActivePageStore/canUndo\"]\r\n                    },\r\n                    {\r\n                        id: \"redo\",\r\n                        text: \"Redo\",\r\n                        action: MenuAction.RunTask,\r\n                        shortcut: edit.redo,\r\n                        disabled: !rootGetters[\"ActivePageStore/canRedo\"]\r\n                    }\r\n                ],\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Returns the clipboard menu section.\r\n         * @param _s\r\n         *  The Vuex state. (Unused)\r\n         * @param _g\r\n         *  The Vuex getters. (Unused)\r\n         * @param rootState\r\n         *  The Vuex root state.\r\n         * @param rootGetters\r\n         *  The Vuex root getters.\r\n         * @returns\r\n         *  The clipboard menu section.\r\n         */\r\n        clipboardMenu(_s, _g, rootState, rootGetters): ContextMenuSection {\r\n            let { edit } = rootState.AppSettingsStore.settings.hotkeys;\r\n            let canPaste = rootGetters[\"ActiveDocumentStore/hasClipboardContents\"];\r\n            let hasSelection = rootGetters[\"ActivePageStore/hasSelection\"];\r\n            return {\r\n                id: \"clipboard_options\",\r\n                items: [\r\n                    {\r\n                        id: \"cut\",\r\n                        text: \"Cut\",\r\n                        action: MenuAction.RunTask,\r\n                        shortcut: edit.cut,\r\n                        disabled: !hasSelection\r\n                    },\r\n                    {\r\n                        id: \"copy\",\r\n                        text: \"Copy\",\r\n                        action: MenuAction.RunTask,\r\n                        shortcut: edit.copy,\r\n                        disabled: !hasSelection\r\n                    },\r\n                    {\r\n                        id: \"paste\",\r\n                        text: \"Paste\",\r\n                        action: MenuAction.RunTask,\r\n                        shortcut: edit.paste,\r\n                        disabled: !canPaste\r\n                    }\r\n                ],\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Returns the delete menu section.\r\n         * @param _s\r\n         *  The Vuex state. (Unused)\r\n         * @param _g\r\n         *  The Vuex getters. (Unused)\r\n         * @param rootState\r\n         *  The Vuex root state.\r\n         * @param rootGetters\r\n         *  The Vuex root getters.\r\n         * @returns\r\n         *  The delete menu section.\r\n         */\r\n        deleteMenu(_s, _g, rootState, rootGetters): ContextMenuSection {\r\n            let { edit } = rootState.AppSettingsStore.settings.hotkeys;\r\n            let hasSelection = rootGetters[\"ActivePageStore/hasSelection\"];\r\n            return {\r\n                id: \"delete_options\",\r\n                items: [\r\n                    {\r\n                        id: \"delete\",\r\n                        text: \"Delete\",\r\n                        action: MenuAction.RunTask,\r\n                        shortcut: edit.delete,\r\n                        disabled: !hasSelection\r\n                    }\r\n                ]\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Returns the duplicate menu section.\r\n         * @param _s\r\n         *  The Vuex state. (Unused)\r\n         * @param _g\r\n         *  The Vuex getters. (Unused)\r\n         * @param rootState\r\n         *  The Vuex root state.\r\n         * @param rootGetters\r\n         *  The Vuex root getters.\r\n         * @returns\r\n         *  The duplicate menu section.\r\n         */\r\n        duplicateMenu(_s, _g, rootState, rootGetters): ContextMenuSection {\r\n            let { edit } = rootState.AppSettingsStore.settings.hotkeys;\r\n            let hasSelection = rootGetters[\"ActivePageStore/hasSelection\"];\r\n            return {\r\n                id: \"duplicate_options\",\r\n                items: [\r\n                    {\r\n                        id: \"duplicate\",\r\n                        text: \"Duplicate\",\r\n                        action: MenuAction.RunTask,\r\n                        shortcut: edit.duplicate,\r\n                        disabled: !hasSelection\r\n                    }\r\n                ]\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Returns the 'select all' menu section.\r\n         * @param _s\r\n         *  The Vuex state. (Unused)\r\n         * @param _g\r\n         *  The Vuex getters. (Unused)\r\n         * @param rootState\r\n         *  The Vuex root state.\r\n         * @returns\r\n         *  The 'select all' menu section.\r\n         */\r\n        selectAllMenu(_s, _g, rootState): ContextMenuSection {\r\n            let { edit } = rootState.AppSettingsStore.settings.hotkeys;\r\n            return {\r\n                id: \"select_options\",\r\n                items: [\r\n                    {\r\n                        id: \"select_all\",\r\n                        text: \"Select All\",\r\n                        action: MenuAction.RunTask,\r\n                        shortcut: edit.select_all,\r\n                    }\r\n                ],\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Returns the create menu section.\r\n         * @param _s\r\n         *  The Vuex state. (Unused)\r\n         * @param _g\r\n         *  The Vuex getters. (Unused)\r\n         * @param rootState\r\n         *  The Vuex root state.\r\n         * @returns\r\n         *  The create menu section.\r\n         */\r\n        createMenu(_s, _g, rootState): ContextMenuSection {\r\n            // Compile templates\r\n            let { document } = rootState.ActiveDocumentStore;\r\n            // Compile blocks\r\n            let blocks: ContextMenu[] = [];\r\n            for(let t of document.factory.getBlockTemplates()) {\r\n                blocks.push({\r\n                    id: \"create_object\",\r\n                    text: t.name,\r\n                    action: MenuAction.RunTask,\r\n                    data: { template: t.id }\r\n                })\r\n            }\r\n            // Compile lines\r\n            let lines: ContextMenu[] = [];\r\n            for(let t of document.factory.getLineTemplates()) {\r\n                lines.push({\r\n                    id: \"create_object\",\r\n                    text: t.name,\r\n                    action: MenuAction.RunTask,\r\n                    data: { template: t.id }\r\n                })\r\n            }\r\n            // Return menu\r\n            return {\r\n                id: \"create_options\",\r\n                items: [\r\n                    {\r\n                        id: \"create_menu\",\r\n                        text: \"Create\",\r\n                        action: MenuAction.OpenSubmenu,\r\n                        sections: [\r\n                            {\r\n                                id: \"block_objects\",\r\n                                items: blocks,\r\n                            },\r\n                            {\r\n                                id: \"line_objects\",\r\n                                items: lines,\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            };\r\n        },\r\n\r\n\r\n        ///////////////////////////////////////////////////////////////////////\r\n        //  3. Layout Menus  //////////////////////////////////////////////////\r\n        ///////////////////////////////////////////////////////////////////////\r\n\r\n\r\n        /**\r\n         * Returns the time menu.\r\n         * @param _s\r\n         *  The Vuex state. (Unused)\r\n         * @param getters\r\n         *  The Vuex getters.\r\n         * @param rootState\r\n         *  The Vuex root state.\r\n         * @returns\r\n         *  The time menu.\r\n         */\r\n        layoutMenu(_s, getters, rootState): ContextMenu {\r\n            let { layout } = rootState.AppSettingsStore.settings.hotkeys;\r\n            return {\r\n                id: \"layout_menu\",\r\n                text: \"Layout\",\r\n                action: MenuAction.OpenSubmenu,\r\n                sections: [\r\n                    getters.layeringMenu,\r\n                    {\r\n                        id: \"align_options\",\r\n                        items: [\r\n                            {\r\n                                id: \"align_menu\",\r\n                                text: \"Align\",\r\n                                action: MenuAction.OpenSubmenu,\r\n                                sections: [\r\n                                    {\r\n                                        id: \"horizontal_alignments\",\r\n                                        items: [\r\n                                            {\r\n                                                id: \"align_left\",\r\n                                                text: \"Align Left\",\r\n                                                action: MenuAction.RunTask,\r\n                                                shortcut: layout.align_left,\r\n                                            },\r\n                                            {\r\n                                                id: \"align_center\",\r\n                                                text: \"Align Center\",\r\n                                                action: MenuAction.RunTask,\r\n                                                shortcut: layout.align_center,\r\n                                            },\r\n                                            {\r\n                                                id: \"align_right\",\r\n                                                text: \"Align Right\",\r\n                                                action: MenuAction.RunTask,\r\n                                                shortcut: layout.align_right,\r\n                                            }\r\n                                        ]\r\n                                    },\r\n                                    {\r\n                                        id: \"vertical_alignments\",\r\n                                        items: [\r\n                                            {\r\n                                                id: \"align_top\",\r\n                                                text: \"Align Top\",\r\n                                                action: MenuAction.RunTask,\r\n                                                shortcut: layout.align_top,\r\n                                            },\r\n                                            {\r\n                                                id: \"align_middle\",\r\n                                                text: \"Align Middle\",\r\n                                                action: MenuAction.RunTask,\r\n                                                shortcut: layout.align_middle,\r\n                                            },\r\n                                            {\r\n                                                id: \"align_bottom\",\r\n                                                text: \"Align Bottom\",\r\n                                                action: MenuAction.RunTask,\r\n                                                shortcut: layout.align_bottom,\r\n                                            }\r\n                                        ]\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ]\r\n                    },\r\n                    getters.groupingMenu,\r\n                    getters.groupMenu,\r\n                ]\r\n            };\r\n        },\r\n\r\n\r\n        /**\r\n         * Returns the layering menu section.\r\n         * @param _s\r\n         *  The Vuex state. (Unused)\r\n         * @param _g\r\n         *  The Vuex getters. (Unused)\r\n         * @param rootState\r\n         *  The Vuex root state.\r\n         * @returns\r\n         *  The layering menu section.\r\n         */\r\n        layeringMenu(_s, _g, rootState): ContextMenuSection {\r\n            let { layout } = rootState.AppSettingsStore.settings.hotkeys;\r\n            return {\r\n                id: \"layering_options\",\r\n                items: [\r\n                    {\r\n                        id: \"selection_to_front\",\r\n                        text: \"To Front\",\r\n                        action: MenuAction.RunTask,\r\n                        shortcut: layout.selection_to_front,\r\n                    },\r\n                    {\r\n                        id: \"selection_to_back\",\r\n                        text: \"To Back\",\r\n                        action: MenuAction.RunTask,\r\n                        shortcut: layout.selection_to_back,\r\n                    },\r\n                    {\r\n                        id: \"bring_selection_forward\",\r\n                        text: \"Bring Forward\",\r\n                        action: MenuAction.RunTask,\r\n                        shortcut: layout.bring_selection_forward,\r\n                    },\r\n                    {\r\n                        id: \"send_selection_backward\",\r\n                        text: \"Send Backward\",\r\n                        action: MenuAction.RunTask,\r\n                        shortcut: layout.send_selection_backward,\r\n                    }\r\n                ],\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Returns the grouping menu section.\r\n         * @param _s\r\n         *  The Vuex state. (Unused)\r\n         * @param _g\r\n         *  The Vuex getters. (Unused)\r\n         * @param rootState\r\n         *  The Vuex root state.\r\n         * @returns\r\n         *  The grouping menu section.\r\n         */\r\n        groupingMenu(_s, _g, rootState): ContextMenuSection {\r\n            let { layout } = rootState.AppSettingsStore.settings.hotkeys;\r\n            return {\r\n                id: \"grouping_options\",\r\n                items: [\r\n                    {\r\n                        id: \"group\",\r\n                        text: \"Group\",\r\n                        action: MenuAction.RunTask,\r\n                        shortcut: layout.group,\r\n                    },\r\n                    {\r\n                        id: \"ungroup\",\r\n                        text: \"Ungroup\",\r\n                        action: MenuAction.RunTask,\r\n                        shortcut: layout.ungroup,\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Returns the group menu section.\r\n         * @param _s\r\n         *  The Vuex state. (Unused)\r\n         * @param _g\r\n         *  The Vuex getters. (Unused)\r\n         * @param rootState\r\n         *  The Vuex root state.\r\n         * @returns\r\n         *  The group menu section.\r\n         */\r\n        groupMenu(_s, _g, rootState): ContextMenuSection {\r\n            let { layout } = rootState.AppSettingsStore.settings.hotkeys;\r\n            return {\r\n                id: \"group_options\",\r\n                items: [\r\n                    {\r\n                        id: \"open_group\",\r\n                        text: \"Open Group\",\r\n                        action: MenuAction.RunTask,\r\n                        shortcut: layout.open_group,\r\n                    },\r\n                    {\r\n                        id: \"close_group\",\r\n                        text: \"Close Group\",\r\n                        action: MenuAction.RunTask,\r\n                        shortcut: layout.close_group,\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n\r\n        \r\n        ///////////////////////////////////////////////////////////////////////\r\n        //  4. View Menus  ////////////////////////////////////////////////////\r\n        ///////////////////////////////////////////////////////////////////////\r\n\r\n\r\n        /**\r\n         * Returns the view menu.\r\n         * @param _s\r\n         *  The Vuex state. (Unused)\r\n         * @param getters\r\n         *  The Vuex getters.\r\n         * @param rootState\r\n         *  The Vuex root state.\r\n         * @returns\r\n         *  The view menu.\r\n         */\r\n        viewMenu(_s, getters, rootState): ContextMenu {\r\n            return {\r\n                id: \"view_menu\",\r\n                text: \"View\",\r\n                action: MenuAction.OpenSubmenu,\r\n                sections: [\r\n                    getters.diagramViewMenu,\r\n                    getters.diagramRenderMenu,\r\n                    getters.zoomMenu,\r\n                    getters.jumpMenu,\r\n                    getters.fullscreenMenu,\r\n                    getters.developerViewMenu\r\n                ]\r\n            }\r\n        },\r\n\r\n\r\n        /**\r\n         * Returns the diagram view menu section.\r\n         * @param _s\r\n         *  The Vuex state. (Unused)\r\n         * @param _g\r\n         *  The Vuex getters. (Unused)\r\n         * @param rootState\r\n         *  The Vuex root state.\r\n         * @returns\r\n         *  The diagram view menu section.\r\n         */\r\n        diagramViewMenu(_s, _g, rootState): ContextMenuSection {\r\n            let { view } = rootState.AppSettingsStore.settings.hotkeys;\r\n            let { \r\n                display_grid,\r\n                display_shadows\r\n            } = rootState.AppSettingsStore.settings.view.diagram;\r\n            return {\r\n                id: \"diagram_view_options\",\r\n                items: [\r\n                    {\r\n                        id: \"toggle_grid\",\r\n                        text: \"Grid\",\r\n                        action: MenuAction.ToggleValue,\r\n                        shortcut: view.toggle_grid,\r\n                        value: display_grid\r\n                    },\r\n                    {\r\n                        id: \"toggle_shadows\",\r\n                        text: \"Shadows\",\r\n                        action: MenuAction.ToggleValue,\r\n                        shortcut: view.toggle_shadows,\r\n                        value: display_shadows\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Returns the diagram render menu section.\r\n         * @param _s\r\n         *  The Vuex state. (Unused)\r\n         * @param _g\r\n         *  The Vuex getters. (Unused)\r\n         * @param rootState\r\n         *  The Vuex root state.\r\n         * @returns\r\n         *  The diagram render menu section.\r\n         */\r\n        diagramRenderMenu(_s, _g, rootState): ContextMenuSection {\r\n            let { render_high_quality } = rootState.AppSettingsStore.settings.view.diagram;\r\n            return {\r\n                id: \"diagram_render_quality\",\r\n                items: [\r\n                    {\r\n                        id: \"enable_high_quality_render\",\r\n                        text: \"Rendering – High Quality\",\r\n                        action: MenuAction.ToggleValue,\r\n                        value: render_high_quality,\r\n                    },\r\n                    {\r\n                        id: \"enable_low_quality_render\",\r\n                        text: \"Rendering – Fast\",\r\n                        action: MenuAction.ToggleValue,\r\n                        value: !render_high_quality,\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Returns the zoom menu section.\r\n         * @param _s\r\n         *  The Vuex state. (Unused)\r\n         * @param _g\r\n         *  The Vuex getters. (Unused)\r\n         * @param rootState\r\n         *  The Vuex root state.\r\n         * @returns\r\n         *  The zoom menu section.\r\n         */\r\n        zoomMenu(_s, _g, rootState): ContextMenuSection {\r\n            let { view } = rootState.AppSettingsStore.settings.hotkeys;\r\n            return {\r\n                id: \"zoom_options\",\r\n                items: [\r\n                    {\r\n                        id: \"reset_view\",\r\n                        text: \"Reset View\",\r\n                        action: MenuAction.RunTask,\r\n                        shortcut: view.reset_view\r\n                    },\r\n                    {\r\n                        id: \"zoom_in\",\r\n                        text: \"Zoom In\",\r\n                        action: MenuAction.RunTask,\r\n                        shortcut: view.zoom_in\r\n                    },\r\n                    {\r\n                        id: \"zoom_out\",\r\n                        text: \"Zoom Out\",\r\n                        action: MenuAction.RunTask,\r\n                        shortcut: view.zoom_out\r\n                    },\r\n                ]\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Returns the jump menu section.\r\n         * @param _s\r\n         *  The Vuex state. (Unused)\r\n         * @param _g\r\n         *  The Vuex getters. (Unused)\r\n         * @param rootState\r\n         *  The Vuex root state.\r\n         * @param rootGetters\r\n         *  The Vuex root getters.\r\n         * @returns\r\n         *  The jump menu section.\r\n         */\r\n        jumpMenu(_s, _g, rootState, rootGetters): ContextMenuSection {\r\n            let { view } = rootState.AppSettingsStore.settings.hotkeys;\r\n            let hasSelection = rootGetters[\"ActivePageStore/hasSelection\"];\r\n            return {\r\n                id: \"jump_options\",\r\n                items: [\r\n                    {\r\n                        id: \"jump_to_selection\",\r\n                        text: \"Zoom to Selection\",\r\n                        action: MenuAction.RunTask,\r\n                        shortcut: view.jump_to_selection,\r\n                        disabled: !hasSelection\r\n                    },\r\n                    {\r\n                        id: \"jump_to_parents\",\r\n                        text: \"Jump to Parents\",\r\n                        action: MenuAction.RunTask,\r\n                        shortcut: view.jump_to_parents,\r\n                        disabled: !hasSelection\r\n                    },\r\n                    {\r\n                        id: \"jump_to_children\",\r\n                        text: \"Jump to Children\",\r\n                        action: MenuAction.RunTask,\r\n                        shortcut: view.jump_to_children,\r\n                        disabled: !hasSelection\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Returns the fullscreen menu section.\r\n         * @param _s\r\n         *  The Vuex state. (Unused)\r\n         * @param _g\r\n         *  The Vuex getters. (Unused)\r\n         * @param rootState\r\n         *  The Vuex root state.\r\n         * @returns\r\n         *  The fullscreen menu section.\r\n         */\r\n        fullscreenMenu(_s, _g, rootState): ContextMenuSection {\r\n            let { view } = rootState.AppSettingsStore.settings.hotkeys;\r\n            return {\r\n                id: \"fullscreen_options\",\r\n                items: [\r\n                    {\r\n                        id: \"fullscreen\",\r\n                        text: \"Fullscreen\",\r\n                        action: MenuAction.RunTask,\r\n                        shortcut: view.fullscreen,\r\n                    }\r\n                ],\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Returns the developer view menu section.\r\n         * @param _s\r\n         *  The Vuex state. (Unused)\r\n         * @param _g\r\n         *  The Vuex getters. (Unused)\r\n         * @param rootState\r\n         *  The Vuex root state.\r\n         * @returns\r\n         *  The developer view menu section.\r\n         */\r\n        developerViewMenu(_s, _g, rootState): ContextMenuSection {\r\n            let { view } = rootState.AppSettingsStore.settings.hotkeys;\r\n            let { display_debug_mode } = rootState.AppSettingsStore.settings.view.diagram;\r\n            return {\r\n                id: \"developer_view_options\",\r\n                items: [\r\n                    {\r\n                        id: \"toggle_debug_view\",\r\n                        text: \"Debug Mode\",\r\n                        action: MenuAction.ToggleValue,\r\n                        shortcut: view.toggle_debug_view,\r\n                        value: display_debug_mode\r\n                    }\r\n                ],\r\n            };\r\n        },\r\n\r\n        \r\n        ///////////////////////////////////////////////////////////////////////\r\n        //  5. Help Menu  /////////////////////////////////////////////////////\r\n        ///////////////////////////////////////////////////////////////////////\r\n\r\n\r\n        /**\r\n         * Returns the help menu.\r\n         * @returns\r\n         *  The help menu.\r\n         */\r\n        helpMenu(): ContextMenu {\r\n            let links = Configuration.help_links;\r\n            return {\r\n                id: \"help_menu\",\r\n                text: \"Help\",\r\n                action: MenuAction.OpenSubmenu,\r\n                sections: [\r\n                    {\r\n                        id: \"help_links\",\r\n                        items: links.map(link => ({\r\n                            id: \"open_help_link\",\r\n                            text: link.text,\r\n                            action: MenuAction.OpenLink,\r\n                            link: link.url\r\n                        }))\r\n                    },\r\n                    {\r\n                        id: \"about\",\r\n                        items: [\r\n                            {\r\n                                id: \"open_about_window\",\r\n                                text: \"About\",\r\n                                action: MenuAction.RunTask,\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            };\r\n        }\r\n\r\n    }\r\n\r\n} as Module<ContextMenuStore, ModuleStore>\r\n\r\n\r\n/**\r\n * Recursively filters out disabled and empty menus from a {@link ContextMenu}.\r\n * @param m\r\n *  The context menu item to filter.\r\n * @param f\r\n *  The features to enable / disable (specified by id).\r\n *  (Default: {})\r\n * @returns\r\n *  The filtered context menu item.\r\n */\r\n function filterMenuOptions(m: ContextMenu, f: { [key: string]: boolean } = {}): ContextMenu | undefined {\r\n    // Return null if menu disabled\r\n    if (m.id in f && !f[m.id]) return undefined;\r\n    // Return menu if no submenus\r\n    if (m.action !== MenuAction.OpenSubmenu) return m;\r\n    // Filter sections\r\n    for (let i = m.sections.length - 1; 0 <= i; i--) {\r\n        let section: ContextMenuSection = m.sections[i];\r\n        if (section.id in f && !f[section.id]) {\r\n            m.sections.splice(i, 1);\r\n        } else {\r\n            // Filter section items\r\n            for (let j = section.items.length - 1; 0 <= j; j--) {\r\n                let item = section.items[j];\r\n                if (item.id in f && !f[item.id]) {\r\n                    section.items.splice(j, 1);\r\n                } else if (item.action === MenuAction.OpenSubmenu) {\r\n                    // Filter submenus\r\n                    filterMenuOptions(item, f)\r\n                    if (item.sections.length === 0) {\r\n                        section.items.splice(j, 1);\r\n                    }\r\n                }\r\n            }\r\n            if (section.items.length === 0) {\r\n                m.sections.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n    // Return filtered menu\r\n    return m.sections.length === 0 ? undefined : m;\r\n}\r\n","import { Module } from \"vuex\"\r\nimport { Hotkey, HotkeyAction } from \"@/assets/scripts/HotkeyObserver\"\r\nimport { HotkeyStore, ModuleStore } from \"../StoreTypes\";\r\n\r\nexport default {\r\n    namespaced: true,\r\n    getters: {\r\n\r\n        /**\r\n         * Returns the native hotkeys.\r\n         * @returns\r\n         *  The supported native hotkeys.\r\n         */\r\n        nativeHotkeys(): Hotkey[] {\r\n            return [\r\n                {\r\n                    id: \"refresh\",\r\n                    action: HotkeyAction.RunTask,\r\n                    shortcut: \"Control+R\",\r\n                    allowBrowserBehavior: true\r\n                },\r\n                {\r\n                    id: \"hard-refresh\",\r\n                    action: HotkeyAction.RunTask,\r\n                    shortcut: \"Control+Shift+R\",\r\n                    allowBrowserBehavior: true\r\n                }\r\n            ]\r\n        },\r\n\r\n        /**\r\n         * Returns the file hotkeys.\r\n         * @param _s\r\n         *  The Vuex state. (Unused)\r\n         * @param _g\r\n         *  The Vuex getters. (Unused)\r\n         * @param rootState\r\n         *  The Vuex root state.\r\n         * @returns\r\n         *  The file hotkeys.\r\n         */\r\n        fileHotkeys(_s, _g, rootState): Hotkey[] {\r\n            let { file } = rootState.AppSettingsStore.settings.hotkeys;\r\n            return [\r\n                {\r\n                    id: \"new_file\",\r\n                    action: HotkeyAction.RunTask,\r\n                    shortcut: file.new_file,\r\n                },\r\n                {\r\n                    id: \"open_file\",\r\n                    action: HotkeyAction.OpenFile,\r\n                    shortcut: file.open_file,\r\n                },\r\n                {\r\n                    id: \"save_file\",\r\n                    action: HotkeyAction.RunTask,\r\n                    shortcut: file.save_file\r\n                },\r\n                {\r\n                    id: \"save_image\",\r\n                    action: HotkeyAction.RunTask,\r\n                    shortcut: file.save_image,\r\n                },\r\n                {\r\n                    id: \"save_select_image\",\r\n                    action: HotkeyAction.RunTask,\r\n                    shortcut: file.save_select_image\r\n                },\r\n                {\r\n                    id: \"publish_file\",\r\n                    action: HotkeyAction.RunTask,\r\n                    shortcut: file.publish_file,\r\n                },\r\n                {\r\n                    id: \"open_library\",\r\n                    action: HotkeyAction.OpenFile,\r\n                    shortcut: file.open_library,\r\n                },\r\n                {\r\n                    id: \"save_library\",\r\n                    action: HotkeyAction.RunTask,\r\n                    shortcut: file.save_library,\r\n                }\r\n            ];\r\n        },\r\n\r\n        /**\r\n         * Returns the edit hotkeys.\r\n         * @param _s\r\n         *  The Vuex state. (Unused)\r\n         * @param _g\r\n         *  The Vuex getters. (Unused)\r\n         * @param rootState\r\n         *  The Vuex root state.\r\n         * @returns\r\n         *  The edit hotkeys.\r\n         */\r\n        editHotKeys(_s, _g, rootState): Hotkey[] {\r\n            let repeat = { delay: 400, interval: 50 };\r\n            let { edit } = rootState.AppSettingsStore.settings.hotkeys;\r\n            return [\r\n                {\r\n                    id: \"undo\",\r\n                    action: HotkeyAction.RunTask,\r\n                    shortcut: edit.undo,\r\n                    repeat\r\n                },\r\n                {\r\n                    id: \"redo\",\r\n                    action: HotkeyAction.RunTask,\r\n                    shortcut: edit.redo,\r\n                    repeat\r\n                },\r\n                {\r\n                    id: \"cut\",\r\n                    action: HotkeyAction.RunTask,\r\n                    shortcut: edit.cut,\r\n                },\r\n                {\r\n                    id: \"copy\",\r\n                    action: HotkeyAction.RunTask,\r\n                    shortcut: edit.copy,\r\n                },\r\n                {\r\n                    id: \"paste\",\r\n                    action: HotkeyAction.RunTask,\r\n                    shortcut: edit.paste,\r\n                },\r\n                {\r\n                    id: \"delete\",\r\n                    action: HotkeyAction.RunTask,\r\n                    shortcut: edit.delete\r\n                },\r\n                {\r\n                    id: \"duplicate\",\r\n                    action: HotkeyAction.RunTask,\r\n                    shortcut: edit.duplicate\r\n                },\r\n                {\r\n                    id: \"select_all\",\r\n                    action: HotkeyAction.RunTask,\r\n                    shortcut: edit.select_all\r\n                }\r\n            ];\r\n        },\r\n\r\n        /**\r\n         * Returns the layout hotkeys.\r\n         * @param _s\r\n         *  The Vuex state. (Unused)\r\n         * @param _g\r\n         *  The Vuex getters. (Unused)\r\n         * @param rootState\r\n         *  The Vuex root state.\r\n         * @returns\r\n         *  The layout hotkeys.\r\n         */\r\n        layoutHotkeys(_s, _g, rootState): Hotkey[] {\r\n            let { layout } = rootState.AppSettingsStore.settings.hotkeys;\r\n            return [\r\n                {\r\n                    id: \"selection_to_front\",\r\n                    action: HotkeyAction.RunTask,\r\n                    shortcut: layout.selection_to_front\r\n                },\r\n                {\r\n                    id: \"selection_to_back\",\r\n                    action: HotkeyAction.RunTask,\r\n                    shortcut: layout.selection_to_back\r\n                },\r\n                {\r\n                    id: \"bring_selection_forward\",\r\n                    action: HotkeyAction.RunTask,\r\n                    shortcut: layout.bring_selection_forward\r\n                },\r\n                {\r\n                    id: \"send_selection_backward\",\r\n                    action: HotkeyAction.RunTask,\r\n                    shortcut: layout.send_selection_backward\r\n                },\r\n                {\r\n                    id: \"align_left\",\r\n                    action: HotkeyAction.RunTask,\r\n                    shortcut: layout.align_left\r\n                },\r\n                {\r\n                    id: \"align_center\",\r\n                    action: HotkeyAction.RunTask,\r\n                    shortcut: layout.align_center\r\n                },\r\n                {\r\n                    id: \"align_right\",\r\n                    action: HotkeyAction.RunTask,\r\n                    shortcut: layout.align_right\r\n                },\r\n                {\r\n                    id: \"align_top\",\r\n                    action: HotkeyAction.RunTask,\r\n                    shortcut: layout.align_top\r\n                },\r\n                {\r\n                    id: \"align_middle\",\r\n                    action: HotkeyAction.RunTask,\r\n                    shortcut: layout.align_middle\r\n                },\r\n                {\r\n                    id: \"align_bottom\",\r\n                    action: HotkeyAction.RunTask,\r\n                    shortcut: layout.align_bottom\r\n                },\r\n                {\r\n                    id: \"group\",\r\n                    action: HotkeyAction.RunTask,\r\n                    shortcut: layout.group\r\n                },\r\n                {\r\n                    id: \"ungroup\",\r\n                    action: HotkeyAction.RunTask,\r\n                    shortcut: layout.ungroup\r\n                },\r\n                {\r\n                    id: \"open_group\",\r\n                    action: HotkeyAction.RunTask,\r\n                    shortcut: layout.open_group\r\n                },\r\n                {\r\n                    id: \"close_group\",\r\n                    action: HotkeyAction.RunTask,\r\n                    shortcut: layout.close_group\r\n                }\r\n            ];\r\n        },\r\n\r\n        /**\r\n         * Returns the view hotkeys.\r\n         * @param _s\r\n         *  The Vuex state. (Unused)\r\n         * @param _g\r\n         *  The Vuex getters. (Unused)\r\n         * @param rootState\r\n         *  The Vuex root state.\r\n         * @returns\r\n         *  The view hotkeys.\r\n         */\r\n        viewHotkeys(_s, _g, rootState): Hotkey[] {\r\n            let { view } = rootState.AppSettingsStore.settings.hotkeys;\r\n            let {\r\n                display_grid,\r\n                display_shadows,\r\n                display_debug_mode\r\n            } = rootState.AppSettingsStore.settings.view.diagram;\r\n            return  [\r\n                {\r\n                    id: \"toggle_grid\",\r\n                    action: HotkeyAction.ToggleValue,\r\n                    shortcut: view.toggle_grid,\r\n                    value: display_grid\r\n                },\r\n                {\r\n                    id: \"toggle_shadows\",\r\n                    action: HotkeyAction.ToggleValue,\r\n                    shortcut: view.toggle_shadows,\r\n                    value: display_shadows\r\n                },\r\n                {\r\n                    id: \"reset_view\",\r\n                    action: HotkeyAction.RunTask,\r\n                    shortcut: view.reset_view\r\n                },\r\n                {\r\n                    id: \"zoom_in\",\r\n                    action: HotkeyAction.RunTask,\r\n                    shortcut: view.zoom_in\r\n                },\r\n                {\r\n                    id: \"zoom_out\",\r\n                    action: HotkeyAction.RunTask,\r\n                    shortcut: view.zoom_out\r\n                },\r\n                {\r\n                    id: \"jump_to_selection\",\r\n                    action: HotkeyAction.RunTask,\r\n                    shortcut: view.jump_to_selection\r\n                },\r\n                {\r\n                    id: \"jump_to_parents\",\r\n                    action: HotkeyAction.RunTask,\r\n                    shortcut: view.jump_to_parents\r\n                },\r\n                {\r\n                    id: \"jump_to_children\",\r\n                    action: HotkeyAction.RunTask,\r\n                    shortcut: view.jump_to_children\r\n                },\r\n                {\r\n                    id: \"fullscreen\",\r\n                    action: HotkeyAction.RunTask,\r\n                    shortcut: view.fullscreen\r\n                },\r\n                {\r\n                    id: \"toggle_debug_view\",\r\n                    action: HotkeyAction.ToggleValue,\r\n                    shortcut: view.toggle_debug_view,\r\n                    value: display_debug_mode\r\n                }\r\n            ];\r\n        }\r\n\r\n    }\r\n\r\n} as Module<HotkeyStore, ModuleStore>\r\n","import { createStore } from 'vuex'\nimport { ModuleStore } from './StoreTypes'\nimport ActivePageStore from './Stores/ActivePageStore'\nimport ActiveDocumentStore from './Stores/ActiveDocumentStore'\nimport AppActionsStore from './Stores/AppActionsStore'\nimport AppSettingsStore from './Stores/AppSettingsStore'\nimport ContextMenuStore from './Stores/ContextMenuStore'\nimport HotkeyStore from './Stores/HotkeyStore'\n\nexport default createStore<ModuleStore>({\n  modules: {\n    ActiveDocumentStore,\n    ActivePageStore,\n    AppActionsStore,\n    AppSettingsStore,\n    ContextMenuStore,\n    HotkeyStore\n  }\n})\n","import App from './App.vue'\r\nimport store from './store'\r\nimport { createApp } from 'vue'\r\nimport \"@/assets/fonts/inter.css\"\r\n\r\ncreateApp(App).use(store).mount('#app')\r\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./ObjectEditor.vue?vue&type=style&index=0&id=2fefc0d5&scoped=true&lang=css\"","import { RasterCache } from \"../../Diagram/RasterCache\";\r\nimport { DiagramObjectView } from \"../../DiagramViewTypes\";\r\nimport { \r\n    DiagramAnchorableModel,\r\n    DiagramAnchorModel\r\n} from \"./BaseModels\";\r\nimport {\r\n    DictionaryProperty,\r\n    Property,\r\n    PropertyType,\r\n    StringProperty\r\n} from \"../../Property\";\r\nimport { \r\n    DiagramFactory,\r\n    DiagramObjectExport,\r\n    DiagramObjectValues,\r\n    ObjectTemplate,\r\n    SemanticRole\r\n} from \"../../DiagramFactory\";\r\nimport {\r\n    Alignment, AlignmentMask, Cursor, CursorMask, Hover, HoverMask,\r\n    InheritAlignmentMask, InheritAlignment, PositionSetByUser,\r\n    PositionSetByUserMask, Priority, PriorityMask, Select, SelectMask,\r\n    SemanticRoleMask     \r\n} from \"../../Attributes\";\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  1. Diagram Object Model  //////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport abstract class DiagramObjectModel {\r\n\r\n    /**\r\n     * The object's id.\r\n     */\r\n    public readonly id: string;\r\n\r\n    /**\r\n     * The object's attributes.\r\n     */\r\n    public attrs: number;\r\n\r\n    /**\r\n     * The object's parent.\r\n     */\r\n    public parent: DiagramObjectModel | undefined;\r\n\r\n     /**\r\n      * The object's children.\r\n      */\r\n    public readonly children: DiagramObjectModel[];\r\n\r\n    /**\r\n     * The object's properties.\r\n     */\r\n    public readonly props: DictionaryProperty;\r\n\r\n    /**\r\n     * The object's diagram factory.\r\n     */\r\n    public readonly factory: DiagramFactory;\r\n\r\n    /**\r\n     * The template the object was configured with.\r\n     */\r\n    public readonly template: ObjectTemplate;\r\n\r\n    /**\r\n     * The object's bounding box.\r\n     */\r\n    public readonly boundingBox: BoundingBox;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link DiagramObjectModel}.\r\n     * @param factory\r\n     *  The object's diagram factory.\r\n     * @param template\r\n     *  The object's template.\r\n     * @param values\r\n     *  The object's values.\r\n     */\r\n    constructor(\r\n        factory: DiagramFactory, \r\n        template: ObjectTemplate,\r\n        values?: DiagramObjectValues\r\n    ) {\r\n        this.id = values?.id ?? crypto.randomUUID();\r\n        this.attrs = values?.attrs ?? PositionSetByUser.False;\r\n        this.setAlignment(Alignment.Free);\r\n        this.setCursor(Cursor.Default);\r\n        this.setInheritAlignment(InheritAlignment.True);\r\n        this.setSemanticRole(SemanticRole.None);\r\n        this.children = [];\r\n        this.factory = factory;\r\n        this.template = template;\r\n        this.boundingBox = new BoundingBox();\r\n        this.boundingBox.xMid = values?.x ?? 0;\r\n        this.boundingBox.yMid = values?.y ?? 0;\r\n        // Value configuration\r\n        this.props = Property.create(\r\n            {\r\n                type: PropertyType.Dictionary,\r\n                form: template?.properties ?? {},\r\n                text_key: \"\"\r\n            },\r\n            values?.properties\r\n        ) as DictionaryProperty;\r\n        if(values?.children) {\r\n            for(let i = 0; i < values.children.length; i++) {\r\n                this.addChild(values.children[i], i, false);\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Structure  /////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n    \r\n    /**\r\n     * Returns this object and all child objects (in a breadth-first fashion).\r\n     * @param match\r\n     *  A predicate which is applied to each object. If the predicate returns\r\n     *  false, the object is not included in the enumeration.\r\n     * @returns\r\n     *  This object and all child objects.\r\n     */\r\n    public *getSubtree(\r\n        match?: (o: DiagramObjectModel) => boolean\r\n    ): IterableIterator<DiagramObjectModel> {\r\n        let visited = new Set<string>([this.id]);\r\n        let queue: DiagramObjectModel[] = [this];\r\n        while(queue.length != 0) {\r\n            let obj = queue.shift()!;\r\n            // Yield object\r\n            if(!match || match(obj)) {\r\n                yield obj;\r\n            }\r\n            // Don't traverse anchors\r\n            if(obj instanceof DiagramAnchorModel) {\r\n                continue;\r\n            }\r\n            // Enumerate children\r\n            for(let child of obj.children){\r\n                if(!visited.has(child.id)) {\r\n                    visited.add(child.id);\r\n                    queue.push(child);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Adds a child object.\r\n     * @param obj\r\n     *  The object to add.\r\n     * @param index\r\n     *  The child object's location in the array.\r\n     *  (Default: End of the array)\r\n     * @param update\r\n     *  If the layout should be updated.\r\n     *  (Default: true)\r\n     */\r\n    public addChild(\r\n        obj: DiagramObjectModel,\r\n        index: number = this.children.length,\r\n        update: boolean = true,\r\n    ) {\r\n        // Ensure unique id\r\n        if(this.hasChild(obj.id)) {\r\n            throw new DiagramObjectModelError(\r\n                `Object already has a child with the id '${ obj.id }'.`, this\r\n            )\r\n        }\r\n        // Set object's parent\r\n        obj.parent = this;\r\n        // Add object to children\r\n        this.children.splice(index, 0, obj);\r\n        // Update layout\r\n        if(update) {\r\n            this.updateLayout(LayoutUpdateReason.ChildAdded);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reorders a child object.\r\n     * @param id\r\n     *  The id of the object.\r\n     * @param index\r\n     *  The object's new location.\r\n     * @param update\r\n     *  If the layout should be updated.\r\n     *  (Default: true)\r\n     */\r\n    public reorderChild(id: string, index: number, update: boolean= true) {\r\n        let i = this.children.findIndex(o => o.id === id);\r\n        let obj = this.children[i];\r\n        if(!obj) {\r\n            throw new DiagramObjectModelError(\r\n                `Object has no child with the id '${ id }'.`\r\n            );\r\n        }\r\n        // Remove child\r\n        this.children.splice(i, 1);\r\n        // Reinsert child\r\n        this.children.splice(index, 0, obj);\r\n        // Update layout\r\n        if(update) {\r\n            this.updateLayout(LayoutUpdateReason.Movement);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes a child object.\r\n     * @param id\r\n     *  The id of the object.\r\n     * @param update\r\n     *  If the layout should be updated.\r\n     *  (Default: true)\r\n     * @param safely\r\n     *  If the object should be checked for external attachments. Ordinarily,\r\n     *  all external attachments should be removed before removing an object to\r\n     *  ensure references to the object aren't kept elsewhere. However, when \r\n     *  executing a mass removal, removing ALL external attachments may not be\r\n     *  needed or wanted. Only disable this if you know what you're doing. \r\n     *  (Default: true)\r\n     */\r\n    public removeChild(id: string, update: boolean = true, safely: boolean = true) {\r\n        let i = this.children.findIndex(o => o.id === id);\r\n        let obj = this.children[i];\r\n        if(!obj) {\r\n            return;\r\n        }\r\n        // Check for external attachments\r\n        if(safely && obj.hasExternalAttachments()) {\r\n            throw new DiagramObjectModelError(\r\n                `'${ obj.id }' still maintains external attachments.`, obj\r\n            );\r\n        }\r\n        // Clear object's parent\r\n        obj.parent = undefined;\r\n        // Remove object from children\r\n        this.children.splice(i, 1);\r\n        // Update layout\r\n        if(update) {\r\n            this.updateLayout(LayoutUpdateReason.ChildDeleted);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Tests if the object has a child with the specified id.\r\n     * @param id\r\n     *  The id.\r\n     * @returns\r\n     *  True if the object contains a child with the same id, false otherwise.\r\n     */\r\n    public hasChild(id: string) {\r\n        return this.children.find(o => o.id === id) !== undefined;\r\n    }\r\n\r\n    /**\r\n     * Tests if the object has any external attachments.\r\n     * @returns\r\n     *  True if the object has external attachments, false otherwise.\r\n     */\r\n    public hasExternalAttachments(): boolean {\r\n        // Compile list of anchors and anchor-ables\r\n        let map = new Map<string, DiagramObjectModel>();\r\n        for(let obj of this.getSubtree()) {\r\n            if(\r\n                obj instanceof DiagramAnchorModel ||\r\n                obj instanceof DiagramAnchorableModel\r\n            ) {\r\n                map.set(obj.id, obj);\r\n            }\r\n        }\r\n        // Look for any dependencies that can't be found in the list\r\n        for(let obj of map.values()) {\r\n            if(obj instanceof DiagramAnchorableModel) {\r\n                if(obj.isAttached() && !map.has(obj.anchor!.id))\r\n                    return true;\r\n                continue;\r\n            }\r\n            if(obj instanceof DiagramAnchorModel) {\r\n                for(let c of obj.children) {\r\n                    if(!map.has(c.id))\r\n                        return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Returns the object's location in its parent.\r\n     * @returns\r\n     *  The object's location, -1 if it has no parent.\r\n     */\r\n    public getIndexInParent() {\r\n        return this.parent?.children.indexOf(this) ?? -1;\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  2. Selection  /////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Returns the topmost object at the given coordinate.\r\n     * @param x\r\n     *  The x coordinate.\r\n     * @param y\r\n     *  The y coordinate.\r\n     * @returns\r\n     *  The topmost object, undefined if there isn't one.\r\n     */\r\n    public getObjectAt(x: number, y: number): DiagramObjectModel | undefined {\r\n        let object = undefined;\r\n        let select = undefined;\r\n        for(let i = this.children.length - 1; 0 <= i; i--) {\r\n            let child = this.children[i];\r\n            if(child instanceof DiagramAnchorableModel && child.isAttached()) {\r\n                // If child is attached to an anchor, selection is decided by anchor\r\n                continue;\r\n            }\r\n            select = child.getObjectAt(x, y);\r\n            if(select && (!object || select.hasHigherPriorityThan(object))) {\r\n                object = select;\r\n                if(object.getPriority() === Priority.High) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return object;\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  3. Movement  //////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Moves the object to a specific coordinate.\r\n     * @param x\r\n     *  The x coordinate.\r\n     * @param y\r\n     *  The y coordinate.\r\n     * @param updateParent\r\n     *  If the parent's layout should be updated.\r\n     *  (Default: true)\r\n     */\r\n    public moveTo(x: number, y: number, updateParent: boolean = true) {\r\n        this.moveBy(\r\n            x - this.boundingBox.xMid,\r\n            y - this.boundingBox.yMid,\r\n            updateParent\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Moves the object relative to its current position. \r\n     * @param dx\r\n     *  The change in x.\r\n     * @param dy \r\n     *  The change in y.\r\n     * @param updateParent\r\n     *  If the parent's layout should be updated.\r\n     *  (Default: true)\r\n     */\r\n    public moveBy(dx: number, dy: number, updateParent: boolean = true) {\r\n        // Move self\r\n        this.boundingBox.xMin += dx;\r\n        this.boundingBox.xMid += dx;\r\n        this.boundingBox.xMax += dx;\r\n        this.boundingBox.yMin += dy;\r\n        this.boundingBox.yMid += dy;\r\n        this.boundingBox.yMax += dy;\r\n        // Move non-anchored children\r\n        let atBaseOfMovement = true;\r\n        for(let obj of this.children) {\r\n            if(obj instanceof DiagramAnchorableModel && obj.isAttached()) {\r\n                continue;\r\n            }\r\n            atBaseOfMovement = false;\r\n            obj.moveBy(dx, dy);\r\n        }\r\n        // Update layout\r\n        if(atBaseOfMovement) {\r\n            this.updateLayout(LayoutUpdateReason.Movement, updateParent);\r\n        }\r\n    }\r\n\r\n    \r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  4. Property Editing  //////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Sets a property.\r\n     * @param property\r\n     *  The property to set.\r\n     * @param value\r\n     *  The property's new value.\r\n     */\r\n    public setProperty(property: Property, value: any) {\r\n        // NOTE: Ugly for now\r\n        if(property instanceof StringProperty) {\r\n            property.value = value;\r\n            this.updateLayout(LayoutUpdateReason.PropertyChange);\r\n        }\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  5. Layout & View  /////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Updates the object's alignment and bounding box.\r\n     * @param reasons\r\n     *  The reasons the layout was updated. \r\n     * @param updateParent\r\n     *  If the parent's layout should be updated.\r\n     *  (Default: true)\r\n     */\r\n    public updateLayout(reasons: number, updateParent: boolean = true) {\r\n        let bb = this.boundingBox;\r\n        // Reset bounding box\r\n        bb.xMin = Infinity;\r\n        bb.yMin = Infinity;\r\n        bb.xMax = -Infinity;\r\n        bb.yMax = -Infinity;\r\n        // Reset alignment\r\n        let align = Alignment.Free;\r\n        // Update bounding box\r\n        for(let obj of this.children) {\r\n            bb.xMin = Math.min(bb.xMin, obj.boundingBox.xMin);\r\n            bb.yMin = Math.min(bb.yMin, obj.boundingBox.yMin);\r\n            bb.xMax = Math.max(bb.xMax, obj.boundingBox.xMax);\r\n            bb.yMax = Math.max(bb.yMax, obj.boundingBox.yMax);\r\n            align = Math.max(align, obj.getAlignment());\r\n        }\r\n        // Update center\r\n        bb.xMid = Math.floor((bb.xMin + bb.xMax) / 2);\r\n        bb.yMid = Math.floor((bb.yMin + bb.yMax) / 2);\r\n        // Update alignment\r\n        if(this.isAlignmentInherited()) {\r\n            this.setAlignment(align);\r\n        }\r\n        // Update parent\r\n        if(updateParent) {\r\n            this.parent?.updateLayout(reasons);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns this object wrapped inside a view object.\r\n     *  @param cache\r\n     *   The view's raster cache.\r\n     *  @returns\r\n     *   This object wrapped inside a view object.\r\n     */\r\n    public abstract createView(cache: RasterCache): DiagramObjectView;\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  6. Attribute Getters  /////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Returns the object's alignment.\r\n     * @param attrs\r\n     *  If specified, these attributes will override the object's attributes.\r\n     * @returns\r\n     *  The object's alignment.\r\n     */\r\n    public getAlignment(attrs: number = this.attrs): number {\r\n        return attrs & AlignmentMask\r\n    }\r\n\r\n    /**\r\n     * Returns the object's cursor.\r\n     * @param attrs\r\n     *  If specified, these attributes will override the object's attributes.\r\n     * @returns\r\n     *  The object's cursor.\r\n     */\r\n    public getCursor(attrs: number = this.attrs): number {\r\n        return attrs & CursorMask;\r\n    }\r\n\r\n    /**\r\n     * Tests if the object is hovered.\r\n     * @param attrs\r\n     *  If specified, these attributes will override the object's attributes.\r\n     * @returns\r\n     *  True if the object is hovered, false otherwise.\r\n     */\r\n    public isHovered(attrs: number = this.attrs): boolean {\r\n        return (attrs & HoverMask) !== Hover.Off;\r\n    }\r\n\r\n    /**\r\n     * Tests if the object is hovered or selected.\r\n     * @param attrs\r\n     *  If specified, these attributes will override the object's attributes.\r\n     * @returns\r\n     *  True if the object is either hovered or selected, false otherwise.\r\n     */\r\n    public isHoveredOrSelected(attrs: number = this.attrs): boolean {\r\n        return 0 < (attrs & (SelectMask | HoverMask));\r\n    }\r\n    \r\n    /**\r\n     * Test if the object inherits alignment from it's children.\r\n     * @param attrs\r\n     *  If specified, these attributes will override the object's attributes.\r\n     * @return\r\n     *  True if the object inherits alignment, false otherwise.\r\n     */\r\n    public isAlignmentInherited(attrs: number = this.attrs): boolean {\r\n        return (attrs & InheritAlignmentMask) === InheritAlignment.True;\r\n    }\r\n\r\n    /**\r\n     * Tests if the user has explicitly set the object's position.\r\n     * @param attrs\r\n     *  If specified, these attributes will override the object's attributes.\r\n     * @returns\r\n     *  True if the user has set the object's position, false otherwise.\r\n     */\r\n    public hasUserSetPosition(attrs: number = this.attrs): boolean {\r\n        return (attrs & PositionSetByUserMask) === PositionSetByUser.True;\r\n    }\r\n\r\n    /**\r\n     * Returns the object's 'position set by user' attribute. \r\n     * @param attrs\r\n     *  If specified, these attributes will override the object's attributes.\r\n     * @returns\r\n     *  The object's 'position set by user' attribute.\r\n     */\r\n    public getPositionSetByUser(attrs: number = this.attrs): number {\r\n        return attrs & PositionSetByUserMask\r\n    }\r\n\r\n    /**\r\n     * Returns the object's selection priority.\r\n     * @param attrs\r\n     *  If specified, these attributes will override the object's attributes.\r\n     * @returns\r\n     *  The object's selection priority;\r\n     */\r\n    public getPriority(attrs: number = this.attrs): number  {\r\n        return attrs & PriorityMask;\r\n    }\r\n    \r\n    /**\r\n     * Tests which object has the higher selection priority.\r\n     * @param obj\r\n     *  The object to compare to.\r\n     * @returns\r\n     *  True if this object has a higher selection priority, false otherwise.\r\n     */\r\n    public hasHigherPriorityThan(obj: DiagramObjectModel): boolean {\r\n        return this.getPriority() > obj.getPriority();\r\n    }\r\n\r\n    /**\r\n     * Tests if the object is selected.\r\n     * @param attrs\r\n     *  If specified, these attributes will override the object's attributes.\r\n     * @returns\r\n     *  True if the object is selected, false otherwise.\r\n     */\r\n    public isSelected(attrs: number = this.attrs): boolean {\r\n        return (attrs & SelectMask) !== Select.Unselected;\r\n    }\r\n\r\n    /**\r\n     * Returns the object's semantic role.\r\n     * @param attrs\r\n     *  If specified, these attributes will override the object's attributes.\r\n     * @returns\r\n     *  The object's semantic role.\r\n     */\r\n    public getSemanticRole(attrs: number = this.attrs): number {\r\n        return attrs & SemanticRoleMask;\r\n    }\r\n\r\n    /**\r\n     * Tests if the object has a semantic role.\r\n     * @param role\r\n     *  The role.\r\n     * @param attrs\r\n     *  If specified, these attributes will override the object's attributes.\r\n     * @returns\r\n     *  True if the object has the role, false otherwise.\r\n     */\r\n    public hasRole(role: number, attrs: number = this.attrs): boolean {\r\n        return (attrs & SemanticRoleMask) === role;\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  7. Attribute Setters  /////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Sets the object's alignment.\r\n     * @param alignment\r\n     *  The alignment.\r\n     */\r\n    public setAlignment(alignment: number) {\r\n        this.attrs = (this.attrs & ~AlignmentMask) | alignment;\r\n    }\r\n\r\n    /**\r\n     * Sets the object's cursor.\r\n     * @param cursor\r\n     *  The cursor.\r\n     */\r\n    public setCursor(cursor: number) {\r\n        this.attrs = (this.attrs & ~CursorMask) | cursor;\r\n    }\r\n\r\n    /**\r\n     * Sets the object's hover state.\r\n     * @param hover\r\n     *  The hover state.\r\n     */\r\n    public setHover(hover: number) {\r\n        this.attrs = (this.attrs & ~HoverMask) | hover;\r\n    }\r\n\r\n    /**\r\n     * Sets the object's 'inherit alignment' attribute.\r\n     * @param inherit\r\n     *  The attribute.\r\n     */\r\n    public setInheritAlignment(inherit: number) {\r\n        this.attrs = (this.attrs & ~InheritAlignmentMask) | inherit;\r\n    }\r\n\r\n    /**\r\n     * Sets the object's 'position set by user' attribute.\r\n     * @param positionSetByUser\r\n     *  The attribute.\r\n     */\r\n    public setPositionSetByUser(positionSetByUser: number) {\r\n        this.attrs = (this.attrs & ~PositionSetByUserMask) | positionSetByUser;\r\n    }\r\n\r\n    /**\r\n     * Sets the object's selection priority.\r\n     * @param priority\r\n     *  The selection priority.\r\n     */\r\n    public setPriority(priority: number) {\r\n        this.attrs = (this.attrs & ~PriorityMask) | priority;\r\n    }\r\n\r\n    /**\r\n     * Sets the object's selection state.\r\n     * @param select\r\n     *  The selection state.\r\n     */\r\n    public setSelect(select: number) {\r\n        this.attrs = (this.attrs & ~SelectMask) | select;\r\n    }\r\n\r\n    /**\r\n     * Sets the object's semantic role.\r\n     * @param role\r\n     *  The role.\r\n     */\r\n    public setSemanticRole(role: number) {\r\n        this.attrs = (this.attrs & ~SemanticRoleMask) | role;\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  8. Content  ///////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    \r\n\r\n    /**\r\n     * Exports the {@link DiagramObjectModel}.\r\n     * @returns\r\n     *  The {@link DiagramObjectExport}.\r\n     */\r\n    public toExport(): DiagramObjectExport {\r\n        return {\r\n            id: this.id,\r\n            x: this.boundingBox.xMid,\r\n            y: this.boundingBox.yMid,\r\n            attrs: this.getPositionSetByUser(),\r\n            template: this.template.id,\r\n            children: this.children.map(el => el.id),\r\n            properties: this.props.toRawValue()\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  2. Diagram Object Model Error  ////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport class DiagramObjectModelError extends Error {\r\n\r\n    /**\r\n     * The error's subject.\r\n     */\r\n    public subject: DiagramObjectModel | undefined;\r\n\r\n    /**\r\n     * Creates a new {@link DiagramObjectModel}.\r\n     * @param subject\r\n     *  The error's subject.\r\n     */\r\n    constructor(message: string, subject?: DiagramObjectModel) {\r\n        super(message);\r\n        this.subject = subject;\r\n    }\r\n\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  3. Bounding Box  //////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport class BoundingBox {\r\n\r\n    /**\r\n     * The bounding region's minimum x coordinate.\r\n     */\r\n    public xMin: number\r\n\r\n    /**\r\n     * The bounding region's minimum y coordinate.\r\n     */\r\n    public yMin: number\r\n\r\n    /**\r\n     * The bounding region's center x coordinate.\r\n     */\r\n    public xMid: number;\r\n\r\n    /**\r\n     * The bounding region's center y coordinate.\r\n     */\r\n    public yMid: number;\r\n\r\n    /**\r\n     * The bounding region's maximum x coordinate.\r\n     */\r\n    public xMax: number\r\n\r\n    /**\r\n     * The bounding region's maximum y coordinate.\r\n     */\r\n    public yMax: number;\r\n\r\n    /**\r\n     * Creates a new {@link BoundingBox}.\r\n     */\r\n    constructor() {\r\n        this.xMin = 0;\r\n        this.yMin = 0;\r\n        this.xMid = 0;\r\n        this.yMid = 0;\r\n        this.xMax = 0;\r\n        this.yMax = 0;\r\n    }\r\n\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  4. Layout Update Reason  //////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport const LayoutUpdateReason = {\r\n    Movement       : 0b00001,\r\n    ChildAdded     : 0b00010,\r\n    ChildDeleted   : 0b00100,\r\n    ObjectInit     : 0b01000,\r\n    PropertyChange : 0b10000\r\n}\r\n","import { RasterCache } from \"../../Diagram/RasterCache\";\r\nimport { DiagramAnchorView } from \"../../DiagramViewTypes\";\r\nimport { \r\n    DiagramAnchorableModel,\r\n    DiagramLineModel,\r\n    DiagramObjectModel,\r\n    DiagramObjectModelError,\r\n    LayoutUpdateReason\r\n} from \"./BaseModels\";\r\nimport {\r\n    AnchorAngle,\r\n    AnchorTemplate, \r\n    DiagramAnchorExport, \r\n    DiagramAnchorValues,\r\n    DiagramFactory\r\n} from \"../../DiagramFactory\";\r\nimport { Priority } from \"../../Attributes\";\r\n\r\nexport abstract class DiagramAnchorModel extends DiagramObjectModel {\r\n\r\n    /**\r\n     * The anchor's children.\r\n     */\r\n    // @ts-ignore Children will be initialized in DiagramObjectModel\r\n    public override readonly children: DiagramAnchorableModel[];\r\n\r\n    /**\r\n     * The template the object was configured with.\r\n     */\r\n    public override readonly template: AnchorTemplate;\r\n\r\n    /**\r\n     * The anchor's angle.\r\n     */\r\n    public angle: AnchorAngle;\r\n\r\n    /**\r\n     * The anchor's radius.\r\n     */\r\n    public readonly radius: number;\r\n\r\n    /**\r\n     * The anchor's line templates.\r\n     */\r\n    public readonly lineTemplates: { [key: number]: string }\r\n\r\n\r\n    /**\r\n     * Creates a new {@link DiagramAnchorModel}.\r\n     * @param factory\r\n     *  The anchor's diagram factory.\r\n     * @param template\r\n     *  The anchor's template.\r\n     * @param values\r\n     *  The anchor's values. \r\n     */\r\n    constructor(\r\n        factory: DiagramFactory, \r\n        template: AnchorTemplate,\r\n        values?: DiagramAnchorValues\r\n    ) {\r\n        super(factory, template, values);\r\n        this.radius = template.radius;\r\n        this.template = template;\r\n        this.lineTemplates = template.line_templates;\r\n        this.angle = values?.angle ?? AnchorAngle.DEG_0;\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Structure  /////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Links an anchorable to the anchor.\r\n     * @param obj\r\n     *  The anchorable object.\r\n     * @param index\r\n     *  The child object's location in the array.\r\n     *  (Default: End of the array)\r\n     * @throws { DiagramObjectModelError }\r\n     *  If `obj` is not of type {@link DiagramAnchorableModel}.\r\n     *  If `obj` is already anchored to another anchor.\r\n     */\r\n    public override addChild(\r\n        obj: DiagramObjectModel,\r\n        index: number = this.children.length\r\n    ): void {\r\n        if(obj instanceof DiagramAnchorableModel) {\r\n            // Ensure object is not attached to something else\r\n            if(obj.isAttached()) {\r\n                throw new DiagramObjectModelError(\r\n                    `'${ obj.id }' is already anchored.`, obj\r\n                );\r\n            }\r\n            // Ensure unique id\r\n            if(this.hasChild(obj.id)) {\r\n                throw new DiagramObjectModelError(\r\n                    `Anchor already has a child with the id '${ obj.id }'.`, this\r\n                );\r\n            }\r\n            // Add anchor to object\r\n            obj.anchor = this;\r\n            // Add object to anchor\r\n            this.children.splice(index, 0, obj);\r\n        } else {\r\n            throw new DiagramObjectModelError(\r\n                `'${ obj.id }' must be of type '${ DiagramAnchorModel.name }.'`, obj\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Unlinks an anchorable from the anchor. \r\n     * @param id\r\n     *  The id of the anchorable.\r\n     */\r\n    public override removeChild(id: string): void {\r\n        let i = this.children.findIndex(o => o.id === id);\r\n        let obj = this.children[i];\r\n        if(!obj) {\r\n            return;\r\n        }\r\n        if(!(obj instanceof DiagramAnchorableModel)) {\r\n            throw new DiagramObjectModelError(\r\n                `'${ id }' is not an '${ DiagramAnchorableModel.name }.'`, obj\r\n            );\r\n        }\r\n        // Remove anchor from object\r\n        obj.anchor = undefined;\r\n        // Remove object from anchor\r\n        this.children.splice(i, 1);\r\n    }\r\n\r\n    /**\r\n     * Tests if the anchor has attachments.\r\n     * @returns\r\n     *  True if the anchor has attachments, false otherwise.\r\n     */\r\n    public hasAttachments(): boolean {\r\n        return 0 < this.children.length\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  2. Selection  /////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Returns the topmost object at the given coordinate.\r\n     * @param x\r\n     *  The x coordinate.\r\n     * @param y\r\n     *  The y coordinate.\r\n     * @returns\r\n     *  The topmost object, undefined if there isn't one.\r\n     */\r\n    public override getObjectAt(x: number, y: number): DiagramObjectModel | undefined {\r\n        let object = undefined;\r\n        let select = undefined;\r\n        for(let i = this.children.length - 1; 0 <= i; i--) {\r\n            select = this.children[i].getObjectAt(x, y)\r\n            if(select && (!object || select.hasHigherPriorityThan(object))) {\r\n                object = select;\r\n                if(object.getPriority() === Priority.High) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        let r = this.radius;\r\n        let dx = x - this.boundingBox.xMid;\r\n        let dy = y - this.boundingBox.yMid;\r\n        if(object && object.getPriority() > Priority.Normal) {\r\n            return object;\r\n        } else if(dx * dx + dy * dy < r * r) {\r\n            return this;\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    \r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  3. Movement  //////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Moves the object relative to its current position. \r\n     * @param dx\r\n     *  The change in x.\r\n     * @param dy \r\n     *  The change in y.\r\n     * @param updateParent\r\n     *  If the parent's layout should be updated.\r\n     *  (Default: true)\r\n     */\r\n    public override moveBy(dx: number, dy: number, updateParent: boolean = true) {\r\n        // Move self\r\n        this.boundingBox.xMin += dx;\r\n        this.boundingBox.xMid += dx;\r\n        this.boundingBox.xMax += dx;\r\n        this.boundingBox.yMin += dy;\r\n        this.boundingBox.yMid += dy;\r\n        this.boundingBox.yMax += dy;\r\n        // Move anchored children\r\n        for(let obj of this.children) {\r\n            if(!obj.isAttached(this)) {\r\n                console.warn(`'${ obj.id }' incorrectly attached to anchor.`);\r\n                continue;\r\n            }\r\n            obj.moveTo(this.boundingBox.xMid, this.boundingBox.yMid);\r\n        }\r\n        // Update layout\r\n        this.updateLayout(LayoutUpdateReason.Movement, updateParent);\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  4. Layout & View  /////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Updates the anchor's bounding box.\r\n     * @param reasons\r\n     *  The reasons the layout was updated. \r\n     * @param updateParent\r\n     *  If the parent's layout should be updated.\r\n     *  (Default: true)\r\n     */\r\n    public override updateLayout(reasons: number, updateParent: boolean = true) {\r\n        let bb = this.boundingBox;\r\n        // Update bounding box\r\n        bb.xMin = bb.xMid - this.radius;\r\n        bb.yMin = bb.yMid - this.radius;\r\n        bb.xMax = bb.xMid + this.radius;\r\n        bb.yMax = bb.yMid + this.radius;\r\n        // Update parent\r\n        if(updateParent) {\r\n            this.parent?.updateLayout(reasons);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns this object wrapped inside a view object.\r\n     *  @param cache\r\n     *   The view's raster cache.\r\n     *  @returns\r\n     *   This object wrapped inside a view object.\r\n     */\r\n    public abstract override createView(cache: RasterCache): DiagramAnchorView;\r\n\r\n    \r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  5. Content  ///////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Exports the {@link DiagramAnchorModel}.\r\n     * @returns\r\n     *  The {@link DiagramAnchorExport}.\r\n     */\r\n    public override toExport(): DiagramAnchorExport {\r\n        return {\r\n            ...super.toExport(),\r\n            angle: this.angle\r\n        }\r\n    }\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  6. Object Creation  ///////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Creates a new line according to the anchor's current angle.\r\n     * @returns\r\n     *  The newly created line.\r\n     * @throws { DiagramObjectModelError }\r\n     *  If the configured template type is not a line.\r\n     */\r\n    public makeLine(): DiagramLineModel {\r\n        // Create line\r\n        let tem = this.lineTemplates[this.angle];\r\n        let obj = this.factory.createObject(tem);\r\n        // Return object\r\n        if(obj instanceof DiagramLineModel){\r\n            return obj;\r\n        } else {\r\n            throw new DiagramObjectModelError(\r\n                `Template '${ tem }' is not a line.`, obj\r\n            );\r\n        }\r\n    }\r\n\r\n}\r\n","import { RasterCache } from \"../../Diagram/RasterCache\";\r\nimport { DiagramAnchorableView } from \"../../DiagramViewTypes\";\r\nimport { \r\n    DiagramAnchorModel,\r\n    DiagramObjectModel\r\n} from \"./BaseModels\";\r\nimport { \r\n    DiagramFactory,\r\n    DiagramObjectValues,\r\n    ObjectTemplate\r\n} from \"../../DiagramFactory\";\r\n\r\nexport abstract class DiagramAnchorableModel extends DiagramObjectModel {\r\n\r\n    /**\r\n     * The anchorable's anchor.\r\n     */\r\n    public anchor: DiagramAnchorModel | undefined; \r\n\r\n\r\n    /**\r\n     * Creates a new {@link DiagramAnchorableModel}.\r\n     * @param factory\r\n     *  The anchorable's diagram factory.\r\n     * @param template\r\n     *  The anchorable's template.\r\n     * @param values\r\n     *  The anchorable's values. \r\n     */\r\n    constructor(\r\n        factory: DiagramFactory,\r\n        template: ObjectTemplate,\r\n        values?: DiagramObjectValues\r\n    ) {\r\n        super(factory, template, values);\r\n        this.anchor = undefined;\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Structure  /////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    \r\n\r\n    /**\r\n     * Tests if this object is attached to an anchor.\r\n     * @returns\r\n     *  True if this object is attached to an anchor, false otherwise.\r\n     */\r\n    public isAttached(): boolean;\r\n\r\n    /**\r\n     * Tests if this object is attached to the given anchor.\r\n     * @param anchor\r\n     *  The anchor.\r\n     * @returns\r\n     *  True if this object is attached to the given anchor, false otherwise.\r\n     */\r\n    public isAttached(anchor: DiagramAnchorModel): boolean;\r\n    public isAttached(anchor?: DiagramAnchorModel): boolean {\r\n        return anchor ? this.anchor === anchor : this.anchor !== undefined;\r\n    }\r\n\r\n    /**\r\n     * Returns the object's location in its anchor.\r\n     * @returns\r\n     *  The object's location, -1 if it isn't attached to an anchor.\r\n     */\r\n    public getIndexInAnchor() {\r\n        return this.anchor?.children.indexOf(this) ?? -1;\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  2. Layout & View  /////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Returns this object wrapped inside a view object.\r\n     *  @param cache\r\n     *   The view's raster cache.\r\n     *  @returns\r\n     *   This object wrapped inside a view object.\r\n     */\r\n    public abstract override createView(cache: RasterCache): DiagramAnchorableView;\r\n\r\n}\r\n","import { RasterCache } from \"../../Diagram/RasterCache\";\r\nimport { DiagramLineEndingView } from \"../../DiagramViewTypes\";\r\nimport {\r\n    DiagramLineModel,\r\n    DiagramAnchorableModel\r\n} from \"./BaseModels\";\r\nimport {\r\n    DiagramFactory,\r\n    DiagramObjectValues,\r\n    ObjectTemplate\r\n} from \"../../DiagramFactory\";\r\n\r\nexport abstract class DiagramLineEndingModel extends DiagramAnchorableModel {\r\n\r\n    /**\r\n     * The line ending's parent.\r\n     */\r\n    public override parent: DiagramLineModel | undefined;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link DiagramLineEndingModel}.\r\n     * @param factory\r\n     *  The line ending's diagram factory.\r\n     * @param template\r\n     *  The line ending's template.\r\n     * @param values\r\n     *  The line ending's values. \r\n     */\r\n    constructor(\r\n        factory: DiagramFactory,\r\n        template: ObjectTemplate,\r\n        values?: DiagramObjectValues\r\n    ) {\r\n        super(factory, template, values);\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Movement  //////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Moves the object relative to its current position. \r\n     * @param dx\r\n     *  The change in x.\r\n     * @param dy \r\n     *  The change in y.\r\n     * @param updateParent\r\n     *  If the parent's layout should be updated.\r\n     *  (Default: true)\r\n     * @param useSuper\r\n     *  If true, the object will use its inherited `moveBy()` function.\r\n     *  (Default: false)\r\n     */\r\n    public override moveBy(\r\n        dx: number, dy: number, updateParent: boolean = true, useSuper: boolean = false\r\n    ): void {\r\n        if(useSuper) {\r\n            super.moveBy(dx, dy, updateParent);\r\n        } else {\r\n            this.parent?.moveChild(this.id, dx, dy, updateParent);\r\n        }\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  2. Layout & View  /////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Returns this object wrapped inside a view object.\r\n     *  @param cache\r\n     *   The view's raster cache.\r\n     *  @returns\r\n     *   This object wrapped inside a view object.\r\n     */\r\n    public abstract override createView(cache: RasterCache): DiagramLineEndingView;\r\n\r\n}\r\n","import { RasterCache } from \"../../Diagram/RasterCache\";\r\nimport { DiagramLineHandleView } from \"../../DiagramViewTypes\";\r\nimport {\r\n    DiagramLineModel,\r\n    DiagramObjectModel\r\n} from \"./BaseModels\";\r\nimport {\r\n    DiagramFactory,\r\n    DiagramObjectValues,\r\n    ObjectTemplate\r\n} from \"../../DiagramFactory\";\r\n\r\nexport abstract class DiagramLineHandleModel extends DiagramObjectModel {\r\n\r\n    /**\r\n     * The line handle's parent.\r\n     */\r\n    public override parent: DiagramLineModel | undefined;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link DiagramLineHandleModel}.\r\n     * @param factory\r\n     *  The line handle's diagram factory.\r\n     * @param template\r\n     *  The line handle's template.\r\n     * @param values\r\n     *  The line handle's values. \r\n     */\r\n    constructor(\r\n        factory: DiagramFactory,\r\n        template: ObjectTemplate,\r\n        values?: DiagramObjectValues\r\n    ) {\r\n        super(factory, template, values);\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Movement  //////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Moves the object relative to its current position. \r\n     * @param dx\r\n     *  The change in x.\r\n     * @param dy \r\n     *  The change in y.\r\n     * @param updateParent\r\n     *  If the parent's layout should be updated.\r\n     *  (Default: true)\r\n     * @param useSuper\r\n     *  If true, the object will use its inherited `moveBy()` function.\r\n     *  (Default: false)\r\n     */\r\n    public override moveBy(\r\n        dx: number, dy: number, updateParent: boolean = true, useSuper: boolean = false\r\n    ): void {\r\n        if(useSuper) {\r\n            super.moveBy(dx, dy, updateParent);\r\n        } else {\r\n            this.parent?.moveChild(this.id, dx, dy, updateParent);\r\n        }\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  2. Layout & View  /////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Returns this object wrapped inside a view object.\r\n     *  @param cache\r\n     *   The view's raster cache.\r\n     *  @returns\r\n     *   This object wrapped inside a view object.\r\n     */\r\n    public abstract override createView(cache: RasterCache): DiagramLineHandleView;\r\n\r\n}\r\n","import { RasterCache } from \"../../Diagram/RasterCache\";\r\nimport { DiagramLineView } from \"../../DiagramViewTypes\";\r\nimport {\r\n    DiagramObjectModel,\r\n    DiagramLineEndingModel,\r\n    DiagramLineHandleModel,\r\n    DiagramObjectModelError\r\n} from \"./BaseModels\";\r\nimport {\r\n    DiagramFactory,\r\n    DiagramObjectValues,\r\n    LineStyle,\r\n    LineTemplate\r\n} from \"../../DiagramFactory\";\r\nimport { Priority } from \"../../Attributes\";\r\n\r\nexport abstract class DiagramLineModel extends DiagramObjectModel {\r\n\r\n    /**\r\n     * The line's children.\r\n     */\r\n    // @ts-ignore Children will be initialized in DiagramObjectModel\r\n    public override readonly children: DiagramLineObjectModel[];\r\n\r\n    /**\r\n     * The template the object was configured with.\r\n     */\r\n    public override readonly template: LineTemplate;\r\n\r\n    /**\r\n     * The line's hitbox width.\r\n     */\r\n    protected readonly hitboxWidth: number;\r\n\r\n    /**\r\n     * The line's style.\r\n     */\r\n    public readonly style: LineStyle;\r\n\r\n    /**\r\n     * The line's source ending.\r\n     */\r\n    public get srcEnding(): DiagramLineEndingModel {\r\n        return this.children.at(0) as DiagramLineEndingModel;\r\n    }\r\n    \r\n    /**\r\n     * The line's target ending.\r\n     */\r\n    public get trgEnding(): DiagramLineEndingModel {\r\n        return this.children.at(-1) as DiagramLineEndingModel;\r\n    }\r\n\r\n    \r\n    /**\r\n     * Creates a new {@link DiagramLineModel}.\r\n     * @param factory\r\n     *  The line's diagram factory.\r\n     * @param template\r\n     *  The line's template.\r\n     * @param values\r\n     *  The line's values.\r\n     */\r\n     constructor(\r\n        factory: DiagramFactory, \r\n        template: LineTemplate,\r\n        values?: DiagramObjectValues\r\n    ) {\r\n        super(factory, template, values);\r\n        this.style = template.style;\r\n        this.template = template;\r\n        this.hitboxWidth = template.hitbox_width;\r\n    }\r\n    \r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Structure //////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Adds a child object.\r\n     * @param obj\r\n     *  The object to add.\r\n     * @param index\r\n     *  The child object's location in the array.\r\n     *  (Default: End of the array)\r\n     * @param update\r\n     *  If the layout should be updated.\r\n     *  (Default: true)\r\n     * @throws { Error }\r\n     *  If `obj` is not of type {@link DiagramLineObjectModel}.\r\n     */\r\n    public override addChild(\r\n        obj: DiagramLineObjectModel,\r\n        index: number = this.children.length,\r\n        update: boolean = true\r\n    ): void {\r\n        if(obj instanceof DiagramLineEndingModel || obj instanceof DiagramLineHandleModel) {\r\n            super.addChild(obj, index, update);\r\n        } else {\r\n            let le = DiagramLineEndingModel.name;\r\n            let lh = DiagramLineHandleModel.name;\r\n            throw new DiagramObjectModelError(\r\n                `Child must be of type '${ le }' or '${ lh }.'`, obj\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reorders a child object.\r\n     * @param id\r\n     *  The id of the object.\r\n     * @param index\r\n     *  The object's new location.\r\n     * @param update\r\n     *  If the layout should be updated.\r\n     *  (Default: true)\r\n     */\r\n    public override reorderChild(id: string, index: number, update: boolean= true) {\r\n        throw new DiagramObjectModelError(\r\n            `Line objects cannot be reordered.`, this\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Tests if the line is anchored on either end.\r\n     * @returns\r\n     *  True if the line is anchored on either end, false otherwise.\r\n     */\r\n    protected isAnchored() {\r\n        for(let obj of this.children) {\r\n            if(obj instanceof DiagramLineEndingModel && obj.isAttached()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    \r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  2. Movement  //////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Moves one of the line's children relative to its current position. \r\n     * @param id\r\n     *  The id of the child.\r\n     * @param dx\r\n     *  The change in x.\r\n     * @param dy\r\n     *  The change in y.\r\n     * @param updateParent\r\n     *  If the parent's layout should be updated.\r\n     *  (Default: true)\r\n     */\r\n    public abstract moveChild(id: string, dx: number, dy: number, updateParent?: boolean): void;\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  3. Layout & View  /////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Returns this object wrapped inside a view object.\r\n     *  @param cache\r\n     *   The view's raster cache.\r\n     *  @returns\r\n     *   This object wrapped inside a view object.\r\n     */\r\n    public abstract override createView(cache: RasterCache): DiagramLineView;\r\n\r\n    \r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  4. Attribute Setters  /////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Sets the object's selection state.\r\n     * @param select\r\n     *  The selection state.\r\n     */\r\n    public override setSelect(select: number) {\r\n        super.setSelect(select);\r\n        // Promote priority of children when selected\r\n        let priority = this.isSelected() \r\n            ? Priority.High\r\n            : Priority.Normal;\r\n        for(let obj of this.children) {\r\n            obj.setPriority(priority);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  Internal Types  ///////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport type DiagramLineObjectModel \r\n    = DiagramLineEndingModel \r\n    | DiagramLineHandleModel;\r\n","import { RasterCache } from \"../../Diagram/RasterCache\";\r\nimport { DiagramRootView } from \"../../DiagramViewTypes\";\r\nimport {\r\n    DiagramAnchorModel,\r\n    DiagramObjectModel,\r\n    LayoutUpdateReason\r\n} from \"./BaseModels\";\r\nimport {\r\n    DiagramFactory,\r\n    DiagramObjectValues,\r\n    ObjectTemplate\r\n} from \"../../DiagramFactory\";\r\n\r\nexport abstract class DiagramRootModel extends DiagramObjectModel {\r\n    \r\n    /**\r\n     * The root's internal anchor cache.\r\n     */\r\n    public readonly anchorCache: DiagramAnchorModel[];\r\n    \r\n    /**\r\n     * The root's internal object cache.\r\n     */\r\n    private readonly _objectCache: Map<string, DiagramObjectModel>;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link DiagramRootModel}.\r\n     * @param factory\r\n     *  The root's diagram factory.\r\n     * @param template\r\n     *  The root's template.\r\n     * @param values \r\n     *  The root's values.\r\n     */\r\n    constructor(factory: DiagramFactory, template: ObjectTemplate, values?: DiagramObjectValues) {\r\n        super(factory, template, values);\r\n        this.anchorCache = [];\r\n        this._objectCache = new Map([[this.id, this]]);\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Diagram Object Lookup  /////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Returns an object from the diagram.\r\n     * @param id\r\n     *  The id of the object.\r\n     * @returns\r\n     *  The object or `undefined` if no object with that id exists.\r\n     */\r\n    public lookup<T extends DiagramObjectModel>(id: string): T | undefined {\r\n        return this._objectCache.get(id) as T;\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  2. Layout & View  /////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Updates the root's alignment, bounding box, and object cache.\r\n     * @param reasons\r\n     *  The reasons the layout was updated. \r\n     */\r\n    public override updateLayout(reasons: number): void {\r\n        let { ChildAdded, ChildDeleted, ObjectInit } = LayoutUpdateReason;\r\n        // Update layout\r\n        super.updateLayout(reasons);\r\n        // Rebuild caches\r\n        if(reasons & (ObjectInit | ChildAdded | ChildDeleted)){\r\n            this._objectCache.clear();\r\n            this.anchorCache.splice(0, this.anchorCache.length);\r\n            for(let obj of this.getSubtree()) {\r\n                if(obj instanceof DiagramAnchorModel) {\r\n                    this.anchorCache.push(obj);\r\n                }\r\n                this._objectCache.set(obj.id, obj);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns this object wrapped inside a view object.\r\n     *  @param cache\r\n     *   The view's raster cache.\r\n     *  @returns\r\n     *   This object wrapped inside a view object.\r\n     */\r\n    public abstract override createView(cache: RasterCache): DiagramRootView;\r\n\r\n}\r\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./AppTitleBar.vue?vue&type=style&index=0&id=34dfc6e8&scoped=true&lang=css\""],"sourceRoot":""}