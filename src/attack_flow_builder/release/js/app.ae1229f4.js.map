{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/assets/scripts/BlockDiagram/DiagramElement/DiagramObjectMover.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramElement/DiagramDisplaySettings.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramElement/BlockDiagram.ts","webpack:///./src/assets/scripts/BlockDiagram/Utilities/MD5.ts","webpack:///./src/assets/scripts/BlockDiagram/Utilities/Drawing.ts","webpack:///./src/assets/scripts/BlockDiagram/Utilities/Events.ts","webpack:///./src/assets/scripts/BlockDiagram/Utilities/Fonts.ts","webpack:///./src/assets/scripts/BlockDiagram/Utilities/Math.ts","webpack:///./src/assets/scripts/BlockDiagram/Utilities/String.ts","webpack:///./src/assets/scripts/BlockDiagram/Utilities/WebTypes.ts","webpack:///./src/components/Controls/Fields/TextField.vue?1a68","webpack:///./src/components/Icons/CollapseArrow.vue?e2ca","webpack:///./src/components/Icons/CollapseArrow.vue?8335","webpack:///./src/components/Icons/CollapseArrow.vue","webpack:///./src/assets/scripts/BlockDiagram/Attributes.ts","webpack:///./src/components/Elements/AppTitleBar.vue?c76a","webpack:///./src/assets/scripts/BlockDiagram/SemanticAnalyzer/SemanticAnalyzer.ts","webpack:///./src/assets/scripts/BlockDiagram/PageImage.ts","webpack:///./src/components/Controls/Fields/EnumField.vue?39d0","webpack:///./src/components/Controls/TitleBar.vue?db75","webpack:///./src/assets/scripts/BlockDiagram/DiagramFactory/DiagramFactoryError.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramFactory/DiagramTemplateTypes.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramFactory/BuiltinTemplates.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramFactory/DiagramFactory.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramElement/ViewportRegion.ts","webpack:///./src/components/Elements/PropertyEditor.vue?45b0","webpack:///./src/components/Controls/ContextMenuListing.vue?486a","webpack:///./src/components/Controls/Fields/DateTimeField.vue?63d6","webpack:///./src/components/Containers/ScrollBox.vue?1a07","webpack:///./src/assets/scripts/BlockDiagram/Property/PropertyDescriptorTypes.ts","webpack:///./src/assets/scripts/BlockDiagram/Property/Property.ts","webpack:///./src/assets/scripts/BlockDiagram/Property/DateProperty.ts","webpack:///./src/assets/scripts/BlockDiagram/Property/StringProperty.ts","webpack:///./src/assets/scripts/BlockDiagram/Property/NumberProperty.ts","webpack:///./src/assets/scripts/BlockDiagram/Property/CollectionProperty.ts","webpack:///./src/assets/scripts/BlockDiagram/Property/DictionaryProperty.ts","webpack:///./src/assets/scripts/BlockDiagram/Property/ListProperty.ts","webpack:///./src/assets/scripts/BlockDiagram/Property/EnumProperty.ts","webpack:///./src/assets/scripts/BlockDiagram/Property/RootProperty.ts","webpack:///./src/components/Elements/ValidatorProblems.vue?e5c2","webpack:///./src/components/Controls/Fields/DictionaryFieldContents.vue?8734","webpack:///./src/components/Controls/Fields/TextField.vue?b418","webpack:///./src/components/Controls/Fields/TextField.vue?016c","webpack:///./src/components/Controls/Fields/TextField.vue","webpack:///./src/components/Controls/Fields/ListField.vue?e597","webpack:///./src/components/Icons/Plus.vue?9a75","webpack:///./src/components/Icons/Plus.vue?e099","webpack:///./src/components/Icons/Plus.vue","webpack:///./src/components/Controls/Fields/EnumField.vue?d00f","webpack:///./src/components/Controls/Fields/EnumField.vue?c8dd","webpack:///./src/components/Controls/Fields/EnumField.vue","webpack:///./src/components/Controls/Fields/NumberField.vue?a709","webpack:///./src/components/Controls/Fields/NumberField.vue?8cc3","webpack:///./src/components/Controls/Fields/NumberField.vue","webpack:///./src/components/Controls/Fields/DateTimeField.vue?06ef","webpack:///./src/components/Controls/Fields/DateTimeField.vue?4076","webpack:///./src/components/Controls/Fields/DateTimeField.vue","webpack:///./src/components/Controls/Fields/ListField.vue?c676","webpack:///./src/components/Controls/Fields/ListField.vue","webpack:///./src/components/Controls/Fields/DictionaryFieldContents.vue?ba9e","webpack:///./src/components/Controls/Fields/DictionaryFieldContents.vue","webpack:///./src/components/Containers/ScrollBox.vue?699d","webpack:///./src/components/Containers/ScrollBox.vue?e6d3","webpack:///./src/components/Containers/ScrollBox.vue","webpack:///./src/components/Icons/CollapseArrow.vue?501a","webpack:///./src/components/Elements/AppFooterBar.vue?6830","webpack:///./src/components/Elements/BlockDiagram.vue?a33e","webpack:///./src/assets/scripts/BlockDiagram/DiagramElement/RasterCache.ts","webpack:///./src/components/Controls/ContextMenu.vue?a994","webpack:///./src/components/Elements/EditorSidebar.vue?0d8f","webpack:///./src/components/Containers/AccordionBox.vue?3671","webpack:///./src/components/Controls/Fields/DictionaryFieldContents.vue?4e08","webpack:///./src/assets/scripts/PointerTracker.ts","webpack:///./src/components/Controls/Fields/ListField.vue?2352","webpack:///./src/assets/scripts/BlockDiagram/DiagramViewTypes/BaseTypes/DiagramObjectView.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramViewTypes/BaseTypes/DiagramAnchorView.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramViewTypes/BaseTypes/DiagramAnchorableView.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramViewTypes/BaseTypes/DiagramLineEndingView.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramViewTypes/BaseTypes/DiagramLineHandleView.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramViewTypes/BaseTypes/DiagramLineView.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramViewTypes/BaseTypes/DiagramRootView.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramViewTypes/LineEndingPointView.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramViewTypes/LineHandlePointView.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramViewTypes/LineHorizontalElbowView.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramViewTypes/LineVerticalElbowView.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramViewTypes/AnchorPointView.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramViewTypes/DictionaryBlockView.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramViewTypes/BranchBlockView.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramViewTypes/TextBlockView.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramViewTypes/PageView.ts","webpack:///./src/components/Controls/Fields/NumberField.vue?8820","webpack:///./src/assets/scripts/BlockDiagram/DiagramFactory/Themes.ts","webpack:///./src/components/Containers/AccordionPane.vue?00cf","webpack:///./src/components/Containers/HotkeyBox.vue?9787","webpack:///./src/assets/scripts/BlockDiagram/DiagramModelTypes/BaseTypes/DiagramObjectModel.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramModelTypes/BaseTypes/DiagramAnchorModel.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramModelTypes/BaseTypes/DiagramAnchorableModel.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramModelTypes/BaseTypes/DiagramLineEndingModel.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramModelTypes/BaseTypes/DiagramLineHandleModel.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramModelTypes/BaseTypes/DiagramLineModel.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramModelTypes/BaseTypes/DiagramRootModel.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramModelTypes/LineEndingPointModel.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramModelTypes/LineHandlePointModel.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramModelTypes/LineHorizontalElbowModel.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramModelTypes/LineVerticalElbowModel.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramModelTypes/AnchorPointModel.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramModelTypes/DictionaryBlockModel.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramModelTypes/BranchBlockModel.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramModelTypes/TextBlockModel.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramModelTypes/PageModel.ts","webpack:///./src/App.vue?f3a1","webpack:///./src/assets/scripts/DiagramValidator/DiagramValidator.ts","webpack:///./src/assets/builder.config.validator.ts","webpack:///./src/assets/scripts/DiagramPublisher/DiagramPublisher.ts","webpack:///./src/assets/builder.config.publisher.ts","webpack:///./src/assets/builder.config.ts","webpack:///./src/store/Commands/AppCommand.ts","webpack:///./src/store/Commands/AppCommands/CopySelectedChildren.ts","webpack:///./src/assets/scripts/Browser.ts","webpack:///./src/store/PageEditor.ts","webpack:///./src/store/Commands/AppCommands/LoadFile.ts","webpack:///./src/store/Commands/AppCommands/LoadSettings.ts","webpack:///./src/store/Commands/AppCommands/OpenHyperlink.ts","webpack:///./src/store/Commands/AppCommands/PublishPageToDevice.ts","webpack:///./src/store/Commands/AppCommands/SavePageImageToDevice.ts","webpack:///./src/store/Commands/AppCommands/SavePageToDevice.ts","webpack:///./src/store/Commands/AppCommands/SaveSelectionImageToDevice.ts","webpack:///./src/store/Commands/AppCommands/SetEditorViewParams.ts","webpack:///./src/store/Commands/AppCommands/SetRenderQuality.ts","webpack:///./src/store/Commands/AppCommands/SwitchToFullscreen.ts","webpack:///./src/store/Commands/AppCommands/ToggleDebugDisplay.ts","webpack:///./src/store/Commands/AppCommands/ToggleGridDisplay.ts","webpack:///./src/store/Commands/AppCommands/ToggleShadowDisplay.ts","webpack:///./src/components/Elements/AppTitleBar.vue?f29e","webpack:///./src/components/Controls/TitleBar.vue?a66d","webpack:///./src/components/Controls/ContextMenuListing.vue?f3ef","webpack:///./src/assets/scripts/ContextMenuTypes.ts","webpack:///./src/components/Controls/ContextMenuListing.vue?ca06","webpack:///./src/components/Controls/ContextMenuListing.vue","webpack:///./src/components/Controls/TitleBar.vue?9434","webpack:///./src/components/Controls/TitleBar.vue","webpack:///./src/components/Elements/AppTitleBar.vue?4475","webpack:///./src/components/Elements/AppTitleBar.vue","webpack:///./src/components/Elements/AppHotkeyBox.vue?27ab","webpack:///./src/components/Containers/HotkeyBox.vue?054d","webpack:///./src/assets/scripts/HotkeyObserver.ts","webpack:///./src/components/Containers/HotkeyBox.vue?7b2c","webpack:///./src/components/Containers/HotkeyBox.vue","webpack:///./src/components/Elements/AppHotkeyBox.vue?71ce","webpack:///./src/components/Elements/AppHotkeyBox.vue","webpack:///./src/store/Commands/PageCommands/ReorderObject.ts","webpack:///./src/components/Elements/BlockDiagram.vue?063b","webpack:///./src/store/Commands/PageCommand.ts","webpack:///./src/store/Commands/PageCommands/AddLineObject.ts","webpack:///./src/store/Commands/PageCommands/AddObject.ts","webpack:///./src/store/Commands/PageCommands/AttachObject.ts","webpack:///./src/store/Commands/PageCommands/CreateSubproperty.ts","webpack:///./src/store/Commands/PageCommands/GroupCommand.ts","webpack:///./src/store/Commands/PageCommands/RemoveObjects.ts","webpack:///./src/store/Commands/PageCommands/UnhoverObject.ts","webpack:///./src/store/Commands/PageCommands/UnselectObject.ts","webpack:///./src/store/Commands/PageCommands/RemoveSelectedChildren.ts","webpack:///./src/store/Commands/PageCommands/CutSelectedChildren.ts","webpack:///./src/store/Commands/PageCommands/DeleteSubproperty.ts","webpack:///./src/store/Commands/PageCommands/DetachObject.ts","webpack:///./src/store/Commands/PageCommands/DuplicateSelectedChildren.ts","webpack:///./src/store/Commands/PageCommands/HoverObject.ts","webpack:///./src/store/Commands/PageCommands/SelectObject.ts","webpack:///./src/store/Commands/PageCommands/UnselectDescendants.ts","webpack:///./src/store/Commands/PageCommands/MoveCameraToObjects.ts","webpack:///./src/store/Commands/PageCommands/MoveCameraToChildren.ts","webpack:///./src/store/Commands/PageCommands/MoveCameraToParents.ts","webpack:///./src/store/Commands/PageCommands/MoveCameraToSelection.ts","webpack:///./src/store/Commands/PageCommands/MoveObjectBy.ts","webpack:///./src/store/Commands/PageCommands/MoveObjectTo.ts","webpack:///./src/store/Commands/PageCommands/PasteToObject.ts","webpack:///./src/store/Commands/PageCommands/RedoPageCommand.ts","webpack:///./src/store/Commands/PageCommands/ReorderSelectedChildren.ts","webpack:///./src/store/Commands/PageCommands/ResetCamera.ts","webpack:///./src/store/Commands/PageCommands/SelectChildren.ts","webpack:///./src/store/Commands/PageCommands/SetDateProperty.ts","webpack:///./src/store/Commands/PageCommands/SetEnumProperty.ts","webpack:///./src/store/Commands/PageCommands/SetNumberProperty.ts","webpack:///./src/store/Commands/PageCommands/SetStringProperty.ts","webpack:///./src/store/Commands/PageCommands/SpawnObject.ts","webpack:///./src/store/Commands/PageCommands/UndoPageCommand.ts","webpack:///./src/store/Commands/PageCommands/UnhoverDescendants.ts","webpack:///./src/store/Commands/PageCommands/UserSetObjectPosition.ts","webpack:///./src/store/Commands/PageCommands/ZoomCamera.ts","webpack:///./src/components/Controls/ContextMenu.vue?a59e","webpack:///./src/components/Controls/ContextMenu.vue?9d65","webpack:///./src/components/Controls/ContextMenu.vue","webpack:///./src/components/Elements/BlockDiagram.vue?cead","webpack:///./src/components/Elements/BlockDiagram.vue","webpack:///./src/components/Elements/AppFooterBar.vue?9c90","webpack:///./src/components/Elements/AppFooterBar.vue?fced","webpack:///./src/components/Elements/AppFooterBar.vue","webpack:///./src/components/Elements/EditorSidebar.vue?dd1d","webpack:///./src/components/Containers/AccordionBox.vue?ab7e","webpack:///./src/components/Containers/AccordionBox.vue","webpack:///./src/components/Containers/AccordionPane.vue?caa6","webpack:///./src/components/Containers/AccordionPane.vue?fd7f","webpack:///./src/components/Containers/AccordionPane.vue","webpack:///./src/components/Elements/PropertyEditor.vue?9e5a","webpack:///./src/components/Elements/PropertyEditor.vue?f845","webpack:///./src/components/Elements/PropertyEditor.vue","webpack:///./src/components/Elements/ValidatorProblems.vue?9086","webpack:///./src/components/Elements/ValidatorProblems.vue?f557","webpack:///./src/components/Elements/ValidatorProblems.vue","webpack:///./src/components/Elements/EditorSidebar.vue?f9dc","webpack:///./src/components/Elements/EditorSidebar.vue","webpack:///./src/App.vue?47b3","webpack:///./src/App.vue","webpack:///./src/store/StoreTypes.ts","webpack:///./src/store/Stores/ApplicationStore.ts","webpack:///./src/store/Stores/ContextMenuStore.ts","webpack:///./src/store/Stores/HotkeyStore.ts","webpack:///./src/store/index.ts","webpack:///./src/main.ts","webpack:///./src/App.vue?d114","webpack:///./src/components/Containers/FocusBox.vue?c50a","webpack:///./src/components/Containers/FocusBox.vue?92fa","webpack:///./src/components/Containers/FocusBox.vue"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","installedCssChunks","jsonpScriptSrc","p","exports","module","l","e","promises","cssChunks","Promise","resolve","reject","href","fullhref","existingLinkTags","document","getElementsByTagName","tag","dataHref","getAttribute","rel","existingStyleTags","linkTag","createElement","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","head","appendChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","nc","setAttribute","error","clearTimeout","chunk","errorType","realSrc","message","name","undefined","setTimeout","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","window","oldJsonpFunction","slice","gridX","gridY","this","dx","dy","ox","oy","odx","ody","anchor","_cx","_cy","_cdx","_cdy","_alignment","Free","_gridX","_gridY","_anchors","alignment","cx","cy","anchors","ax","ay","bb","cursorX","cursorY","boundingBox","radius","xMid","yMid","Grid","DiagramDisplaySettings","showGrid","showShadows","showDebug","ssaaScale","shadowsDisableAt","DragActionType","super","page","createDummy","cache","RasterCache","_canvas","_context","_display","_elWidth","_elHeight","_mover","grid","_layoutLocked","_page","createView","_rafId","_rasterCache","_resizeObserver","_transform","_viewport","ViewportRegion","_ztoId","_zoom","scaleExtent","on","onCanvasZoom","onCanvasZoomEnd","_hovObj","container","clientWidth","clientHeight","append","attr","onHoverSubject","preventDefault","node","getContext","alpha","ResizeObserver","entries","onCanvasResize","observe","filter","subject","onSelectSubject","onObjectDragStarted","onObjectDragged","onObjectDragEnded","remove","removeAllListeners","disconnect","callback","once","args","emit","display","k","setScale","requestAnimationFrame","executeRenderPipeline","renderPageSurfaceTo","renderTo","renderDebugTo","x","y","cursor","invertX","invertY","hovObj","el","getObjectAt","getCursor","Default","mv","evt","sourceEvent","obj","rc","button","Right","line","makeLine","srcEnding","moveTo","trgEnding","view","updateView","CreateLine","parent","lookup","id","selects","MoveAnchorable","Move","objs","al","an","Math","max","getAlignment","children","anchorCache","reset","attrs","updateDelta","fakePositionSetByUser","True","moveBy","render","tdx","tdy","ids","map","isAttached","par","trg","transform","getScale","RASTER_CACHE_UPDATE_DELAY","updateViewportBounds","setTransform","newWidth","newHeight","padding","VIEWPORT_PADDING","xMin","round","xMax","yMin","yMax","scale","location","animate","transition","duration","translate","hex","toHex","num","str","charAt","stringToBlocks","size","blocks","Array","fill","charCodeAt","add","lsw","msw","rol","cnt","cmn","q","a","b","ff","gg","hh","ii","MD5","old_a","old_b","old_c","old_d","drawArrowHead","ctx","sx","sy","tx","ty","h","angle","atan2","cos","PI","sin","beginPath","lineTo","closePath","drawRect","w","tl","tr","br","bl","quadraticCurveTo","EventEmitter","_listeners","Map","has","set","unshift","actions","indexOf","listeners","delete","clear","_fontList","Font","family","descriptor","getCssFontString","descriptors","req","font","loadFont","results","allSettled","failedFonts","status","fonts","join","fontString","check","timeoutId","start","Date","now","load","res","rej","fetch","fontList","timer","_","race","weight","css","_ctx","_widthIndex","char","DEFAULT_INDEX","measureWidth","text","measureText","width","ascent","actualBoundingBoxAscent","descent","actualBoundingBoxDescent","lines","trim","split","segments","lineWrap","flat","lineWidth","tokens","WHITESPACE","Boolean","whitespaceParity","test","tokenWidth","trimEnd","word","getCharWidth","GlobalFontStore","clamp","min","multiple","sign","abs","generateBitMask","mask","bit","getLineHitbox","x0","y0","x1","y1","vx","vy","acos","sqrt","isInsideRegion","vertices","minX","Infinity","minY","maxX","maxY","v1x0","v1y0","v1x1","v1y1","totalIntersections","len","intersection","doVectorsIntersect","v2x0","v2y0","v2x1","v2y1","a1","b1","c1","a2","b2","c2","d1","d2","computeHash","string","hash","capitalize","toLocaleUpperCase","substring","titleCase","MouseClick","_withScopeId","_hoisted_1","_hoisted_2","_hoisted_3","_cache","$props","$setup","$data","$options","height","color","class","collapsed","version","viewBox","xmlns","props","default","String","__exports__","Alignment","AlignmentMask","Cursor","Pointer","Crosshair","NotAllowed","Grab","Grabbing","N_Resize","E_Resize","S_Resize","W_Resize","EW_Resize","NS_Resize","Col_Resize","Row_Resize","CursorMask","Hover","Off","Direct","Indirect","HoverMask","InheritAlignment","False","InheritAlignmentMask","PositionSetByUser","PositionSetByUserMask","Priority","Normal","High","PriorityMask","Select","SelectMask","SemanticRole","None","Node","Edge","EdgeSource","EdgeTarget","SemanticRoleMask","CursorCssName","array","edges","nodes","getSubtree","getSemanticRole","template","prev","getPrevGraphLinks","next","getNextGraphLinks","getNodes","getEdgeTargetsFor","getEdges","getEdgeSourcesFor","objects","getNode","hasRole","edge","getEdge","edgeSources","concat","stack","sources","pop","child","edgeTargets","targets","_padding","_showGrid","_showShadows","_showDebug","can","viewport","attrCache","attrObjs","isHoveredOrSelected","setSelect","setHover","DiagramFactoryError","TemplateType","AnchorAngle","BUILTIN_PREFIX","BuiltinTemplates","Page","role","properties","Property","is_primary","style","AnchorPoint","line_templates","DEG_0","DEG_90","LineHandlePoint","LineHandle","LineEndingPoint","LineEnding","LineHorizontalElbow","hitbox_width","line_handle_template","line_ending_template","source","Line","LineVerticalElbow","schema","templates","page_template","copy","structuredClone","Set","values","getFontDescriptorsFromTemplate","loadFonts","swapFontDescriptorsWithFonts","BranchBlock","DictionaryBlock","TextBlock","param1","vals","temp","clones","cloneObject","links","link","addChild","clone","createObject","toExport","crypto","randomUUID","s1","branch","s2","one_title","title","two_title","subtitle","body","field_name","field_value","s3","getFont","cloneTemplate","JSON","stringify","parse","PropertyType","trigger","_parent","owner","Int","Float","Enum","List","Dictionary","toHashValue","updateProperty","v","_value","setValue","toISOString","toString","keys","toRawValue","primaryKey","form","val","find","at","prop","index","isDefined","isArray","getNextId","options","toReferenceValue","dpd","_notifyPropertyUpdate","listener","fields","getField","onChange","$emit","onCreate","onDelete","disabled","isEditable","tabindex","onFocus","$event","showPlaceholder","ref","onInput","onKeyup","onKeydown","onBlur","contenteditable","field","required","updateTimeout","Number","sto","computed","_property","is_editable","methods","$nextTick","focus","innerText","refreshValue","raw","activeElement","emits","watch","_component_Plus","onPointerdown","_hoisted_4","_hoisted_5","_component_ScrollBox","_component_FocusBox","open","showMenu","openMenu","onUnfocus","closeMenu","isNull","propagateScroll","active","hovered","onMouseenter","onClick","maxHeight","components","FocusBox","ScrollBox","placeholder","onKeyDown","delta","parseFloat","isNaN","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","enterEditMode","prop_M","prop_D","prop_Y","prop_H","prop_m","prop_s","showEditor","maxlength","segment","value_M","value_D","value_Y","value_H","value_m","value_s","Segment","Months","M","D","Y","H","getUTCMonth","getUTCDate","getUTCFullYear","getUTCHours","padStart","getUTCMinutes","getUTCSeconds","$el","contains","relatedTarget","exitEditMode","selectionStart","selectionEnd","shiftFocus","maxLength","adj","ISO8601","date","getTime","DictionaryField","Plus","TextField","EnumField","NumberField","DateTimeField","is_visible","ListField","onWheelPassive","moveScrollPosition","scrollTop","deltaY","$slots","scroll","sty","handle","startDrag","onPointerup","stopDrag","showScrollbar","alwaysShowScrollBar","content","resetScrollOnChange","handleColor","scrollColor","borderColor","windowMax","background","trk","PointerTracker","hei","pos","onResizeObserver","onMutateObserver","capture","onDrag","addEventListener","track","handleTopToTop","movementY","release","resetTop","ratio","scrollHeight","recalculateScrollState","position","topToHandleTop","hasMoved","canMove","stopPropagation","top","mutateOptions","childList","characterData","subtree","MutationObserver","_scale","raster","Raster","context","drawImage","canvas","tp","fillStyle","strokeStyle","textBaseline","stroke","fillText","deltaX","movementX","_originX","_originY","_lastX","_lastY","clientX","clientY","setPointerCapture","pointerId","onpointermove","update","releasePointerCapture","rasterCache","match","visited","queue","vr","dsx","dsy","isVisible","hover","inherit","positionSetByUser","priority","select","warn","useSuper","moveChild","_objectCache","save","setLineDash","restore","fill_color","stroke_color","stroke_width","arc","wo","e1","h1","e2","hdx","hdy","hasUserSetPosition","lineColor","cap_size","cs","select_color","eo","isSelected","hitbox","hitboxes","isHovered","tlx","tly","bf","bs","select_outline","so","border_radius","headerHeight","layout","isSplitBlock","shadowOffsetX","shadowOffsetY","anchor_markers","placements","grid_color","gc","background_color","bc","_gridPattern","createGridPattern","fillRect","drop_shadow","offset","shadowColor","fillColor","strokeColor","ptr","createPattern","DOMMatrix","Colors","Blue","Orange","Green","Red","Gray","BlockDiagramTheme","theme","_theme","merge","dictionary","lineEnding","lineHandle","dst","DarkTheme","max_width","line_height","vertical_padding","horizontal_padding","factory","setAlignment","setCursor","setInheritAlignment","setSemanticRole","BoundingBox","DiagramObjectModelError","updateLayout","LayoutUpdateReason","ChildAdded","safely","hasExternalAttachments","ChildDeleted","findIndex","hasHigherPriorityThan","getPriority","updateParent","atBaseOfMovement","Movement","atBaseOfLayout","recalculateLayout","Initialization","reasons","align","floor","isAlignmentInherited","getPositionSetByUser","PropUpdate","lineTemplates","tem","hitboxWidth","le","lh","setPriority","han","isAnchored","e1x","e1y","e2x","e2y","h1x","h2y","anchor_template","onUpdate","contentHash","contentChanged","fullLayoutRequired","fnf","fvf","strokeWidth","titleText","subtitleText","hasSubtitle","hasBody","hasFields","tf","mw","measure","stf","wordWrap","fieldName","fieldValue","xo","yo","branches","bw","lx","_h","_y","_x","vp","hp","DiagramFactory","_component_AppTitleBar","_component_BlockDiagram","_component_EditorSidebar","_component_AppFooterBar","_component_AppHotkeyBox","gridLayout","startResize","Handle","DiagramValidator","_errors","_warnings","validate","diagram","reason","graph","toGraph","checkNode","checkEdge","addWarning","checkProperty","is_required","addError","DiagramPublisher","AttackFlowExtensionId","AttackFlowSchemaUrl","AttackFlowSchemaVersion","AttackFlowExtensionCreatedDate","AttackFlowExtensionModifiedDate","AttackFlowDocsExternalReference","AttackFlowGitHubExternalReference","AttackFlowExtensionCreatorName","AttackFlowSdos","AttackFlowTemplates","stixBundle","createStixBundle","stixNodes","stixChildren","graphToStixId","stixNode","exportNodeObject","stixParentId","stixChildId","childIds","childId","newNodes","handleChildren","author","createStixObj","identity_class","contact_information","flowObject","scope","description","created_by_ref","start_refs","findFlowRoots","operator","mergeDictionaryProperty","mergeListProperty","newSros","newSro","handleActionChild","handleAssetChild","handleConditionChild","handleOperatorChild","handleDefaultChild","sro","command_ref","createSro","asset_refs","effect_refs","object_ref","on_true_refs","bundle","extensionAuthor","createExtensionAuthorSdo","extension","createExtensionSdo","creator_id","created","modified","extension_types","external_references","identity","create_by_ref","stixId","sdo","spec_version","extDef","extension_type","extensions","relationshipType","relationship_type","source_ref","target_ref","adjacency","roots","config","file_type_name","file_type_extension","is_web_hosted","tactic_id","tactic_ref","technique_id","technique_ref","execution_start","execution_end","confidence","pattern","pattern_type","pattern_version","aliases","kill_chain_phases","first_seen","last_seen","objective","action_type","os_execution_envs","action_bin","roles","sectors","indicator_types","patter_version","valid_from","valid_until","infrastructure_types","goals","resource_level","primary_motivation","secondary_motivations","latitude","longitude","precision","region","country","administrative_area","city","street_address","postal_code","malware_types","is_family","architecture_execution_envs","implementation_languages","capabilities","product","configuration_version","analysis_engine_version","analysis_definition_version","submitted","analysis_started","analysis_ended","av_result","abstract","authors","first_observed","last_observed","number_observed","explanation","opinion","report_types","published","threat_actor_types","sophistication","secondary_motivation","personal_motivations","tool_types","tool_version","mime_type","payload_bin","url","hashes","encryption_algorithm","decryption_key","number","rir","path","path_enc","ctime","mtime","atime","display_name","is_multipart","content_type","message_id","received_lines","additional_header_fields","body_multipart","name_enc","magic_number_hex","end","is_active","src_port","dst_port","protocols","src_byte_count","dst_byte_count","src_packets","dst_packets","ipfix","is_hidden","pid","created_time","cwd","command_line","environment_variables","cpe","languages","vendor","user_id","credential","account_login","account_type","is_service_account","is_privileged","can_escalate_privs","is_disabled","account_created","account_expires","credential_last_changed","account_first_login","account_last_login","modified_time","number_of_subkeys","is_self_signed","serial_number","signature_algorithm","issuer","validity_not_before","validity_not_after","subject_public_key_algorithm","subject_public_key_modulus","subject_public_key_exponent","help_links","validator","publisher","AppCommand","settings","edit","clone_offset","cloneObjects","_objects","clipboard","Browser","filename","ext","blob","Blob","URL","createObjectURL","_aLink","download","click","revokeObjectURL","toBlob","fileInput","file","files","reader","FileReader","contents","readAsText","cast","requestFullscreen","webkitRequestFullscreen","msRequestFullscreen","_undoStack","_redoStack","_validator","run","command","execute","undo","inValidState","getErrors","getWarnings","pageExp","pageObj","deserialize","exp","expIndex","objIndex","doc","getSchema","_editor","createNew","fromFile","openTextFileDialog","pages","activePage","_settings","_url","editor","isValid","downloadTextFile","publish","image_export","image","PageImage","display_grid","display_shadows","display_debug_mode","downloadImageFile","toFile","params","_params","highQuality","_highQuality","render_high_quality","_component_TitleBar","menus","onSelect","onItemSelect","icon","_component_ContextMenuListing","menuClose","menu","focused","focusedMenu","menuEnter","menuOpen","sections","menuSelect","onContextmenu","section","items","item","MenuType","Submenu","submenuEnter","onMouseleave","submenuLeave","focusedSubMenu","onChildItemSelect","onItemClick","formatShortcut","shortcut","KeyToText","Control","Escape","ArrowLeft","ArrowUp","ArrowRight","ArrowDown","Delete","forceInsideWindow","xOffset","yOffset","leaveTimeout","leaveTimeoutId","marginTop","marginLeft","keepMenuOpenOnSelect","closeSubmenu","viewWidth","innerWidth","viewHeight","innerHeight","left","bottom","right","getBoundingClientRect","ContextMenuListing","fileMenu","editMenu","layoutMenu","viewMenu","helpMenu","emitter","cmd","ex","TitleBar","_component_HotkeyBox","hotkeys","global","onFire","onHotkeyFired","HotkeyObserver","recognitionDelay","_boundAdvanceKeyState","advanceKeyState","_boundReverseKeyState","reverseKeyState","_callback","_callLoop","_container","_hotkeyIdMap","_keyState","_recognitionDelay","removeEventListener","keyMap","hotkeyId","keySequenceToHotKeyId","startsWith","OverlappingHotkeysError","sequence","strict","includes","toLocaleLowerCase","endsWith","tagName","hotkey","allowBrowserBehavior","triggerHotkey","replace","repeat","interval","delay","isHotkeyActive","observer","setHotkeys","nativeHotkeys","fileHotkeys","editHotKeys","layoutHotkeys","viewHotkeys","HotkeyBox","Order","_component_ContextMenu","cursorStyle","menuStyle","menuOptions","closeContextMenu","PageCommand","NullPage","root","_object","_source","_target","_anchor","_id","_subproperty","addProperty","removeProperty","_commands","record","_links","_items","getIndexInParent","getIndexInAnchor","subproperty","_index","regionW","regionH","_location","parents","_dx","_dy","_lx","_ly","_nx","_ny","redo","order","_prevIndex","Top","_nextIndex","OneAbove","OneBelow","Bottom","reorderChild","lv","_lastValue","_nextValue","isDirectlyHovered","setPositionSetByUser","BlockDiagram","show","state","disable_shadows_at","many","hasSelection","deleteMenu","clipboardMenu","duplicateMenu","layeringMenu","jumpMenu","undoRedoMenu","createMenu","selectAllMenu","zoomMenu","diagramViewMenu","getBlockTemplates","Item","getLineTemplates","isMultiselect","multiselectHotkey","openContextMenu","setPage","setCameraLocation","camera","setGridDisplay","displayGrid","setShadowsDisplay","displayShadows","setDebugDisplay","displayDebugMode","setSsaaScale","renderHighQuality","setShadowsDisableAt","disableShadowsAt","onObjectHover","onObjectClick","onCanvasClick","onObjectMove","onObjectAttach","onObjectDetach","onViewTransform","onLineCreate","inject","destroy","ContextMenu","fileName","_component_PropertyEditor","_component_AccordionPane","_component_ValidatorProblems","_component_AccordionBox","units","selected","panes","activePane","collapseHeight","gridTemplateRows","activeHeight","uncollapsePane","collapsePane","cacheHeights","currentHeight","reduce","cachedHeight","elementHeight","getAvailableHeight","nextHeight","uncollapsedHeight","available","availableDelta","neededHeight","minHeight","forEach","growPane","remainingDelta","growAmount","proportions","minElementHeight","percentToMinimum","slot","totalHeight","totalUnits","refit","totalPanes","pane","_slots","onCollapse","CollapseArrow","box","boxStyle","_component_DictionaryFieldContents","DictionaryFieldContents","getValidationErrors","getValidationWarnings","warning","getSelection","AccordionBox","AccordionPane","PropertyEditor","ValidatorProblems","bodyWidth","bodyHeight","frameSize","minFrameSize","drag","gridTemplateColumns","origin","onResize","stopResize","setRightFrameSize","json","fromNew","AppHotkeyBox","AppTitleBar","AppFooterBar","EditorSidebar","BaseAppSettings","new_file","open_file","save_file","save_image","save_select_image","publish_file","open_library","save_library","cut","paste","duplicate","select_all","selection_to_front","selection_to_back","bring_selection_forward","send_selection_backward","align_left","align_center","align_right","align_top","align_middle","align_bottom","group","ungroup","open_group","close_group","toggle_grid","toggle_shadows","reset_view","zoom_in","zoom_out","fullscreen","jump_to_selection","jump_to_parents","jump_to_children","toggle_debug_view","Publisher","DummyPage","namespaced","getters","mutations","_s","rootState","ApplicationStore","openFileMenu","saveFileMenu","publishFileMenu","_g","fromFileSystem","rootGetters","canUndo","canRedo","canPaste","diagramRenderMenu","fullscreenMenu","developerViewMenu","Toggle","ContextMenuStore","HotkeyStore","App","use","store","mount","onFocusOut"],"mappings":"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","file":"js/app.ae1229f4.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t\"app\": 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-69bedc3b\":\"926d2850\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// mini-css-extract-plugin CSS loading\n \t\tvar cssChunks = {\"chunk-69bedc3b\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"css/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-69bedc3b\":\"5ad2deec\"}[chunkId] + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { round } from \"../Utilities\";\r\nimport { Alignment } from \"../Attributes\";\r\nimport { DiagramAnchorModel } from \"../DiagramModelTypes\";\r\n\r\nexport class DiagramObjectMover { \r\n\r\n    /**\r\n     * The object's current delta-x.\r\n     */\r\n    public dx: number;\r\n\r\n    /**\r\n     * The object's current delta-y.\r\n     */\r\n    public dy: number;\r\n\r\n    /**\r\n     * The object's origin on the x-axis.\r\n     */\r\n    public ox: number;\r\n\r\n    /**\r\n     * The object's origin on the y-axis.\r\n     */\r\n    public oy: number;\r\n\r\n    /**\r\n     * The object's total delta-x.\r\n     */\r\n    public odx: number;\r\n\r\n    /**\r\n     * The object's total delta-y.\r\n     */\r\n    public ody: number;\r\n\r\n    /**\r\n     * The anchor the object is currently over.\r\n     */\r\n    public anchor: DiagramAnchorModel | undefined;\r\n\r\n    /**\r\n     * The cursor's origin on the x-axis.\r\n     */\r\n    private _cx: number;\r\n\r\n    /**\r\n     * The cursor's origin on the y-axis.\r\n     */\r\n    private _cy: number;\r\n\r\n    /**\r\n     * The cursor's total delta-x.\r\n     */\r\n    private _cdx: number;\r\n\r\n    /**\r\n     * The cursor's total delta-y.\r\n     */\r\n    private _cdy: number;\r\n\r\n    /**\r\n     * The object's alignment.\r\n     */\r\n    private _alignment: number;\r\n\r\n    /**\r\n     * The grid size on the x-axis.\r\n     */\r\n    private _gridX: number;\r\n\r\n    /**\r\n     * The grid size on the y-axis.\r\n     */\r\n    private _gridY: number;\r\n\r\n    /**\r\n     * The mover's anchors.\r\n     */\r\n    private _anchors: DiagramAnchorModel[];\r\n\r\n\r\n    /**\r\n     * Creates a new {@link DiagramObjectMover}.\r\n     * @param gridX\r\n     *  The grid size on the x-axis. \r\n     * @param gridY\r\n     *  The grid size on the y-axis.\r\n     */\r\n    constructor(gridX: number, gridY: number) {\r\n        this.dx = 0;\r\n        this.dy = 0;\r\n        this.ox = 0;\r\n        this.oy = 0;\r\n        this.odx = 0;\r\n        this.ody = 0;\r\n        this.anchor = undefined;\r\n        this._cx = 0;\r\n        this._cy = 0;\r\n        this._cdx = 0;\r\n        this._cdy = 0;\r\n        this._alignment = Alignment.Free,\r\n        this._gridX = gridX;\r\n        this._gridY = gridY;\r\n        this._anchors = [];\r\n    }\r\n\r\n    /**\r\n     * Resets the object mover.\r\n     * @param alignment\r\n     *  The new alignment.\r\n     * @param cy\r\n     *  The cursor's origin on the x-axis.\r\n     * @param cx\r\n     *  The cursor's origin on the y-axis.\r\n     * @param ox\r\n     *  The object's origin on the x-axis.\r\n     * @param oy\r\n     *  The object's origin on the y-axis.\r\n     * @param anchors\r\n     *  The set of anchors to track.\r\n     */\r\n    public reset(\r\n        alignment: number, \r\n        cx: number, cy: number,\r\n        ox: number, oy: number,\r\n        anchors?: DiagramAnchorModel[]\r\n    ) {\r\n        this.dx = 0;\r\n        this.dy = 0;\r\n        this.ox = ox;\r\n        this.oy = oy;\r\n        this.odx = 0;\r\n        this.ody = 0;\r\n        this.anchor = undefined;\r\n        this._cx = cx;\r\n        this._cy = cy;\r\n        this._cdx = 0;\r\n        this._cdy = 0;\r\n        this._alignment = alignment;\r\n        this._anchors = anchors ?? [];\r\n    }\r\n\r\n    /**\r\n     * Calculates the actual delta from the current delta.\r\n     * @param dx\r\n     *  The current delta-x.\r\n     * @param dy\r\n     *  The current delta-y.\r\n     */\r\n    public updateDelta(dx: number, dy: number) {\r\n        this._cdx += dx;\r\n        this._cdy += dy;\r\n        let cursorX = this._cx + this._cdx;\r\n        let cursorY = this._cy + this._cdy;\r\n        // Assess anchors\r\n        let r, ax, ay, bb;\r\n        for(let anchor of this._anchors) {\r\n            bb = anchor.boundingBox;\r\n            r = anchor.radius;\r\n            ax = bb.xMid - cursorX;\r\n            ay = bb.yMid - cursorY;\r\n            if(ax * ax + ay * ay < r * r) {\r\n                this.dx = bb.xMid - (this.ox + this.odx);\r\n                this.dy = bb.yMid - (this.oy + this.ody);\r\n                this.odx += this.dx;\r\n                this.ody += this.dy;\r\n                this.anchor = anchor;\r\n                return;\r\n            }\r\n        }\r\n        // Assess position\r\n        this.anchor = undefined;\r\n        switch(this._alignment) {\r\n            case Alignment.Grid:\r\n                this.dx = round(this._cdx, this._gridX) - this.odx;\r\n                this.dy = round(this._cdy, this._gridY) - this.ody; \r\n                break;\r\n            case Alignment.Free:\r\n            default:\r\n                this.dx = this._cdx - this.odx;\r\n                this.dy = this._cdy - this.ody;\r\n                break;\r\n        }\r\n        this.odx += this.dx;\r\n        this.ody += this.dy;\r\n    }\r\n\r\n}\r\n","export class DiagramDisplaySettings {\r\n\r\n    /**\r\n     * If the grid should be displayed or not.\r\n     */\r\n    public showGrid: boolean;\r\n\r\n    /**\r\n     * If shadow's should be displayed or not.\r\n     */\r\n    public showShadows: boolean;\r\n    \r\n    /**\r\n     * If debug information should be displayed or not.\r\n     */\r\n    public showDebug: boolean;\r\n\r\n    /**\r\n     * The diagram's supersampling anti-aliasing (SSAA) level.\r\n     */\r\n    public ssaaScale: number;\r\n\r\n    /**\r\n     * Sets the scale level shadows disable at.\r\n     */\r\n    public shadowsDisableAt: number;\r\n\r\n    /**\r\n     * Creates a new {@link DiagramDisplaySettings}.\r\n     */\r\n    constructor() {\r\n        this.showGrid = true;\r\n        this.showShadows = true;\r\n        this.showDebug = false;\r\n        this.ssaaScale = 1;\r\n        this.shadowsDisableAt = 0;\r\n    }\r\n\r\n}\r\n","import * as d3 from \"d3\";\r\nimport { RasterCache } from \"./RasterCache\";\r\nimport { ViewportRegion } from \"./ViewportRegion\";\r\nimport { DiagramObjectMover } from \"./DiagramObjectMover\";\r\nimport { DiagramDisplaySettings } from \"./DiagramDisplaySettings\";\r\nimport { CameraLocation } from \"./Camera\";\r\nimport {\r\n    EventEmitter,\r\n    MouseClick\r\n} from \"../Utilities\";\r\nimport {\r\n    DiagramLineModel,\r\n    DiagramAnchorModel,\r\n    DiagramObjectModel,\r\n    PageModel,\r\n    DiagramAnchorableModel\r\n} from \"../DiagramModelTypes\";\r\nimport {\r\n    DiagramAnchorableView,\r\n    DiagramLineEndingView,\r\n    DiagramLineView,\r\n    DiagramObjectView,\r\n    PageView\r\n} from \"../DiagramViewTypes\";\r\nimport {\r\n    Alignment,\r\n    Cursor,\r\n    PositionSetByUser\r\n} from \"../Attributes\";\r\n\r\nexport class BlockDiagram extends EventEmitter {\r\n\r\n    /**\r\n     * The viewport's padding.\r\n     */\r\n    private static readonly VIEWPORT_PADDING = 0;\r\n\r\n    /**\r\n     * When a zoom action occurs, this constant defines that amount of time to\r\n     * wait (in milliseconds) before the raster cache is updated.\r\n     */\r\n    private static readonly RASTER_CACHE_UPDATE_DELAY = 100;\r\n\r\n\r\n    /**\r\n     * The diagram's canvas.\r\n     */\r\n    private _canvas: CanvasSelection | null;\r\n\r\n    /**\r\n     * The diagram's context.\r\n     */\r\n    private _context: CanvasRenderingContext2D | null;\r\n    \r\n    /**\r\n     * The diagram's display settings.\r\n     */\r\n    private _display: DiagramDisplaySettings;\r\n\r\n    /**\r\n     * The diagram container's height.\r\n     */\r\n    private _elHeight: number;\r\n\r\n    /**\r\n     * The diagram container's width.\r\n     */\r\n    private _elWidth: number;\r\n\r\n    /**\r\n     * The object currently being hovered over.\r\n     */\r\n    private _hovObj: DiagramObjectModel | undefined;\r\n\r\n    /**\r\n     * The diagram's object mover.\r\n     */\r\n    private _mover: DiagramObjectMover;\r\n\r\n    /**\r\n     * If the current layout is locked or not.\r\n     */\r\n    private _layoutLocked: boolean;\r\n\r\n    /**\r\n     * The diagram's current page.\r\n     */\r\n    private _page: PageView;\r\n\r\n    /**\r\n     * The id of the last animation frame request.\r\n     */\r\n    private _rafId: number;\r\n\r\n    /**\r\n     * The diagram's raster cache.\r\n     */\r\n    private _rasterCache: RasterCache;\r\n\r\n    /**\r\n     * An observer that monitors the size of the diagram's container.\r\n     */\r\n    private _resizeObserver: ResizeObserver | null;\r\n    \r\n    /**\r\n     * The context's current transform.\r\n     */\r\n    private _transform: d3.ZoomTransform;\r\n\r\n    /**\r\n     * The context's viewport.\r\n     */\r\n    private _viewport: ViewportRegion;\r\n    \r\n    /**\r\n     * The id of the late zoom timeout request.\r\n     */\r\n    private _ztoId: number;\r\n\r\n    /**\r\n     * The diagram's zoom behavior.\r\n     */\r\n    private _zoom: CanvasZoomBehavior;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link BlockDiagram}.\r\n     */\r\n    constructor() {\r\n        super();\r\n        let page = PageModel.createDummy();\r\n        let cache = new RasterCache();\r\n        this._canvas = null;\r\n        this._context = null;\r\n        this._display = new DiagramDisplaySettings();\r\n        this._elWidth = 0;\r\n        this._elHeight = 0;\r\n        this._mover = new DiagramObjectMover(...page.grid);\r\n        this._layoutLocked = false;\r\n        this._page = page.createView(cache); \r\n        this._rafId = 0;\r\n        this._rasterCache = cache;\r\n        this._resizeObserver = null;\r\n        this._transform = d3.zoomIdentity;\r\n        this._viewport = new ViewportRegion();\r\n        this._ztoId = 0;\r\n        this._zoom =  d3.zoom<HTMLCanvasElement, unknown>()\r\n            .scaleExtent([1 / 8, 6])\r\n            .on(\"zoom\", this.onCanvasZoom.bind(this))\r\n            .on(\"end\", () => this.onCanvasZoomEnd());\r\n        // `null` ensures cursor is updated immediately\r\n        this._hovObj = null as any;\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Inject and Destroy  ////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Injects the diagram into a container and updates the view.\r\n     * @param container\r\n     *  The container to inject the diagram into.\r\n     */\r\n    public inject(container: HTMLElement): void {\r\n\r\n        // Set sizing\r\n        this._elWidth = container.clientWidth;\r\n        this._elHeight = container.clientHeight;\r\n\r\n        // Setup canvas & context\r\n        this._canvas = d3.select(container)\r\n            .append(\"canvas\")\r\n                .attr(\"style\", \"display:block;\")\r\n                .attr(\"width\", this._elWidth)\r\n                .attr(\"height\", this._elHeight)\r\n            .on(\"mousemove\", (event) => {\r\n                this.onHoverSubject(...d3.pointer(event));\r\n            })\r\n            .on(\"contextmenu\", (e: any) => e.preventDefault());\r\n        this._context = this._canvas.node()!.getContext(\"2d\", { alpha: false });\r\n\r\n        // Configure resize observer\r\n        this._resizeObserver = new ResizeObserver(\r\n            entries => this.onCanvasResize(entries[0].target)\r\n        );\r\n        this._resizeObserver.observe(container);\r\n\r\n        // Configure canvas interactions\r\n        this._canvas\r\n            .call(d3.drag<HTMLCanvasElement, unknown>()\r\n                .filter(() => true)\r\n                .subject(this.onSelectSubject.bind(this))\r\n                .on(\"start\", this.onObjectDragStarted.bind(this))\r\n                .on(\"drag\", this.onObjectDragged.bind(this))\r\n                .on(\"end\", this.onObjectDragEnded.bind(this))\r\n            ).call(this._zoom);\r\n        \r\n    }\r\n\r\n    /**\r\n     * Removes the diagram from the container and removes all event listeners.\r\n     */\r\n    public destroy() {\r\n        this._canvas?.remove();\r\n        this._canvas = null;\r\n        this._context = null;\r\n        this.removeAllListeners();\r\n        this._resizeObserver?.disconnect();\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  2. Event Subscription  ////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Adds an event listener to the diagram.\r\n     * @param event\r\n     *  The event to subscribe to.\r\n     * @param callback\r\n     *  The function to call once the event has fired.\r\n     */\r\n    public override on<K extends keyof DiagramEvents>(event: K, callback: DiagramEvents[K]): void {\r\n        super.on(event, callback);\r\n    }\r\n\r\n    /**\r\n     * Adds an event listener to the diagram that will be fired once and then\r\n     * removed.\r\n     * @param event\r\n     *  The event to subscribe to.\r\n     * @param callback\r\n     *  The function to call once the event has fired. \r\n     */\r\n    public override once<K extends keyof DiagramEvents>(event: K, callback: DiagramEvents[K]): void {\r\n        super.once(event, callback);\r\n    }\r\n\r\n    /**\r\n     * Removes all event listeners associated with a given event. If no event\r\n     * name is specified, all event listeners are removed.\r\n     * @param event\r\n     *  The name of the event.\r\n     */\r\n    public override removeAllListeners<K extends keyof DiagramEvents>(event?: K): void {\r\n        super.removeAllListeners(event);\r\n    }\r\n\r\n    /**\r\n     * Dispatches the event listeners associated with a given event.\r\n     * @param event\r\n     *  The name of the event to raise.\r\n     * @param args\r\n     *  The arguments to pass to the event listeners.\r\n     */\r\n    protected override emit<K extends keyof DiagramEvents>(event: K, ...args: Parameters<DiagramEvents[K]>): void {\r\n        super.emit(event, ...args);\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  3. Rendering  /////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Enables/Disables the grid.\r\n     * @param display\r\n     *  [true]\r\n     *   Enables the grid.\r\n     *  [false]\r\n     *   Disables the grid.\r\n     */\r\n    public setGridDisplay(display: boolean) {\r\n        this._display.showGrid = display;\r\n    }\r\n\r\n    /**\r\n     * Enables/Disables shadows.\r\n     * @param display\r\n     *  [true]\r\n     *   Enables shadows.\r\n     *  [false]\r\n     *   Disables shadows.\r\n     */\r\n    public setShadowsDisplay(display: boolean) {\r\n        this._display.showShadows = display;        \r\n    }\r\n\r\n    /**\r\n     * Enables/Disables the debug display. If enabled, the diagram will display\r\n     * additional information that can be used to debug issues with the block\r\n     * diagram API.\r\n     * @param display\r\n     *  [true]\r\n     *   Enables debug mode.\r\n     *  [false]\r\n     *   Disables debug mode.\r\n     */\r\n    public setDebugDisplay(display: boolean) {\r\n        this._display.showDebug = display;\r\n    }\r\n\r\n    /**\r\n     * Sets the diagram's supersampling anti-aliasing (SSAA) level.\r\n     * @param k\r\n     *  The supersampling scale.\r\n     */\r\n    public setSsaaScale(k: number) {\r\n        this._display.ssaaScale = k;\r\n        this._rasterCache.setScale(k);\r\n    }\r\n\r\n    /**\r\n     * Sets the scale level shadows disable at.\r\n     * @param k\r\n     *  The scale level shadows disable at.\r\n     */\r\n    public setShadowsDisableAt(k: number) {\r\n        this._display.shadowsDisableAt = k;\r\n    }\r\n\r\n    /**\r\n     * Renders the block diagram.\r\n     */\r\n    public render() {\r\n        if (this._rafId != 0)\r\n            return;\r\n        this._rafId = requestAnimationFrame(() => {\r\n            this._rafId = 0;\r\n            this.executeRenderPipeline();\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Executes the diagram rendering pipeline.\r\n     */\r\n    private executeRenderPipeline() {\r\n        // Return if there's no context to render to\r\n        if(this._context === null)\r\n            return;\r\n        let d = this._display;\r\n        // Render page surface\r\n        this._page.renderPageSurfaceTo(this._context, this._viewport, d.showGrid);\r\n        // Render page contents\r\n        if(d.showShadows && d.shadowsDisableAt <= this._transform.k) {\r\n            // With drop shadow\r\n            this._page.renderTo(this._context, this._viewport);\r\n        } else {\r\n            // Without drop shadow\r\n            this._page.renderTo(this._context, this._viewport, 0, 0);\r\n        }\r\n        // Render debug display\r\n        if(d.showDebug) {\r\n            this._page.renderDebugTo(this._context, this._viewport);\r\n        }\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  4. Canvas Interactions  ///////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Canvas hover behavior.\r\n     * @param x\r\n     *  The pointer's position on the x-axis.\r\n     * @param y\r\n     *  The pointer's position on the y-axis.\r\n     * @param cursor\r\n     *  The cursor to use.\r\n     *  (Default: The subject's cursor)\r\n     */\r\n    private onHoverSubject(x: number, y: number, cursor?: number) {\r\n        x = this._transform.invertX(x);\r\n        y = this._transform.invertY(y);\r\n        let hovObj = this._page.el.getObjectAt(x, y);\r\n        if(this._hovObj !== hovObj) {\r\n            // Update hover object\r\n            this._hovObj = hovObj;\r\n            // Pick cursor\r\n            cursor = cursor ?? hovObj?.getCursor() ?? Cursor.Default;\r\n            // Emit\r\n            this.emit(\"object-hover\", hovObj, cursor);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Canvas click behavior.\r\n     * @param event\r\n     *  The click event.\r\n     * @returns\r\n     *  The drag action to perform or `undefined` if no object was clicked.\r\n     */\r\n     private onSelectSubject(event: any): DragAction | undefined {\r\n        let evt = event.sourceEvent;\r\n        let x = this._transform.invertX(event.x);\r\n        let y = this._transform.invertY(event.y);\r\n        let obj = this._page.el.getObjectAt(x, y);\r\n        let rc = evt.button === MouseClick.Right;\r\n        let mv: DiagramObjectView[];\r\n\r\n        // If no object:\r\n        if(!obj) {\r\n            this.emit(\"canvas-click\", evt, event.x, event.y);\r\n            return undefined; \r\n        }\r\n        \r\n        // If object is an anchor:\r\n        if(obj instanceof DiagramAnchorModel) {\r\n            // Select canvas\r\n            this.emit(\"canvas-click\", evt, event.x, event.y);\r\n            if(rc) {\r\n                return undefined;\r\n            }\r\n            // Create line\r\n            let line = obj.makeLine();\r\n            // Configure line\r\n            let x = obj.boundingBox.xMid;\r\n            let y = obj.boundingBox.yMid;\r\n            line.srcEnding.moveTo(x, y);\r\n            line.trgEnding.moveTo(x, y);\r\n            // Create line view\r\n            let view = line\r\n                .createView(this._rasterCache)\r\n                .updateView() as DiagramLineView;\r\n            // Initiate line move\r\n            return {\r\n                type: DragActionType.CreateLine,\r\n                line: view,\r\n                parent: this._page, \r\n                anchor: obj,\r\n                obj: view.trgEnding\r\n            };\r\n        }\r\n\r\n        // If object is child of line:\r\n        if(obj.parent instanceof DiagramLineModel) { \r\n            // Select line\r\n            this.emit(\"object-click\", evt, obj.parent, event.x, event.y);\r\n            if(rc) {\r\n                return undefined;\r\n            }\r\n            // Move the child\r\n            mv = [this._page.lookup(obj.id)!];\r\n        } \r\n        \r\n        // If any other object type:\r\n        else {\r\n            // Select object\r\n            this.emit(\"object-click\", evt, obj, event.x, event.y);\r\n            if(rc) {\r\n                return undefined;\r\n            }\r\n            // Move the current selection\r\n            mv = this._page.selects;   \r\n        }\r\n\r\n        // Initiate object move\r\n        if(mv[0] instanceof DiagramAnchorableView && mv.length === 1) {\r\n            return { type: DragActionType.MoveAnchorable, obj: mv[0] }\r\n        } else {\r\n            return { type: DragActionType.Move, objs: mv }\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Object drag start behavior.\r\n     * @param event\r\n     *  The drag event.\r\n     */\r\n    private onObjectDragStarted(event: any) {\r\n        this._layoutLocked = true;\r\n        let s = event.subject as DragAction;\r\n        let cx = this._transform.invertX(event.x);\r\n        let cy = this._transform.invertY(event.y);\r\n        let ox = 0;\r\n        let oy = 0;\r\n        let al = Alignment.Free;\r\n        let an = undefined;\r\n        switch(s.type) {\r\n            case DragActionType.Move:\r\n                for(let obj of s.objs) {\r\n                    ox += obj.x;\r\n                    oy += obj.y;\r\n                    al = Math.max(al, obj.el.getAlignment());\r\n                }\r\n                ox /= s.objs.length;\r\n                oy /= s.objs.length;\r\n                break;\r\n            case DragActionType.CreateLine:\r\n                s.parent.children.push(s.line);\r\n            case DragActionType.MoveAnchorable:\r\n                ox = s.obj.x;\r\n                oy = s.obj.y;\r\n                al = s.obj.el.getAlignment();\r\n                an = this._page.el.anchorCache;\r\n                break;\r\n        }\r\n        this._mover.reset(al, cx, cy, ox, oy, an);\r\n    }\r\n\r\n    /**\r\n     * Object dragged behavior.\r\n     * @param event\r\n     *  The drag event.\r\n     */\r\n    private onObjectDragged(event: any) {\r\n        let s = event.subject as DragAction;\r\n        // Calculate delta\r\n        this._mover.updateDelta(\r\n            event.dx / this._transform.k,\r\n            event.dy / this._transform.k\r\n        );\r\n        // Move elements\r\n        let attrs;\r\n        switch(s.type) {\r\n            case DragActionType.Move:\r\n                for(let obj of s.objs) {\r\n                    attrs = obj.fakePositionSetByUser(PositionSetByUser.True);\r\n                    obj.moveBy(this._mover.dx, this._mover.dy, attrs);\r\n                }\r\n                break;\r\n            case DragActionType.CreateLine:\r\n                s.obj.el.moveBy(this._mover.dx, this._mover.dy);\r\n            case DragActionType.MoveAnchorable:\r\n                this.onHoverSubject(event.x, event.y, s.obj.el.getCursor());\r\n                attrs = s.obj.fakePositionSetByUser(PositionSetByUser.True);\r\n                s.obj.moveBy(this._mover.dx, this._mover.dy, attrs);\r\n                break;\r\n        }\r\n        // Render\r\n        this.render();\r\n    }\r\n\r\n    /**\r\n     * Object drag end behavior.\r\n     * @param event\r\n     *  The drag event.\r\n     */\r\n    private onObjectDragEnded(event: any) {\r\n        this._layoutLocked = false;\r\n        let s = event.subject as DragAction;\r\n        let tdx = this._mover.odx;\r\n        let tdy = this._mover.ody;\r\n        switch(s.type) {\r\n            case DragActionType.Move:\r\n                if(!(tdx || tdy)) {\r\n                    // If no movement, bail\r\n                    return;\r\n                }\r\n                let ids = s.objs.map((o: any) => o.el);\r\n                this.emit(\"object-move\", ids, tdx, tdy);\r\n                break;\r\n            case DragActionType.MoveAnchorable:\r\n                if(!(tdx || tdy)) {\r\n                    // If no movement, bail\r\n                    return;\r\n                }\r\n                if(this._mover.anchor) {\r\n                    let anchor = this._mover.anchor;\r\n                    let object = s.obj.el;\r\n                    this.emit(\"object-attach\", object, anchor);\r\n                } else if(s.obj.el.isAttached()) {\r\n                    let object = s.obj.el;\r\n                    this.emit(\"object-detach\", object, tdx, tdy);\r\n                } else {\r\n                    let ids = [s.obj.el];\r\n                    this.emit(\"object-move\", ids, tdx, tdy);\r\n                }\r\n                break;\r\n            case DragActionType.CreateLine:\r\n                if((tdx || tdy) && s.anchor !== this._mover.anchor) {\r\n                    let obj = s.line.el;\r\n                    let par = s.parent.el;\r\n                    let src = s.anchor;\r\n                    let trg = this._mover.anchor;\r\n                    this.emit(\"line-create\", obj, par, src, trg);\r\n                } else {\r\n                    // If no movement, reset view and bail\r\n                    this.updateView();\r\n                    this.render();\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Canvas zoom behavior.\r\n     * @param event\r\n     *  The zoom event.\r\n     */\r\n    private onCanvasZoom(event: any) {\r\n        // Update cache\r\n        if (this._transform.k !== event.transform.k) {\r\n            clearTimeout(this._ztoId);\r\n            this._ztoId = setTimeout(() => {\r\n                let k = this._transform.k * this._display.ssaaScale;\r\n                if(this._rasterCache.getScale() !== k) {\r\n                    this._rasterCache.setScale(k);\r\n                    this.render();\r\n                }\r\n            }, BlockDiagram.RASTER_CACHE_UPDATE_DELAY)\r\n        }\r\n        // Update transform\r\n        this._transform = event.transform;\r\n        // Update viewport\r\n        this.updateViewportBounds();\r\n        this._context?.setTransform(\r\n            this._transform.k, 0, 0,\r\n            this._transform.k, this._transform.x, this._transform.y\r\n        );\r\n        // If no source event, then we are already\r\n        // running inside a requestAnimationFrame()\r\n        if(event.sourceEvent === null) {\r\n            // If no render scheduled, run render pipeline\r\n            if(this._rafId === 0) {\r\n                this.executeRenderPipeline();\r\n            }\r\n        } else {\r\n            this.render();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Canvas zoom end behavior.\r\n     */\r\n    private onCanvasZoomEnd() {\r\n        this.emit(\"view-transform\", \r\n            this._transform.x,\r\n            this._transform.y,\r\n            this._transform.k,\r\n            this._elWidth,\r\n            this._elHeight\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Canvas resize behavior.\r\n     * @param el\r\n     *  The block diagram's container.\r\n     */\r\n    private onCanvasResize(el: Element) {\r\n        let newWidth = el.clientWidth;\r\n        let newHeight = el.clientHeight;\r\n        // Center viewport\r\n        (this._transform as any).x += (newWidth - this._elWidth) / 2;\r\n        (this._transform as any).y += (newHeight - this._elHeight) / 2;\r\n        // Update dimensions\r\n        this._elWidth = newWidth;\r\n        this._elHeight = newHeight;\r\n        this._canvas\r\n            ?.attr(\"width\", this._elWidth)\r\n            ?.attr(\"height\", this._elHeight);\r\n        // Update viewport\r\n        this.updateViewportBounds();\r\n        // Adjust viewport\r\n        this._context?.setTransform(\r\n            this._transform.k, 0, 0,\r\n            this._transform.k, this._transform.x, this._transform.y\r\n        );\r\n        // Immediately redraw diagram to context, if possible\r\n        if(this._context)\r\n            this.executeRenderPipeline();\r\n    }\r\n\r\n    /**\r\n     * Recalculates the viewport's bounds based on the container's current\r\n     * dimensions.\r\n     */\r\n    private updateViewportBounds() {\r\n        let t = this._transform;\r\n        let padding = BlockDiagram.VIEWPORT_PADDING;\r\n        this._viewport.xMin = Math.round(t.invertX(-padding));\r\n        this._viewport.xMax = Math.round(t.invertX(this._elWidth + padding));\r\n        this._viewport.yMin = Math.round(t.invertY(-padding));\r\n        this._viewport.yMax = Math.round(t.invertY(this._elHeight + padding));\r\n        this._viewport.scale = t.k;\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  5. Data  //////////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n    \r\n    /**\r\n     * Configures the diagram's current page.\r\n     * @param page\r\n     *  The diagram page.\r\n     */\r\n    public setPage(page: PageModel) {\r\n        // Update page\r\n        this._page = page.createView(this._rasterCache);\r\n        // Update mover\r\n        this._mover = new DiagramObjectMover(...page.grid);\r\n    }\r\n\r\n    /**\r\n     * Syncs the view with the underlying model.\r\n     */\r\n    public updateView() {\r\n        if(!this._layoutLocked) {\r\n            this._page.updateView();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the camera's location.\r\n     * @param location\r\n     *  The camera's new location.\r\n     * @param animate\r\n     *  The length of time (in milliseconds) the camera move animation takes.\r\n     *  (Default: 1000)\r\n     */\r\n    public setCameraLocation(location: CameraLocation, animate: number = 1000) {\r\n        if(!this._canvas)\r\n            return;\r\n        let k = location.k;\r\n        let x = Math.round((this._elWidth / 2) - (location.x * k));\r\n        let y = Math.round((this._elHeight / 2) - (location.y * k))\r\n        // Move camera\r\n        this._canvas.transition()\r\n            .duration(animate)\r\n            .call(this._zoom.transform, \r\n                d3.zoomIdentity.translate(x, y).scale(k)\r\n            )\r\n    }\r\n\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  Internal Types  ///////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n// D3 types\r\ntype CanvasZoomBehavior = \r\n    d3.ZoomBehavior<HTMLCanvasElement, unknown>;\r\ntype CanvasSelection = \r\n    d3.Selection<HTMLCanvasElement, unknown, null, undefined>;\r\n\r\n// Event types\r\ninterface DiagramEvents {\r\n    \"object-hover\"  : (\r\n        obj: DiagramObjectModel | undefined, cursor: number\r\n    ) => void;\r\n    \"object-click\"  : (\r\n        event: PointerEvent, obj: DiagramObjectModel, x: number, y: number\r\n    ) => void;\r\n    \"canvas-click\"  : (\r\n        event: PointerEvent, x: number, y: number\r\n    ) => void;\r\n    \"object-move\"   : (\r\n        objs: DiagramObjectModel[], dx: number, dy: number\r\n    ) => void;\r\n    \"object-attach\" : (\r\n        obj: DiagramAnchorableModel, anchor: DiagramAnchorModel\r\n    ) => void;\r\n    \"object-detach\" : (\r\n        obj: DiagramAnchorableModel, dx: number, dy: number\r\n    ) => void;\r\n    \"line-create\"   : (\r\n        obj: DiagramLineModel, parent: DiagramObjectModel, \r\n        src: DiagramAnchorModel, trg?: DiagramAnchorModel\r\n    ) => void;\r\n    \"view-transform\": (\r\n        x: number, y: number, k: number, w: number, h: number\r\n    ) => void\r\n}\r\n\r\n// Drag Actions\r\ntype DragAction\r\n    = MoveDragAction\r\n    | MoveAnchorableDragAction\r\n    | CreateLineDragAction;\r\n\r\n\r\nenum DragActionType { \r\n    Move,\r\n    MoveAnchorable,\r\n    CreateLine\r\n}\r\n\r\ntype MoveDragAction = {\r\n\r\n    /**\r\n     * The move type.\r\n     */\r\n    type: DragActionType.Move,\r\n    \r\n    /**\r\n     * The objects to move.\r\n     */\r\n    objs: DiagramObjectView[]\r\n\r\n}\r\n\r\ntype MoveAnchorableDragAction = {\r\n\r\n    /**\r\n     * The move type.\r\n     */\r\n    type: DragActionType.MoveAnchorable,\r\n\r\n    /**\r\n     * The anchorable to move.\r\n     */\r\n    obj: DiagramAnchorableView\r\n}\r\n\r\ntype CreateLineDragAction = {\r\n\r\n    /**\r\n     * The move type.\r\n     */\r\n    type: DragActionType.CreateLine,\r\n    \r\n    /**\r\n     * The line.\r\n     */\r\n    line: DiagramLineView,\r\n\r\n    /**\r\n     * The line's parent.\r\n     */\r\n    parent: DiagramObjectView,\r\n\r\n    /**\r\n     * The anchor that created the line.\r\n     */\r\n    anchor: DiagramAnchorModel, \r\n\r\n    /**\r\n     * The line ending to move.\r\n     */\r\n    obj: DiagramLineEndingView\r\n\r\n}\r\n","/*\r\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\r\n * Digest Algorithm, as defined in RFC 1321.\r\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\r\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\r\n * Distributed under the BSD License\r\n * See http://pajhome.org.uk/crypt/md5 for more info.\r\n * Updated by Michael Carenzo 2022.\r\n */\r\n\r\nconst hex = \"0123456789abcdef\";\r\n\r\n/**\r\n * Converts a 32-bit number to hex (least significant byte first).\r\n * @param num\r\n *  The number.\r\n * @returns\r\n *  The hex string.\r\n */\r\nfunction toHex(num: number): string {\r\n    let str = \"\";\r\n    for (let i = 0; i <= 3; i++) {\r\n        str += hex.charAt((num >> (i * 8 + 4)) & 0x0F) + hex.charAt((num >> (i * 8)) & 0x0F);\r\n    }\r\n    return str;\r\n}\r\n\r\n/**\r\n * Converts a string into an array of blocks. Each block contains 16, 32-bit,\r\n * words. Size padding and padding bits are appended per the MD5 standard.  \r\n * @param str\r\n *  The string.\r\n * @returns\r\n *  The set of blocks flattened into a single array.\r\n */\r\nfunction stringToBlocks(str: string): number[] {\r\n    let i;\r\n    let size = ((str.length + 8) >> 6) + 1;\r\n    let blocks = new Array(size * 16).fill(0);\r\n    for (i = 0; i < str.length; i++) {\r\n        blocks[i >> 2] |= str.charCodeAt(i) << ((i % 4) * 8);\r\n    }\r\n    blocks[i >> 2] |= 0x80 << ((i % 4) * 8);\r\n    blocks[size * 16 - 2] = str.length * 8;\r\n    return blocks;\r\n}\r\n\r\n/**\r\n * Adds two numbers (wrapping at 2^32). This uses 16-bit operations internally\r\n * to work around bugs in some JS interpreters.\r\n * @param x\r\n *  The first operand.\r\n * @param y\r\n *  The second operand.\r\n * @returns\r\n *  The sum.\r\n */\r\nfunction add(x: number, y: number): number {\r\n    var lsw = (x & 0xFFFF) + (y & 0xFFFF);\r\n    var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\r\n    return (msw << 16) | (lsw & 0xFFFF);\r\n}\r\n\r\n/**\r\n * Rotates a 32-bit number `cnt` bits to the left.\r\n * @param num\r\n *  The number.\r\n * @param cnt\r\n *  The number of bits to rotate by.\r\n * @returns\r\n *  The new number.\r\n */\r\nfunction rol(num: number, cnt: number): number {\r\n    return (num << cnt) | (num >>> (32 - cnt));\r\n}\r\n\r\n/**\r\n * CMN transform function.\r\n * @param q\r\n *  The result of the F, G, H, or I auxiliary function.\r\n * @param a\r\n *  First 32-bit word.\r\n * @param b\r\n *  Second 32-bit word.\r\n * @param x \r\n *  32-bit word from a message block.\r\n * @param s\r\n *  The number of bits to rotate by.\r\n * @param t\r\n *  Sin table parameter (abs(sin(i))).\r\n * @returns\r\n *  Transform result.\r\n */\r\nfunction cmn(q: number, a: number, b: number, x: number, s: number, t: number): number {\r\n    return add(rol(add(add(a, q), add(x, t)), s), b);\r\n}\r\n\r\n/**\r\n * FF transform operation.\r\n * @param a\r\n *  First 32-bit word.\r\n * @param b\r\n *  Second 32-bit word.\r\n * @param c\r\n *  Third 32-bit word.\r\n * @param d\r\n *  Fourth 32-bit word.\r\n * @param x\r\n *  32-bit word from a message block.\r\n * @param s\r\n *  The number of bits to rotate by.\r\n * @param t\r\n *  Sin table parameter (abs(sin(i))).\r\n * @returns\r\n *  Transform result.\r\n */\r\nfunction ff(a: number, b: number, c: number, d: number, x: number, s: number, t: number): number {\r\n    return cmn((b & c) | ((~b) & d), a, b, x, s, t);\r\n}\r\n\r\n/**\r\n * GG transform operation.\r\n * @param a\r\n *  First 32-bit word.\r\n * @param b\r\n *  Second 32-bit word.\r\n * @param c\r\n *  Third 32-bit word.\r\n * @param d\r\n *  Fourth 32-bit word.\r\n * @param x\r\n *  32-bit word from a message block.\r\n * @param s\r\n *  The number of bits to rotate by.\r\n * @param t\r\n *  Sin table parameter (abs(sin(i))).\r\n * @returns\r\n *  Transform result.\r\n */\r\nfunction gg(a: number, b: number, c: number, d: number, x: number, s: number, t: number): number {\r\n    return cmn((b & d) | (c & (~d)), a, b, x, s, t);\r\n}\r\n\r\n/**\r\n * HH transform operation.\r\n * @param a\r\n *  First 32-bit word.\r\n * @param b\r\n *  Second 32-bit word.\r\n * @param c\r\n *  Third 32-bit word.\r\n * @param d\r\n *  Fourth 32-bit word.\r\n * @param x\r\n *  32-bit word from a message block.\r\n * @param s\r\n *  The number of bits to rotate by.\r\n * @param t\r\n *  Sin table parameter (abs(sin(i))).\r\n * @returns\r\n *  Transform result.\r\n */\r\nfunction hh(a: number, b: number, c: number, d: number, x: number, s: number, t: number): number {\r\n    return cmn(b ^ c ^ d, a, b, x, s, t);\r\n}\r\n\r\n/**\r\n * II transform operation.\r\n * @param a\r\n *  First 32-bit word.\r\n * @param b\r\n *  Second 32-bit word.\r\n * @param c\r\n *  Third 32-bit word.\r\n * @param d\r\n *  Fourth 32-bit word.\r\n * @param x\r\n *  32-bit word from a message block.\r\n * @param s\r\n *  The number of bits to rotate by.\r\n * @param t\r\n *  Sin table parameter (abs(sin(i))).\r\n * @returns\r\n *  Transform result.\r\n */\r\nfunction ii(a: number, b: number, c: number, d: number, x: number, s: number, t: number): number {\r\n    return cmn(c ^ (b | (~d)), a, b, x, s, t);\r\n}\r\n\r\n/**\r\n * Calculates the MD5 hash of a string.\r\n * @param str\r\n *  The string.\r\n * @returns\r\n *  The MD5 digest.\r\n */\r\nexport function MD5(str: string): string {\r\n    let x = stringToBlocks(str),\r\n        a = 1732584193,\r\n        b = -271733879,\r\n        c = -1732584194,\r\n        d = 271733878;\r\n\r\n    for (let i = 0; i < x.length; i += 16) {\r\n\r\n        let old_a = a,\r\n            old_b = b,\r\n            old_c = c,\r\n            old_d = d;\r\n\r\n        // Round 1\r\n\r\n        a = ff(a, b, c, d, x[i + 0], 7, -680876936);\r\n        d = ff(d, a, b, c, x[i + 1], 12, -389564586);\r\n        c = ff(c, d, a, b, x[i + 2], 17, 606105819);\r\n        b = ff(b, c, d, a, x[i + 3], 22, -1044525330);\r\n        a = ff(a, b, c, d, x[i + 4], 7, -176418897);\r\n        d = ff(d, a, b, c, x[i + 5], 12, 1200080426);\r\n        c = ff(c, d, a, b, x[i + 6], 17, -1473231341);\r\n        b = ff(b, c, d, a, x[i + 7], 22, -45705983);\r\n        a = ff(a, b, c, d, x[i + 8], 7, 1770035416);\r\n        d = ff(d, a, b, c, x[i + 9], 12, -1958414417);\r\n        c = ff(c, d, a, b, x[i + 10], 17, -42063);\r\n        b = ff(b, c, d, a, x[i + 11], 22, -1990404162);\r\n        a = ff(a, b, c, d, x[i + 12], 7, 1804603682);\r\n        d = ff(d, a, b, c, x[i + 13], 12, -40341101);\r\n        c = ff(c, d, a, b, x[i + 14], 17, -1502002290);\r\n        b = ff(b, c, d, a, x[i + 15], 22, 1236535329);\r\n\r\n        // Round 2\r\n\r\n        a = gg(a, b, c, d, x[i + 1], 5, -165796510);\r\n        d = gg(d, a, b, c, x[i + 6], 9, -1069501632);\r\n        c = gg(c, d, a, b, x[i + 11], 14, 643717713);\r\n        b = gg(b, c, d, a, x[i + 0], 20, -373897302);\r\n        a = gg(a, b, c, d, x[i + 5], 5, -701558691);\r\n        d = gg(d, a, b, c, x[i + 10], 9, 38016083);\r\n        c = gg(c, d, a, b, x[i + 15], 14, -660478335);\r\n        b = gg(b, c, d, a, x[i + 4], 20, -405537848);\r\n        a = gg(a, b, c, d, x[i + 9], 5, 568446438);\r\n        d = gg(d, a, b, c, x[i + 14], 9, -1019803690);\r\n        c = gg(c, d, a, b, x[i + 3], 14, -187363961);\r\n        b = gg(b, c, d, a, x[i + 8], 20, 1163531501);\r\n        a = gg(a, b, c, d, x[i + 13], 5, -1444681467);\r\n        d = gg(d, a, b, c, x[i + 2], 9, -51403784);\r\n        c = gg(c, d, a, b, x[i + 7], 14, 1735328473);\r\n        b = gg(b, c, d, a, x[i + 12], 20, -1926607734);\r\n\r\n        // Round 3\r\n\r\n        a = hh(a, b, c, d, x[i + 5], 4, -378558);\r\n        d = hh(d, a, b, c, x[i + 8], 11, -2022574463);\r\n        c = hh(c, d, a, b, x[i + 11], 16, 1839030562);\r\n        b = hh(b, c, d, a, x[i + 14], 23, -35309556);\r\n        a = hh(a, b, c, d, x[i + 1], 4, -1530992060);\r\n        d = hh(d, a, b, c, x[i + 4], 11, 1272893353);\r\n        c = hh(c, d, a, b, x[i + 7], 16, -155497632);\r\n        b = hh(b, c, d, a, x[i + 10], 23, -1094730640);\r\n        a = hh(a, b, c, d, x[i + 13], 4, 681279174);\r\n        d = hh(d, a, b, c, x[i + 0], 11, -358537222);\r\n        c = hh(c, d, a, b, x[i + 3], 16, -722521979);\r\n        b = hh(b, c, d, a, x[i + 6], 23, 76029189);\r\n        a = hh(a, b, c, d, x[i + 9], 4, -640364487);\r\n        d = hh(d, a, b, c, x[i + 12], 11, -421815835);\r\n        c = hh(c, d, a, b, x[i + 15], 16, 530742520);\r\n        b = hh(b, c, d, a, x[i + 2], 23, -995338651);\r\n\r\n        // Round 4\r\n\r\n        a = ii(a, b, c, d, x[i + 0], 6, -198630844);\r\n        d = ii(d, a, b, c, x[i + 7], 10, 1126891415);\r\n        c = ii(c, d, a, b, x[i + 14], 15, -1416354905);\r\n        b = ii(b, c, d, a, x[i + 5], 21, -57434055);\r\n        a = ii(a, b, c, d, x[i + 12], 6, 1700485571);\r\n        d = ii(d, a, b, c, x[i + 3], 10, -1894986606);\r\n        c = ii(c, d, a, b, x[i + 10], 15, -1051523);\r\n        b = ii(b, c, d, a, x[i + 1], 21, -2054922799);\r\n        a = ii(a, b, c, d, x[i + 8], 6, 1873313359);\r\n        d = ii(d, a, b, c, x[i + 15], 10, -30611744);\r\n        c = ii(c, d, a, b, x[i + 6], 15, -1560198380);\r\n        b = ii(b, c, d, a, x[i + 13], 21, 1309151649);\r\n        a = ii(a, b, c, d, x[i + 4], 6, -145523070);\r\n        d = ii(d, a, b, c, x[i + 11], 10, -1120210379);\r\n        c = ii(c, d, a, b, x[i + 2], 15, 718787259);\r\n        b = ii(b, c, d, a, x[i + 9], 21, -343485551);\r\n\r\n        a = add(a, old_a);\r\n        b = add(b, old_b);\r\n        c = add(c, old_c);\r\n        d = add(d, old_d);\r\n    }\r\n\r\n    return toHex(a) + toHex(b) + toHex(c) + toHex(d);\r\n}\r\n","/**\r\n * Draws an arrow head to the context.\r\n * @param ctx\r\n *  The context to draw to.\r\n * @param sx\r\n *  The arrow's source x-axis coordinate.\r\n * @param sy\r\n *  The arrow's source y-axis coordinate.\r\n * @param tx\r\n *  The arrow's target x-axis coordinate.\r\n * @param ty\r\n *  The arrow's target y-axis coordinate.\r\n * @param h\r\n *  The arrow's height.\r\n *  (Default: 12)\r\n * @param n\r\n *  The arrow's offset on its axis. A positive value nudges the arrowhead `n`\r\n *  pixels forward on its axis. A negative value nudges the arrowhead `n`\r\n *  pixels backwards on its axis. \r\n *  (Default: 0)\r\n */\r\nexport function drawArrowHead(\r\n    ctx: CanvasRenderingContext2D, \r\n    sx: number, sy: number, \r\n    tx: number, ty: number, \r\n    h: number = 12, n: number = 0\r\n) {\r\n    let dx = tx - sx;\r\n    let dy = ty - sy;\r\n    let angle = Math.atan2(dy, dx);\r\n    let a = tx - h * Math.cos(angle - Math.PI / 6);\r\n    let b = ty - h * Math.sin(angle - Math.PI / 6);\r\n    let c = tx - h * Math.cos(angle + Math.PI / 6);\r\n    let d = ty - h * Math.sin(angle + Math.PI / 6);\r\n    ctx.beginPath();\r\n    ctx.moveTo(a, b);\r\n    ctx.lineTo(c, d);\r\n    ctx.lineTo(tx, ty);\r\n    ctx.closePath();\r\n}\r\n\r\n/**\r\n * Draws a rectangular path to the context.\r\n * @param ctx\r\n *  The context to draw to.\r\n * @param x\r\n *  The top-left x coordinate.\r\n * @param y\r\n *  The top-left y coordinate.\r\n * @param w\r\n *  The width of the rectangle.\r\n * @param h\r\n *  The height of the rectangle.\r\n * @param r\r\n *  The rectangle's border radius.\r\n * @param s\r\n *  The rectangle's stroke width.\r\n *  (Default: 1)\r\n */\r\nexport function drawRect(\r\n    ctx: CanvasRenderingContext2D,\r\n    x: number, y: number,\r\n    w: number, h: number,\r\n    r: number, s?: number\r\n): void;\r\n\r\n /**\r\n  * Draws a rectangular path to a context.\r\n  * @param ctx\r\n  *  The context to draw to.\r\n  * @param x\r\n  *  The top-left x coordinate.\r\n  * @param y\r\n  *  The top-left y coordinate.\r\n  * @param w\r\n  *  The width of the rectangle.\r\n  * @param h\r\n  *  The height of the rectangle.\r\n  * @param r\r\n  *  An object which defines the border radius of each corner. If a corner\r\n  *  is not specified, it is assumed to be 0.\r\n  * @param s\r\n  *  The rectangle's stroke width.\r\n  *  (Default: 1)\r\n  */\r\nexport function drawRect(\r\n    ctx: CanvasRenderingContext2D,\r\n    x: number, y: number,\r\n    w: number, h: number,\r\n    r: BorderRadius, \r\n    s?: number\r\n): void;\r\n\r\nexport function drawRect(\r\n    ctx: CanvasRenderingContext2D, \r\n    x: number, y: number,\r\n    w: number, h: number,\r\n    r: BorderRadius | number,\r\n    s: number = 1\r\n) {\r\n    // Account for stroke width\r\n    x += s / 2;\r\n    y += s / 2;\r\n    w -= s;\r\n    h -= s;\r\n    // Parse radius\r\n    if (typeof r === \"number\") {\r\n        r = { tl: r, tr: r, br: r, bl: r }\r\n    } else {\r\n        r = { tl: 0, tr: 0, br: 0, bl: 0, ...r };\r\n    }\r\n    // Draw rectangular path\r\n    ctx.beginPath();\r\n    ctx.moveTo(x + r.tl!, y);\r\n    ctx.lineTo(x + w - r.tr!, y);\r\n    ctx.quadraticCurveTo(x + w, y, x + w, y + r.tr!);\r\n    ctx.lineTo(x + w, y + h - r.br!);\r\n    ctx.quadraticCurveTo(x + w, y + h, x + w - r.br!, y + h);\r\n    ctx.lineTo(x + r.bl!, y + h);\r\n    ctx.quadraticCurveTo(x, y + h, x, y + h - r.bl!);\r\n    ctx.lineTo(x, y + r.tl!);\r\n    ctx.quadraticCurveTo(x, y, x + r.tl!, y);\r\n    ctx.closePath();\r\n}\r\n\r\nexport type BorderRadius = {\r\n    \r\n    /**\r\n     * Top left radius.\r\n     */\r\n    tl?: number,\r\n\r\n    /**\r\n     * Top right radius.\r\n     */\r\n    tr?: number,\r\n\r\n    /**\r\n     * Bottom right radius.\r\n     */\r\n    br?: number,\r\n\r\n    /**\r\n     * Bottom left radius.\r\n     */\r\n    bl?: number\r\n\r\n}\r\n","export class EventEmitter {\r\n    \r\n    /**\r\n     * The event emitter's index of event listeners.\r\n     */\r\n    private _listeners: Map<string, Function[]>;\r\n\r\n    \r\n    /**\r\n     * Creates a new {@link EventEmitter}. \r\n     */\r\n    constructor(){\r\n        this._listeners = new Map();\r\n    }\r\n\r\n\r\n    /**\r\n     * Adds an event listener to an event.\r\n     * @param event\r\n     *  The name of the event.\r\n     * @param callback\r\n     *  The function to call when the event is raised.\r\n     */\r\n    public on(event: string, callback: Function) {\r\n        if(!this._listeners.has(event))\r\n            this._listeners.set(event, []);\r\n        this._listeners.get(event)!.unshift(callback);\r\n    }\r\n\r\n    /**\r\n     * Adds a one-time event listener to an event.\r\n     * @param event\r\n     *  The name of the event.\r\n     * @param callback\r\n     *  The function to call when the event is raised.\r\n     */\r\n    public once(event: string, callback: Function) {\r\n        let once = (...args: any[]) => {\r\n            let actions = this._listeners.get(event)!;\r\n            actions.splice(actions.indexOf(once), 1);\r\n            callback(...args);\r\n        }\r\n        if(!this._listeners.has(event))\r\n            this._listeners.set(event, []);\r\n        this._listeners.get(event)!.unshift(once);\r\n    }\r\n\r\n    /**\r\n     * Dispatches the event listeners associated with a given event.\r\n     * @param event\r\n     *  The name of the event to raise.\r\n     * @param args\r\n     *  The arguments to pass to the event listeners.\r\n     */\r\n    protected emit(event: string, ...args: any[]) {\r\n        if(this._listeners.has(event)) {\r\n            let listeners = this._listeners.get(event)!;\r\n            for(let i = listeners.length - 1; 0 <= i; i--) {\r\n                listeners[i](...args);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes all event listeners associated with a given event. If no event\r\n     * name is specified, all event listeners are removed.\r\n     * @param event\r\n     *  The name of the event.\r\n     */\r\n    public removeAllListeners(event?: string) {\r\n        if(event !== undefined) {\r\n            this._listeners.delete(event);\r\n        } else {\r\n            this._listeners.clear();\r\n        }\r\n    }\r\n\r\n}\r\n","///////////////////////////////////////////////////////////////////////////////\r\n//  1. Font Store  ////////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nclass FontStore {\r\n\r\n    /**\r\n     * The font store's internal font list.\r\n     */\r\n    private _fontList: Map<string, Font>;\r\n\r\n    /**\r\n     * Creates a new {@link FontStore}.\r\n     */\r\n    constructor() {\r\n        this._fontList = new Map([\r\n            [\"default\", new Font({ size: \"10pt\", family: \"sans-serif\" })],\r\n        ]);\r\n    }\r\n\r\n    /**\r\n     * Returns the specified font. If the font has not been loaded, the default\r\n     * font is returned instead.\r\n     * @param descriptor\r\n     *  The font's descriptor.\r\n     * @return\r\n     *  The font.\r\n     */\r\n    public getFont(descriptor: FontDescriptor): Font {\r\n        let id = FontStore.getCssFontString(descriptor);\r\n        if(this._fontList.has(id)) {\r\n            return this._fontList.get(id)!\r\n        } else {\r\n            return this._fontList.get(\"default\")!;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Loads the specified fonts.\r\n     * @param descriptors\r\n     *  The fonts to load.\r\n     * @param timeout\r\n     *  The amount of time to wait (in milliseconds) per font before giving up.\r\n     *  (Default: 4000)\r\n     * @returns\r\n     *  A Promise that resolves once the fonts have loaded.\r\n     * @throws { Error }\r\n     *  If any of the fonts failed to load.\r\n     */\r\n    public async loadFonts(descriptors: FontDescriptor[], timeout: number = 4000) {\r\n        // Load fonts\r\n        let req = [];\r\n        for(let font of descriptors) {\r\n            req.push(this.loadFont(font, timeout));\r\n        }\r\n        let results = await Promise.allSettled(req);\r\n        // Parse results\r\n        let failedFonts = [];\r\n        for(let i = 0; i < results.length; i++) {\r\n            if(results[i].status === \"fulfilled\")\r\n                continue;\r\n            failedFonts.push(FontStore.getCssFontString(descriptors[i]));\r\n        }\r\n        if(failedFonts.length) {\r\n            let fonts = `'${ failedFonts.join(\"', '\") }'`;\r\n            throw new Error(`The following fonts failed to load: ${ fonts }`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Loads the specified font.\r\n     * @param descriptor\r\n     *  The font to load.\r\n     * @param timeout\r\n     *  The amount of time to wait (in milliseconds) before giving up.\r\n     *  (Default: 4000)\r\n     * @returns\r\n     *  A Promise that resolves once the font has loaded.\r\n     * @throws { Error }\r\n     *  If the timeout was reached or if the document's font store encountered\r\n     *  an error while attempting to load the font.\r\n     */\r\n    public async loadFont(descriptor: FontDescriptor, timeout: number = 4000): Promise<boolean> {\r\n        let fontString = FontStore.getCssFontString(descriptor);\r\n        let fonts = (document as any).fonts; \r\n        if(fonts.check(fontString)) {\r\n            if(!this._fontList.has(fontString)){\r\n                this._fontList.set(fontString, new Font(descriptor));\r\n            } \r\n            return true;\r\n        } else {\r\n            let set = this._fontList.set.bind(this._fontList);\r\n            let start = Date.now();\r\n            // Create loader\r\n            let load = new Promise<boolean>(async (res, rej) => {\r\n                (async function fetch() {\r\n                    if(timeout <= Date.now() - start) {\r\n                        rej(\r\n                            new Error(`Failed to load font '${ \r\n                                fontString \r\n                            }' request timed out after ${ \r\n                                timeout \r\n                            }ms.`)\r\n                        );\r\n                    } else {\r\n                        fonts.load(fontString).then((fontList: Array<any>) => {\r\n                            if(0 < fontList.length) {\r\n                                let result = fonts.check(fontString);\r\n                                if(result) {\r\n                                    set(fontString, new Font(descriptor));\r\n                                }\r\n                                res(result);\r\n                            } else {\r\n                                setTimeout(fetch, 50);\r\n                            }\r\n                        }, rej);\r\n                    }\r\n                })()\r\n            })\r\n            // Create timer\r\n            let timeoutId;\r\n            let timer = new Promise<boolean>((_, rej) => {\r\n                timeoutId = setTimeout(\r\n                    () => rej(\r\n                        new Error(`Failed to load font '${ \r\n                            fontString \r\n                        }' request timed out after ${ \r\n                            timeout \r\n                        }ms.`)\r\n                    ),\r\n                    timeout\r\n                );\r\n            })\r\n            // Wait for either the loader or the timer to resolve\r\n            let result = await Promise.race([load, timer]);\r\n            // Clear timeout and complete request\r\n            clearTimeout(timeoutId);\r\n            return result;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Converts a FontDescriptor into a CSS font string.\r\n     * @param font\r\n     *  The font to evaluate.\r\n     * @returns\r\n     *  The FontDescriptor as a CSS font string.\r\n     */\r\n    public static getCssFontString(font: FontDescriptor): string {\r\n        return `${ font.weight ?? 400 } ${ font.size } ${ font.family }`\r\n    }\r\n\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  2. Font  //////////////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport class Font { \r\n\r\n    /**\r\n     * The default character to width index.\r\n     */\r\n    private static DEFAULT_INDEX: string = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\\t \";\r\n\r\n    /**\r\n     * The font's whitespace regex.\r\n     */\r\n    private static WHITESPACE: RegExp = /(\\s+)/;\r\n\r\n    /**\r\n     * The font's internal context.\r\n     */\r\n    private _ctx: CanvasRenderingContext2D;\r\n\r\n    /**\r\n     * The font's internal character to width index.\r\n     */\r\n    private _widthIndex: Map<string, number>\r\n\r\n    /**\r\n     * The font's css string.\r\n     */\r\n    public css: string;\r\n\r\n    /**\r\n     * The font's descriptor.\r\n     */\r\n    public descriptor: FontDescriptor\r\n    \r\n\r\n    /**\r\n     * Creates a new {@link FontFamily}.\r\n     * @param descriptor\r\n     *  The font's descriptor.\r\n     */\r\n    constructor(descriptor: FontDescriptor) {\r\n        this.css = FontStore.getCssFontString(descriptor);\r\n        this.descriptor = descriptor;\r\n        this._ctx = document.createElement(\"canvas\").getContext(\"2d\")!;\r\n        this._ctx.font = this.css;\r\n        this._widthIndex = new Map();\r\n        for(let char of Font.DEFAULT_INDEX) {\r\n            this._widthIndex.set(char, this.measureWidth(char));\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Returns the width of the given text.\r\n     * @param text\r\n     *  The text to measure.\r\n     * @returns\r\n     *  The width of the text (in pixels).\r\n     * @throws { Error }\r\n     *  If `font` has not been loaded.\r\n     */\r\n    public measureWidth(text: string): number {\r\n        if((document as any).fonts.check(this.css)) {\r\n            return this._ctx.measureText(text).width;\r\n        } else {\r\n            throw new Error(`The font '${ \r\n                this.css \r\n            }' has not been loaded. The width of '${ \r\n                text \r\n            }' cannot be measured.`)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the width and height of the given text.\r\n     * @param text\r\n     *  The text to measure.\r\n     * @returns\r\n     *  The width and height of the text (in pixels).\r\n     * @throws { Error }\r\n     *  If `font` has not been loaded.\r\n     */\r\n    public measure(text: string): { width: number, ascent: number, descent: number } {\r\n        if((document as any).fonts.check(this.css)) {\r\n            let m = this._ctx.measureText(text);\r\n            return {\r\n                width: m.width,\r\n                ascent: m.actualBoundingBoxAscent,\r\n                descent: m.actualBoundingBoxDescent\r\n            };\r\n        } else {\r\n            throw new Error(`The font '${ \r\n                this.css \r\n            }' has not been loaded. The width of '${ \r\n                text \r\n            }' cannot be measured.`)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the width of a character.\r\n     * @param char\r\n     *  The character.\r\n     * @returns\r\n     *  The character's width.\r\n     */\r\n    public getCharWidth(char: string): number {\r\n        if(!this._widthIndex.has(char)) {\r\n            this._widthIndex.set(char, this.measureWidth(char));\r\n        }\r\n        return this._widthIndex.get(char)!;\r\n    }\r\n\r\n    /**\r\n     * Segments a string into lines no longer than the specified width.\r\n     * @param text\r\n     *  The text to wrap.\r\n     * @param width\r\n     *  The maximum width allowed.\r\n     * @returns\r\n     *  The segmented lines.\r\n     */\r\n    public wordWrap(text: string, width: number): string[] {\r\n        let lines = text.trim().split(/\\n/);\r\n        let segments: (string[] | string)[] = [];\r\n        for(let i = 0; i < lines.length; i++) {\r\n            if(lines[i]) {\r\n                segments[i] = this.lineWrap(lines[i], width);\r\n            } else {\r\n                segments[i] = lines[i]\r\n            }\r\n        }\r\n        return segments.flat();\r\n    }\r\n\r\n    /**\r\n     * Segments a line of text into lines no longer than the specified width.\r\n     * @param text\r\n     *  A single line of text. (i.e. Text has no newline characters.)\r\n     * @param width\r\n     *  The maximum width allowed.\r\n     * @returns\r\n     *  The segmented lines.\r\n     */\r\n    private lineWrap(text: string, width: number): string[] {\r\n        let line = \"\";\r\n        let lineWidth = 0;\r\n        let segments: string[] = [];\r\n        let tokens = text.split(Font.WHITESPACE).filter(Boolean);\r\n        let whitespaceParity = Font.WHITESPACE.test(tokens[0]) ? 0 : 1;\r\n        for(let i = 0; i < tokens.length; i++) {\r\n            let tokenWidth = this.measureWidth(tokens[i]);\r\n            \r\n            // Add Whitespace\r\n            if(i % 2 === whitespaceParity) {\r\n                line += tokens[i];\r\n                lineWidth += tokenWidth;\r\n                continue;\r\n            }\r\n            \r\n            // Add Word\r\n            if(width < lineWidth + tokenWidth) {\r\n                if(i !== 0) {\r\n                    // Finish line\r\n                    segments.push(line.trimEnd());\r\n                    // Reset line\r\n                    line = \"\";\r\n                    lineWidth = 0;\r\n                }\r\n                if(width < tokenWidth) {\r\n                    // Wrap token\r\n                    let word = tokens[i];\r\n                    for(let j = 0; j < word.length; j++) {\r\n                        tokenWidth = this.getCharWidth(word[j]);\r\n                        if(j !== 0 && width < lineWidth + tokenWidth) {\r\n                            // Finish line\r\n                            segments.push(line);\r\n                            // Reset line\r\n                            line = \"\";\r\n                            lineWidth = 0;\r\n                        }\r\n                        line += word[j];\r\n                        lineWidth += tokenWidth;\r\n                    }\r\n                    // Move onto next token\r\n                    continue;\r\n                }\r\n            }\r\n            line += tokens[i];\r\n            lineWidth += tokenWidth;\r\n\r\n        }\r\n        segments.push(line.trimEnd());\r\n        return segments;\r\n    }\r\n\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  3. FontDescriptor  ////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport type FontDescriptor = {\r\n    size: string,\r\n    family: string,\r\n    weight?: number,\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  4. GlobalFontStore  ///////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport const GlobalFontStore = new FontStore();\r\n","///////////////////////////////////////////////////////////////////////////////\r\n//  1. General  ///////////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n/**\r\n * Bounds a number within a specified range.\r\n * \r\n * **Example**\r\n * \r\n * - `clamp(41, 0, 100)` returns `41`. \r\n * - `clamp(-120, 0, 100)` returns `0`.\r\n * - `clamp(231, 0, 100)` returns `100`.\r\n * \r\n * @param n\r\n *  The number to bound.\r\n * @param min\r\n *  The range's lower bound.\r\n * @param max\r\n *  The range's upper bound.\r\n * @returns\r\n *  The number's bounded value.\r\n */\r\nexport function clamp(n: number, min: number, max: number): number {\r\n    return Math.min(Math.max(n, min), max);\r\n}\r\n\r\n/**\r\n * Rounds a number to the nearest multiple.\r\n * @param n\r\n *  The number to round.\r\n * @param multiple\r\n *  The multiple.\r\n * @returns\r\n *  The number rounded to the nearest multiple.\r\n */\r\nexport function round(n: number, multiple: number): number {\r\n    return Math.sign(n) * Math.round(Math.abs(n) / multiple) * multiple;\r\n}\r\n\r\n/**\r\n * Checks if two floats are equal up to the specified decimal place.\r\n * @param a\r\n *  The first number to compare.\r\n * @param b\r\n *  The second number to compare.\r\n * @param decimals\r\n *  The number of decimal places.\r\n *  (Default: 5)\r\n */\r\nexport function floatEq(a: number, b: number, decimals: number = 5) {\r\n    let m = 10 ** decimals;\r\n    return Math.floor(a * m) === Math.floor(b * m); \r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  2. Bit Functions  /////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n/**\r\n * Generates an enum's bit mask.\r\n * @param obj\r\n *  The enum to evaluate.\r\n * @returns\r\n *  The enum's bit mask.\r\n */\r\nexport function generateBitMask(obj: { [key: string]: number }): number {\r\n    let mask = 0;\r\n    for (let bit in obj)\r\n        mask |= obj[bit];   \r\n    return mask;\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  3. Geometry  //////////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n/**\r\n * Calculates a line's hitbox.\r\n * @param x0\r\n *  The x coordinate of the 1st point.\r\n * @param y0\r\n *  The y coordinate of the 1st point.\r\n * @param x1\r\n *  The x coordinate of the 2nd point.\r\n * @param y1\r\n *  The y coordinate of the 2nd point.\r\n * @param width\r\n *  The width of the hitbox.\r\n * @returns\r\n *  The set of vertices that define the hitbox region.\r\n */\r\nexport function getLineHitbox(x0: number, y0: number, x1: number, y1: number, width: number): number[] {\r\n    let w = width / 2;\r\n    let vx = x1 - x0;\r\n    let vy = y1 - y0;\r\n    let angle = Math.acos(vx / Math.sqrt(vx**2 + vy**2));\r\n    let dx = w * Math.sin(angle);\r\n    let dy = w * Math.cos(angle);\r\n    return [\r\n        x0 - dx, y0 - dy,\r\n        x0 + dx, y0 + dy,\r\n        x1 + dx, y1 + dy,\r\n        x1 - dx, y1 - dy,\r\n    ]\r\n}\r\n\r\n/**\r\n * Tests if the given point lies inside the given region.\r\n * @param x\r\n *  The x coordinate.\r\n * @param y\r\n *  The y coordinate.\r\n * @param vertices\r\n *  The vertices that define the region. \r\n */\r\nexport function isInsideRegion(x: number, y: number, vertices: number[]) {\r\n    // If polygon\r\n    let minX = Infinity;\r\n    let minY = Infinity;\r\n    let maxX = -Infinity;\r\n    let maxY = -Infinity;\r\n    for(let i = 0; i < vertices.length; i += 2) {\r\n        minX = Math.min(minX, vertices[i]);\r\n        minY = Math.min(minY, vertices[i + 1]);\r\n        maxX = Math.max(maxX, vertices[i]);\r\n        maxY = Math.max(maxY, vertices[i + 1]);\r\n    }\r\n    if(minX < x && x < maxX && minY < y && y < maxY) {\r\n        // Compute intersection vector\r\n        let v1x0 = x;\r\n        let v1y0 = y;\r\n        let v1x1 = maxX + 1;\r\n        let v1y1 = y\r\n        // Computer vector intersections\r\n        let totalIntersections = 0;\r\n        let len = vertices.length;\r\n        for(let i = 0; i < len; i += 2) {\r\n            let intersection = doVectorsIntersect(\r\n                v1x0, v1y0, v1x1, v1y1, \r\n                vertices[i], vertices[i + 1], \r\n                vertices[(i + 2) % len], vertices[(i + 3) % len]\r\n            );\r\n            if(intersection) totalIntersections++;\r\n        }\r\n        return totalIntersections % 2 !== 0;\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * Tests if the given point lies inside the given shape.\r\n * @param x\r\n *  The point's x coordinate.\r\n * @param y\r\n *  The point's y coordinate.\r\n * @param sx\r\n *  The shape's x coordinate.\r\n * @param sy\r\n *  The shape's y coordinate.\r\n * @param vertices\r\n *  The shape's vertices relative to (0,0). \r\n * @returns\r\n *  True if the point lines inside the shape, false otherwise.\r\n */\r\nexport function isInsideShape(\r\n    x: number, y: number, sx: number, sy: number, vertices: number[]\r\n): boolean {\r\n\r\n    // If circle\r\n    if(vertices.length === 1) {\r\n        let dx = x - sx;\r\n        let dy = y - sy;\r\n        let r = vertices[0];\r\n        return dx * dx + dy * dy < r * r\r\n    }\r\n    \r\n    // If polygon\r\n    let minX = Infinity;\r\n    let minY = Infinity;\r\n    let maxX = -Infinity;\r\n    let maxY = -Infinity;\r\n    let txVertices = [];\r\n    for(let i = 0, vx, vy; i < vertices.length; i += 2) {\r\n        vx = sx + vertices[i];\r\n        vy = sy + vertices[i + 1];\r\n        minX = Math.min(minX, vx);\r\n        minY = Math.min(minY, vy);\r\n        maxX = Math.max(maxX, vx);\r\n        maxY = Math.max(maxY, vy);\r\n        txVertices.push(vx, vy);\r\n    }\r\n    if(minX < x && x < maxX && minY < y && y < maxY) {\r\n        // Compute intersection vector\r\n        let v1x0 = x;\r\n        let v1y0 = y;\r\n        let v1x1 = maxX + 1;\r\n        let v1y1 = y\r\n        // Computer vector intersections\r\n        let totalIntersections = 0;\r\n        let len = txVertices.length;\r\n        for(let i = 0; i < len; i += 2) {\r\n            let intersection = doVectorsIntersect(\r\n                v1x0, v1y0, v1x1, v1y1, \r\n                txVertices[i], txVertices[i + 1], \r\n                txVertices[(i + 2) % len], txVertices[(i + 3) % len]\r\n            );\r\n            if(intersection) totalIntersections++;\r\n        }\r\n        return totalIntersections % 2 !== 0;\r\n    }\r\n    return false;\r\n\r\n}\r\n\r\n/**\r\n * Tests if two vectors intersect. Collinear vectors do not intersect.\r\n * @param v1x0\r\n *  Vector 1's x0 coordinate.\r\n * @param v1y0 \r\n *  Vector 1's y0 coordinate.\r\n * @param v1x1\r\n *  Vector 1's x1 coordinate.\r\n * @param v1y1\r\n *  Vector 1's y1 coordinate.\r\n * @param v2x0\r\n *  Vector 2's x0 coordinate.\r\n * @param v2y0\r\n *  Vector 2's y0 coordinate.\r\n * @param v2x1 \r\n *  Vector 2's x1 coordinate.\r\n * @param v2y1 \r\n *  Vector 2's y1 coordinate.\r\n * @returns\r\n *  True if the vectors intersect, false otherwise.\r\n */\r\nexport function doVectorsIntersect(\r\n    v1x0: number, v1y0: number, \r\n    v1x1: number, v1y1: number, \r\n    v2x0: number, v2y0: number,\r\n    v2x1: number, v2y1: number\r\n): boolean {\r\n    let a1, b1, c1, a2, b2, c2, d1, d2;\r\n    // Test vector 2 on 1\r\n    a1 = v1y0 - v1y1;\r\n    b1 = v1x1 - v1x0;\r\n    c1 = (v1x0 * v1y1) - (v1x1 * v1y0)\r\n    d1 = (a1 * v2x0) + (b1 * v2y0) + c1;\r\n    d2 = (a1 * v2x1) + (b1 * v2y1) + c1;\r\n    if(d1 < 0 && d2 < 0 || d1 > 0 && d2 > 0)\r\n        return false;\r\n    // Test vector 1 on 2\r\n    a2 = v2y0 - v2y1;\r\n    b2 = v2x1 - v2x0;\r\n    c2 = (v2x0 * v2y1) - (v2x1 * v2y0)\r\n    d1 = (a2 * v1x0) + (b2 * v1y0) + c2;\r\n    d2 = (a2 * v1x1) + (b2 * v1y1) + c2;\r\n    if(d1 < 0 && d2 < 0 || d1 > 0 && d2 > 0)\r\n        return false;\r\n    // If Collinear\r\n    if ((a1 * b2) - (a2 * b1) == 0) \r\n        return false;\r\n    return true;\r\n}\r\n","/**\r\n * Computes the hash of a string using Java's `hashCode()` function.\r\n * @param string\r\n *  The string to hash.\r\n * @returns\r\n *  The string's hash.\r\n */\r\nexport function computeHash(string: string): number {\r\n    let hash = 0;\r\n    if (string.length === 0)\r\n        return hash;\r\n    for (let i = 0; i < string.length; i++) {\r\n        hash = ((hash << 5) - hash) + string.charCodeAt(i);\r\n        hash |= 0; // Convert to 32-bit integer\r\n    }\r\n    return hash;\r\n}\r\n\r\n/**\r\n * Capitalizes the first letter in a string.\r\n * @param text\r\n *  The string to capitalize.\r\n * @returns\r\n *  The capitalized string.\r\n */\r\nexport function capitalize(text: string): string {\r\n    return text ? `${ text[0].toLocaleUpperCase() }${ text.substring(1) }` : \"\"\r\n}\r\n\r\n/**\r\n * Casts a string to title case.\r\n * \r\n * ex. \"foo_bar\" -> \"Foo Bar\" \r\n * \r\n * @param text\r\n *  The string to cast to title case.\r\n * @returns\r\n *  The string cast to title case.\r\n */\r\nexport function titleCase(text: string): string {\r\n    return text.split(/\\s+|_/).map(s => capitalize(s)).join(\" \");\r\n}\r\n","export enum MouseClick { \r\n    Left   = 0, \r\n    Middle = 1,\r\n    Right  = 2\r\n}\r\n","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./TextField.vue?vue&type=style&index=0&id=1212d968&scoped=true&lang=css\"","import { createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-2d69016e\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = [\"fill\"]\nconst _hoisted_2 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"path\", {\n  d: \"m2.1167 0-1.0583 1.3229-1.0583-1.3229z\",\n  \"stroke-width\": \"0\"\n}, null, -1))\nconst _hoisted_3 = [\n  _hoisted_2\n]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"svg\", {\n    width: \"8\",\n    height: \"5\",\n    fill: _ctx.color,\n    class: _normalizeClass({ collapsed: _ctx.collapsed }),\n    version: \"1.1\",\n    viewBox: \"0 0 2.1167 1.3229\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, _hoisted_3, 10, _hoisted_1))\n}","\r\nimport { defineComponent } from \"vue\";\r\n\r\nexport default defineComponent({\r\n  name: \"CollapseArrow\",\r\n  props: {\r\n    collapsed: {\r\n      type: Boolean,\r\n      default: false \r\n    },\r\n    color: {\r\n      type: String,\r\n      default: \"#8c8c8c\"\r\n    }\r\n  }\r\n});\r\n","import { render } from \"./CollapseArrow.vue?vue&type=template&id=2d69016e&scoped=true&ts=true\"\nimport script from \"./CollapseArrow.vue?vue&type=script&lang=ts\"\nexport * from \"./CollapseArrow.vue?vue&type=script&lang=ts\"\n\nimport \"./CollapseArrow.vue?vue&type=style&index=0&id=2d69016e&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\mcarenzo\\\\Desktop\\\\attack-flow-builder - Copy\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2d69016e\"]])\n\nexport default __exports__","import { generateBitMask } from \"./Utilities\";\r\nimport { SemanticRole as SemanticRoleEnum } from \"./DiagramFactory\";\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  1. Attributes  ////////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport const Alignment = {\r\n    Free       : 0b000000000000000,\r\n    Grid       : 0b000000000000001\r\n}\r\nexport const AlignmentMask = generateBitMask(Alignment);\r\n\r\nexport const Cursor = {\r\n    Default    : 0b000000000000000,\r\n    Pointer    : 0b000000000000010,\r\n    Crosshair  : 0b000000000000100,\r\n    Move       : 0b000000000000110,\r\n    NotAllowed : 0b000000000001000,\r\n    Grab       : 0b000000000001010,\r\n    Grabbing   : 0b000000000001100,\r\n    N_Resize   : 0b000000000001110,\r\n    E_Resize   : 0b000000000010000,\r\n    S_Resize   : 0b000000000010010,\r\n    W_Resize   : 0b000000000010100,\r\n    EW_Resize  : 0b000000000010110,\r\n    NS_Resize  : 0b000000000011000,\r\n    Col_Resize : 0b000000000011010,\r\n    Row_Resize : 0b000000000011100\r\n}\r\nexport const CursorMask = generateBitMask(Cursor);\r\n\r\nexport const Hover = {\r\n    Off        : 0b000000000000000,\r\n    Direct     : 0b000000000100000,\r\n    Indirect   : 0b000000001000000\r\n}\r\nexport const HoverMask = generateBitMask(Hover);\r\n\r\nexport const InheritAlignment = {\r\n    False      : 0b000000000000000,\r\n    True       : 0b000000010000000\r\n}\r\nexport const InheritAlignmentMask = generateBitMask(InheritAlignment);\r\n\r\nexport const PositionSetByUser = {\r\n    False      : 0b000000000000000,\r\n    True       : 0b000000100000000\r\n}\r\nexport const PositionSetByUserMask = generateBitMask(PositionSetByUser);\r\n\r\nexport const Priority = {\r\n    Normal     : 0b000001000000000,\r\n    High       : 0b000010000000000\r\n}\r\nexport const PriorityMask = generateBitMask(Priority);\r\n\r\nexport const Select = {\r\n    False      : 0b000000000000000,\r\n    True       : 0b000100000000000,\r\n}\r\nexport const SelectMask = generateBitMask(Select);\r\n\r\nconst SemanticRole = {\r\n    None       : SemanticRoleEnum.None,\r\n    Node       : SemanticRoleEnum.Node,\r\n    Edge       : SemanticRoleEnum.Edge,\r\n    EdgeSource : SemanticRoleEnum.EdgeSource,\r\n    EdgeTarget : SemanticRoleEnum.EdgeTarget\r\n}\r\nexport const SemanticRoleMask = generateBitMask(SemanticRole);\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  2. Attribute Maps  ////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport const CursorCssName = {\r\n    [Cursor.Default]    : \"default\",\r\n    [Cursor.Pointer]    : \"pointer\",\r\n    [Cursor.Crosshair]  : \"crosshair\",\r\n    [Cursor.Move]       : \"move\",\r\n    [Cursor.NotAllowed] : \"not-allowed\",\r\n    [Cursor.Grab]       : \"grab\",\r\n    [Cursor.Grabbing]   : \"grabbing\",\r\n    [Cursor.N_Resize]   : \"n-resize\",\r\n    [Cursor.E_Resize]   : \"e-resize\",\r\n    [Cursor.S_Resize]   : \"s-resize\",\r\n    [Cursor.W_Resize]   : \"w-resize\",\r\n    [Cursor.EW_Resize]  : \"ew-resize\",\r\n    [Cursor.NS_Resize]  : \"ns-resize\",\r\n    [Cursor.Col_Resize] : \"col-resize\",\r\n    [Cursor.Row_Resize] : \"row-resize\"\r\n}\r\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./AppTitleBar.vue?vue&type=style&index=0&id=1e6f5773&scoped=true&lang=css\"","import { SemanticRole } from \"../DiagramFactory\";\r\nimport { GraphExport, GraphObjectExport } from \"./GraphExportTypes\";\r\nimport { DiagramAnchorableModel, DiagramObjectModel } from \"../DiagramModelTypes\";\r\n\r\nexport class SemanticAnalyzer {\r\n\r\n    /**\r\n     * Derives a graph from a diagram object.\r\n     * @param object\r\n     *  The diagram object.\r\n     * @returns\r\n     *  The graph's edges and nodes.\r\n     */\r\n    public static toGraph(object: DiagramObjectModel): GraphExport {\r\n        let array: GraphObjectExport[];\r\n        let edges: GraphObjectExport[] = [];\r\n        let nodes: GraphObjectExport[] = [];\r\n        for(let obj of object.getSubtree()) {    \r\n            // Pick array\r\n            switch(obj.getSemanticRole()) {\r\n                case SemanticRole.Node:\r\n                    array = nodes;\r\n                    break;\r\n                case SemanticRole.Edge:\r\n                    array = edges;\r\n                    break;\r\n                default:\r\n                    continue;\r\n            }\r\n            // Export object\r\n            array.push({\r\n                id: obj.id,\r\n                template: obj.template,\r\n                data: obj.props,\r\n                prev: this.getPrevGraphLinks(obj).map(o => o.id),\r\n                next: this.getNextGraphLinks(obj).map(o => o.id)\r\n            });\r\n            \r\n        }\r\n        return { edges, nodes }\r\n    }\r\n\r\n    /**\r\n     * Traverses a diagram object and derives the next set of diagram objects\r\n     * as if it were a graph. The object must be a\r\n     * {@link SemanticRole.Node Node} or an {@link SemanticRole.Edge Edge}.\r\n     * @param object\r\n     *  The diagram object.\r\n     * @returns\r\n     *  The next set of diagram objects.\r\n     */\r\n    public static getNextGraphLinks(object: DiagramObjectModel): DiagramObjectModel[] {\r\n        switch(object.getSemanticRole()) {\r\n            case SemanticRole.Edge:\r\n                return this.getNodes(this.getEdgeTargetsFor(object));\r\n            case SemanticRole.Node:\r\n                return this.getEdges(this.getEdgeSourcesFor(object));\r\n            default:\r\n                return [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Traverses a diagram object and derives the previous set of diagram\r\n     * objects as if it were a graph. The object must be a\r\n     * {@link SemanticRole.Node Node} or an {@link SemanticRole.Edge Edge}.\r\n     * @param object\r\n     *  The diagram object.\r\n     * @returns\r\n     *  The previous set of diagram objects.\r\n     */\r\n    public static getPrevGraphLinks(object: DiagramObjectModel): DiagramObjectModel[] {\r\n        switch(object.getSemanticRole()) {\r\n            case SemanticRole.Edge:\r\n                return this.getNodes(this.getEdgeSourcesFor(object));\r\n            case SemanticRole.Node:\r\n                return this.getEdges(this.getEdgeTargetsFor(object));\r\n            default:\r\n                return [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Resolves all {@link SemanticRole.Node Node} objects from a list of\r\n     * {@link SemanticRole.EdgeSource EdgeSource} or \r\n     * {@link SemanticRole.EdgeTarget EdgeTarget} objects.\r\n     * @param objects\r\n     *  The diagram objects.\r\n     * @returns\r\n     *  The semantic nodes.\r\n     */\r\n    private static getNodes(objects: DiagramObjectModel[]): DiagramObjectModel[] {\r\n        let nodes = [];\r\n        for(let obj of objects) {\r\n            let node = this.getNode(obj);\r\n            if(node) {\r\n                nodes.push(node);\r\n            }\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    /**\r\n     * Resolves the {@link SemanticRole.Node Node} of a\r\n     * {@link SemanticRole.EdgeSource EdgeSource} or\r\n     * {@link SemanticRole.EdgeTarget EdgeTarget} object.\r\n     * @param object\r\n     *  The diagram object.\r\n     * @returns\r\n     *  The semantic node, `undefined` if there wasn't one.\r\n     */\r\n    private static getNode(object: DiagramObjectModel): DiagramObjectModel | undefined {\r\n        if(\r\n            !(object instanceof DiagramAnchorableModel) ||\r\n            (\r\n                !object.hasRole(SemanticRole.EdgeSource) &&\r\n                !object.hasRole(SemanticRole.EdgeTarget)\r\n            )\r\n        ) {\r\n            return undefined;\r\n        }\r\n        // Traverse anchor chain looking for a node\r\n        let p: DiagramObjectModel | undefined = object.anchor;\r\n        while(p) {\r\n            if(p.hasRole(SemanticRole.Node)) {\r\n                return p;\r\n            }\r\n            p = p.parent;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Resolves all {@link SemanticRole.Edge Edge} objects from a list of\r\n     * {@link SemanticRole.EdgeSource EdgeSource} or \r\n     * {@link SemanticRole.EdgeTarget EdgeTarget} objects.\r\n     * @param objects\r\n     *  The diagram objects.\r\n     * @returns\r\n     *  The semantic edges.\r\n     */\r\n    private static getEdges(objects: DiagramObjectModel[]): DiagramObjectModel[] {\r\n        let edges = [];\r\n        for(let obj of objects) {\r\n            let edge = this.getEdge(obj);\r\n            if(edge) {\r\n                edges.push(edge);\r\n            }\r\n        }\r\n        return edges;\r\n    }\r\n\r\n    /**\r\n     * Resolves the {@link SemanticRole.Edge Edge} of a\r\n     * {@link SemanticRole.EdgeSource EdgeSource} or\r\n     * {@link SemanticRole.EdgeTarget EdgeTarget} object.\r\n     * @param object\r\n     *  The diagram object.\r\n     * @returns\r\n     *  The semantic edge, `undefined` if there wasn't one.\r\n     */\r\n    private static getEdge(object: DiagramObjectModel): DiagramObjectModel | undefined {\r\n        if(\r\n            !object.hasRole(SemanticRole.EdgeSource) && \r\n            !object.hasRole(SemanticRole.EdgeTarget)\r\n        ) {\r\n            return undefined;\r\n        }\r\n        // Traverse parent chain looking for an edge\r\n        let p: DiagramObjectModel | undefined = object.parent;\r\n        while(p) {\r\n            if(p.hasRole(SemanticRole.Edge)) {\r\n                return p;\r\n            }\r\n            p = p.parent;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Resolves all {@link SemanticRole.EdgeSource EdgeSource} objects from a\r\n     * list of {@link SemanticRole.Edge Edge} or {@link SemanticRole.Node Node}\r\n     * objects.\r\n     * @param objects\r\n     *  The diagram objects.\r\n     * @returns\r\n     *  The semantic edge sources.\r\n     */\r\n    private static getEdgeSources(objects: DiagramObjectModel[]): DiagramObjectModel[] {\r\n        let edgeSources: DiagramObjectModel[] = []\r\n        for(let obj of objects) {\r\n            edgeSources = edgeSources.concat(this.getEdgeSourcesFor(obj));\r\n        }\r\n        return edgeSources;\r\n    }\r\n\r\n    /**\r\n     * Resolves all {@link SemanticRole.EdgeSource EdgeSource} objects from an \r\n     * {@link SemanticRole.Edge Edge} or {@link SemanticRole.Node Node} object.\r\n     * @param object\r\n     *  The diagram object.\r\n     * @returns\r\n     *  The semantic edge sources.\r\n     */\r\n    private static getEdgeSourcesFor(object: DiagramObjectModel): DiagramObjectModel[] {\r\n        if(\r\n            !object.hasRole(SemanticRole.Edge) &&\r\n            !object.hasRole(SemanticRole.Node)\r\n        ) {\r\n            return [];\r\n        }\r\n        let stack = [object];\r\n        let sources = [];\r\n        while(stack.length) {\r\n            let obj = stack.pop()!;\r\n            if(obj.hasRole(SemanticRole.EdgeSource)) {\r\n                sources.push(obj);\r\n                continue;\r\n            }\r\n            for(let child of obj.children) {\r\n                stack.push(child);\r\n            }\r\n        }\r\n        return sources;\r\n    }\r\n\r\n    /**\r\n     * Resolves all {@link SemanticRole.EdgeTarget EdgeTarget} objects from a\r\n     * list of {@link SemanticRole.Edge Edge} or {@link SemanticRole.Node Node}\r\n     * objects.\r\n     * @param objects\r\n     *  The diagram objects.\r\n     * @returns\r\n     *  The semantic edge targets.\r\n     */\r\n    private static getEdgeTargets(objects: DiagramObjectModel[]): DiagramObjectModel[] {\r\n        let edgeTargets: DiagramObjectModel[] = []\r\n        for(let obj of objects) {\r\n            edgeTargets = edgeTargets.concat(this.getEdgeTargetsFor(obj));\r\n        }\r\n        return edgeTargets;\r\n    }\r\n\r\n    /**\r\n     * Resolves all {@link SemanticRole.EdgeTarget EdgeTarget} objects from an \r\n     * {@link SemanticRole.Edge Edge} or {@link SemanticRole.Node Node} object.\r\n     * @param object\r\n     *  The diagram object.\r\n     * @returns\r\n     *  The semantic edge targets.\r\n     */\r\n    private static getEdgeTargetsFor(object: DiagramObjectModel): DiagramObjectModel[] {\r\n        if(\r\n            !object.hasRole(SemanticRole.Edge) &&\r\n            !object.hasRole(SemanticRole.Node)\r\n        ) {\r\n            return [];\r\n        }\r\n        let stack = [object];\r\n        let targets = [];\r\n        while(stack.length) {\r\n            let obj = stack.pop()!;\r\n            if(obj.hasRole(SemanticRole.EdgeTarget)) {\r\n                targets.push(obj);\r\n                continue;\r\n            }\r\n            for(let child of obj.children) {\r\n                stack.push(child);\r\n            }\r\n        }\r\n        return targets;\r\n    }\r\n\r\n}\r\n","import { DiagramObjectModel, PageModel } from \"./DiagramModelTypes\";\r\nimport { RasterCache } from \"./DiagramElement/RasterCache\";\r\nimport { ViewportRegion } from \"./DiagramElement\";\r\nimport { Hover, Select } from \"./Attributes\";\r\n\r\nexport class PageImage {\r\n\r\n    /**\r\n     * The page.\r\n     */\r\n    private _page: PageModel;\r\n\r\n    /**\r\n     * The image's padding.\r\n     */\r\n    private _padding: number;\r\n\r\n    /**\r\n     * If the grid should be displayed or not.\r\n     */\r\n    private _showGrid: boolean;\r\n\r\n    /**\r\n     * If shadow's should be displayed or not.\r\n     */\r\n    private _showShadows: boolean;\r\n     \r\n    /**\r\n     * If debug information should be displayed or not.\r\n     */\r\n    private _showDebug: boolean;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link PageImage}.\r\n     * @param page\r\n     *  The page to image.\r\n     * @param padding\r\n     *  The image's padding.\r\n     * @param showGrid\r\n     *  If the grid should be displayed or not.\r\n     *  (Default: true)\r\n     * @param showShadows\r\n     *  If shadow's should be displayed or not.\r\n     *  (Default: true)\r\n     * @param showDebug\r\n     *  If debug information should be displayed or not.\r\n     *  (Default: false)\r\n     */\r\n    constructor(\r\n        page: PageModel,\r\n        padding: number = 30,\r\n        showGrid: boolean = true,\r\n        showShadows: boolean = true,\r\n        showDebug: boolean = false\r\n    ) {\r\n        this._page = page;\r\n        this._padding = padding;\r\n        this._showGrid = showGrid;\r\n        this._showShadows = showShadows;\r\n        this._showDebug = showDebug;\r\n    }\r\n\r\n\r\n    /**\r\n     * Returns an image of the page.\r\n     * @returns\r\n     *  The generated image.\r\n     */\r\n    public capture(): HTMLCanvasElement;\r\n\r\n    /**\r\n     * Returns an image of the page focused on a region of objects.\r\n     * @param objs\r\n     *  The objects that define the region.\r\n     * @returns\r\n     *  The generated image.\r\n     */\r\n    public capture(objs?: DiagramObjectModel[]): HTMLCanvasElement;\r\n    public capture(objs?: DiagramObjectModel[]): HTMLCanvasElement {\r\n        \r\n        // Calculate region\r\n        let xMin, yMin, xMax, yMax;\r\n        if(objs?.length) {\r\n            xMin = Infinity;\r\n            yMin = Infinity;\r\n            xMax = -Infinity;\r\n            yMax = -Infinity;\r\n            for(let obj of objs) {\r\n                xMin = Math.min(xMin, obj.boundingBox.xMin);\r\n                yMin = Math.min(yMin, obj.boundingBox.yMin);\r\n                xMax = Math.max(xMax, obj.boundingBox.xMax);\r\n                yMax = Math.max(yMax, obj.boundingBox.yMax);\r\n            }\r\n        } else {\r\n            xMin = this._page.boundingBox.xMin;\r\n            yMin = this._page.boundingBox.yMin;\r\n            xMax = this._page.boundingBox.xMax;\r\n            yMax = this._page.boundingBox.yMax;\r\n        }\r\n        \r\n        // Create view\r\n        let cache = new RasterCache();\r\n        let view = this._page.createView(cache);\r\n        view.updateView();\r\n        \r\n        // Configure canvas\r\n        let can = document.createElement(\"canvas\");\r\n        can.width  = Math.round(xMax - xMin) + (this._padding * 2);\r\n        can.height = Math.round(yMax - yMin) + (this._padding * 2);\r\n        \r\n        // Configure context\r\n        let ctx = can.getContext(\"2d\")!;\r\n        ctx.setTransform(\r\n            1, 0, 0, 1, \r\n            -xMin + this._padding,\r\n            -yMin + this._padding\r\n        );\r\n\r\n        // Configure viewport\r\n        let viewport = new ViewportRegion();\r\n        viewport.xMin = xMin - this._padding;\r\n        viewport.yMin = yMin - this._padding;\r\n        viewport.xMax = xMax + this._padding;\r\n        viewport.yMax = yMax + this._padding;\r\n\r\n        // Cache and clear visual attributes\r\n        let attrCache = new Map<DiagramObjectModel, number>();\r\n        let attrObjs = this._page.getSubtree(\r\n            o => o.isHoveredOrSelected()\r\n        );\r\n        for(let obj of attrObjs) {\r\n            attrCache.set(obj, obj.attrs);\r\n            obj.setSelect(Select.False);\r\n            obj.setHover(Hover.Off);\r\n        }\r\n\r\n        // Render image\r\n        view.renderPageSurfaceTo(ctx, viewport, this._showGrid);\r\n        if(this._showShadows) {\r\n            view.renderTo(ctx, viewport);\r\n        } else {\r\n            view.renderTo(ctx, viewport, 0, 0);\r\n        }\r\n        if(this._showDebug) {\r\n            view.renderDebugTo(ctx, viewport);\r\n        }\r\n\r\n        // Restore visual attributes\r\n        for(let [obj, attrs] of attrCache) {\r\n            obj.attrs = attrs;\r\n        }\r\n\r\n        // Return image\r\n        return can;\r\n\r\n    }\r\n\r\n}\r\n","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./EnumField.vue?vue&type=style&index=0&id=2178b796&scoped=true&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./TitleBar.vue?vue&type=style&index=0&id=63eba18e&scoped=true&lang=css\"","export class DiagramFactoryError extends Error {\r\n\r\n    /**\r\n     * Creates a new {@link DiagramFactoryError}.\r\n     * @param message\r\n     *  The error message.\r\n     */\r\n    constructor(message: string) {\r\n        super(message);\r\n    } \r\n\r\n}","import { RootPropertyDescriptor } from \"../Property\";\r\nimport { Font, FontDescriptor } from \"../Utilities\";\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  1. Block Diagram Schema  //////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport type BlockDiagramSchema = {\r\n    page_template: string,\r\n    templates: SerializedTemplate[]\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  2. Template Types  ////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport enum TemplateType {\r\n    AnchorPoint          = 0,\r\n    BranchBlock          = 1,\r\n    DictionaryBlock      = 2,\r\n    LineEndingPoint      = 3,\r\n    LineHandlePoint      = 4,\r\n    LineHorizontalElbow  = 5,\r\n    LineVerticalElbow    = 6,\r\n    Page                 = 7,\r\n    TextBlock            = 8,\r\n}\r\n\r\nexport enum SemanticRole {\r\n    None                 = 0b000000000000000,\r\n    Node                 = 0b001000000000000,\r\n    Edge                 = 0b010000000000000,\r\n    EdgeSource           = 0b011000000000000,\r\n    EdgeTarget           = 0b100000000000000\r\n}\r\n\r\nexport type Template \r\n    = AnchorPointTemplate\r\n    | BranchBlockTemplate\r\n    | DictionaryBlockTemplate\r\n    | LineEndingPointTemplate\r\n    | LineHandlePointTemplate\r\n    | LineHorizontalElbowTemplate\r\n    | LineVerticalElbowTemplate\r\n    | PageTemplate\r\n    | TextBlockTemplate\r\n\r\nexport type SerializedTemplate = SubstituteType<Template, Font, FontDescriptor>;\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  3. Generic Template  //////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport type ObjectTemplate = {\r\n    id: string;\r\n    name: string;\r\n    properties?: RootPropertyDescriptor\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  4. Diagram Anchor Template  ///////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport type AnchorTemplate = ObjectTemplate & {\r\n    radius: number,\r\n    line_templates: {\r\n        [key: number]: string\r\n    }\r\n}\r\n\r\nexport enum AnchorAngle {\r\n    DEG_0  = 0,\r\n    DEG_90 = 1,\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  5. Diagram Line Template  /////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport type LineTemplate = ObjectTemplate & {\r\n    hitbox_width: number,\r\n    line_handle_template: string,\r\n    line_ending_template: {\r\n        source: string,\r\n        target: string\r\n    }\r\n    style: LineStyle\r\n}\r\n\r\nexport type LineStyle = {\r\n    width: number,\r\n    cap_size: number,\r\n    color: string,\r\n    select_color: string\r\n}\r\n\r\nexport type SerializedLineStyle =\r\n    SubstituteType<LineStyle, Font, FontDescriptor>;\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  6. Line Ending Point Template  ////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport type LineEndingPointTemplate = ObjectTemplate & {\r\n    type: TemplateType.LineEndingPoint,\r\n    role: SemanticRole.None | SemanticRole.EdgeSource | SemanticRole.EdgeTarget\r\n    style: LineEndingPointStyle\r\n}\r\n\r\nexport type LineEndingPointStyle = {\r\n    radius: number,\r\n    fill_color: string,\r\n    stroke_color: string,\r\n    stroke_width: number\r\n}\r\n\r\nexport type SerializedLineEndingPointStyle =\r\n    SubstituteType<LineEndingPointStyle, Font, FontDescriptor>;\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  7. Line Handle Point Template  ////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport type LineHandlePointTemplate = ObjectTemplate & {\r\n    type: TemplateType.LineHandlePoint,\r\n    role: SemanticRole.None,\r\n    style: LineHandlePointStyle;\r\n}\r\n\r\nexport type LineHandlePointStyle = {\r\n    radius: number,\r\n    fill_color: string,\r\n    stroke_color: string,\r\n    stroke_width: number\r\n}\r\n\r\nexport type SerializedLineHandlePointStyle =\r\n    SubstituteType<LineHandlePointStyle, Font, FontDescriptor>;\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  8. Anchor Point Template  /////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport type AnchorPointTemplate = AnchorTemplate & {\r\n    type: TemplateType.AnchorPoint,\r\n    role: SemanticRole.None,\r\n    style: AnchorPointStyle\r\n}\r\n\r\nexport type AnchorPointStyle = {\r\n    color: string\r\n}\r\n\r\nexport type SerializedAnchorPointStyle =\r\n    SubstituteType<AnchorPointStyle, Font, FontDescriptor>;\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  9. Dictionary Block Template  /////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport type DictionaryBlockTemplate = ObjectTemplate & {\r\n    type: TemplateType.DictionaryBlock,\r\n    role: SemanticRole.None | SemanticRole.Node,\r\n    anchor_template: string,\r\n    style: DictionaryBlockStyle\r\n}\r\n\r\nexport type DictionaryBlockStyle = {\r\n    max_width: number,\r\n    head: {\r\n        fill_color: string,\r\n        stroke_color: string,\r\n        one_title: {\r\n            title: {\r\n                font: Font,\r\n                color: string,\r\n            }\r\n        },\r\n        two_title: {\r\n            title: {\r\n                font: Font,\r\n                color: string,\r\n                padding: number\r\n            },\r\n            subtitle:  {\r\n                font: Font,\r\n                color: string,\r\n                line_height: number\r\n            }\r\n        }\r\n        vertical_padding: number\r\n    },\r\n    body: {\r\n        fill_color: string,\r\n        stroke_color: string,\r\n        field_name: {\r\n            font: Font,\r\n            color: string,\r\n            padding: number\r\n        },\r\n        field_value: {\r\n            font: Font,\r\n            color: string,\r\n            line_height: number,\r\n            padding: number\r\n        },\r\n        vertical_padding: number,\r\n    },\r\n    select_outline: {\r\n        color: string,\r\n        padding: number\r\n        border_radius: number,\r\n    },\r\n    anchor_markers: {\r\n        color: string,\r\n        size: number\r\n    }\r\n    border_radius: number,\r\n    horizontal_padding: number\r\n}\r\n\r\nexport type SerializedDictionaryBlockStyle =\r\n    SubstituteType<DictionaryBlockStyle, Font, FontDescriptor>;\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  10. Branch Block Template  ////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport type BranchBlockTemplate = ObjectTemplate & {\r\n    type: TemplateType.BranchBlock,\r\n    role: SemanticRole.None | SemanticRole.Node,\r\n    branches: [BranchTemplate, ...BranchTemplate[]]\r\n    anchor_template: string,\r\n    style: BranchBlockStyle\r\n}\r\n\r\nexport type BranchTemplate = { \r\n    text: string,\r\n    anchor_template: string\r\n}\r\n\r\nexport type BranchBlockStyle = DictionaryBlockStyle & {\r\n    branch: {\r\n        font: Font,\r\n        color: string,\r\n        vertical_padding: number,\r\n        horizontal_padding: number\r\n    }\r\n}\r\n\r\nexport type SerializedBranchBlockStyle =\r\n    SubstituteType<BranchBlockStyle, Font, FontDescriptor>;\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  11. Text Block Template  //////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport type TextBlockTemplate = ObjectTemplate & {\r\n    type: TemplateType.TextBlock,\r\n    role: SemanticRole.None | SemanticRole.Node,\r\n    anchor_template: string,\r\n    style: TextBlockStyle\r\n}\r\n\r\nexport type TextBlockStyle = {\r\n    max_width: number,\r\n    fill_color: string,\r\n    stroke_color: string,\r\n    text: {\r\n        font: Font,\r\n        color: string,\r\n        line_height: number\r\n    },\r\n    border_radius: number,\r\n    select_outline: {\r\n        color: string,\r\n        padding: number\r\n        border_radius: number,\r\n    },\r\n    anchor_markers: {\r\n        color: string,\r\n        size: number\r\n    },\r\n    vertical_padding: number,\r\n    horizontal_padding: number\r\n}\r\n\r\nexport type SerializedTextBlockStyle =\r\n    SubstituteType<TextBlockStyle, Font, FontDescriptor>;\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  12. Line Horizontal Elbow Template  ///////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport type LineHorizontalElbowTemplate = LineTemplate & {\r\n    type: TemplateType.LineHorizontalElbow\r\n    role: SemanticRole.None | SemanticRole.Edge\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  13. Line Horizontal Elbow Template  ///////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport type LineVerticalElbowTemplate = LineTemplate & {\r\n    type: TemplateType.LineVerticalElbow\r\n    role: SemanticRole.None | SemanticRole.Edge\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  14. Page Template  ////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport type PageTemplate = ObjectTemplate & {\r\n    type: TemplateType.Page\r\n    role: SemanticRole.None\r\n    grid: [number, number]\r\n    style: PageStyle\r\n}\r\n\r\nexport type PageStyle = {\r\n    grid_color: string,\r\n    background_color: string,\r\n    drop_shadow: {\r\n        color: string,\r\n        offset: [number, number]\r\n    }\r\n}\r\n\r\nexport type SerializedPageStyle =\r\n    SubstituteType<PageStyle, Font, FontDescriptor>;\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  15. Type Helpers  /////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n/**\r\n * Substitutes all types of type `A` in type `T` with type `B`.\r\n * ({@link https://stackoverflow.com/a/59833891 Source})\r\n */\r\ntype SubstituteType<T, A, B> =\r\n    T extends A\r\n    ? B\r\n    : T extends {}\r\n    ? { [K in keyof T]: SubstituteType<T[K], A, B> }\r\n    : T;\r\n","import { PropertyType, RootProperty, RootPropertyDescriptor } from \"../Property\";\r\nimport {\r\n    AnchorAngle,\r\n    DarkTheme,\r\n    SemanticRole,\r\n    SerializedTemplate,\r\n    TemplateType\r\n} from \".\";\r\n\r\nconst BUILTIN_PREFIX = \"@__builtin__\";\r\n\r\nexport const BuiltinTemplates: SerializedTemplate[] = [\r\n    {\r\n        id: `${ BUILTIN_PREFIX }page`,\r\n        name: \"Page\",\r\n        type: TemplateType.Page,\r\n        role: SemanticRole.None,\r\n        grid: [10, 10],\r\n        properties: {\r\n            name: {\r\n                type: PropertyType.String,\r\n                value: \"Untitled Document\",\r\n                is_primary: true\r\n            }\r\n        },\r\n        style: DarkTheme.Page()\r\n    },\r\n    {\r\n        id: `${ BUILTIN_PREFIX }anchor`,\r\n        name: \"Anchor\",\r\n        type: TemplateType.AnchorPoint,\r\n        role: SemanticRole.None,\r\n        radius: 10,\r\n        line_templates: {\r\n            [AnchorAngle.DEG_0] : `${ BUILTIN_PREFIX }line_horizontal_elbow`,\r\n            [AnchorAngle.DEG_90]: `${ BUILTIN_PREFIX }line_vertical_elbow`\r\n        },\r\n        style: DarkTheme.AnchorPoint()\r\n    },\r\n    {\r\n        id: `${ BUILTIN_PREFIX }line_handle`,\r\n        name: \"Line Handle\",\r\n        type: TemplateType.LineHandlePoint,\r\n        role: SemanticRole.None,\r\n        style: DarkTheme.LineHandle()\r\n    },\r\n    {\r\n        id: `${ BUILTIN_PREFIX }line_source`,\r\n        name: \"Line Source\",\r\n        type: TemplateType.LineEndingPoint,\r\n        role: SemanticRole.EdgeSource,\r\n        style: DarkTheme.LineEnding()\r\n    },\r\n    {\r\n        id: `${ BUILTIN_PREFIX }line_target`,\r\n        name: \"Line Target\",\r\n        type: TemplateType.LineEndingPoint,\r\n        role: SemanticRole.EdgeTarget,\r\n        style: DarkTheme.LineEnding()\r\n    },\r\n    {\r\n        id: `${ BUILTIN_PREFIX }line_horizontal_elbow`,\r\n        name: \"Horizontal Elbow\",\r\n        type: TemplateType.LineHorizontalElbow,\r\n        role: SemanticRole.Edge,\r\n        hitbox_width: 20,\r\n        line_handle_template: `${ BUILTIN_PREFIX }line_handle`,\r\n        line_ending_template: {\r\n            source: `${ BUILTIN_PREFIX }line_source`,\r\n            target: `${ BUILTIN_PREFIX }line_target`\r\n        },\r\n        style: DarkTheme.Line()\r\n    },\r\n    {\r\n        id: `${ BUILTIN_PREFIX }line_vertical_elbow`,\r\n        name: \"Vertical Elbow\",\r\n        type: TemplateType.LineVerticalElbow,\r\n        role: SemanticRole.Edge,\r\n        hitbox_width: 20,\r\n        line_handle_template: `${ BUILTIN_PREFIX }line_handle`,\r\n        line_ending_template: {\r\n            source: `${ BUILTIN_PREFIX }line_source`,\r\n            target: `${ BUILTIN_PREFIX }line_target`\r\n        },\r\n        style: DarkTheme.Line()\r\n    }\r\n]\r\n","import { \r\n    Font,\r\n    FontDescriptor,\r\n    GlobalFontStore\r\n} from \"../Utilities\";\r\nimport { \r\n    AnchorPointModel,\r\n    BranchBlockModel,\r\n    DiagramAnchorableModel,\r\n    DiagramAnchorModel,\r\n    DiagramObjectModel,\r\n    DictionaryBlockModel,\r\n    LineEndingPointModel,\r\n    LineHandlePointModel,\r\n    LineHorizontalElbowModel,\r\n    LineVerticalElbowModel,\r\n    TextBlockModel,\r\n    PageModel\r\n} from \"../DiagramModelTypes\";\r\nimport { \r\n    BlockDiagramSchema,\r\n    BuiltinTemplates,\r\n    DiagramFactoryError,\r\n    DiagramObjectValues,\r\n    SerializedTemplate,\r\n    Template,\r\n    TemplateType,\r\n} from \".\";\r\n\r\nexport class DiagramFactory {\r\n\r\n    /**\r\n     * The diagram's schema.\r\n     */\r\n    public readonly schema: BlockDiagramSchema;\r\n\r\n    /**\r\n     * The diagram factory's list of templates.\r\n     */\r\n    public readonly templates: Map<string, Template>\r\n\r\n\r\n    /**\r\n     * Creates a new {@link DiagramFactory}.\r\n     * @param schema\r\n     *  The diagram's schema.\r\n     * @param templates\r\n     *  THe diagram factory's list of templates.\r\n     */\r\n    private constructor(schema: BlockDiagramSchema, templates: Map<string, Template>) {\r\n        this.schema = schema;\r\n        this.templates = templates;\r\n    }\r\n\r\n\r\n    /**\r\n     * Returns a dummy {@link DiagramFactory}.\r\n     * @returns \r\n     *  A dummy {@link DiagramFactory}.\r\n     */\r\n    public static createDummy(): DiagramFactory {\r\n        return new this({ page_template: \"\", templates: [] }, new Map());\r\n    }\r\n\r\n    /**\r\n     * Creates a new {@link DiagramFactory}.\r\n     * @param schema\r\n     *  The diagram factory's internal schema.\r\n     * @throws { DiagramFactoryError }\r\n     *  If two or more templates share the same name.\r\n     * @throws { Error }\r\n     *  If any of the schema's fonts failed to load.\r\n     */\r\n    public static async create(schema: BlockDiagramSchema) {\r\n        \r\n        // Clone schema\r\n        let copy = structuredClone(schema);\r\n\r\n        // Validate unique ids\r\n        let ids = new Set();\r\n        for(let template of copy.templates) {\r\n            if(ids.has(template.id)){\r\n                throw new DiagramFactoryError(\r\n                    `Template '${ template.id }' can only be defined once.`\r\n                );\r\n            }\r\n            ids.add(template.id);\r\n        }\r\n\r\n        // Register schema templates\r\n        let templates = new Map<string, SerializedTemplate>();\r\n        for(let template of [...BuiltinTemplates, ...copy.templates]) {\r\n            templates.set(template.id, template);\r\n        }\r\n\r\n        // Load font descriptors\r\n        let fonts: FontDescriptor[] = [];\r\n        for(let template of templates.values()) {\r\n            fonts = fonts.concat(\r\n                this.getFontDescriptorsFromTemplate(template)\r\n            );\r\n        }\r\n        await GlobalFontStore.loadFonts(fonts);\r\n        \r\n        // Swap font descriptors for fonts\r\n        for(let template of templates.values()) {\r\n            this.swapFontDescriptorsWithFonts(template);\r\n        }\r\n        \r\n        // Return new diagram factory \r\n        return new this(\r\n            schema,\r\n            templates as Map<string, Template>\r\n        );\r\n    \r\n    }\r\n\r\n    \r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Templates  /////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    \r\n\r\n    /**\r\n     * Returns a template from the factory.\r\n     * @param template\r\n     *  The template's id.\r\n     * @returns\r\n     *  The template. `undefined` if no template with that id exists.\r\n     */\r\n    public getTemplate(template: string): Template | undefined {\r\n        return this.templates.get(template);\r\n    }\r\n\r\n    /**\r\n     * Returns all block templates.\r\n     * @returns \r\n     *  All block templates.\r\n     */\r\n    public getBlockTemplates(): Template[] {\r\n        let templates = [];\r\n        for(let template of this.templates.values()) {\r\n            switch(template.type) {\r\n                case TemplateType.BranchBlock:\r\n                case TemplateType.DictionaryBlock:\r\n                case TemplateType.TextBlock:\r\n                    templates.push(template);\r\n                    break;\r\n                \r\n            }\r\n        }\r\n        return templates;\r\n    }\r\n\r\n    /**\r\n     * Returns all line templates.\r\n     * @returns \r\n     *  All line templates.\r\n     */\r\n    public getLineTemplates(): Template[] {\r\n        let templates = [];\r\n        for(let template of this.templates.values()) {\r\n            switch(template.type) {\r\n                case TemplateType.LineVerticalElbow:\r\n                case TemplateType.LineHorizontalElbow:\r\n                    templates.push(template);\r\n                    break;\r\n            }\r\n        }\r\n        return templates;\r\n    }\r\n\r\n    \r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  2. Object Creation  ///////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Instantiates a diagram object.\r\n     * @param template\r\n     *  The name of the object's template.\r\n     * @returns\r\n     *  The newly created diagram object.\r\n     * @throws { DiagramFactoryError }\r\n     *  If no template with the specified name exists.\r\n     */\r\n    public createObject(template: string): DiagramObjectModel;\r\n    \r\n    /**\r\n     * Instantiates a diagram object.\r\n     * @param object\r\n     *  The object's values.\r\n     * @returns\r\n     *  The newly created diagram object.\r\n     * @throws { DiagramFactoryError }\r\n     *  If `object` specifies a template that doesn't exist.\r\n     */\r\n    public createObject(object: DiagramObjectValues): DiagramObjectModel;\r\n    public createObject(param1: DiagramObjectValues | string): DiagramObjectModel {\r\n        let name, vals: any;\r\n        if(param1 instanceof Object) {\r\n            name = param1.template,\r\n            vals = param1\r\n        } else {\r\n            name = param1;\r\n        }\r\n        // Resolve template\r\n        let temp = this.templates.get(name);\r\n        if(!temp) {\r\n            throw new DiagramFactoryError(\r\n                `Template '${ name }' does not exist.`\r\n            );\r\n        }\r\n        // Create diagram object\r\n        switch(temp.type) {\r\n            case TemplateType.Page:\r\n                return new PageModel(this, temp, vals);\r\n            case TemplateType.AnchorPoint:\r\n                return new AnchorPointModel(this, temp, vals);\r\n            case TemplateType.BranchBlock:\r\n                return new BranchBlockModel(this, temp, vals);\r\n            case TemplateType.DictionaryBlock:\r\n                return new DictionaryBlockModel(this, temp, vals);\r\n            case TemplateType.LineEndingPoint:\r\n                return new LineEndingPointModel(this, temp, vals);\r\n            case TemplateType.LineHandlePoint:\r\n                return new LineHandlePointModel(this, temp, vals);\r\n            case TemplateType.LineVerticalElbow:\r\n                return new LineVerticalElbowModel(this, temp, vals);\r\n            case TemplateType.LineHorizontalElbow:\r\n                return new LineHorizontalElbowModel(this, temp, vals);\r\n            case TemplateType.TextBlock:\r\n                return new TextBlockModel(this, temp, vals);\r\n            default:\r\n                throw new DiagramFactoryError(\r\n                    `Unknown template type: '${ (temp as any).type }'.`\r\n                );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clones one or more diagram objects.\r\n     * @param objects\r\n     *  The object(s) to clone.\r\n     * @returns\r\n     *  The cloned objects.\r\n     */\r\n    public cloneObjects(...objects: DiagramObjectModel[]): DiagramObjectModel[] {\r\n        // Clone objects\r\n        let clones = new Map<string, DiagramObjectModel>();\r\n        let anchors = new Map<DiagramAnchorModel, string[]>();\r\n        let objs = objects.map(o => this.cloneObject(o, clones, anchors));\r\n        // Link clones\r\n        for(let [anchor, links] of anchors) {\r\n            for(let link of links) {\r\n                let obj = clones.get(link) as DiagramAnchorableModel;\r\n                if(obj) {\r\n                    anchor.addChild(obj);\r\n                }\r\n            }\r\n        }\r\n        // Return clones\r\n        return objs;\r\n    }\r\n\r\n    /**\r\n     * Clones a single object. Supports `cloneObjects()`.\r\n     * @param object\r\n     *  The object to clone.\r\n     * @param clones\r\n     *  The clone index. This maps objects to their clones.\r\n     * @param anchors\r\n     *  The anchor index. The maps anchor clones to their original children.\r\n     * @returns\r\n     *  The cloned object.\r\n     */\r\n    private cloneObject(\r\n        object: DiagramObjectModel,\r\n        clones: Map<string, DiagramObjectModel>,\r\n        anchors: Map<DiagramAnchorModel, string[]>\r\n    ): DiagramObjectModel {\r\n        // Clone anchor\r\n        if(object instanceof DiagramAnchorModel) {\r\n            let clone = this.createObject({\r\n                ...object.toExport(),\r\n                id: (crypto as any).randomUUID(),\r\n                children: []\r\n            }) as DiagramAnchorModel;\r\n            clones.set(object.id, clone);\r\n            anchors.set(clone, object.children.map(o => o.id));\r\n            return clone;\r\n        };\r\n        // Clone children\r\n        let children = [];\r\n        for(let obj of object.children) {\r\n            children.push(this.cloneObject(obj, clones, anchors));\r\n        }\r\n        // Clone object\r\n        let clone = this.createObject({\r\n            ...object.toExport(),\r\n            id: (crypto as any).randomUUID(),\r\n            children\r\n        });\r\n        clones.set(object.id, clone);\r\n        return clone;\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  3. Font Management  ///////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Returns all {@link FontDescriptor} defined by a template.\r\n     * @returns\r\n     *  All {@link FontDescriptor} defined by a template.\r\n     */\r\n    private static getFontDescriptorsFromTemplate(template: SerializedTemplate): FontDescriptor[] {\r\n        let descriptors: FontDescriptor[] = [];\r\n        switch(template.type) {\r\n            case TemplateType.BranchBlock:\r\n                let { style: s1 } = template;\r\n                descriptors.push(\r\n                    s1.branch.font\r\n                );\r\n            case TemplateType.DictionaryBlock:\r\n                let { style: s2 } = template;\r\n                descriptors = descriptors.concat([\r\n                    s2.head.one_title.title.font,\r\n                    s2.head.two_title.title.font,\r\n                    s2.head.two_title.subtitle.font,\r\n                    s2.body.field_name.font,\r\n                    s2.body.field_value.font\r\n                ]);\r\n                break;\r\n            case TemplateType.TextBlock:\r\n                let { style: s3 } = template;\r\n                descriptors.push(\r\n                    s3.text.font\r\n                )\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return descriptors;\r\n    }\r\n\r\n    /**\r\n     * Swaps all {@link FontDescriptor} defined by a template with \r\n     * {@link Font} objects.\r\n     * @param template\r\n     *  The template to modify.\r\n     */\r\n    private static swapFontDescriptorsWithFonts(template: SerializedTemplate) {\r\n        let font = GlobalFontStore.getFont.bind(GlobalFontStore);\r\n        switch(template.type) {\r\n            case TemplateType.BranchBlock:\r\n                let { branch: br } = template.style as any;    \r\n                br.font = font(br.font);\r\n            case TemplateType.DictionaryBlock:\r\n                let { head: h, body: b } = template.style as any;\r\n                h.one_title.title.font = font(h.one_title.title.font);\r\n                h.two_title.title.font = font(h.two_title.title.font);\r\n                h.two_title.subtitle.font = font(h.two_title.subtitle.font);\r\n                b.field_name.font = font(b.field_name.font);\r\n                b.field_value.font = font(b.field_value.font);\r\n                break;\r\n            case TemplateType.TextBlock:\r\n                let { text: t } = template.style as any;\r\n                t.font = font(t.font);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  4. Serialization  /////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Returns the diagram factory's internal schema.\r\n     * @returns\r\n     *  The diagram factory's internal schema.\r\n     */\r\n    public getSchema(): BlockDiagramSchema {\r\n        // Compile templates\r\n        let templates: SerializedTemplate[] = []\r\n        for(let template of this.templates.values()) {\r\n            let cloneTemplate = JSON.stringify(template, \r\n                (_: string, obj: any) => obj instanceof Font ? obj.descriptor : obj\r\n            );\r\n            templates.push(JSON.parse(cloneTemplate));\r\n        }\r\n        // Return schema\r\n        return {\r\n            page_template: this.schema.page_template,\r\n            templates: templates\r\n        }\r\n    }\r\n\r\n}\r\n","export class ViewportRegion {\r\n\r\n    /**\r\n     * The viewport's minimum x coordinate.\r\n     */\r\n    public xMin: number\r\n\r\n    /**\r\n     * The viewport's minimum y coordinate.\r\n     */\r\n    public yMin: number\r\n\r\n    /**\r\n     * The viewport's maximum x coordinate.\r\n     */\r\n    public xMax: number\r\n\r\n    /**\r\n     * The viewport's maximum y coordinate.\r\n     */\r\n    public yMax: number;\r\n\r\n    /**\r\n     * The viewport's scale.\r\n     */\r\n    public scale: number;\r\n\r\n    /**\r\n     * Creates a new {@link ViewportRegion}.\r\n     */\r\n    constructor() {\r\n        this.xMin = 0;\r\n        this.yMin = 0;\r\n        this.xMax = 0;\r\n        this.yMax = 0;\r\n        this.scale = 1;\r\n    }\r\n\r\n}\r\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./PropertyEditor.vue?vue&type=style&index=0&id=5d47093b&scoped=true&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./ContextMenuListing.vue?vue&type=style&index=0&id=03d00514&scoped=true&lang=css\"","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./DateTimeField.vue?vue&type=style&index=0&id=f603942e&scoped=true&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./ScrollBox.vue?vue&type=style&index=0&id=cf54a08c&scoped=true&lang=css\"","///////////////////////////////////////////////////////////////////////////////\r\n//  1. Value Types  ///////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\ntype ValueDescriptorBase<K extends ValueTypes> = {\r\n    type: K,\r\n    value?: ValueTypeScriptType[K]\r\n    is_primary?: boolean,\r\n    is_visible?: boolean\r\n    is_editable? : boolean,\r\n    is_required? : boolean,\r\n}\r\n\r\ntype IntValueDescriptor = ValueDescriptorBase<PropertyType.Int> & {\r\n    min?: number,\r\n    max?: number\r\n}\r\n\r\ntype FloatValueDescriptor = ValueDescriptorBase<PropertyType.Float> & {\r\n    min?: number,\r\n    max?: number,\r\n}\r\n\r\ntype EnumValueDescriptor = ValueDescriptorBase<PropertyType.Enum> & {\r\n    options: ListPropertyDescriptor \r\n}\r\n\r\ntype ValueTypes\r\n    = PropertyType.Int\r\n    | PropertyType.Float\r\n    | PropertyType.String\r\n    | PropertyType.Date\r\n    | PropertyType.Enum\r\n\r\ntype ValueTypeScriptType = {\r\n    [PropertyType.Int]: number | null,\r\n    [PropertyType.Float]: number | null,\r\n    [PropertyType.String]: string | null,\r\n    [PropertyType.Date]: Date | null,\r\n    [PropertyType.Enum]: string | null\r\n}\r\n\r\nexport enum PropertyType {\r\n    Int        = 0,\r\n    Float      = 1,\r\n    String     = 2,\r\n    Date       = 3,\r\n    Enum       = 4,\r\n    List       = 5,\r\n    Dictionary = 6,\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  2. Standard Property Descriptors  /////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n/**\r\n * Standard Property Descriptor:\r\n * Allows recursive definitions of both arrays and dictionaries.\r\n */\r\nexport type PropertyDescriptor\r\n    = StringPropertyDescriptor\r\n    | NumberPropertyDescriptor\r\n    | DatePropertyDescriptor\r\n    | EnumPropertyDescriptor\r\n    | ListPropertyDescriptor\r\n    | DictionaryPropertyDescriptor\r\n\r\nexport type StringPropertyDescriptor\r\n    = ValueDescriptorBase<PropertyType.String>;\r\n\r\nexport type NumberPropertyDescriptor\r\n    = IntValueDescriptor\r\n    | FloatValueDescriptor;\r\n\r\nexport type DatePropertyDescriptor\r\n    = ValueDescriptorBase<PropertyType.Date>;\r\n\r\nexport type EnumPropertyDescriptor\r\n    = EnumValueDescriptor;\r\n\r\nexport type ListPropertyDescriptor = {\r\n    type: PropertyType.List,\r\n    form: PropertyDescriptor\r\n    value?: any,\r\n    is_primary?: boolean,\r\n    is_visible?: boolean,\r\n    is_editable? : boolean\r\n}\r\n\r\nexport type DictionaryPropertyDescriptor = {\r\n    type: PropertyType.Dictionary,\r\n    form: { \r\n        [key: string]: PropertyDescriptor\r\n    },\r\n    is_primary?: boolean,\r\n    is_visible?: boolean,\r\n}\r\n\r\nexport type ListValue\r\n    = ListValueEntries\r\n    | ListValueDictionary\r\n\r\nexport type ListValueEntries = [\r\n    string, ListValueEntries | ListValueDictionary | null | string | number | Date\r\n][]\r\n\r\nexport type ListValueDictionary = {\r\n    [key: string]: ListValueEntries | ListValueDictionary | null | string | number | Date\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  3. Restricted Property Descriptor  ////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n/**\r\n * Restricted Property Descriptor:\r\n * Restricts recursive definitions of both arrays and dictionaries.\r\n */\r\n export type RestrictedPropertyDescriptor\r\n    = ValueDescriptor\r\n    | ValueListDescriptor\r\n    | ValueDictionaryDescriptor\r\n    | ValueDictionaryListDescriptor\r\n\r\ntype ValueDictionaryListDescriptor = {\r\n    type: PropertyType.List,\r\n    form: ValueDictionaryDescriptor,\r\n    value?: any,\r\n    is_primary?: boolean,\r\n    is_visible?: boolean,\r\n    is_editable? : boolean\r\n}\r\n\r\ntype ValueDictionaryDescriptor = {\r\n    type: PropertyType.Dictionary,\r\n    form: {\r\n        [key: string]\r\n            : ValueDescriptor\r\n            | ValueListDescriptor\r\n    },\r\n    is_primary?: boolean,\r\n    is_visible?: boolean,\r\n}\r\n\r\ntype ValueListDescriptor = {\r\n    type: PropertyType.List,\r\n    form: ValueDescriptor,\r\n    value?: any,\r\n    is_primary?: boolean,\r\n    is_visible?: boolean,\r\n    is_editable? : boolean\r\n}\r\n\r\ntype ValueDescriptor\r\n    = StringPropertyDescriptor\r\n    | NumberPropertyDescriptor\r\n    | DatePropertyDescriptor\r\n    | EnumPropertyDescriptor\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  4. Root Property Descriptor  //////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport type RootPropertyDescriptor = {\r\n    [key: string]: RestrictedPropertyDescriptor\r\n}\r\n","import { ref, Ref } from \"vue\";\r\nimport { \r\n    CollectionProperty,\r\n    DateProperty,\r\n    DictionaryProperty,\r\n    EnumProperty,\r\n    ListProperty,\r\n    NumberProperty,\r\n    PropertyDescriptor,\r\n    PropertyType,\r\n    RootProperty,\r\n    StringProperty\r\n} from \".\";\r\n\r\nexport abstract class Property {\r\n\r\n    /**\r\n     * The property's type.\r\n     */\r\n    public readonly type: PropertyType;\r\n\r\n    /**\r\n     * The property's descriptor.\r\n     */\r\n    public readonly descriptor: PropertyDescriptor;\r\n\r\n    /**\r\n     * The property's reactive trigger.\r\n     */\r\n    public readonly trigger: Ref<number>\r\n\r\n    /**\r\n     * The property's parent.\r\n     */\r\n    private _parent: CollectionProperty | undefined;\r\n\r\n    /**\r\n     * The property's root.\r\n     */\r\n    public get root(): RootProperty | undefined {\r\n        let owner = this as Property;\r\n        while(owner._parent) {\r\n            owner = owner._parent;\r\n        }\r\n        if(owner instanceof RootProperty) {\r\n            return owner;\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n    \r\n\r\n    /**\r\n     * Creates a new {@link Property}.\r\n     * @param parent\r\n     *  The property's parent.\r\n     * @param descriptor\r\n     *  The property's descriptor.\r\n     */\r\n    constructor(\r\n        parent: CollectionProperty | undefined,\r\n        descriptor: PropertyDescriptor\r\n    ) {\r\n        this.type = descriptor.type;\r\n        this.descriptor = descriptor;\r\n        this.trigger = ref(0);\r\n        this._parent = parent;\r\n    }\r\n\r\n\r\n    /**\r\n     * Creates a new {@link Property}.\r\n     * @param parent\r\n     *  The property's parent.\r\n     * @param descriptor\r\n     *  The property's descriptor.\r\n     * @param values\r\n     *  The property's values.\r\n     * @returns\r\n     *  The {@link Property}.\r\n     */\r\n    public static create(\r\n        parent: CollectionProperty | undefined,\r\n        descriptor: PropertyDescriptor,\r\n        values?: any\r\n    ): Property {\r\n        switch(descriptor.type) {\r\n            case PropertyType.String:\r\n                return new StringProperty(parent, descriptor, values);\r\n            case PropertyType.Int:\r\n            case PropertyType.Float:\r\n                return new NumberProperty(parent, descriptor, values);\r\n            case PropertyType.Date:\r\n                return new DateProperty(parent, descriptor, values);\r\n            case PropertyType.Enum:\r\n                return new EnumProperty(parent, descriptor, values);\r\n            case PropertyType.List:\r\n                return new ListProperty(parent, descriptor, values);\r\n            case PropertyType.Dictionary:\r\n                return new DictionaryProperty(parent, descriptor, values);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Updates the property's trigger. \r\n     */\r\n    protected updateProperty() {\r\n        this.trigger.value = this.toHashValue();\r\n        this._parent?.updateProperty();\r\n    }\r\n\r\n    /**\r\n     * Tests if the property is defined.\r\n     * @returns\r\n     *  True if the property is defined, false otherwise.\r\n     */\r\n    public abstract isDefined(): boolean;\r\n\r\n    /**\r\n     * Returns the property's raw value.\r\n     * @returns\r\n     *  The property's raw value.\r\n     */\r\n    public abstract toRawValue(): RawEntries | RawTypes;\r\n\r\n    /**\r\n     * Returns the property's hashed value.\r\n     * @returns\r\n     *  The property's hashed value.\r\n     */\r\n    public abstract toHashValue(): number;\r\n    \r\n    /**\r\n     * Returns the property as a string.\r\n     * @returns\r\n     *  The property as a string.\r\n     */\r\n    public abstract toString(): string;\r\n\r\n}\r\n\r\nexport type RawTypes =\r\n    null | string | number\r\n\r\nexport type RawEntries\r\n    = [string, RawEntries | RawTypes][]\r\n ","import { computeHash } from \"../Utilities\";\r\nimport {\r\n    CollectionProperty,\r\n    DatePropertyDescriptor,\r\n    Property\r\n} from \".\";\r\n\r\nexport class DateProperty extends Property {\r\n    \r\n    /**\r\n     * The property's descriptor.\r\n     */\r\n    public override readonly descriptor: DatePropertyDescriptor;\r\n\r\n    /**\r\n     * The property's value.\r\n     */\r\n    private _value: Date | null;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link DateProperty}.\r\n     * @param parent\r\n     *  The property's parent.\r\n     * @param descriptor\r\n     *  The property's descriptor.\r\n     * @param value\r\n     *  The property's value.\r\n     */\r\n    constructor(\r\n        parent: CollectionProperty | undefined,\r\n        descriptor: DatePropertyDescriptor,\r\n        value?: any\r\n    ) {\r\n        super(parent, descriptor);\r\n        this._value = null;\r\n        this.descriptor = descriptor;\r\n        // Resolve value\r\n        let v;\r\n        if(value === null) {\r\n            v = null;\r\n        } else {\r\n            v = value ?? descriptor.value ?? null;\r\n        }\r\n        // Set value\r\n        if(v === null) {\r\n            this.setValue(null);\r\n        } else if(v instanceof Date || typeof v === \"string\") {\r\n            this.setValue(new Date(v));\r\n        } else {\r\n            this.setValue(new Date());\r\n        }\r\n    }\r\n    \r\n\r\n    /**\r\n     * Tests if the property is defined.\r\n     * @returns\r\n     *  True if the property is defined, false otherwise.\r\n     */\r\n    public isDefined(): boolean {\r\n        return this._value !== null;\r\n    }\r\n\r\n    /**\r\n     * Sets the property's value.\r\n     * @param value\r\n     *  The new value.\r\n     */\r\n     public setValue(value: Date | null) {\r\n        this._value = value;\r\n        this.updateProperty();\r\n    }\r\n\r\n    /**\r\n     * Returns the property's raw value.\r\n     * @returns\r\n     *  The property's raw value.\r\n     */\r\n    public toRawValue(): string | null {\r\n        return this._value?.toISOString() ?? null;\r\n    }\r\n\r\n    /**\r\n     * Returns the property's hashed value.\r\n     * @returns\r\n     *  The property's hashed value.\r\n     */\r\n    public toHashValue(): number {\r\n        if(this._value === null) {\r\n            return computeHash(\"\")\r\n        } else {\r\n            return computeHash(this._value.toString());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the property as a string.\r\n     * @returns\r\n     *  The property as a string.\r\n     */\r\n    public toString(): string {\r\n        return `${ this._value ?? 'Null' }`;\r\n    }\r\n\r\n}\r\n","import { computeHash } from \"../Utilities\";\r\nimport {\r\n    CollectionProperty,\r\n    Property,\r\n    StringPropertyDescriptor\r\n} from \".\";\r\n\r\nexport class StringProperty extends Property {\r\n    \r\n    /**\r\n     * The property's descriptor.\r\n     */\r\n    public override readonly descriptor: StringPropertyDescriptor;\r\n\r\n    /**\r\n     * The property's value.\r\n     */\r\n    private _value: string | null;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link StringProperty}.\r\n     * @param parent\r\n     *  The property's parent.\r\n     * @param descriptor\r\n     *  The property's descriptor.\r\n     * @param value\r\n     *  The property's value.\r\n     */\r\n    constructor(\r\n        parent: CollectionProperty | undefined,\r\n        descriptor: StringPropertyDescriptor,\r\n        value?: any\r\n    ) {\r\n        super(parent, descriptor);\r\n        this.descriptor = descriptor;\r\n        this._value = null;\r\n        if(value === null) {\r\n            this.setValue(null);\r\n        } else {\r\n            let v = value ?? descriptor.value ?? null;\r\n            this.setValue(v === null ? null : `${ v }`);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Tests if the property is defined.\r\n     * @returns\r\n     *  True if the property is defined, false otherwise.\r\n     */\r\n    public isDefined(): boolean {\r\n        return this._value !== null;\r\n    }\r\n\r\n    /**\r\n     * Sets the property's value.\r\n     * @param value\r\n     *  The new value.\r\n     */\r\n    public setValue(value: string | null) {\r\n        this._value = value;\r\n        this.updateProperty();\r\n    }\r\n    \r\n    /**\r\n     * Returns the property's raw value.\r\n     * @returns\r\n     *  The property's raw value.\r\n     */\r\n    public toRawValue(): string | null {\r\n        return this._value;\r\n    }\r\n\r\n    /**\r\n     * Returns the property's hashed value.\r\n     * @returns\r\n     *  The property's hashed value.\r\n     */\r\n    public toHashValue(): number {\r\n        if(this._value === null) {\r\n            return computeHash(\"\");\r\n        } else {\r\n            return computeHash(`v:${ this._value }`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the property as a string.\r\n     * @returns\r\n     *  The property as a string.\r\n     */\r\n    public toString(): string {\r\n        return this._value ?? \"Null\";\r\n    }\r\n\r\n}\r\n","import { clamp, computeHash } from \"../Utilities\";\r\nimport {\r\n    CollectionProperty,\r\n    NumberPropertyDescriptor,\r\n    Property,\r\n    PropertyType\r\n} from \".\";\r\n\r\nexport class NumberProperty extends Property {\r\n    \r\n    /**\r\n     * The property's descriptor.\r\n     */\r\n    public override readonly descriptor: NumberPropertyDescriptor;\r\n    \r\n    /**\r\n     * The property's minimum allowed value.\r\n     */\r\n    public readonly min: number;\r\n\r\n    /**\r\n     * The property's maximum allowed value.\r\n     */\r\n    public readonly max: number;\r\n\r\n    /**\r\n     * The property's value.\r\n     */\r\n    private _value: number | null;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link NumberProperty}.\r\n     * @param parent\r\n     *  The property's parent.\r\n     * @param descriptor\r\n     *  The property's descriptor.\r\n     * @param value\r\n     *  The property's value.\r\n     */\r\n    constructor(\r\n        parent: CollectionProperty | undefined,\r\n        descriptor: NumberPropertyDescriptor,\r\n        value?: any\r\n    ) {\r\n        super(parent, descriptor);\r\n        this.min = descriptor.min ?? -Infinity;\r\n        this.max = descriptor.max ?? Infinity;\r\n        this.descriptor = descriptor;\r\n        this._value = null;\r\n        // Resolve value\r\n        let v;\r\n        if(value === null) {\r\n            v = null;\r\n        } else {\r\n            v = value ?? descriptor.value ?? null;\r\n        }\r\n        // Set value\r\n        if(v === null) {\r\n            this.setValue(null);\r\n        } else if(typeof v === \"number\"){\r\n            this.setValue(v);\r\n        } else {\r\n            this.setValue(0);\r\n        }\r\n    }\r\n    \r\n    \r\n    /**\r\n     * Tests if the property is defined.\r\n     * @returns\r\n     *  True if the property is defined, false otherwise.\r\n     */\r\n    public isDefined(): boolean {\r\n        return this._value !== null;\r\n    }\r\n\r\n    /**\r\n     * Sets the property's value.\r\n     * @param value\r\n     *  The new value.\r\n     */\r\n    public setValue(value: number | null) {\r\n        if(value === null) {\r\n            this._value = null;\r\n        } else {\r\n            let v = clamp(value, this.min, this.max);\r\n            if(this.type === PropertyType.Int) {\r\n                this._value = Math.round(v);\r\n            } else {\r\n                this._value = v;\r\n            }\r\n        }\r\n        this.updateProperty();\r\n    }\r\n\r\n    /**\r\n     * Returns the property's raw value.\r\n     * @returns\r\n     *  The property's raw value.\r\n     */\r\n    public toRawValue(): number | null {\r\n        return this._value;\r\n    }\r\n\r\n    /**\r\n     * Returns the property's hashed value.\r\n     * @returns\r\n     *  The property's hashed value.\r\n     */\r\n    public toHashValue(): number {\r\n        return computeHash(`${ this._value ?? \"\" }`);\r\n    }\r\n\r\n    /**\r\n     * Returns the property as a string.\r\n     * @returns\r\n     *  The property as a string.\r\n     */\r\n    public toString(): string {\r\n        return `${ this._value ?? 'Null' }`;\r\n    }\r\n\r\n}\r\n","import { computeHash } from \"../Utilities\";\r\nimport { \r\n    DictionaryPropertyDescriptor,\r\n    ListPropertyDescriptor,\r\n    Property,\r\n    RawEntries\r\n} from \".\";\r\n\r\nexport abstract class CollectionProperty extends Property {\r\n\r\n    // TODO: Implement enumerator, get(), size(). Hide value.\r\n\r\n    /**\r\n     * The property's descriptor.\r\n     */\r\n    public override readonly descriptor: CollectionPropertyDescriptor;\r\n    \r\n    /**\r\n     * The set of properties.\r\n     */\r\n    public value: Map<string, Property>;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link CollectionProperty}.\r\n     * @param parent\r\n     *  The property's parent.\r\n     * @param descriptor\r\n     *  The property's descriptor.\r\n     */\r\n    constructor(\r\n        parent: CollectionProperty | undefined,\r\n        descriptor: CollectionPropertyDescriptor\r\n    ) {\r\n        super(parent, descriptor);\r\n        this.descriptor = descriptor;\r\n        this.value = new Map();\r\n    }\r\n\r\n    \r\n    /**\r\n     * Adds a property to the collection.\r\n     * @param property\r\n     *  The property.\r\n     * @param id\r\n     *  The property's id.\r\n     * @param index\r\n     *  The property's location in the collection.\r\n     * @returns\r\n     *  The property's id.\r\n     */\r\n    public abstract addProperty(property: Property, id: string, index: number): string;\r\n    \r\n    /**\r\n     * Removes a property from the collection.\r\n     * @param id\r\n     *  The property's id.\r\n     */\r\n    public abstract removeProperty(id: string): void;\r\n\r\n    /**\r\n     * Returns a subproperty's location in the collection.\r\n     * @param id\r\n     *  The subproperty's id.\r\n     * @returns\r\n     *  The subproperty's location in the collection.\r\n     */\r\n    public indexOf(id: string): number {\r\n        return [...this.value.keys()].indexOf(id);\r\n    }\r\n\r\n    /**\r\n     * Returns the property's raw value.\r\n     * @returns\r\n     *  The property's raw value.\r\n     */\r\n    public toRawValue(): RawEntries {\r\n        return [...this.value.entries()].map(([id, v]) => [id, v.toRawValue()]);\r\n    }\r\n\r\n    /**\r\n     * Returns the property's hashed value.\r\n     * @returns\r\n     *  The property's hashed value.\r\n     */\r\n    public toHashValue(): number {\r\n        let text = [...this.value.values()].map(v => v.toHashValue()).join(\".\");\r\n        return computeHash(text);\r\n    }\r\n\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  Internal Types  ///////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\ntype CollectionPropertyDescriptor\r\n    = ListPropertyDescriptor\r\n    | DictionaryPropertyDescriptor\r\n","import { \r\n    CollectionProperty,\r\n    DictionaryPropertyDescriptor,\r\n    Property,\r\n    RawEntries\r\n} from \".\";\r\n\r\nexport class DictionaryProperty extends CollectionProperty {\r\n\r\n    /**\r\n     * The property's descriptor.\r\n     */\r\n    public override descriptor: DictionaryPropertyDescriptor;\r\n    \r\n    /**\r\n     * The property's primary key.\r\n     */\r\n    public readonly primaryKey: string | null;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link DictionaryProperty}.\r\n     * @param parent\r\n     *  The property's parent.\r\n     * @param descriptor\r\n     *  The property's descriptor.\r\n     * @param values\r\n     *  The property's values.\r\n     */\r\n    constructor(\r\n        parent: CollectionProperty | undefined,\r\n        descriptor: DictionaryPropertyDescriptor,\r\n        values?: RawEntries\r\n    ) {\r\n        super(parent, descriptor);\r\n        this.descriptor = descriptor;\r\n        this.primaryKey = null;\r\n        // Configure values\r\n        this.value = new Map();\r\n        for(let key in descriptor.form) {\r\n            // Create property\r\n            let val = values?.find(o => o[0] === key)?.at(1);\r\n            let prop = Property.create(this, descriptor.form[key], val);\r\n            // Add property\r\n            this.value.set(key, prop);\r\n            // Configure primary key\r\n            if(!this.primaryKey && prop.descriptor.is_primary) {\r\n                this.primaryKey = key;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Adds a property to the dictionary.\r\n     * @param property\r\n     *  The property.\r\n     * @param id\r\n     *  The property's id.\r\n     * @param index\r\n     *  The property's location in the collection.\r\n     * @returns\r\n     *  The property's id.\r\n     */\r\n    public override addProperty(property: Property, id: string, index: number): string {\r\n        throw new Error(\"Properties cannot be dynamically added to dictionaries.\");\r\n    }\r\n\r\n    /**\r\n     * Removes a property from the dictionary.\r\n     * @param id\r\n     *  The property's id.\r\n     */\r\n    public override removeProperty(id: string): void {\r\n        throw new Error(\"Properties cannot be dynamically removed from dictionaries.\");\r\n    }\r\n\r\n    /**\r\n     * Tests if the primary property is defined.\r\n     * @returns\r\n     *  True if the primary property is defined, false otherwise.\r\n     */\r\n    public isDefined(): boolean {\r\n        if(!this.primaryKey) {\r\n            return false;\r\n        } else {\r\n            return this.value.get(this.primaryKey)!.isDefined();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the property as a string.\r\n     * @returns\r\n     *  The property as a string.\r\n     */\r\n    public toString(): string {\r\n        if(!this.primaryKey) {\r\n            return \"Error - No Primary Key\"\r\n        } else {\r\n            return this.value.get(this.primaryKey)!.toString()\r\n        }\r\n    }\r\n\r\n}\r\n","import { MD5 } from \"../Utilities\";\r\nimport { \r\n    CollectionProperty,\r\n    ListPropertyDescriptor,\r\n    Property,\r\n    RawEntries\r\n} from \".\";\r\n\r\nexport class ListProperty extends CollectionProperty {\r\n    \r\n    /**\r\n     * The property's descriptor.\r\n     */\r\n    public override descriptor: ListPropertyDescriptor;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link ListProperty}.\r\n     * @param parent\r\n     *  The property's parent.\r\n     * @param descriptor\r\n     *  The property's descriptor.\r\n     * @param values\r\n     *  The property's values.\r\n     */\r\n    constructor(\r\n        parent: CollectionProperty | undefined,\r\n        descriptor: ListPropertyDescriptor,\r\n        values?: RawEntries\r\n    ) {\r\n        super(parent, descriptor);\r\n        this.descriptor = descriptor;\r\n        // Configure values\r\n        this.value = new Map();\r\n        if(Array.isArray(values)) {\r\n            for(let [id, value] of values) {\r\n                // Create property\r\n                let prop = Property.create(this, descriptor.form, value);\r\n                // Add property\r\n                this.value.set(id, prop);\r\n            }\r\n        } else if(descriptor.value) {\r\n            if(Array.isArray(descriptor.value)) {\r\n                for(let [id, value] of descriptor.value) {\r\n                    // Create property\r\n                    let prop = Property.create(this, descriptor.form, value);\r\n                    // Add property\r\n                    this.value.set(MD5(id), prop);\r\n                }\r\n            } else {\r\n                for(let id in descriptor.value) {\r\n                    // Create property\r\n                    let value = descriptor.value[id];\r\n                    let prop = Property.create(this, descriptor.form, value);\r\n                    // Add property\r\n                    this.value.set(MD5(id), prop);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n\r\n    /**\r\n     * Adds a property to the collection.\r\n     * @param property\r\n     *  The property.\r\n     * @param id\r\n     *  The property's id.\r\n     *  (Default: Randomly generated)\r\n     * @param index\r\n     *  The property's location in the collection.\r\n     *  (Default: End of the collection)\r\n     * @returns\r\n     *  The property's id.\r\n     */\r\n    public addProperty(\r\n        property: Property,\r\n        id: string = this.getNextId(),\r\n        index: number = this.value.size\r\n    ): string {\r\n        let entries = [...this.value.entries()];\r\n        entries.splice(index, 0, [id, property]);\r\n        this.value = new Map(entries);\r\n        this.updateProperty();\r\n        return id;\r\n    }\r\n    \r\n    /**\r\n     * Removes a property from the collection.\r\n     * @param id\r\n     *  The property's id.\r\n     */\r\n    public removeProperty(id: string) {\r\n        this.value.delete(id);\r\n        this.updateProperty();\r\n    }\r\n\r\n    /**\r\n     * Tests if the property is defined.\r\n     * @returns\r\n     *  True if the property is defined, false otherwise.\r\n     */\r\n    public isDefined(): boolean {\r\n        return 0 < this.value.size;\r\n    }\r\n\r\n    /**\r\n     * Returns the property as a string.\r\n     * @returns\r\n     *  The property as a string.\r\n     */\r\n    public toString(): string {\r\n        return [...this.value.values()].map(v => v.toString()).join(\", \");\r\n    }\r\n\r\n    /**\r\n     * Returns a randomly generated id not in use by the list.\r\n     * @returns\r\n     *  A randomly generated id.\r\n     */\r\n    private getNextId() {\r\n        let id = MD5(crypto.randomUUID());\r\n        while(this.value.has(id)) {\r\n            id = MD5(crypto.randomUUID());\r\n        }\r\n        return id;\r\n    }\r\n\r\n}\r\n","import { computeHash, MD5 } from \"../Utilities\";\r\nimport {\r\n    CollectionProperty,\r\n    EnumPropertyDescriptor,\r\n    ListProperty,\r\n    Property\r\n} from \".\";\r\n\r\nexport class EnumProperty extends Property {\r\n    \r\n    /**\r\n     * The property's descriptor.\r\n     */\r\n    public override readonly descriptor: EnumPropertyDescriptor;\r\n\r\n    /**\r\n     * The property's list of options.\r\n     */\r\n    public readonly options: ListProperty;\r\n\r\n    /**\r\n     * The property's value.\r\n     */\r\n    private _value: string | null;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link EnumProperty}.\r\n     * @param parent\r\n     *  The property's parent.\r\n     * @param descriptor\r\n     *  The property's descriptor.\r\n     * @param value\r\n     *  The property's value.\r\n     */\r\n    constructor(\r\n        parent: CollectionProperty | undefined,\r\n        descriptor: EnumPropertyDescriptor,\r\n        value?: any\r\n    ) {\r\n        super(parent, descriptor);\r\n        let options = Property.create(undefined, descriptor.options);\r\n        this.descriptor = descriptor;\r\n        this.options = options as ListProperty;\r\n        this._value = null;\r\n        // Resolve value\r\n        let v;\r\n        if(value === null) {\r\n            v = null;\r\n        } else if(value !== undefined) {\r\n            v = value;\r\n        } else if(descriptor.value) {\r\n            v = MD5(descriptor.value)\r\n        } else {\r\n            v = null;\r\n        }\r\n        // Set value\r\n        if(v === null) {\r\n            this.setValue(null);\r\n        } else if(typeof v === \"string\") { \r\n            this.setValue(v);\r\n        } else {\r\n            this.setValue(null);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Tests if the property is defined.\r\n     * @returns\r\n     *  True if the property is defined, false otherwise.\r\n     */\r\n    public isDefined(): boolean {\r\n        return this._value !== null;\r\n    }\r\n\r\n    /**\r\n     * Sets the property's value.\r\n     * @param value\r\n     *  The new value.\r\n     */\r\n    public setValue(value: string | null) {\r\n        if(value === null) {\r\n            this._value = null;\r\n        } else {\r\n            if(this.options.value.has(value)) {\r\n                this._value = value;\r\n            } else {\r\n                this._value = null;\r\n            }\r\n        }\r\n        this.updateProperty();\r\n    }\r\n\r\n    /**\r\n     * Returns the property's reference value.\r\n     * @returns\r\n     *  The property's reference value.\r\n     */\r\n    public toReferenceValue(): Property | null {\r\n        if(this._value === null) {\r\n            return null;\r\n        } else {\r\n            return this.options.value.get(this._value)!;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Returns the property's raw value.\r\n     * @returns\r\n     *  The property's raw value.\r\n     */\r\n    public toRawValue(): string | null {\r\n        return this._value;\r\n    }\r\n    \r\n    /**\r\n     * Returns the property's hashed value.\r\n     * @returns\r\n     *  The property's hashed value.\r\n     */\r\n    public toHashValue(): number {\r\n        if(this._value === null) {\r\n            return computeHash(\"\");\r\n        } else {\r\n            return computeHash(`v:${ this._value }`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the property as a string.\r\n     * @returns\r\n     *  The property as a string.\r\n     */\r\n    public toString(): string {\r\n        return this.toReferenceValue()?.toString() ?? \"Null\";\r\n    }\r\n\r\n}\r\n","import { DiagramObjectModel } from \"../DiagramModelTypes\";\r\nimport {\r\n    DictionaryProperty,\r\n    DictionaryPropertyDescriptor,\r\n    PropertyType,\r\n    RootPropertyDescriptor\r\n} from \".\";\r\n\r\nexport class RootProperty extends DictionaryProperty {\r\n\r\n    /**\r\n     * The property's associated object.\r\n     */\r\n    public object: DiagramObjectModel;\r\n\r\n    /**\r\n     * The property's 'update event' handler.\r\n     */\r\n    private _notifyPropertyUpdate: (() => void) | undefined;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link RootProperty}.\r\n     * @param object\r\n     *  The property's associated object.\r\n     * @param descriptor\r\n     *  The property's descriptor.\r\n     * @param values\r\n     *  The property's values.\r\n     */\r\n    constructor(\r\n        object: DiagramObjectModel,\r\n        descriptor: RootPropertyDescriptor,\r\n        values?: any\r\n    ) {\r\n        let dpd: DictionaryPropertyDescriptor = {\r\n            type: PropertyType.Dictionary,\r\n            form: descriptor\r\n        }\r\n        super(undefined, dpd, values);\r\n        this.object = object;\r\n    }\r\n\r\n\r\n    /**\r\n     * Updates the property's trigger. \r\n     */\r\n    protected override updateProperty(): void {\r\n        super.updateProperty();\r\n        if(this._notifyPropertyUpdate) {\r\n            this._notifyPropertyUpdate();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Configures the property's 'update event' handler.\r\n     * @param listener\r\n     *  A function to invoke when the property's value changes.\r\n     */\r\n    public onUpdate(listener: () => void) {\r\n        this._notifyPropertyUpdate = listener;\r\n    }\r\n\r\n}","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./ValidatorProblems.vue?vue&type=style&index=0&id=511f70e2&scoped=true&lang=css\"","import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveDynamicComponent as _resolveDynamicComponent, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-5181abbf\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"dictionary-field-contents-control\" }\nconst _hoisted_2 = { class: \"field-name\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.fields, ([key, value]) => {\n      return (_openBlock(), _createElementBlock(\"div\", {\n        class: \"field-item\",\n        key: key\n      }, [\n        _createElementVNode(\"p\", _hoisted_2, _toDisplayString(_ctx.titleCase(key)), 1),\n        (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.getField(value.type)), {\n          class: \"field-value\",\n          property: value,\n          onChange: _cache[0] || (_cache[0] = (...args) => _ctx.$emit('change', ...args)),\n          onCreate: _cache[1] || (_cache[1] = (...args) => _ctx.$emit('create', ...args)),\n          onDelete: _cache[2] || (_cache[2] = (...args) => _ctx.$emit('delete', ...args))\n        }, null, 40, [\"property\"]))\n      ]))\n    }), 128))\n  ]))\n}","import { vShow as _vShow, createElementVNode as _createElementVNode, withDirectives as _withDirectives, toDisplayString as _toDisplayString, withModifiers as _withModifiers, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-1212d968\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"grid-container\" }\nconst _hoisted_2 = { class: \"placeholder\" }\nconst _hoisted_3 = [\"contenteditable\"]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass(['text-field-control', { disabled: !_ctx.isEditable }]),\n    tabindex: \"0\",\n    onFocus: _cache[4] || (_cache[4] = ($event: any) => (_ctx.onFocus()))\n  }, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _withDirectives(_createElementVNode(\"p\", _hoisted_2, \" Null \", 512), [\n        [_vShow, _ctx.showPlaceholder]\n      ]),\n      _createElementVNode(\"div\", {\n        ref: \"field\",\n        class: \"field\",\n        onInput: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.onInput && _ctx.onInput(...args))),\n        onKeyup: _cache[1] || (_cache[1] = _withModifiers(() => {}, [\"stop\"])),\n        onKeydown: _cache[2] || (_cache[2] = _withModifiers(() => {}, [\"stop\"])),\n        onBlur: _cache[3] || (_cache[3] = \n//@ts-ignore\n(...args) => (_ctx.onBlur && _ctx.onBlur(...args))),\n        contenteditable: _ctx.isEditable\n      }, _toDisplayString(this.value), 41, _hoisted_3)\n    ])\n  ], 34))\n}","\r\nimport { StringProperty } from \"@/assets/scripts/BlockDiagram\";\r\nimport { defineComponent, PropType, ref } from \"vue\";\r\n\r\nexport default defineComponent({\r\n  name: \"TextField\",\r\n  setup() {\r\n    return { field: ref<HTMLElement | null>(null) };\r\n  },\r\n  props: {\r\n    property: {\r\n      type: Object as PropType<StringProperty>,\r\n      required: true\r\n    },\r\n    updateTimeout: {\r\n      type: Number,\r\n      default: 300\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      sto: 0,\r\n      value: \"\",\r\n      cache: \"\",\r\n      showPlaceholder: true\r\n    }\r\n  },\r\n  computed: {\r\n\r\n    /**\r\n     * A reactive version of the property.\r\n     * @returns\r\n     *  The property.\r\n     */\r\n    _property(): StringProperty {\r\n      let trigger = this.property.trigger.value;\r\n      return trigger ? this.property : this.property; \r\n    },\r\n\r\n    /**\r\n     * Tests if the property is editable.\r\n     * @returns\r\n     *  True if the property is editable, false otherwise. \r\n     */\r\n    isEditable(): boolean {\r\n      return this._property.descriptor.is_editable ?? true;\r\n    }\r\n\r\n  },\r\n  methods: {\r\n    \r\n    /**\r\n     * Field focus behavior.\r\n     */\r\n    onFocus() {\r\n      this.$nextTick(() => {\r\n        this.field!.focus();\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Field input behavior.\r\n     */\r\n    onInput() {\r\n      // Clear timeout\r\n      clearTimeout(this.sto)\r\n      // Update cached value\r\n      this.cache = this.field!.innerText;\r\n      // Configure timeout\r\n      this.sto = setTimeout(() => {\r\n        this.updateProperty();\r\n      }, this.updateTimeout);\r\n      // Update placeholder\r\n      this.showPlaceholder = this.field!.innerText === \"\";\r\n    },\r\n\r\n    /**\r\n     * Field blur behavior.\r\n     */\r\n    onBlur() {\r\n      // Clear timeout\r\n      clearTimeout(this.sto);\r\n      // Update property\r\n      this.updateProperty();\r\n    },\r\n\r\n    /**\r\n     * Updates the field's property value.\r\n     */\r\n    updateProperty() {\r\n      let value = this.cache || null;\r\n      if(this._property.toRawValue() !== value) {\r\n        // Update property\r\n        this.$emit(\"change\", this._property, value);\r\n      } else {\r\n        // Refresh value\r\n        this.refreshValue();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Updates the field's text value.\r\n     */\r\n    refreshValue() {\r\n      let raw = this._property.toRawValue();\r\n      if(this.field !== document.activeElement) {\r\n        this.value = raw ?? \"\";\r\n      }\r\n      this.cache = raw ?? \"\";\r\n      this.showPlaceholder = raw === null;\r\n    }\r\n\r\n  },\r\n  emits: [\"change\"],\r\n  watch: {\r\n    \"_property.trigger.value\"() {\r\n      this.refreshValue();\r\n    }\r\n  },\r\n  mounted() {\r\n    this.refreshValue();\r\n  }\r\n});\r\n","import { render } from \"./TextField.vue?vue&type=template&id=1212d968&scoped=true&ts=true\"\nimport script from \"./TextField.vue?vue&type=script&lang=ts\"\nexport * from \"./TextField.vue?vue&type=script&lang=ts\"\n\nimport \"./TextField.vue?vue&type=style&index=0&id=1212d968&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\mcarenzo\\\\Desktop\\\\attack-flow-builder - Copy\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1212d968\"]])\n\nexport default __exports__","import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveDynamicComponent as _resolveDynamicComponent, withCtx as _withCtx, createBlock as _createBlock, resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-1f8ec412\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"list-field-control\" }\nconst _hoisted_2 = [\"onPointerdown\"]\nconst _hoisted_3 = [\"onPointerdown\"]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_Plus = _resolveComponent(\"Plus\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx._property.value, ([key, value]) => {\n      return (_openBlock(), _createElementBlock(\"div\", {\n        class: \"field-item\",\n        key: key\n      }, [\n        (_ctx.getField(value.type) === 'DictionaryField')\n          ? (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.getField(value.type)), {\n              key: 0,\n              property: value,\n              onChange: _cache[0] || (_cache[0] = (...args) => _ctx.$emit('change', ...args)),\n              onCreate: _cache[1] || (_cache[1] = (...args) => _ctx.$emit('create', ...args)),\n              onDelete: _cache[2] || (_cache[2] = (...args) => _ctx.$emit('delete', ...args))\n            }, {\n              default: _withCtx(() => [\n                (_ctx.isEditable)\n                  ? (_openBlock(), _createElementBlock(\"button\", {\n                      key: 0,\n                      class: \"delete-button\",\n                      onPointerdown: ($event: any) => (_ctx.onDelete(key)),\n                      tabindex: \"-1\"\n                    }, \"✗\", 40, _hoisted_2))\n                  : _createCommentVNode(\"\", true)\n              ]),\n              _: 2\n            }, 1064, [\"property\"]))\n          : (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, [\n              (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.getField(value.type)), {\n                property: value,\n                onChange: _cache[3] || (_cache[3] = (...args) => _ctx.$emit('change', ...args)),\n                onCreate: _cache[4] || (_cache[4] = (...args) => _ctx.$emit('create', ...args)),\n                onDelete: _cache[5] || (_cache[5] = (...args) => _ctx.$emit('delete', ...args))\n              }, null, 40, [\"property\"])),\n              (_ctx.isEditable)\n                ? (_openBlock(), _createElementBlock(\"button\", {\n                    key: 0,\n                    class: \"delete-button\",\n                    onPointerdown: ($event: any) => (_ctx.onDelete(key)),\n                    tabindex: \"-1\"\n                  }, \"✗\", 40, _hoisted_3))\n                : _createCommentVNode(\"\", true)\n            ], 64))\n      ]))\n    }), 128)),\n    (_ctx.isEditable)\n      ? (_openBlock(), _createElementBlock(\"button\", {\n          key: 0,\n          class: \"create-button\",\n          onPointerdown: _cache[6] || (_cache[6] = ($event: any) => (_ctx.onCreate()))\n        }, [\n          _createElementVNode(\"span\", null, [\n            _createVNode(_component_Plus)\n          ]),\n          _createTextVNode(\"Add \")\n        ], 32))\n      : _createCommentVNode(\"\", true)\n  ]))\n}","import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = [\"fill\"]\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"path\", { d: \"m0.79375 0v0.79375h-0.79375v0.52917h0.79375v0.79375h0.52917v-0.79375h0.79375v-0.52917h-0.79375v-0.79375z\" }, null, -1)\nconst _hoisted_3 = [\n  _hoisted_2\n]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"svg\", {\n    width: \"8\",\n    height: \"8\",\n    version: \"1.1\",\n    viewBox: \"0 0 2.1167 2.1167\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: _ctx.color\n  }, _hoisted_3, 8, _hoisted_1))\n}","\r\nimport { defineComponent } from \"vue\";\r\nexport default defineComponent({ \r\n  name: \"Plus\",\r\n  props: {\r\n    color: {\r\n      type: String,\r\n      default: \"#737373\"\r\n    }\r\n  }\r\n});\r\n","import { render } from \"./Plus.vue?vue&type=template&id=4511a762&ts=true\"\nimport script from \"./Plus.vue?vue&type=script&lang=ts\"\nexport * from \"./Plus.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"C:\\\\Users\\\\mcarenzo\\\\Desktop\\\\attack-flow-builder - Copy\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, resolveComponent as _resolveComponent, normalizeStyle as _normalizeStyle, withCtx as _withCtx, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-2178b796\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"grid-container\" }\nconst _hoisted_2 = { class: \"value-container\" }\nconst _hoisted_3 = {\n  key: 0,\n  class: \"dropdown-arrow\"\n}\nconst _hoisted_4 = { class: \"dropdown-options\" }\nconst _hoisted_5 = [\"onMouseenter\", \"onClick\"]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ScrollBox = _resolveComponent(\"ScrollBox\")!\n  const _component_FocusBox = _resolveComponent(\"FocusBox\")!\n\n  return (_openBlock(), _createBlock(_component_FocusBox, {\n    class: _normalizeClass(['enum-field-control', { disabled: !_ctx.isEditable, open: _ctx.showMenu }]),\n    onFocus: _ctx.openMenu,\n    onUnfocus: _ctx.closeMenu\n  }, {\n    default: _withCtx(() => [\n      _createElementVNode(\"div\", _hoisted_1, [\n        _createElementVNode(\"div\", _hoisted_2, [\n          _createElementVNode(\"div\", {\n            class: _normalizeClass(['value-text', { 'is-null': _ctx.isNull }])\n          }, _toDisplayString(_ctx._property.toString()), 3),\n          (_ctx.isEditable)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, \"▼\"))\n            : _createCommentVNode(\"\", true)\n        ]),\n        (_ctx.showMenu)\n          ? (_openBlock(), _createBlock(_component_ScrollBox, {\n              key: 0,\n              propagateScroll: false,\n              style: _normalizeStyle(_ctx.style)\n            }, {\n              default: _withCtx(() => [\n                _createElementVNode(\"ul\", _hoisted_4, [\n                  _createElementVNode(\"li\", {\n                    class: _normalizeClass([{ active: _ctx.hovered === 'null' }, 'null']),\n                    onMouseenter: _cache[0] || (_cache[0] = ($event: any) => (_ctx.hovered = 'null')),\n                    onClick: _cache[1] || (_cache[1] = _withModifiers(($event: any) => (_ctx.updateProperty(null)), [\"stop\"]))\n                  }, \" Null \", 34),\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.options, ([k, v]) => {\n                    return (_openBlock(), _createElementBlock(\"li\", {\n                      key: k,\n                      class: _normalizeClass({ active: _ctx.hovered === k }),\n                      onMouseenter: ($event: any) => (_ctx.hovered = k),\n                      onClick: _withModifiers(($event: any) => (_ctx.updateProperty(k)), [\"stop\"])\n                    }, _toDisplayString(v.toString()), 43, _hoisted_5))\n                  }), 128))\n                ])\n              ]),\n              _: 1\n            }, 8, [\"style\"]))\n          : _createCommentVNode(\"\", true)\n      ])\n    ]),\n    _: 1\n  }, 8, [\"class\", \"onFocus\", \"onUnfocus\"]))\n}","\r\n// Dependencies\r\nimport { EnumProperty, Property } from \"@/assets/scripts/BlockDiagram\";\r\nimport { defineComponent, PropType } from \"vue\";\r\n// Components\r\nimport FocusBox from \"@/components/Containers/FocusBox.vue\";\r\nimport ScrollBox from \"@/components/Containers/ScrollBox.vue\";\r\n\r\nexport default defineComponent({\r\n  name: \"EnumField\",\r\n  props: {\r\n    property: {\r\n      type: Object as PropType<EnumProperty>,\r\n      required: true\r\n    },\r\n    maxHeight: {\r\n      type: Number,\r\n      default: 200\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      hovered: \"\",\r\n      showMenu: false\r\n    }\r\n  },\r\n  computed: {\r\n\r\n    /**\r\n     * A reactive version of the property.\r\n     * @returns\r\n     *  The property.\r\n     */\r\n    _property(): EnumProperty {\r\n      let trigger = this.property.trigger.value;\r\n      return trigger ? this.property : this.property; \r\n    },\r\n\r\n    /**\r\n     * Tests if the property is editable.\r\n     * @returns\r\n     *  True if the property is editable, false otherwise. \r\n     */\r\n    isEditable(): boolean {\r\n      return this._property.descriptor.is_editable ?? true;\r\n    },\r\n\r\n    /**\r\n     * Returns the property's set of options.\r\n     * @returns\r\n     *  The property's set of options.\r\n     */\r\n    options(): Map<string, Property> {\r\n      return this._property.options.value;\r\n    },\r\n\r\n    /**\r\n     * Tests if the property's value is null.\r\n     * @returns\r\n     *  True if the property's value is null, false otherwise.\r\n     */\r\n    isNull(): boolean {\r\n      return this._property.toRawValue() === null;\r\n    },\r\n\r\n    /**\r\n     * Returns the scrollbox's style.\r\n     * @returns\r\n     *  The scrollbox's style.\r\n     */\r\n    style(): { maxHeight: string } {\r\n      return { maxHeight: `${ this.maxHeight }px` };\r\n    }\r\n\r\n  },\r\n  methods: {\r\n    \r\n    /**\r\n     * Opens the options menu.\r\n     */\r\n    openMenu() {\r\n      if(!this.isEditable) {\r\n        return;\r\n      }\r\n      this.showMenu = true;      \r\n    },\r\n\r\n    /**\r\n     * Closes the options menu.\r\n     */\r\n    closeMenu() {\r\n      // Close menu\r\n      this.showMenu = false;\r\n      // Refresh value\r\n      this.refreshValue();\r\n    },\r\n\r\n    /**\r\n     * Updates the field's property value.\r\n     * @param value\r\n     *  The property's new value.\r\n     */\r\n    updateProperty(value: string | null) {\r\n      if(this._property.toRawValue() !== value) {\r\n        // Update property\r\n        this.$emit(\"change\", this._property, value);\r\n      } else {\r\n        // Refresh value\r\n        this.refreshValue();\r\n      }\r\n      // Close menu\r\n      this.showMenu = false;\r\n    },\r\n\r\n    /**\r\n     * Updates the field's text value.\r\n     */\r\n    refreshValue() {\r\n      this.hovered = this._property.toRawValue() ?? \"null\"\r\n    }\r\n    \r\n  },\r\n  emits: [\"change\"],\r\n  watch: {\r\n    \"_property.trigger.value\"() {\r\n      this.refreshValue();\r\n    }\r\n  },\r\n  mounted() {\r\n    this.refreshValue();\r\n  },\r\n  components: { FocusBox, ScrollBox }\r\n});\r\n","import { render } from \"./EnumField.vue?vue&type=template&id=2178b796&scoped=true&ts=true\"\nimport script from \"./EnumField.vue?vue&type=script&lang=ts\"\nexport * from \"./EnumField.vue?vue&type=script&lang=ts\"\n\nimport \"./EnumField.vue?vue&type=style&index=0&id=2178b796&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\mcarenzo\\\\Desktop\\\\attack-flow-builder - Copy\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2178b796\"]])\n\nexport default __exports__","import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-60cf922a\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = [\"disabled\"]\nconst _hoisted_2 = {\n  key: 0,\n  class: \"increment-arrows\"\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass(['number-field-control', { disabled: !_ctx.isEditable }]),\n    tabindex: \"0\",\n    onFocus: _cache[6] || (_cache[6] = ($event: any) => (_ctx.onFocus()))\n  }, [\n    _withDirectives(_createElementVNode(\"input\", {\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.value) = $event)),\n      type: \"text\",\n      ref: \"field\",\n      placeholder: \"Null\",\n      onInput: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.onInput && _ctx.onInput(...args))),\n      onKeydown: _cache[2] || (_cache[2] = \n//@ts-ignore\n(...args) => (_ctx.onKeyDown && _ctx.onKeyDown(...args))),\n      onBlur: _cache[3] || (_cache[3] = \n//@ts-ignore\n(...args) => (_ctx.onBlur && _ctx.onBlur(...args))),\n      disabled: !_ctx.isEditable\n    }, null, 40, _hoisted_1), [\n      [_vModelText, _ctx.value]\n    ]),\n    (_ctx.isEditable)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [\n          _createElementVNode(\"div\", {\n            class: \"up-arrow\",\n            onClick: _cache[4] || (_cache[4] = ($event: any) => (_ctx.updateProperty(+1)))\n          }, \"▲\"),\n          _createElementVNode(\"div\", {\n            class: \"down-arrow\",\n            onClick: _cache[5] || (_cache[5] = ($event: any) => (_ctx.updateProperty(-1)))\n          }, \"▼\")\n        ]))\n      : _createCommentVNode(\"\", true)\n  ], 34))\n}","\r\nimport { defineComponent, PropType, ref } from \"vue\";\r\nimport { clamp, NumberProperty, PropertyType } from \"@/assets/scripts/BlockDiagram\";\r\n\r\nexport default defineComponent({\r\n  name: \"NumberField\",\r\n  setup() {\r\n    return { field: ref<HTMLInputElement | null>(null) };\r\n  },\r\n  props: {\r\n    property: {\r\n      type: Object as PropType<NumberProperty>,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      value: \"\"\r\n    }\r\n  },\r\n  computed: {\r\n\r\n    /**\r\n     * A reactive version of the property.\r\n     * @returns\r\n     *  The property.\r\n     */\r\n    _property(): NumberProperty {\r\n      let trigger = this.property.trigger.value;\r\n      return trigger ? this.property : this.property; \r\n    },\r\n    \r\n    /**\r\n     * Tests if the property is editable.\r\n     * @returns\r\n     *  True if the property is editable, false otherwise. \r\n     */\r\n    isEditable(): boolean {\r\n      return this._property.descriptor.is_editable ?? true;\r\n    }\r\n\r\n  },\r\n  methods: {\r\n\r\n    /**\r\n     * Field focus behavior.\r\n     */\r\n    onFocus() {\r\n      this.$nextTick(() => {\r\n        this.field!.focus();\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Field input behavior.\r\n     */\r\n    onInput() {\r\n      if(this.value === \"\") {\r\n        this.updateProperty(0);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Field blur behavior.\r\n     */\r\n    onBlur() {\r\n      this.updateProperty(0);\r\n    },\r\n\r\n    /**\r\n     * Field keydown behavior.\r\n     * @param event\r\n     *  The keydown event.\r\n     */\r\n    onKeyDown(event: KeyboardEvent) {\r\n      switch(event.key) {\r\n        case \"ArrowUp\":\r\n          event.preventDefault();\r\n          this.updateProperty(+1);\r\n          break;\r\n        case \"ArrowDown\":\r\n          event.preventDefault();\r\n          this.updateProperty(-1);\r\n          break;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Updates the field's property value.\r\n     * @param delta\r\n     *  The amount to add to the parsed value.\r\n     *  (Default: 0)\r\n     */\r\n    updateProperty(delta: number = 0) {\r\n      let value;\r\n      if(this.value === \"\" && delta === 0) {\r\n        // Parse null\r\n        value = null;\r\n      } else {\r\n        // Parse value\r\n        value = parseFloat(this.value);\r\n        if(Number.isNaN(value)) {\r\n          value = 0;\r\n        } else {\r\n          value += delta;\r\n        }\r\n        // Bound value\r\n        let { min, max } = this._property;\r\n        value = clamp(value, min, max); \r\n        // Bound type\r\n        if(this._property.type === PropertyType.Int) {\r\n          value = Math.round(value);\r\n        }\r\n      }\r\n      if(this._property.toRawValue() !== value) {\r\n        // Update value\r\n        this.$emit(\"change\", this._property, value);\r\n      } else {\r\n        // Refresh value\r\n        this.refreshValue();\r\n      }  \r\n    },\r\n\r\n    /**\r\n     * Updates the field's text value.\r\n     */\r\n    refreshValue() {\r\n      this.value = `${ this._property.toRawValue() ?? \"\" }`\r\n    }\r\n    \r\n  },\r\n  emits: [\"change\"],\r\n  watch: {\r\n    \"_property.trigger.value\"() {\r\n      this.refreshValue();\r\n    }\r\n  },\r\n  mounted() {\r\n    this.refreshValue();\r\n  }\r\n});\r\n","import { render } from \"./NumberField.vue?vue&type=template&id=60cf922a&scoped=true&ts=true\"\nimport script from \"./NumberField.vue?vue&type=script&lang=ts\"\nexport * from \"./NumberField.vue?vue&type=script&lang=ts\"\n\nimport \"./NumberField.vue?vue&type=style&index=0&id=60cf922a&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\mcarenzo\\\\Desktop\\\\attack-flow-builder - Copy\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-60cf922a\"]])\n\nexport default __exports__","import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, vShow as _vShow, createElementVNode as _createElementVNode, withDirectives as _withDirectives, vModelText as _vModelText, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-f603942e\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"grid-container\" }\nconst _hoisted_2 = { class: \"value\" }\nconst _hoisted_3 = {\n  key: 0,\n  class: \"null-value\"\n}\nconst _hoisted_4 = {\n  key: 1,\n  class: \"date-value\"\n}\nconst _hoisted_5 = { class: \"editor\" }\nconst _hoisted_6 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"/\", -1))\nconst _hoisted_7 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"/\", -1))\nconst _hoisted_8 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"space\" }, null, -1))\nconst _hoisted_9 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \":\", -1))\nconst _hoisted_10 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \":\", -1))\nconst _hoisted_11 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"timezone\" }, \"Z\", -1))\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass(['datetime-field-control', { disabled: !_ctx.isEditable }]),\n    tabindex: \"0\",\n    onFocus: _cache[18] || (_cache[18] = ($event: any) => (_ctx.enterEditMode()))\n  }, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _withDirectives(_createElementVNode(\"div\", _hoisted_2, [\n        (_ctx.value === null)\n          ? (_openBlock(), _createElementBlock(\"p\", _hoisted_3, \" Null \"))\n          : (_openBlock(), _createElementBlock(\"p\", _hoisted_4, _toDisplayString(_ctx.prop_M) + \" \" + _toDisplayString(_ctx.prop_D) + \", \" + _toDisplayString(_ctx.prop_Y) + \" - \" + _toDisplayString(_ctx.prop_H) + \":\" + _toDisplayString(_ctx.prop_m) + \":\" + _toDisplayString(_ctx.prop_s), 1))\n      ], 512), [\n        [_vShow, !_ctx.showEditor]\n      ]),\n      _withDirectives(_createElementVNode(\"div\", _hoisted_5, [\n        _withDirectives(_createElementVNode(\"input\", {\n          type: \"text\",\n          maxlength: \"2\",\n          segment: \"M\",\n          ref: \"M\",\n          class: \"M\",\n          placeholder: \"MM\",\n          onBlur: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.onBlur && _ctx.onBlur(...args))),\n          onKeydown: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.onKeyDown && _ctx.onKeyDown(...args))),\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((_ctx.value_M) = $event))\n        }, null, 544), [\n          [_vModelText, _ctx.value_M]\n        ]),\n        _hoisted_6,\n        _withDirectives(_createElementVNode(\"input\", {\n          type: \"text\",\n          maxlength: \"2\",\n          segment: \"D\",\n          ref: \"D\",\n          class: \"D\",\n          placeholder: \"DD\",\n          onBlur: _cache[3] || (_cache[3] = \n//@ts-ignore\n(...args) => (_ctx.onBlur && _ctx.onBlur(...args))),\n          onKeydown: _cache[4] || (_cache[4] = \n//@ts-ignore\n(...args) => (_ctx.onKeyDown && _ctx.onKeyDown(...args))),\n          \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((_ctx.value_D) = $event))\n        }, null, 544), [\n          [_vModelText, _ctx.value_D]\n        ]),\n        _hoisted_7,\n        _withDirectives(_createElementVNode(\"input\", {\n          type: \"text\",\n          maxlength: \"4\",\n          segment: \"Y\",\n          ref: \"Y\",\n          class: \"Y\",\n          placeholder: \"YYYY\",\n          onBlur: _cache[6] || (_cache[6] = \n//@ts-ignore\n(...args) => (_ctx.onBlur && _ctx.onBlur(...args))),\n          onKeydown: _cache[7] || (_cache[7] = \n//@ts-ignore\n(...args) => (_ctx.onKeyDown && _ctx.onKeyDown(...args))),\n          \"onUpdate:modelValue\": _cache[8] || (_cache[8] = ($event: any) => ((_ctx.value_Y) = $event))\n        }, null, 544), [\n          [_vModelText, _ctx.value_Y]\n        ]),\n        _hoisted_8,\n        _withDirectives(_createElementVNode(\"input\", {\n          type: \"text\",\n          maxlength: \"2\",\n          segment: \"H\",\n          ref: \"H\",\n          class: \"H\",\n          placeholder: \"HH\",\n          onBlur: _cache[9] || (_cache[9] = \n//@ts-ignore\n(...args) => (_ctx.onBlur && _ctx.onBlur(...args))),\n          onKeydown: _cache[10] || (_cache[10] = \n//@ts-ignore\n(...args) => (_ctx.onKeyDown && _ctx.onKeyDown(...args))),\n          \"onUpdate:modelValue\": _cache[11] || (_cache[11] = ($event: any) => ((_ctx.value_H) = $event))\n        }, null, 544), [\n          [_vModelText, _ctx.value_H]\n        ]),\n        _hoisted_9,\n        _withDirectives(_createElementVNode(\"input\", {\n          type: \"text\",\n          maxlength: \"2\",\n          segment: \"m\",\n          ref: \"m\",\n          class: \"m\",\n          placeholder: \"mm\",\n          onBlur: _cache[12] || (_cache[12] = \n//@ts-ignore\n(...args) => (_ctx.onBlur && _ctx.onBlur(...args))),\n          onKeydown: _cache[13] || (_cache[13] = \n//@ts-ignore\n(...args) => (_ctx.onKeyDown && _ctx.onKeyDown(...args))),\n          \"onUpdate:modelValue\": _cache[14] || (_cache[14] = ($event: any) => ((_ctx.value_m) = $event))\n        }, null, 544), [\n          [_vModelText, _ctx.value_m]\n        ]),\n        _hoisted_10,\n        _withDirectives(_createElementVNode(\"input\", {\n          type: \"text\",\n          maxlength: \"2\",\n          segment: \"s\",\n          ref: \"s\",\n          class: \"s\",\n          placeholder: \"ss\",\n          onBlur: _cache[15] || (_cache[15] = \n//@ts-ignore\n(...args) => (_ctx.onBlur && _ctx.onBlur(...args))),\n          onKeydown: _cache[16] || (_cache[16] = \n//@ts-ignore\n(...args) => (_ctx.onKeyDown && _ctx.onKeyDown(...args))),\n          \"onUpdate:modelValue\": _cache[17] || (_cache[17] = ($event: any) => ((_ctx.value_s) = $event))\n        }, null, 544), [\n          [_vModelText, _ctx.value_s]\n        ]),\n        _hoisted_11\n      ], 512), [\n        [_vShow, _ctx.showEditor]\n      ])\n    ])\n  ], 34))\n}","\r\nimport { DateProperty } from \"@/assets/scripts/BlockDiagram\";\r\nimport { defineComponent, PropType, ref } from \"vue\";\r\n\r\nconst Segment = [\r\n  \"M\", \"D\", \"Y\",\r\n  \"H\", \"m\", \"s\"\r\n]\r\n\r\nconst Months = [\r\n  \"Jan\", \"Feb\", \"Mar\", \r\n  \"Apr\", \"May\", \"Jun\",\r\n  \"Jul\", \"Aug\", \"Sep\",\r\n  \"Oct\", \"Nov\", \"Dec\"\r\n]\r\n\r\nexport default defineComponent({\r\n  name: \"DateTimeField\",\r\n  setup() {\r\n    return { \r\n      M: ref<HTMLInputElement | null>(null),\r\n      D: ref<HTMLInputElement | null>(null),\r\n      Y: ref<HTMLInputElement | null>(null),\r\n      H: ref<HTMLInputElement | null>(null),\r\n      m: ref<HTMLInputElement | null>(null),\r\n      s: ref<HTMLInputElement | null>(null),\r\n    };\r\n  },\r\n  props: {\r\n    property: {\r\n      type: Object as PropType<DateProperty>,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      value_M: \"\",\r\n      value_D: \"\",\r\n      value_Y: \"\",\r\n      value_H: \"\",\r\n      value_m: \"\",\r\n      value_s: \"\",\r\n      showEditor: false\r\n    }\r\n  },\r\n  computed: {\r\n\r\n    /**\r\n     * A reactive version of the property.\r\n     * @returns\r\n     *  The property.\r\n     */\r\n    _property(): DateProperty {\r\n      let trigger = this.property.trigger.value;\r\n      return trigger ? this.property : this.property; \r\n    },\r\n\r\n    /**\r\n     * Tests if the property is editable.\r\n     * @returns\r\n     *  True if the property is editable, false otherwise. \r\n     */\r\n    isEditable(): boolean {\r\n      return this._property.descriptor.is_editable ?? true;\r\n    },\r\n\r\n    /**\r\n     * The property's raw value.\r\n     * @returns\r\n     *  the property's raw value.\r\n     */\r\n    value(): Date | null {\r\n      let value = this._property.toRawValue();\r\n      return value !== null ? new Date(value) : value;\r\n    },\r\n\r\n    /**\r\n     * Returns the currently configured month.\r\n     * @returns\r\n     *  The currently configured month.\r\n     */\r\n    prop_M(): string {\r\n      let v = this.value;\r\n      return v ? Months[v.getUTCMonth()] : \"Null\";\r\n    },\r\n\r\n    /**\r\n     * Returns the currently configured day.\r\n     * @returns\r\n     *  The currently configured day.\r\n     */\r\n    prop_D(): string {\r\n      let v = this.value;\r\n      return `${ v?.getUTCDate() ?? 'Null' }`;\r\n    },\r\n    \r\n    /**\r\n     * Returns the currently configured year.\r\n     * @returns\r\n     *  The currently configured year.\r\n     */\r\n    prop_Y(): string {\r\n      let v = this.value;\r\n      return `${ v?.getUTCFullYear() ?? 'Null' }`;\r\n    },\r\n\r\n    /**\r\n     * Returns the currently configured hour.\r\n     * @returns\r\n     *  The currently configured hour.\r\n     */\r\n    prop_H(): string {\r\n      let v = this.value;\r\n      return v ? `${ v.getUTCHours() }`.padStart(2, '0') : \"Null\";\r\n    },\r\n\r\n    /**\r\n     * Returns the currently configured minute.\r\n     * @returns\r\n     *  The currently configured minute.\r\n     */\r\n    prop_m(): string {\r\n      let v = this.value;\r\n      return v ? `${ v.getUTCMinutes() }`.padStart(2, '0') : \"Null\";\r\n    },\r\n\r\n    /**\r\n     * Returns the currently configured second.\r\n     * @returns\r\n     *  The currently configured second.\r\n     */\r\n    prop_s(): string {\r\n      let v = this.value;\r\n      return v ? `${ v.getUTCSeconds() }`.padStart(2, '0') : \"Null\";\r\n    }\r\n\r\n  },\r\n  methods: {\r\n\r\n    /**\r\n     * Field segment blur behavior.\r\n     * @param event\r\n     *  The blur event.\r\n     */\r\n    onBlur(event: FocusEvent) {\r\n      if(!this.$el.contains(event.relatedTarget)) {\r\n        this.exitEditMode();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Field segment keydown behavior.\r\n     * @param event\r\n     *  The keydown event.\r\n     */\r\n    onKeyDown(event: KeyboardEvent) {\r\n      let field = event.target as HTMLInputElement;\r\n      if(field.selectionStart !== field.selectionEnd) {\r\n        return;\r\n      }\r\n      switch(event.key) {\r\n        case \"Backspace\":\r\n          if(field.selectionEnd === 0) {\r\n            this.shiftFocus(-1, false);\r\n          }\r\n          break;\r\n        case \"ArrowLeft\":\r\n          if(field.selectionEnd === 0) {\r\n            this.shiftFocus(-1, false);\r\n            event.preventDefault();\r\n          }\r\n          break;\r\n        case \"ArrowRight\":\r\n          if(field.selectionEnd === field.maxLength) {\r\n            this.shiftFocus(+1, true);\r\n            event.preventDefault();\r\n          }\r\n          break;\r\n        default:\r\n          if(field.selectionEnd === field.maxLength) {\r\n            this.shiftFocus(+1, true);\r\n          }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Enters edit mode.\r\n     */\r\n    enterEditMode() {\r\n      if(!this.isEditable) {\r\n        return;\r\n      }\r\n      this.showEditor = true;\r\n      this.$nextTick(() => {\r\n        // Select field\r\n        let field: HTMLInputElement;\r\n        for(let s of Segment) {\r\n          field = (this as any)[s];\r\n          if(!field.value) break;\r\n        }\r\n        // Focus field\r\n        field!.focus();\r\n        // Position caret\r\n        field!.selectionEnd = field!.value.length;\r\n      })\r\n    },\r\n\r\n    /**\r\n     * Exits edit mode.\r\n     */\r\n    exitEditMode() {\r\n      this.updateProperty();\r\n      this.showEditor = false;\r\n    },\r\n\r\n    /**\r\n     * Shifts focus from the current segment to an adjacent segment.\r\n     * @param delta\r\n     *  The number of segments to shift over.\r\n     * @param start\r\n     *  [true]\r\n     *   Position caret at the start of the segment.\r\n     *  [false]\r\n     *   Position caret at the end of the segment.\r\n     *  (Default: true)\r\n     */\r\n    shiftFocus(delta: number, start: boolean = true) {\r\n      let field = document.activeElement as HTMLInputElement;\r\n      let index = Segment.indexOf(field.getAttribute(\"segment\")!) + delta;\r\n      if(0 <= index && index < Segment.length) {\r\n        this.$nextTick(() => {\r\n          // Get adjacent segment\r\n          let adj: HTMLInputElement = (this as any)[Segment[index]];\r\n          // Focus adjacent segment\r\n          adj.focus();\r\n          // Position caret\r\n          adj.selectionEnd = start ? 0 : adj.value.length;\r\n        });\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Updates the field's property value.\r\n     */\r\n    updateProperty() {\r\n      // Parse date\r\n      let ISO8601 = `${ \r\n        this.value_Y.padStart(4, \"0\")\r\n      }-${\r\n        this.value_M.padStart(2, \"0\")\r\n      }-${\r\n        this.value_D.padStart(2, \"0\")\r\n      }T${\r\n        this.value_H.padStart(2, \"0\")\r\n      }:${\r\n        this.value_m.padStart(2, \"0\")\r\n      }:${\r\n        this.value_s.padStart(2, \"0\")\r\n      }.000Z`;\r\n      let date = new Date(ISO8601);\r\n      // Parse value\r\n      let value;\r\n      if(ISO8601 === \"0000-00-00T00:00:00.000Z\") {\r\n        value = null;\r\n      } else if(Number.isNaN(date.getTime())) {\r\n        value = null;\r\n      } else {\r\n        value = date;\r\n      }\r\n      if(this.value?.getTime() !== value?.getTime()) {\r\n        // Update value\r\n        this.$emit(\"change\", this._property, value);\r\n      } else {\r\n        // Refresh value\r\n        this.refreshValue();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Updates the field's text value.\r\n     */\r\n    refreshValue() {\r\n      // Parse date\r\n      let date = this.value?.toISOString() ?? \"--T::\";\r\n      let [ Y, M, D, H, m, s ] = date.split(/[-T:\\.]/);\r\n      // Update values\r\n      this.value_Y = Y;\r\n      this.value_M = M;\r\n      this.value_D = D;\r\n      this.value_H = H;\r\n      this.value_m = m;\r\n      this.value_s = s;\r\n    }\r\n\r\n  },\r\n  emits: [\"change\"],\r\n  watch: {\r\n    \"_property.trigger.value\"() {\r\n      this.refreshValue();\r\n    }\r\n  },\r\n  mounted() {\r\n    this.refreshValue();\r\n  }\r\n});\r\n","import { render } from \"./DateTimeField.vue?vue&type=template&id=f603942e&scoped=true&ts=true\"\nimport script from \"./DateTimeField.vue?vue&type=script&lang=ts\"\nexport * from \"./DateTimeField.vue?vue&type=script&lang=ts\"\n\nimport \"./DateTimeField.vue?vue&type=style&index=0&id=f603942e&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\mcarenzo\\\\Desktop\\\\attack-flow-builder - Copy\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-f603942e\"]])\n\nexport default __exports__","\r\n// Dependencies\r\nimport { ListProperty, PropertyType } from \"@/assets/scripts/BlockDiagram\";\r\nimport { defineAsyncComponent, defineComponent, PropType } from \"vue\";\r\n// Components\r\nimport Plus from \"@/components/Icons/Plus.vue\";\r\nimport TextField from \"./TextField.vue\";\r\nimport EnumField from \"./EnumField.vue\";\r\nimport NumberField from \"./NumberField.vue\";\r\nimport DateTimeField from \"./DateTimeField.vue\";\r\nconst DictionaryField = defineAsyncComponent(() => import(\"./DictionaryField.vue\")) as any;\r\n\r\nexport default defineComponent({\r\n  name: \"ListField\",\r\n  props: {\r\n    property: {\r\n      type: Object as PropType<ListProperty>,\r\n      required: true\r\n    }\r\n  },\r\n  computed: {\r\n\r\n    /**\r\n     * A reactive version of the property.\r\n     * @returns\r\n     *  The property.\r\n     */\r\n    _property(): ListProperty {\r\n      let trigger = this.property.trigger.value;\r\n      return trigger ? this.property : this.property; \r\n    },\r\n\r\n    /**\r\n     * Tests if the property is editable.\r\n     * @returns\r\n     *  True if the property is editable, false otherwise. \r\n     */\r\n    isEditable(): boolean {\r\n      return this._property.descriptor.is_editable ?? true;\r\n    }\r\n\r\n  },\r\n  methods: {\r\n   \r\n    /**\r\n     * Returns a field's component type.\r\n     * @param type\r\n     *  The type of field.\r\n     * @returns\r\n     *  The field's component type.\r\n     */\r\n    getField(type: PropertyType): string | undefined {\r\n      switch(type) {\r\n        case PropertyType.Int:\r\n        case PropertyType.Float:\r\n          return \"NumberField\";\r\n        case PropertyType.String:\r\n          return \"TextField\";\r\n        case PropertyType.Date:\r\n          return \"DateTimeField\";\r\n        case PropertyType.Enum:\r\n          return \"EnumField\";\r\n        case PropertyType.List:\r\n          return \"ListField\";\r\n        case PropertyType.Dictionary:\r\n          return \"DictionaryField\";\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Create subproperty behavior.\r\n     */\r\n    onCreate() {\r\n      this.$emit(\"create\", this._property);\r\n    },\r\n\r\n    /**\r\n     * Delete subproperty behavior.\r\n     * @param id\r\n     *  The subproperty's id.\r\n     */\r\n    onDelete(id: string) {\r\n      this.$emit(\"delete\", this._property, id);\r\n    }\r\n\r\n  },\r\n  emits: [\"change\", \"create\", \"delete\"],\r\n  components: {\r\n    Plus,\r\n    TextField,\r\n    EnumField,\r\n    NumberField,\r\n    DateTimeField,\r\n    DictionaryField\r\n  }\r\n});\r\n","import { render } from \"./ListField.vue?vue&type=template&id=1f8ec412&scoped=true&ts=true\"\nimport script from \"./ListField.vue?vue&type=script&lang=ts\"\nexport * from \"./ListField.vue?vue&type=script&lang=ts\"\n\nimport \"./ListField.vue?vue&type=style&index=0&id=1f8ec412&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\mcarenzo\\\\Desktop\\\\attack-flow-builder - Copy\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1f8ec412\"]])\n\nexport default __exports__","\r\n// Dependencies\r\nimport { defineAsyncComponent, defineComponent, PropType } from \"vue\";\r\nimport { DictionaryProperty, Property, PropertyType, titleCase } from \"@/assets/scripts/BlockDiagram\";\r\n// Components\r\nimport TextField from \"./TextField.vue\";\r\nimport ListField from \"./ListField.vue\";\r\nimport EnumField from \"./EnumField.vue\";\r\nimport NumberField from \"./NumberField.vue\";\r\nimport DateTimeField from \"./DateTimeField.vue\";\r\nconst DictionaryField = defineAsyncComponent(() => import(\"./DictionaryField.vue\")) as any;\r\n\r\nexport default defineComponent({\r\n  name: \"DictionaryFieldContents\",\r\n  props: {\r\n    property: {\r\n      type: Object as PropType<DictionaryProperty>,\r\n      required: true\r\n    }\r\n  },\r\n  computed: {\r\n    \r\n    /**\r\n     * The set of visible properties.\r\n     * @returns\r\n     *  The set of visible properties.\r\n     */\r\n    fields(): [string, Property][] {\r\n      return [...this.property.value.entries()].filter(\r\n        o => o[1].descriptor.is_visible ?? true\r\n      );\r\n    }\r\n\r\n  },\r\n  methods: {\r\n   \r\n    /**\r\n     * Returns a field's component type.\r\n     * @param type\r\n     *  The type of field.\r\n     * @returns\r\n     *  The field's component type.\r\n     */\r\n    getField(type: PropertyType): string | undefined {\r\n      switch(type) {\r\n        case PropertyType.String:\r\n          return \"TextField\";\r\n        case PropertyType.Int:\r\n        case PropertyType.Float:\r\n          return \"NumberField\";\r\n        case PropertyType.Date:\r\n          return \"DateTimeField\";\r\n        case PropertyType.Enum:\r\n          return \"EnumField\";\r\n        case PropertyType.List:\r\n          return \"ListField\";\r\n        case PropertyType.Dictionary:\r\n          return \"DictionaryField\";\r\n      }\r\n    },\r\n\r\n    titleCase\r\n\r\n  },\r\n  emits: [\"change\", \"create\", \"delete\"],\r\n  components: {\r\n    TextField,\r\n    ListField,\r\n    EnumField,\r\n    NumberField,\r\n    DateTimeField,\r\n    DictionaryField\r\n  }\r\n});\r\n","import { render } from \"./DictionaryFieldContents.vue?vue&type=template&id=5181abbf&scoped=true&ts=true\"\nimport script from \"./DictionaryFieldContents.vue?vue&type=script&lang=ts\"\nexport * from \"./DictionaryFieldContents.vue?vue&type=script&lang=ts\"\n\nimport \"./DictionaryFieldContents.vue?vue&type=style&index=0&id=5181abbf&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\mcarenzo\\\\Desktop\\\\attack-flow-builder - Copy\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5181abbf\"]])\n\nexport default __exports__","import { renderSlot as _renderSlot, createElementVNode as _createElementVNode, vShow as _vShow, normalizeStyle as _normalizeStyle, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-cf54a08c\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"scrollbox-container\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", {\n      ref: \"content\",\n      class: \"scroll-content\",\n      onWheelPassive: _cache[0] || (_cache[0] = ($event: any) => (_ctx.moveScrollPosition(_ctx.scrollTop + $event.deltaY, $event)))\n    }, [\n      _renderSlot(_ctx.$slots, \"default\", {}, undefined, true)\n    ], 544),\n    _withDirectives(_createElementVNode(\"div\", {\n      class: \"scroll-bar\",\n      style: _normalizeStyle(_ctx.scroll.sty),\n      onWheelPassive: _cache[3] || (_cache[3] = ($event: any) => (_ctx.moveScrollPosition(_ctx.scrollTop + $event.deltaY, $event)))\n    }, [\n      _withDirectives(_createElementVNode(\"div\", {\n        class: \"scroll-handle\",\n        style: _normalizeStyle(_ctx.handle.sty),\n        onPointerdown: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.startDrag && _ctx.startDrag(...args))),\n        onPointerup: _cache[2] || (_cache[2] = \n//@ts-ignore\n(...args) => (_ctx.stopDrag && _ctx.stopDrag(...args)))\n      }, null, 36), [\n        [_vShow, _ctx.showScrollbar]\n      ])\n    ], 36), [\n      [_vShow, _ctx.alwaysShowScrollBar || _ctx.showScrollbar]\n    ])\n  ]))\n}","\r\nimport { clamp } from \"@/assets/scripts/BlockDiagram\";\r\nimport { PointerTracker } from \"@/assets/scripts/PointerTracker\";\r\nimport { defineComponent, markRaw, Ref, ref } from 'vue';\r\n\r\nexport default defineComponent({\r\n  name: \"ScrollBox\",\r\n  setup() {\r\n    return { \r\n      content: ref<HTMLElement | null>(null)\r\n    }\r\n  },\r\n  props: {\r\n    resetScrollOnChange: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    alwaysShowScrollBar: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    propagateScroll: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    handleColor: {\r\n      type: String,\r\n      default: \"#333333\"\r\n    },\r\n    scrollColor: {\r\n      type: String,\r\n      default: \"none\"\r\n    },\r\n    borderColor: {\r\n      type: String,\r\n      default: \"#404040\"\r\n    },\r\n    width: {\r\n      type: Number,\r\n      default: 17\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      scrollTop: 0,\r\n      windowMax: 0,\r\n      scroll: {\r\n        sty: { \r\n          width: `${this.width}px`,\r\n          background: this.scrollColor\r\n        },\r\n      },\r\n      handle: {\r\n        trk: markRaw(new PointerTracker()),\r\n        hei: 0, \r\n        max: 0, \r\n        pos: 0,\r\n        sty: { \r\n          height: \"0px\", \r\n          transform: \"translateY(0px)\", \r\n          background: this.handleColor, \r\n          borderColor: this.borderColor,\r\n        },\r\n      },\r\n      showScrollbar: false,\r\n      onResizeObserver: null as ResizeObserver | null,\r\n      onMutateObserver: null as MutationObserver | null,\r\n    };\r\n  },\r\n  methods: {\r\n\r\n    /**\r\n     * Scroll handle drag start behavior.\r\n     * @param event\r\n     *  The pointer event.\r\n     */\r\n    startDrag(event: PointerEvent) {\r\n      this.handle.trk.capture(event, this.onDrag);\r\n      document.addEventListener(\"pointerup\", this.stopDrag, { once: true });\r\n    },\r\n\r\n    /**\r\n     * Scroll handle drag behavior.\r\n     * @param event\r\n     *  The pointer event.\r\n     * @param track\r\n     *  The mouse tracker.\r\n     */\r\n    onDrag(_: PointerEvent, track: PointerTracker) {\r\n      this.moveScrollPosition(\r\n        this.handleTopToTop(this.handle.pos + track.movementY)\r\n      );\r\n    },\r\n\r\n    /**\r\n     * Scroll handle drag stop behavior.\r\n     * @param event\r\n     *  The pointer event.\r\n     */\r\n    stopDrag(event: PointerEvent) {\r\n      this.handle.trk.release(event);\r\n    },\r\n\r\n    /**\r\n     * Calculates and configures the parameters required to mimic scrolling.\r\n     * \r\n     * NOTE:\r\n     * This function should be called anytime:\r\n     *  - The height of the scroll box changes.\r\n     *  - The height of the scroll content changes.\r\n     * \r\n     * @param resetTop\r\n     *  [true]\r\n     *   The scroll position will be set to 0, after recalculation.\r\n     *  [false]\r\n     *   The scroll position will go to its original spot, after recalculation.\r\n     *  (Default: true)\r\n     */\r\n    recalculateScrollState(resetTop: boolean = true) {\r\n      let showScrollbar = this.showScrollbar;\r\n      let content = this.content!;\r\n      // Ignore scroll content with no height\r\n      if(content.clientHeight === 0) {\r\n       this.showScrollbar = false;\r\n       return;\r\n      }\r\n      // Compute ratio\r\n      let ratio = content.clientHeight / content.scrollHeight;\r\n      // Update scroll state (-4 for the 2px of padding around the scrollbar)\r\n      this.handle.hei = Math.max(15, Math.round((content.clientHeight - 4) * ratio));\r\n      this.handle.max = content.clientHeight - this.handle.hei - 4;\r\n      this.windowMax  = content.scrollHeight - content.clientHeight;\r\n      // Update scroll handle\r\n      this.showScrollbar = ratio !== 1;\r\n      this.handle.sty.height = `${this.handle.hei}px`;\r\n      // Update scroll position\r\n      this.moveScrollPosition(resetTop ? 0 : content.scrollTop);\r\n      // If scrollbar added, recalculate state after scrollbar applied\r\n      if(!showScrollbar && this.showScrollbar) {\r\n        setTimeout(() => this.recalculateScrollState(resetTop), 0);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Moves the scroll position.\r\n     * @param position\r\n     *  The new scroll position.\r\n     * @param event\r\n     *  The scroll wheel event, if applicable.\r\n     */\r\n    moveScrollPosition(position: number, event: WheelEvent | null = null) {\r\n      let scrollTop = this.scrollTop;\r\n      this.scrollTop = clamp(position, 0, this.windowMax);\r\n      this.handle.pos = this.topToHandleTop(this.scrollTop);\r\n      this.handle.sty.transform = `translateY(${this.handle.pos}px)`;\r\n      this.content!.scrollTop = this.scrollTop;\r\n      // Selectively propagate scroll event\r\n      let hasMoved = scrollTop - this.scrollTop !== 0;\r\n      let canMove = 0 < this.scrollTop && this.scrollTop < this.windowMax;\r\n      if(!this.propagateScroll || hasMoved || canMove) {\r\n        event?.stopPropagation();\r\n      }\r\n    },\r\n    \r\n    /**\r\n     * Calculates the scroll handle position from the scroll position.\r\n     * @param top\r\n     *  The current scroll position.\r\n     * @returns\r\n     *  The calculated scroll handle position.\r\n     */\r\n    topToHandleTop(top: number): number {\r\n      return (top / this.windowMax) * this.handle.max;\r\n    },\r\n\r\n    /**\r\n     * Calculates the scroll position from the scroll handle position.\r\n     * @param top\r\n     *  The current scroll handle position.\r\n     * @returns\r\n     *  The calculated scroll position.\r\n     */\r\n    handleTopToTop(top: number): number {\r\n      return (top / this.handle.max) * this.windowMax;\r\n    }\r\n\r\n  },\r\n  mounted() {\r\n    // Configure mutation observer\r\n    let mutateOptions = { childList: true, characterData: true, subtree: true };\r\n    this.onMutateObserver = new MutationObserver(() => \r\n      this.recalculateScrollState(this.resetScrollOnChange)\r\n    );\r\n    // Configure resize observer\r\n    this.onResizeObserver = new ResizeObserver(() =>\r\n      this.recalculateScrollState(false)\r\n    );\r\n    this.onResizeObserver.observe(this.$el);\r\n    this.onMutateObserver.observe(this.content!, mutateOptions);\r\n  },\r\n  unmounted() {\r\n    this.onResizeObserver!.disconnect();\r\n    this.onMutateObserver!.disconnect();\r\n  },\r\n});\r\n","import { render } from \"./ScrollBox.vue?vue&type=template&id=cf54a08c&scoped=true&ts=true\"\nimport script from \"./ScrollBox.vue?vue&type=script&lang=ts\"\nexport * from \"./ScrollBox.vue?vue&type=script&lang=ts\"\n\nimport \"./ScrollBox.vue?vue&type=style&index=0&id=cf54a08c&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\mcarenzo\\\\Desktop\\\\attack-flow-builder - Copy\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-cf54a08c\"]])\n\nexport default __exports__","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./CollapseArrow.vue?vue&type=style&index=0&id=2d69016e&scoped=true&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./AppFooterBar.vue?vue&type=style&index=0&id=783f2534&scoped=true&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./BlockDiagram.vue?vue&type=style&index=0&id=3e2ee7b8&scoped=true&lang=css\"","///////////////////////////////////////////////////////////////////////////////\r\n//  1. RasterCache  ///////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport class RasterCache {\r\n\r\n    /**\r\n     * The raster cache's internal scale.\r\n     */\r\n    private _scale: number;\r\n\r\n    /**\r\n     * The internal raster cache.\r\n     */\r\n    private _cache: Map<string, Raster>;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link RasterCache}.\r\n     */\r\n    constructor() {\r\n        this._scale = 1;\r\n        this._cache = new Map();\r\n    }\r\n\r\n\r\n    /**\r\n     * Creates a new {@link Raster}.\r\n     * @param id\r\n     *  The id of the raster.\r\n     * @param w\r\n     *  The width of the raster.\r\n     * @param h\r\n     *  The height of the raster.\r\n     * @param p\r\n     *  The amount of padding to add to the raster.\r\n     *  (Default: 0)\r\n     */\r\n    public createRaster(id: string, w: number, h: number, p: number = 0): Raster {\r\n        // Create raster\r\n        let raster = new Raster(w, h, p, this._scale);\r\n        // Register raster\r\n        this._cache.set(id, raster);\r\n        // Return raster\r\n        return raster;\r\n    }\r\n\r\n    /**\r\n     * Draws a raster to the context.\r\n     * @param context\r\n     *  The context to draw to.\r\n     * @param id\r\n     *  The id of the raster.\r\n     * @param x\r\n     *  The x-axis coordinate on the destination context.\r\n     * @param y\r\n     *  The y-axis coordinate on the destination context.\r\n     * @returns \r\n     *  True if the raster was drawn, false if no raster with that id exists.\r\n     */\r\n    public drawRaster(context: CanvasRenderingContext2D, id: string, x: number, y: number): boolean {\r\n        let r = this._cache.get(id);\r\n        if (r) {\r\n            context.drawImage(r.canvas, x - r.cx, y - r.cy, r.w, r.h);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Dumps the raster cache and updates its scale.\r\n     * @param scale\r\n     *  The new scale value.\r\n     */\r\n    public setScale(scale: number) {\r\n        this._scale = scale;\r\n        this._cache.clear();\r\n    }\r\n\r\n    /**\r\n     * Returns the cache's current scale.\r\n     * @returns\r\n     *  The cache's current scale.\r\n     */\r\n    public getScale(): number {\r\n        return this._scale;\r\n    }\r\n\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  2. Raster  ////////////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport class Raster {\r\n\r\n    /**\r\n     * The raster's canvas.\r\n     */\r\n    public readonly canvas: HTMLCanvasElement;\r\n\r\n    /**\r\n     * The raster's context.\r\n     */\r\n    public readonly context: CanvasRenderingContext2D;\r\n\r\n    /**\r\n     * The raster's center on the x-axis.\r\n     */\r\n    public readonly cx: number;\r\n\r\n    /**\r\n     * The raster's center on the y-axis.\r\n     */\r\n    public readonly cy: number;\r\n\r\n    /**\r\n     * The raster's full width.\r\n     */\r\n    public readonly w: number;\r\n\r\n    /**\r\n     * The raster's full height.\r\n     */\r\n    public readonly h: number;\r\n\r\n    /**\r\n     * The raster's padding.\r\n     */\r\n    public readonly p: number;\r\n\r\n\r\n    /**\r\n     * The raster's fill style.\r\n     */\r\n    public set fillStyle(value: string) {\r\n        this.context.fillStyle = value;\r\n    }\r\n\r\n    /**\r\n     * The raster's font.\r\n     */\r\n    public set font(value: string) {\r\n        this.context.font = value;\r\n    }\r\n\r\n    /**\r\n     * The raster's line width.\r\n     */\r\n    public set lineWidth(value: number) {\r\n        this.context.lineWidth = value;\r\n    }\r\n\r\n    /**\r\n     * The raster's stroke style.\r\n     */\r\n    public set strokeStyle(value: string) {\r\n        this.context.strokeStyle = value;\r\n    }\r\n\r\n    /**\r\n     * The raster's text baseline.\r\n     */\r\n    public set textBaseline(value: CanvasTextBaseline) {\r\n        this.context.textBaseline = value;\r\n    }\r\n\r\n\r\n    /**\r\n     * Creates a new {@link Raster}.\r\n     * @param w\r\n     *  The width of the raster.\r\n     * @param h\r\n     *  The height of the raster.\r\n     * @param p\r\n     *  The raster's padding.\r\n     * @param k\r\n     *  The scale of the raster.\r\n     */\r\n    constructor(w: number, h: number, p: number, k: number) {\r\n        let tp = p << 1;\r\n        // Prepare canvas\r\n        this.canvas = document.createElement(\"canvas\");\r\n        this.canvas.width = Math.round((w + tp) * k);\r\n        this.canvas.height = Math.round((h + tp) * k);\r\n        // Prepare context\r\n        this.context = this.canvas.getContext(\"2d\")!;\r\n        this.context.setTransform(k, 0, 0, k, 0, 0);\r\n        // Calculate dimensions\r\n        this.h = h + tp;\r\n        this.w = w + tp;\r\n        this.cx = Math.round(this.w / 2);\r\n        this.cy = Math.round(this.h / 2);\r\n        this.p = p;\r\n    }\r\n\r\n\r\n    /**\r\n     * Starts a new path.\r\n     */\r\n    public beginPath() {\r\n        this.context.beginPath();\r\n    }\r\n\r\n    /**\r\n     * Attempts to add a straight line from the current point to the start of\r\n     * the current sub-path. If the shape has already been closed or has only\r\n     * one point, this function does nothing.\r\n     */\r\n    public closePath() {\r\n        this.context.closePath();\r\n    }\r\n\r\n    /**\r\n     * Begins a new sub-path at the point specified\r\n     * @param x\r\n     *  The x-axis coordinate. \r\n     * @param y\r\n     *  The y-axis coordinate.\r\n     */\r\n    public moveTo(x: number, y: number) {\r\n        this.context.moveTo(this.p + x, this.p + y);\r\n    }\r\n\r\n    /**\r\n     * Adds a straight line to the current sub-path by connecting the\r\n     * sub-path's last point to the specified coordinates.\r\n     * @param x\r\n     *  The x-axis coordinate.\r\n     * @param y\r\n     *  The y-axis coordinate.\r\n     */\r\n    public lineTo(x: number, y: number) {\r\n        this.context.lineTo(this.p + x, this.p + y);\r\n    }\r\n\r\n    /**\r\n     * Outlines the current or given path with the current stroke style.\r\n     */\r\n    public stroke() {\r\n        this.context.stroke();\r\n    }\r\n\r\n    /**\r\n     * Fills the current or given path with the current fillStyle.\r\n     */\r\n    public fill() {\r\n        this.context.fill();\r\n    }\r\n\r\n    /**\r\n     * Draws a text string at the specified coordinates, filling the string's\r\n     * characters with the current fillStyle.\r\n     * @param text\r\n     *  The text string.\r\n     * @param x\r\n     *  The x-axis coordinate.\r\n     * @param y\r\n     *  The y-axis coordinate.\r\n     */\r\n    public fillText(text: string, x: number, y: number) {\r\n        this.context.fillText(text, x, y);\r\n    }\r\n\r\n    /**\r\n     * Draws a rectangular path to the context.\r\n     * @param x\r\n     *  The top-left x coordinate.\r\n     * @param y\r\n     *  The top-left y coordinate.\r\n     * @param w\r\n     *  The width of the rectangle.\r\n     * @param h\r\n     *  The height of the rectangle.\r\n     * @param r\r\n     *  The rectangle's border radius.\r\n     * @param s\r\n     *  The rectangle's stroke width.\r\n     *  (Default: 1)\r\n     */\r\n    public drawRect(\r\n        x: number, y: number,\r\n        w: number, h: number,\r\n        r: number, s?: number\r\n    ): void;\r\n\r\n    /**\r\n     * Draws a rectangular path to the context.\r\n     * @param x\r\n     *  The top-left x coordinate.\r\n     * @param y\r\n     *  The top-left y coordinate.\r\n     * @param w\r\n     *  The width of the rectangle.\r\n     * @param h\r\n     *  The height of the rectangle.\r\n     * @param r\r\n     *  An object which defines the border radius of each corner. If a corner\r\n     *  is not specified, it is assumed to be 0.\r\n     * @param s\r\n     *  The rectangle's stroke width.\r\n     *  (Default: 1)\r\n     */\r\n    public drawRect(\r\n        x: number, y: number,\r\n        w: number, h: number,\r\n        r: BorderRadius,\r\n        s?: number\r\n    ): void;\r\n    \r\n    public drawRect(\r\n        x: number, y: number,\r\n        w: number, h: number,\r\n        r: BorderRadius | number,\r\n        s: number = 1\r\n    ) {\r\n        // Account for padding & stroke width\r\n        x += this.p + (s / 2);\r\n        y += this.p + (s / 2);\r\n        w -= s;\r\n        h -= s;\r\n        // Parse radius\r\n        if (typeof r === \"number\") {\r\n            r = { tl: r, tr: r, br: r, bl: r }\r\n        } else {\r\n            r = { tl: 0, tr: 0, br: 0, bl: 0, ...r };\r\n        }\r\n        // Draw rectangular path\r\n        let ctx = this.context;\r\n        ctx.beginPath();\r\n        ctx.moveTo(x + r.tl!, y);\r\n        ctx.lineTo(x + w - r.tr!, y);\r\n        ctx.quadraticCurveTo(x + w, y, x + w, y + r.tr!);\r\n        ctx.lineTo(x + w, y + h - r.br!);\r\n        ctx.quadraticCurveTo(x + w, y + h, x + w - r.br!, y + h);\r\n        ctx.lineTo(x + r.bl!, y + h);\r\n        ctx.quadraticCurveTo(x, y + h, x, y + h - r.bl!);\r\n        ctx.lineTo(x, y + r.tl!);\r\n        ctx.quadraticCurveTo(x, y, x + r.tl!, y);\r\n        ctx.closePath();\r\n    }\r\n  \r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  3. Raster Types  //////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport type BorderRadius = {\r\n    \r\n    /**\r\n     * Top left radius.\r\n     */\r\n    tl?: number,\r\n\r\n    /**\r\n     * Top right radius.\r\n     */\r\n    tr?: number,\r\n\r\n    /**\r\n     * Bottom right radius.\r\n     */\r\n    br?: number,\r\n\r\n    /**\r\n     * Bottom left radius.\r\n     */\r\n    bl?: number\r\n\r\n}\r\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./ContextMenu.vue?vue&type=style&index=0&id=6a0233c2&scoped=true&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./EditorSidebar.vue?vue&type=style&index=0&id=09fcd1e8&scoped=true&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./AccordionBox.vue?vue&type=style&index=0&id=39ee0bdf&scoped=true&lang=css\"","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./DictionaryFieldContents.vue?vue&type=style&index=0&id=5181abbf&scoped=true&lang=css\"","export class PointerTracker {\r\n\r\n    /**\r\n     * The pointer's total delta-x.\r\n     */\r\n    public deltaX: number;\r\n\r\n    /**\r\n     * The pointer's total delta-y.\r\n     */\r\n    public deltaY: number;\r\n\r\n    /**\r\n     * The pointer's current delta-x.\r\n     */\r\n    public movementX: number;\r\n\r\n    /**\r\n     * The pointer's current delta-y.\r\n     */\r\n    public movementY: number;\r\n    \r\n    /**\r\n     * The drag target.\r\n     */\r\n    public target: HTMLElement | null;\r\n\r\n    /**\r\n     * The pointer's origin on the x-axis.\r\n     */\r\n    private _originX: number;\r\n\r\n    /**\r\n     * The pointer's origin on the y-axis.\r\n     */\r\n    private _originY: number;\r\n\r\n    /**\r\n     * The pointer's last position on the x-axis.\r\n     */\r\n    private _lastX: number;\r\n\r\n    /**\r\n     * The pointer's last position on the y-axis.\r\n     */\r\n    private _lastY: number;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link PointerTracker}.\r\n     */\r\n    constructor() {\r\n        this.deltaX = 0;\r\n        this.deltaY = 0;\r\n        this.movementX = 0;\r\n        this.movementY = 0;\r\n        this.target = null;\r\n        this._originX = 0;\r\n        this._originY = 0;\r\n        this._lastX = 0;\r\n        this._lastY = 0;\r\n    }\r\n\r\n\r\n    /**\r\n     * Captures the pointer and resets the pointer tracker.\r\n     * @param event\r\n     *  The pointer down event.\r\n     * @param callback\r\n     *  The function to call on pointer movement.\r\n     */\r\n    public capture(event: PointerEvent, callback: (e: PointerEvent, t: PointerTracker) => void) {\r\n        this._originX = event.clientX;\r\n        this._originY = event.clientY;\r\n        this._lastX = this._originX;\r\n        this._lastY = this._originY;\r\n        this.target = event.target as HTMLElement;\r\n        this.target.setPointerCapture(event.pointerId);\r\n        this.target.onpointermove = (e) => {\r\n            this.update(e);\r\n            callback(e, this);\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Updates the pointer tracker.\r\n     * @param event\r\n     *  The pointer move event.\r\n     */\r\n    private update(event: PointerEvent) {\r\n        this.deltaX = event.clientX - this._originX;\r\n        this.deltaY = event.clientY - this._originY;\r\n        this.movementX = event.clientX - this._lastX;\r\n        this.movementY = event.clientY - this._lastY;\r\n        this._lastX = event.clientX;\r\n        this._lastY = event.clientY;\r\n    }\r\n\r\n    /**\r\n     * Releases the current pointer.\r\n     * @param event\r\n     *  The pointer up event.\r\n     */\r\n    public release(event: PointerEvent) {\r\n        if(this.target !== null) {\r\n            this.target.releasePointerCapture(event.pointerId);\r\n            this.target.onpointermove = null;\r\n            this.target = null;\r\n        }\r\n    }\r\n\r\n}\r\n","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./ListField.vue?vue&type=style&index=0&id=1f8ec412&scoped=true&lang=css\"","import { RasterCache } from \"../../DiagramElement/RasterCache\";\r\nimport { ViewportRegion } from \"../../DiagramElement\";\r\nimport { DiagramObjectModel } from \"../../DiagramModelTypes\";\r\nimport {\r\n    DiagramAnchorView,\r\n    DiagramAnchorableView\r\n} from \"./BaseViews\";\r\nimport { \r\n    AlignmentMask,\r\n    CursorMask,\r\n    HoverMask,\r\n    InheritAlignmentMask,\r\n    PositionSetByUserMask,\r\n    PriorityMask,\r\n    SelectMask\r\n} from \"../../Attributes\";\r\n\r\nexport abstract class DiagramObjectView {\r\n\r\n    /**\r\n     * The underlying model.\r\n     */\r\n    public el: DiagramObjectModel;\r\n\r\n    /**\r\n     * The object's (central) x coordinate.\r\n     */\r\n    public x: number;\r\n\r\n    /**\r\n     * The object's (central) y coordinate.\r\n     */\r\n    public y: number;\r\n\r\n    /**\r\n     * The object's parent.\r\n     */\r\n    public parent: DiagramObjectView | undefined;\r\n\r\n    /**\r\n     * The object's children.\r\n     */\r\n    public children: DiagramObjectView[]\r\n\r\n    /**\r\n     * The view's raster cache.\r\n     */\r\n    protected _rasterCache: RasterCache; \r\n\r\n\r\n    /**\r\n     * Creates a new {@link DiagramObjectView}.\r\n     * @param el\r\n     *  The underlying model.\r\n     * @param rasterCache\r\n     *  The view's raster cache.\r\n     */\r\n    constructor(el: DiagramObjectModel, rasterCache: RasterCache) {\r\n        this.el = el;\r\n        this.x = el.boundingBox.xMid;\r\n        this.y = el.boundingBox.yMid;\r\n        this.parent = undefined;\r\n        this.children = [];\r\n        this._rasterCache = rasterCache;\r\n    }\r\n\r\n    \r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Structure  /////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Returns this object and all child objects (in a breadth-first fashion).\r\n     * @param match\r\n     *  A predicate which is applied to each object. If the predicate returns\r\n     *  false, the object is not included in the enumeration.\r\n     * @returns\r\n     *  This object and all child objects.\r\n     */\r\n     public *getSubtree(\r\n        match?: (o: DiagramObjectView) => boolean\r\n     ): IterableIterator<DiagramObjectView> {\r\n        let visited = new Set<string>([this.el.id]);\r\n        let queue: DiagramObjectView[] = [this];\r\n        while(queue.length != 0) {\r\n            let obj = queue.shift()!;\r\n            // Yield object\r\n            if(!match || match(obj)) {\r\n                yield obj;\r\n            }\r\n            // Don't traverse anchors\r\n            if(obj instanceof DiagramAnchorView) {\r\n                continue;\r\n            }\r\n            // Enumerate children\r\n            for(let child of obj.children){\r\n                if(!visited.has(child.el.id)) {\r\n                    visited.add(child.el.id);\r\n                    queue.push(child);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  2. Movement  //////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Moves the object to a specific coordinate.\r\n     * @param x\r\n     *  The x coordinate.\r\n     * @param y\r\n     *  The y coordinate.\r\n     * @param attrs\r\n     *  If specified, this set of attributes will override the object's\r\n     *  underlying attributes.\r\n     */\r\n     public moveTo(x: number, y: number, attrs?: number) {\r\n        this.moveBy(\r\n            x - this.x,\r\n            y - this.y\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Moves the object relative to its current position. \r\n     * @param dx\r\n     *  The change in x.\r\n     * @param dy \r\n     *  The change in y.\r\n     * @param attrs\r\n     *  If specified, this set of attributes will override the object's\r\n     *  underlying attributes.\r\n     */\r\n    public moveBy(dx: number, dy: number, attrs?: number) {\r\n        // Move self\r\n        this.x += dx;\r\n        this.y += dy;\r\n        // Move non-anchored children\r\n        for(let obj of this.children) {\r\n            if(obj instanceof DiagramAnchorableView && obj.el.isAttached()) {\r\n                continue;\r\n            }\r\n            obj.moveBy(dx, dy);\r\n        }\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  3. Render  ////////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Renders the object to a context.\r\n     * @param ctx\r\n     *  The context to render to.\r\n     * @param vr\r\n     *  The context's viewport.\r\n     * @param dsx\r\n     *  The drop shadow's x-offset.\r\n     *  (Default: 0)\r\n     * @param dsy\r\n     *  The drop shadow's y-offset.\r\n     *  (Default: 0)\r\n     * @param attrs\r\n     *  If specified, this set of attributes will override the object's\r\n     *  underlying attributes.\r\n     */\r\n    public renderTo(\r\n        ctx: CanvasRenderingContext2D, vr: ViewportRegion,\r\n        dsx: number = 0, dsy: number = 0, attrs?: number\r\n    ) { \r\n        if(!this.isVisible(vr)) {\r\n            return;\r\n        }\r\n        for(let obj of this.children) {\r\n            obj.renderTo(ctx, vr, dsx, dsy);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Renders the object's debug information to a context.\r\n     * @param ctx\r\n     *  The context to render to.\r\n     * @param vr\r\n     *  The context's viewport.\r\n     */\r\n    public renderDebugTo(ctx: CanvasRenderingContext2D, vr: ViewportRegion) {\r\n        if(!this.isVisible(vr)) {\r\n            return;\r\n        }\r\n        // Configure canvas\r\n        for(let obj of this.children) {\r\n            obj.renderDebugTo(ctx, vr);\r\n        }\r\n        // Draw bounding box\r\n        let bb = this.el.boundingBox;\r\n        ctx.beginPath();\r\n        ctx.moveTo(bb.xMin + 0.5, bb.yMin + 0.5);\r\n        ctx.lineTo(bb.xMax - 0.5, bb.yMin + 0.5);\r\n        ctx.lineTo(bb.xMax - 0.5, bb.yMax - 0.5);\r\n        ctx.lineTo(bb.xMin + 0.5, bb.yMax - 0.5);\r\n        ctx.lineTo(bb.xMin + 0.5, bb.yMin + 0.5);\r\n        ctx.lineTo(bb.xMax - 0.5, bb.yMax - 0.5);\r\n        ctx.stroke();\r\n    }\r\n\r\n    /**\r\n     * Tests if the object overlaps the given viewport.\r\n     * @param viewport\r\n     *  The viewport.\r\n     * @returns\r\n     *  True if the object overlaps the viewport, false otherwise.\r\n     */\r\n    public isVisible(viewport: ViewportRegion) {\r\n        let { xMin, yMin, xMax, yMax } = this.el.boundingBox;\r\n        return (viewport.xMin <= xMax && viewport.xMax >= xMin) && \r\n               (viewport.yMin <= yMax && viewport.yMax >= yMin)\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  4. Model Synchronization  /////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Synchronizes the view with the underlying model.\r\n     * @returns\r\n     *  The view.\r\n     */\r\n    public updateView(): DiagramObjectView {\r\n        // Update children\r\n        let children = new Array<DiagramObjectView>(this.el.children.length);\r\n        for(let i = 0; i < children.length; i++) {\r\n            let id = this.el.children[i].id;\r\n            let obj = this.children.find(o => o.el.id === id);\r\n            // Update child\r\n            children[i] = obj ?? this.el.children[i].createView(this._rasterCache);\r\n            // Update child's parent\r\n            children[i].parent = this;\r\n            // Update child's view\r\n            children[i].updateView();\r\n        }\r\n        this.children = children;\r\n        // Update position\r\n        this.x = this.el.boundingBox.xMid;\r\n        this.y = this.el.boundingBox.yMid;\r\n        // Return\r\n        return this;\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  5. Attribute Faking  //////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Returns the object's attributes with the alignment altered.\r\n     * @param alignment\r\n     *  The alignment to use.\r\n     * @returns\r\n     *  The altered attributes.\r\n     */\r\n    public fakeAlignment(alignment: number): number {\r\n        return (this.el.attrs & ~AlignmentMask) | alignment;\r\n    }\r\n\r\n    /**\r\n     * Returns the object's attributes with the cursor altered.\r\n     * @param cursor\r\n     *  The cursor to use.\r\n     * @returns\r\n     *  The altered attributes.\r\n     */\r\n    public fakeCursor(cursor: number) {\r\n       return (this.el.attrs & ~CursorMask) | cursor;\r\n    }\r\n\r\n    /**\r\n     * Returns the object's attributes with the hover state altered.\r\n     * @param hover\r\n     *  The hover state to use.\r\n     * @returns\r\n     *  The altered attributes.\r\n     */\r\n    public fakeHover(hover: number) {\r\n        return (this.el.attrs & ~HoverMask) | hover;\r\n    }\r\n\r\n    /**\r\n     * Returns the object's attributes with the 'inherit alignment' attribute\r\n     * altered.\r\n     * @param inherit\r\n     *  The attribute to use.\r\n     * @returns\r\n     *  The altered attributes.\r\n     */\r\n    public fakeInheritAlignment(inherit: number) {\r\n        return (this.el.attrs & ~InheritAlignmentMask) | inherit;\r\n    }\r\n\r\n    /**\r\n     * Returns the object's attributes with the 'position set by user'\r\n     * attribute altered.\r\n     * @param positionSetByUser\r\n     *  The attribute to use.\r\n     * @returns\r\n     *  The altered attributes.\r\n     */\r\n    public fakePositionSetByUser(positionSetByUser: number) {\r\n        return (this.el.attrs & ~PositionSetByUserMask) | positionSetByUser;\r\n    }\r\n\r\n    /**\r\n     * Returns the object's attributes with the selection priority altered.\r\n     * @param priority\r\n     *  The selection priority to use.\r\n     * @returns\r\n     *  The altered attributes.\r\n     */\r\n    public fakePriority(priority: number) {\r\n        return (this.el.attrs & ~PriorityMask) | priority;\r\n    }\r\n\r\n    /**\r\n     * Returns the object's attributes with the selection state altered.\r\n     * @param select\r\n     *  The selection state to use.\r\n     * @returns\r\n     *  The altered attributes.\r\n     */\r\n    public fakeSelect(select: number) {\r\n        return (this.el.attrs & ~SelectMask) | select;\r\n    }\r\n\r\n}\r\n","import { RasterCache } from \"../../DiagramElement/RasterCache\";\r\nimport { DiagramAnchorModel } from \"../../DiagramModelTypes\";\r\nimport {\r\n    DiagramAnchorableView,\r\n    DiagramObjectView\r\n} from \"./BaseViews\";\r\n\r\nexport abstract class DiagramAnchorView extends DiagramObjectView {\r\n\r\n    /**\r\n     * The underlying model.\r\n     */\r\n    public override el: DiagramAnchorModel;\r\n\r\n    /**\r\n     * The anchor's children.\r\n     */\r\n    public override children: DiagramAnchorableView[];\r\n\r\n\r\n    /**\r\n     * Creates a new {@link DiagramAnchorView}.\r\n     * @param el\r\n     *  The underlying model.\r\n     * @param rasterCache\r\n     *  The view's raster cache.\r\n     */\r\n    constructor(el: DiagramAnchorModel, rasterCache: RasterCache) {\r\n        super(el, rasterCache);\r\n        this.children = [];\r\n        this.el = el;\r\n    }\r\n\r\n    \r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Movement  //////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n    \r\n    /**\r\n     * Moves the object relative to its current position. \r\n     * @param dx\r\n     *  The change in x.\r\n     * @param dy \r\n     *  The change in y.\r\n     * @param attrs\r\n     *  If specified, this set of attributes will override the object's\r\n     *  underlying attributes.\r\n     */\r\n    public override moveBy(dx: number, dy: number, attrs?: number) {\r\n        // Move self\r\n        this.x += dx;\r\n        this.y += dy;\r\n        // Move anchored children\r\n        for(let obj of this.children) {\r\n            if(!obj.el.isAttached(this.el)) {\r\n                console.warn(`'${ obj.el.id }' incorrectly attached to anchor.`);\r\n                continue;\r\n            }\r\n            obj.moveTo(this.x, this.y);\r\n        }\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  2. Model Synchronization  /////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Synchronizes the view with the underlying model.\r\n     * \r\n     * NOTE:\r\n     * Anchors simply reference other objects in the tree. Anchors cannot spawn\r\n     * view objects on behalf of their children. Instead, the root of the tree\r\n     * will ensure that each anchor receives a reference to their children. Due\r\n     * to this limitation, anchor linkage cannot be updated independently.\r\n     * \r\n     * @returns\r\n     *  The view.\r\n     */\r\n    public override updateView(): DiagramAnchorView {\r\n        // Update position\r\n        this.x = this.el.boundingBox.xMid;\r\n        this.y = this.el.boundingBox.yMid;\r\n        return this;\r\n    }\r\n\r\n}\r\n","import { RasterCache } from \"../../DiagramElement/RasterCache\";\r\nimport { DiagramAnchorableModel } from \"../../DiagramModelTypes\"\r\nimport { \r\n    DiagramAnchorView,\r\n    DiagramObjectView\r\n} from \"./BaseViews\";\r\n\r\nexport abstract class DiagramAnchorableView extends DiagramObjectView {\r\n\r\n    /**\r\n     * The underlying model.\r\n     */\r\n    public override el: DiagramAnchorableModel;\r\n\r\n    /**\r\n     * The anchorable's anchor.\r\n     */\r\n    public anchor: DiagramAnchorView | undefined;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link DiagramAnchorableView}.\r\n     * @param el\r\n     *  The underlying model.\r\n     * @param rasterCache\r\n     *  The view's raster cache.\r\n     */\r\n    constructor(el: DiagramAnchorableModel, rasterCache: RasterCache) {\r\n        super(el, rasterCache);\r\n        this.el = el;\r\n    }\r\n\r\n}\r\n","import { RasterCache } from \"../../DiagramElement/RasterCache\";\r\nimport { DiagramLineEndingModel } from \"../../DiagramModelTypes\";\r\nimport {\r\n    DiagramLineView,\r\n    DiagramAnchorableView\r\n} from \"./BaseViews\";\r\n\r\nexport abstract class DiagramLineEndingView extends DiagramAnchorableView {\r\n\r\n    /**\r\n     * The underlying model.\r\n     */\r\n    public override el: DiagramLineEndingModel;\r\n\r\n    /**\r\n     * The line ending's parent.\r\n     */\r\n    public override parent: DiagramLineView | undefined;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link DiagramLineEndingView}.\r\n     * @param el\r\n     *  The underlying model.\r\n     * @param rasterCache\r\n     *  The view's raster cache.\r\n     */\r\n    constructor(el: DiagramLineEndingModel, rasterCache: RasterCache) {\r\n        super(el, rasterCache);\r\n        this.el = el;\r\n    }\r\n\r\n    \r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Movement  //////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n    \r\n    /**\r\n     * Moves the object relative to its current position. \r\n     * @param dx\r\n     *  The change in x.\r\n     * @param dy \r\n     *  The change in y.\r\n     * @param attrs\r\n     *  If specified, this set of attributes will override the object's\r\n     *  underlying attributes.\r\n     * @param useSuper\r\n     *  If true, the object will use its inherited `moveBy()` function.\r\n     */\r\n    public override moveBy(dx: number, dy: number, attrs?: number, useSuper: boolean = false): void {\r\n        if(useSuper) {\r\n            super.moveBy(dx, dy, attrs);\r\n        } else {\r\n            this.parent?.moveChild(this.el.id, dx, dy, attrs);\r\n        }\r\n    }\r\n\r\n}\r\n","import { RasterCache } from \"../../DiagramElement/RasterCache\";\r\nimport { DiagramLineHandleModel } from \"../../DiagramModelTypes\";\r\nimport {\r\n    DiagramLineView,\r\n    DiagramObjectView\r\n} from \"./BaseViews\";\r\n\r\nexport abstract class DiagramLineHandleView extends DiagramObjectView {\r\n\r\n    /**\r\n     * The underlying model.\r\n     */\r\n    public override el: DiagramLineHandleModel;\r\n\r\n    /**\r\n     * The line handle's parent.\r\n     */\r\n    public override parent: DiagramLineView | undefined;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link DiagramLineHandleView}.\r\n     * @param el\r\n     *  The underlying model.\r\n     * @param rasterCache\r\n     *  The view's raster cache.\r\n     */\r\n    constructor(el: DiagramLineHandleModel, rasterCache: RasterCache) {\r\n        super(el, rasterCache);\r\n        this.el = el;\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Movement  //////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Moves the object relative to its current position. \r\n     * @param dx\r\n     *  The change in x.\r\n     * @param dy \r\n     *  The change in y.\r\n     * @param attrs\r\n     *  If specified, this set of attributes will override the object's\r\n     *  underlying attributes.\r\n     * @param useSuper\r\n     *  If true, the object will use its inherited `moveBy()` function.\r\n     */\r\n    public override moveBy(dx: number, dy: number, attrs?: number, useSuper: boolean = false): void {\r\n        if(useSuper) {\r\n            super.moveBy(dx, dy, attrs);\r\n        } else {\r\n            this.parent?.moveChild(this.el.id, dx, dy, attrs);\r\n        }\r\n    }\r\n\r\n}\r\n","import { RasterCache } from \"../../DiagramElement/RasterCache\";\r\nimport { DiagramLineModel } from \"../../DiagramModelTypes\";\r\nimport {\r\n    DiagramObjectView,\r\n    DiagramLineEndingView,\r\n    DiagramLineHandleView\r\n} from \"./BaseViews\";\r\n\r\nexport abstract class DiagramLineView extends DiagramObjectView {\r\n\r\n    /**\r\n     * The underlying model.\r\n     */\r\n    public override el: DiagramLineModel;\r\n\r\n    /**\r\n     * The line's children.\r\n     */\r\n    public override children: DiagramLineObjectView[];\r\n\r\n    /**\r\n     * The line's source ending.\r\n     */\r\n    public get srcEnding(): DiagramLineEndingView {\r\n        return this.children.at(0) as DiagramLineEndingView;\r\n    }\r\n\r\n    /**\r\n     * The line's target ending.\r\n     */\r\n    public get trgEnding(): DiagramLineEndingView {\r\n        return this.children.at(-1) as DiagramLineEndingView;\r\n    }\r\n\r\n    \r\n    /**\r\n     * Creates a new {@link DiagramLineView}.\r\n     * @param el\r\n     *  The underlying model.\r\n     * @param rasterCache\r\n     *  The view's raster cache.\r\n     */\r\n    constructor(el: DiagramLineModel, rasterCache: RasterCache) {\r\n        super(el, rasterCache);\r\n        this.el = el;\r\n        this.children = [];\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Movement  //////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n    \r\n    /**\r\n     * Moves one of the line's children relative to its current position. \r\n     * @param id\r\n     *  The id of the child.\r\n     * @param dx\r\n     *  The change in x.\r\n     * @param dy\r\n     *  The change in y.\r\n     * @param attrs\r\n     *  If specified, this set of attributes will override the object's\r\n     *  underlying attributes.\r\n     */\r\n    public abstract moveChild(id: string, dx: number, dy: number, attrs?: number): void;\r\n\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  Internal Types  ///////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\ntype DiagramLineObjectView \r\n    = DiagramLineEndingView \r\n    | DiagramLineHandleView;\r\n","import { RasterCache } from \"../../DiagramElement/RasterCache\";\r\nimport { ViewportRegion } from \"../../DiagramElement\";\r\nimport { DiagramRootModel } from \"../../DiagramModelTypes\";\r\nimport {\r\n    DiagramAnchorView,\r\n    DiagramObjectView\r\n} from \"./BaseViews\";\r\n\r\nexport abstract class DiagramRootView extends DiagramObjectView {\r\n\r\n    /**\r\n     * The underlying model.\r\n     */\r\n    public override el: DiagramRootModel;\r\n\r\n    /**\r\n     * The root's internal object cache.\r\n     */\r\n    private _objectCache: Map<string, DiagramObjectView>;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link DiagramRootView}.\r\n     * @param el\r\n     *  The underlying model.\r\n     * @param rasterCache\r\n     *  The view's raster cache.\r\n     */\r\n    constructor(el: DiagramRootModel, rasterCache: RasterCache) {\r\n        super(el, rasterCache);\r\n        this.el = el;\r\n        this._objectCache = new Map();\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Render  ////////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Renders the object's debug information to a context.\r\n     * @param ctx\r\n     *  The context to render to.\r\n     * @param vr\r\n     *  The context's viewport.\r\n     */\r\n    public override renderDebugTo(ctx: CanvasRenderingContext2D, vr: ViewportRegion) {\r\n        ctx.save();\r\n        ctx.lineWidth = 1\r\n        ctx.fillStyle = \"#00ff00\";\r\n        ctx.strokeStyle = \"#ffffff\";\r\n        ctx.setLineDash([2, 2]);\r\n        super.renderDebugTo(ctx, vr);\r\n        ctx.restore();\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  2. Model Synchronization  /////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Synchronizes the view with the underlying model.\r\n     * @returns\r\n     *  The view.\r\n     */\r\n    public override updateView(): DiagramRootView {\r\n        // Update root\r\n        super.updateView();\r\n        // Update cache\r\n        this._objectCache.clear();\r\n        for(let obj of this.getSubtree()) {\r\n            this._objectCache.set(obj.el.id, obj);\r\n        }\r\n        // Update anchors\r\n        for(let obj of this.el.anchorCache) {\r\n            let anchor = this.lookup<DiagramAnchorView>(obj.id)!;\r\n            anchor.children = new Array(obj.children.length);\r\n            for(let i = 0; i < anchor.children.length; i++) {\r\n                let child = obj.children[i]; \r\n                // Add object to anchor\r\n                anchor.children[i] = this.lookup(child.id)!;\r\n                // Add anchor to object\r\n                anchor.children[i].anchor = anchor;\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    \r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  3. Object Lookup  /////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Returns an object from the diagram.\r\n     * @param id\r\n     *  The id of the object.\r\n     * @returns\r\n     *  The object or `undefined` if no object with that id exists.\r\n     */\r\n    public lookup<T extends DiagramObjectView>(id: string): T | undefined {\r\n        return this._objectCache.get(id) as T;\r\n    }\r\n\r\n}\r\n","import { RasterCache } from \"../DiagramElement/RasterCache\";\r\nimport { ViewportRegion } from \"../DiagramElement\";\r\nimport { LineEndingPointModel } from \"../DiagramModelTypes\";\r\nimport { DiagramLineEndingView } from \"./BaseTypes/BaseViews\";\r\n\r\nexport class LineEndingPointView extends DiagramLineEndingView {\r\n    \r\n    /**\r\n     * The underlying model.\r\n     */\r\n    public override el: LineEndingPointModel;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link LineEndingPointView}.\r\n     * @param el\r\n     *  The underlying model.\r\n     * @param rasterCache\r\n     *  The view's raster cache.\r\n     */\r\n    constructor(el: LineEndingPointModel, rasterCache: RasterCache) {\r\n        super(el, rasterCache);\r\n        this.el = el;\r\n    }\r\n\r\n    \r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Render  ////////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Renders the object to a context.\r\n     * @param ctx\r\n     *  The context to render to.\r\n     * @param vr\r\n     *  The context's viewport.\r\n     * @param dsx\r\n     *  The drop shadow's x-offset.\r\n     *  (Default: 0)\r\n     * @param dsy\r\n     *  The drop shadow's y-offset.\r\n     *  (Default: 0)\r\n     * @param attrs\r\n     *  If specified, these attributes will override the object's underlying\r\n     *  attributes.\r\n     */\r\n    public override renderTo(\r\n        ctx: CanvasRenderingContext2D, vr: ViewportRegion,\r\n        dsx: number = 0, dsy: number = 0, attrs?: number\r\n    ) { \r\n        \r\n        // Init\r\n        let { \r\n            radius,\r\n            fill_color,\r\n            stroke_color,\r\n            stroke_width\r\n        } = this.el.style;\r\n        \r\n        // Configure canvas\r\n        ctx.fillStyle = fill_color;\r\n        ctx.lineWidth = stroke_width;\r\n        ctx.strokeStyle = stroke_color;\r\n\r\n        // Draw ending\r\n        ctx.beginPath();\r\n        ctx.arc(this.x, this.y, radius, 0, 2 * Math.PI);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n        ctx.stroke();\r\n\r\n    }\r\n\r\n}\r\n","import { RasterCache } from \"../DiagramElement/RasterCache\";\r\nimport { ViewportRegion } from \"../DiagramElement\";\r\nimport { LineHandlePointModel } from \"../DiagramModelTypes\";\r\nimport { DiagramLineHandleView } from \"./BaseTypes/BaseViews\";\r\n\r\nexport class LineHandlePointView extends DiagramLineHandleView {\r\n    \r\n    /**\r\n     * The underlying model.\r\n     */\r\n    public override el: LineHandlePointModel;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link LineHandlePointView}.\r\n     * @param el\r\n     *  The underlying model.\r\n     * @param rasterCache\r\n     *  The view's raster cache.\r\n     */\r\n    constructor(el: LineHandlePointModel, rasterCache: RasterCache) {\r\n        super(el, rasterCache);\r\n        this.el = el;\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Render  ////////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    \r\n    \r\n    /**\r\n     * Renders the object to a context.\r\n     * @param ctx\r\n     *  The context to render to.\r\n     * @param vr\r\n     *  The context's viewport.\r\n     * @param dsx\r\n     *  The drop shadow's x-offset.\r\n     *  (Default: 0)\r\n     * @param dsy\r\n     *  The drop shadow's y-offset.\r\n     *  (Default: 0)\r\n     * @param attrs\r\n     *  If specified, these attributes will override the object's underlying\r\n     *  attributes.\r\n     */\r\n    public override renderTo(\r\n        ctx: CanvasRenderingContext2D, vr: ViewportRegion,\r\n        dsx: number = 0, dsy: number = 0, attrs?: number\r\n    ) { \r\n        \r\n        // Init\r\n        let { \r\n            radius,\r\n            fill_color,\r\n            stroke_color,\r\n            stroke_width\r\n        } = this.el.style;\r\n        \r\n        // Configure canvas\r\n        ctx.fillStyle = fill_color;\r\n        ctx.lineWidth = stroke_width;\r\n        ctx.strokeStyle = stroke_color;\r\n\r\n        // Stroke width offset\r\n        let wo = stroke_width % 2 ? 0.5 : 0;\r\n\r\n        // Draw handle\r\n        ctx.beginPath();\r\n        ctx.arc(this.x, this.y, radius + wo, 0, 2 * Math.PI);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n        ctx.stroke();\r\n    \r\n    }\r\n\r\n}\r\n","import { drawArrowHead } from \"../Utilities\";\r\nimport { RasterCache } from \"../DiagramElement/RasterCache\";\r\nimport { ViewportRegion } from \"../DiagramElement\";\r\nimport { LineHorizontalElbowModel } from \"../DiagramModelTypes\";\r\nimport { \r\n    DiagramLineEndingView,\r\n    DiagramLineView\r\n} from \".\";\r\nimport { Select, SelectMask } from \"../Attributes\";\r\n\r\nexport class LineHorizontalElbowView extends DiagramLineView {\r\n    \r\n    /**\r\n     * The underlying model.\r\n     */\r\n    public override el: LineHorizontalElbowModel;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link LineHorizontalElbowView}.\r\n     * @param el\r\n     *  The underlying model.\r\n     * @param rasterCache\r\n     *  The view's raster cache.\r\n     */\r\n    constructor(el: LineHorizontalElbowModel, rasterCache: RasterCache) {\r\n        super(el, rasterCache);\r\n        this.el = el;\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Movement  //////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Moves one of the line's children relative to its current position. \r\n     * @param id\r\n     *  The id of the child.\r\n     * @param dx\r\n     *  The change in x.\r\n     * @param dy\r\n     *  The change in y.\r\n     * @param attrs\r\n     *  If specified, this set of attributes will override the object's\r\n     *  underlying attributes.\r\n     */\r\n    public moveChild(id: string, dx: number, dy: number, attrs?: number): void {\r\n        // Select child\r\n        let obj = this.children.find(o => o.el.id === id)!;\r\n        if(!obj)\r\n            return;\r\n        // Move ending\r\n        if(obj instanceof DiagramLineEndingView) {\r\n            obj.moveBy(dx, dy, undefined, true);\r\n        }\r\n        let [e1, h1, e2] = this.children;\r\n        // Move handle\r\n        let hdx = ((e1.x + e2.x) / 2) - h1.x,\r\n            hdy = ((e1.y + e2.y) / 2) - h1.y;\r\n        // attrs must ONLY override the child being moved, we \r\n        // can't override h1 unless we're explicitly moving h1\r\n        if(!h1.el.hasUserSetPosition(obj === h1 ? attrs : undefined)) {\r\n            h1.moveBy(hdx, 0, undefined, true);\r\n        } else if(obj === h1) {\r\n            h1.moveBy(dx, 0, undefined, true);\r\n        }\r\n        h1.moveBy(0, hdy, undefined, true);\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  2. Render  ////////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Renders the object to a context.\r\n     * @param ctx\r\n     *  The context to render to.\r\n     * @param vr\r\n     *  The context's viewport.\r\n     * @param dsx\r\n     *  The drop shadow's x-offset.\r\n     *  (Default: 0)\r\n     * @param dsy\r\n     *  The drop shadow's y-offset.\r\n     *  (Default: 0)\r\n     * @param attrs\r\n     *  If specified, these attributes will override the object's underlying\r\n     *  attributes.\r\n     */\r\n    public override renderTo(\r\n        ctx: CanvasRenderingContext2D, vr: ViewportRegion,\r\n        dsx: number = 0, dsy: number = 0, attrs?: number\r\n    ) { \r\n        if(!this.isVisible(vr)) {\r\n            return;\r\n        }\r\n\r\n        // Init\r\n        let {\r\n            children: c\r\n        } = this;        \r\n        let {\r\n            cap_size: cs,\r\n            width,\r\n            color,\r\n            select_color\r\n        } = this.el.style;\r\n\r\n        // Configure line\r\n        ctx.lineWidth = width;\r\n        let lineColor;\r\n        switch(this.el.attrs & SelectMask) {\r\n            case Select.True:\r\n                lineColor = select_color;\r\n                break;\r\n            case Select.False:\r\n            default:\r\n                lineColor = color;\r\n                break;\r\n        }\r\n        ctx.fillStyle = lineColor;\r\n        ctx.strokeStyle = lineColor;\r\n\r\n        // Line width offset\r\n        let wo = width % 2 ? 0.5 : 0;\r\n        // End offset\r\n        let eo = Math.sign(c[2].x - c[1].x) * (cs >> 1);\r\n        \r\n        // Draw line\r\n        ctx.beginPath();\r\n        ctx.moveTo(c[0].x,      c[0].y + wo);\r\n        ctx.lineTo(c[1].x + wo, c[0].y + wo);\r\n        ctx.lineTo(c[1].x + wo, c[2].y + wo);\r\n        ctx.lineTo(c[2].x - eo, c[2].y + wo);\r\n        ctx.stroke();\r\n        \r\n        // Draw arrow head\r\n        drawArrowHead(\r\n            ctx, \r\n            c[1].x, c[2].y + wo, \r\n            c[2].x, c[2].y + wo, \r\n            cs\r\n        );\r\n        ctx.fill();\r\n\r\n        // Draw handles and ends\r\n        if(this.el.isSelected(attrs)) {\r\n            super.renderTo(ctx, vr, dsx, dsy);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Renders the object's debug information to a context.\r\n     * @param ctx\r\n     *  The context to render to.\r\n     * @param vr\r\n     *  The context's viewport.\r\n     */\r\n    public override renderDebugTo(ctx: CanvasRenderingContext2D, vr: ViewportRegion) {\r\n        if(!this.isVisible(vr)) {\r\n            return;\r\n        }\r\n        let radius = 2;\r\n        let p = Math.PI * 2;\r\n        // Draw hitbox points\r\n        ctx.beginPath();\r\n        for(let hitbox of this.el.hitboxes) {\r\n            for(let i = 0; i < hitbox.length; i += 2) {\r\n                ctx.moveTo(hitbox[i] + radius, hitbox[i + 1]);\r\n                ctx.arc(hitbox[i], hitbox[i + 1], radius, 0, p);\r\n            }\r\n        }\r\n        ctx.fill();\r\n        // Draw bounding box\r\n        super.renderDebugTo(ctx, vr);\r\n    }\r\n\r\n}\r\n","import { drawArrowHead } from \"../Utilities\";\r\nimport { RasterCache } from \"../DiagramElement/RasterCache\";\r\nimport { ViewportRegion } from \"../DiagramElement\";\r\nimport { LineVerticalElbowModel } from \"../DiagramModelTypes\";\r\nimport { \r\n    DiagramLineEndingView,\r\n    DiagramLineView\r\n} from \".\";\r\nimport { Select, SelectMask } from \"../Attributes\";\r\n\r\nexport class LineVerticalElbowView extends DiagramLineView {\r\n    \r\n    /**\r\n     * The underlying model.\r\n     */\r\n    public override el: LineVerticalElbowModel;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link LineVerticalElbowView}.\r\n     * @param el\r\n     *  The underlying model.\r\n     * @param rasterCache\r\n     *  The view's raster cache.\r\n     */\r\n    constructor(el: LineVerticalElbowModel, rasterCache: RasterCache) {\r\n        super(el, rasterCache);\r\n        this.el = el;\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Movement  //////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Moves one of the line's children relative to its current position. \r\n     * @param id\r\n     *  The id of the child.\r\n     * @param dx\r\n     *  The change in x.\r\n     * @param dy\r\n     *  The change in y.\r\n     * @param attrs\r\n     *  If specified, this set of attributes will override the object's\r\n     *  underlying attributes.\r\n     */\r\n    public moveChild(id: string, dx: number, dy: number, attrs?: number): void {\r\n        // Select child\r\n        let obj = this.children.find(o => o.el.id === id)!;\r\n        if(!obj)\r\n            return;\r\n        // Move ending\r\n        if(obj instanceof DiagramLineEndingView) {\r\n            obj.moveBy(dx, dy, undefined, true);\r\n        }\r\n        let [e1, h1, e2] = this.children;\r\n        // Move handle\r\n        let hdx = ((e1.x + e2.x) / 2) - h1.x,\r\n            hdy = ((e1.y + e2.y) / 2) - h1.y;\r\n        // attrs must ONLY override the child being moved, we \r\n        // can't override h1 unless we're explicitly moving h1\r\n        if(!h1.el.hasUserSetPosition(obj === h1 ? attrs : undefined)) {\r\n            h1.moveBy(0, hdy, undefined, true);\r\n        } else if(obj === h1) {\r\n            h1.moveBy(0, dy, undefined, true);\r\n        }\r\n        h1.moveBy(hdx, 0, undefined, true);\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  2. Render  ////////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Renders the object to a context.\r\n     * @param ctx\r\n     *  The context to render to.\r\n     * @param vr\r\n     *  The context's viewport.\r\n     * @param dsx\r\n     *  The drop shadow's x-offset.\r\n     *  (Default: 0)\r\n     * @param dsy\r\n     *  The drop shadow's y-offset.\r\n     *  (Default: 0)\r\n     * @param attrs\r\n     *  If specified, these attributes will override the object's underlying\r\n     *  attributes.\r\n     */\r\n    public override renderTo(\r\n        ctx: CanvasRenderingContext2D, vr: ViewportRegion,\r\n        dsx: number = 0, dsy: number = 0, attrs?: number\r\n    ) { \r\n        if(!this.isVisible(vr)) {\r\n            return;\r\n        }\r\n\r\n        // Init\r\n        let {\r\n            children: c\r\n        } = this;        \r\n        let {\r\n            cap_size: cs,\r\n            width,\r\n            color,\r\n            select_color\r\n        } = this.el.style;\r\n\r\n        // Configure line\r\n        ctx.lineWidth = width;\r\n        let lineColor;\r\n        switch(this.el.attrs & SelectMask) {            \r\n            case Select.True:\r\n                lineColor = select_color;\r\n                break;\r\n            case Select.False:\r\n            default:\r\n                lineColor = color;\r\n                break;\r\n        }\r\n        ctx.fillStyle = lineColor;\r\n        ctx.strokeStyle = lineColor;\r\n\r\n        // Line width offset\r\n        let wo = width % 2 ? 0.5 : 0;\r\n        // End offset\r\n        let eo = Math.sign(c[1].y - c[2].y) * (cs >> 1);\r\n        \r\n        // Draw line\r\n        ctx.beginPath();\r\n        ctx.moveTo(c[0].x + wo, c[0].y);\r\n        ctx.lineTo(c[0].x + wo, c[1].y + wo);\r\n        ctx.lineTo(c[2].x + wo, c[1].y + wo);\r\n        ctx.lineTo(c[2].x + wo, c[2].y + eo);\r\n        ctx.stroke();\r\n\r\n        // Draw arrow head\r\n        drawArrowHead(\r\n            ctx, \r\n            c[2].x + wo, c[1].y,\r\n            c[2].x + wo, c[2].y,\r\n            cs\r\n        );\r\n        ctx.fill();\r\n\r\n        // Draw handles and ends\r\n        if(this.el.isSelected(attrs)) {\r\n            super.renderTo(ctx, vr, dsx, dsy);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Renders the object's debug information to a context.\r\n     * @param ctx\r\n     *  The context to render to.\r\n     * @param vr\r\n     *  The context's viewport.\r\n     */\r\n    public override renderDebugTo(ctx: CanvasRenderingContext2D, vr: ViewportRegion) {\r\n        if(!this.isVisible(vr)) {\r\n            return;\r\n        }\r\n        let radius = 2;\r\n        let p = Math.PI * 2;\r\n        // Draw hitbox points\r\n        ctx.beginPath();\r\n        for(let hitbox of this.el.hitboxes) {\r\n            for(let i = 0; i < hitbox.length; i += 2) {\r\n                ctx.moveTo(hitbox[i] + radius, hitbox[i + 1]);\r\n                ctx.arc(hitbox[i], hitbox[i + 1], radius, 0, p);\r\n            }\r\n        }\r\n        ctx.fill();\r\n        // Draw bounding box\r\n        super.renderDebugTo(ctx, vr);\r\n    }\r\n\r\n}\r\n","import { RasterCache } from \"../DiagramElement/RasterCache\";\r\nimport { ViewportRegion } from \"../DiagramElement\";\r\nimport { AnchorPointModel } from \"../DiagramModelTypes\";\r\nimport { DiagramAnchorView } from \".\";\r\n\r\nexport class AnchorPointView extends DiagramAnchorView {\r\n\r\n    /**\r\n     * The underlying model.\r\n     */\r\n    public override el: AnchorPointModel;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link AnchorPointView}.\r\n     * @param el\r\n     *  The underlying model.\r\n     * @param rasterCache\r\n     *  The view's raster cache.\r\n     */\r\n    constructor(el: AnchorPointModel, rasterCache: RasterCache) {\r\n        super(el, rasterCache);\r\n        this.el = el;\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Render  ////////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Renders the object to a context.\r\n     * @param ctx\r\n     *  The context to render to.\r\n     * @param vr\r\n     *  The context's viewport.\r\n     * @param dsx\r\n     *  The drop shadow's x-offset.\r\n     *  (Default: 0)\r\n     * @param dsy\r\n     *  The drop shadow's y-offset.\r\n     *  (Default: 0)\r\n     * @param attrs\r\n     *  If specified, these attributes will override the object's underlying\r\n     *  attributes.\r\n     */\r\n    public override renderTo(\r\n        ctx: CanvasRenderingContext2D, vr: ViewportRegion,\r\n        dsx: number = 0, dsy: number = 0, attrs?: number\r\n    ) { \r\n        // Only visible when hovered\r\n        if(!this.el.isHovered(attrs))\r\n            return;\r\n        ctx.fillStyle = this.el.style.color;\r\n        ctx.beginPath();\r\n        ctx.arc(this.x, this.y, this.el.radius, 0, 2 * Math.PI);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n\r\n}\r\n","import { drawRect } from \"../Utilities\";\r\nimport { RasterCache } from \"../DiagramElement/RasterCache\";\r\nimport { ViewportRegion } from \"../DiagramElement\";\r\nimport { DictionaryBlockModel } from \"../DiagramModelTypes\";\r\nimport { DiagramObjectView } from \".\";\r\n\r\nexport class DictionaryBlockView extends DiagramObjectView {\r\n    \r\n    /**\r\n     * The underlying model.\r\n     */\r\n    public override el: DictionaryBlockModel;\r\n\r\n    /**\r\n     * The block's top-left x coordinate.\r\n     */\r\n    public tlx: number;\r\n\r\n    /**\r\n     * The block's top-left y coordinate.\r\n     */\r\n    public tly: number;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link DictionaryBlockView}.\r\n     * @param el\r\n     *  The underlying model.\r\n     * @param rasterCache\r\n     *  The view's raster cache.\r\n     */\r\n    constructor(el: DictionaryBlockModel, rasterCache: RasterCache) {\r\n        super(el, rasterCache);\r\n        this.el = el;\r\n        this.tlx = 0;\r\n        this.tly = 0;\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Movement  //////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Moves the object relative to its current position. \r\n     * @param dx\r\n     *  The change in x.\r\n     * @param dy \r\n     *  The change in y.\r\n     * @param attrs\r\n     *  If specified, this set of attributes will override the object's\r\n     *  underlying attributes.\r\n     */\r\n    public override moveBy(dx: number, dy: number, attrs?: number) {\r\n        super.moveBy(dx, dy);\r\n        // Move top left corner\r\n        this.tlx += dx;\r\n        this.tly += dy;\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  2. Render  ////////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n    \r\n    /**\r\n     * Renders the object to a context.\r\n     * @param ctx\r\n     *  The context to render to.\r\n     * @param vr\r\n     *  The context's viewport.\r\n     * @param dsx\r\n     *  The drop shadow's x-offset.\r\n     *  (Default: 0)\r\n     * @param dsy\r\n     *  The drop shadow's y-offset.\r\n     *  (Default: 0)\r\n     * @param attrs\r\n     *  If specified, these attributes will override the object's underlying\r\n     *  attributes.\r\n     */\r\n    public override renderTo(\r\n        ctx: CanvasRenderingContext2D, vr: ViewportRegion,\r\n        dsx: number = 0, dsy: number = 0, attrs?: number\r\n    ) { \r\n        if(!this.isVisible(vr)) {\r\n            return;\r\n        }\r\n\r\n        // Init\r\n        let { tlx: x, tly: y } = this;\r\n        let { \r\n            body, \r\n            head,\r\n            select_outline: so,\r\n            border_radius: br,\r\n        } = this.el.style;\r\n        let {\r\n            width: w,\r\n            height: h,\r\n            headerHeight: hh,\r\n            text\r\n        } = this.el.layout;\r\n        let isSplitBlock = hh !== h;\r\n\r\n        // Draw body\r\n        let bf, bs;\r\n        if(isSplitBlock) {\r\n            bf = body.fill_color\r\n            bs = body.stroke_color\r\n        } else {\r\n            bf = head.fill_color\r\n            bs = head.stroke_color\r\n        }\r\n        ctx.lineWidth = 1.1;\r\n        drawRect(ctx, x, y, w, h, br);\r\n        if(dsx | dsy) {\r\n            ctx.shadowOffsetX = dsx + (0.5 * vr.scale);\r\n            ctx.shadowOffsetY = dsy + (0.5 * vr.scale);\r\n            ctx.fillStyle = bf;\r\n            ctx.strokeStyle = bs;\r\n            ctx.fill();\r\n            ctx.shadowOffsetX = 0;\r\n            ctx.shadowOffsetY = 0;\r\n            ctx.stroke();\r\n        } else {\r\n            ctx.fillStyle = bf;\r\n            ctx.strokeStyle = bs;\r\n            ctx.fill();\r\n            ctx.stroke();\r\n        }\r\n\r\n        // Draw head\r\n        if(isSplitBlock) {\r\n            drawRect(ctx, x, y, w, hh, { tr: br, tl: br });\r\n            ctx.fillStyle = head.fill_color;\r\n            ctx.strokeStyle = head.stroke_color;\r\n            ctx.fill();\r\n            ctx.stroke();\r\n        }\r\n\r\n        // Draw text\r\n        for(let set of text) {\r\n            ctx.font = set.font.css;\r\n            ctx.fillStyle = set.color;\r\n            for(let text of set.text) {\r\n                ctx.fillText(text.t, x + text.x, y + text.y)\r\n            }\r\n        }\r\n\r\n        if(this.el.isSelected(attrs)) {\r\n            \r\n            // Init\r\n            let { \r\n                color,\r\n                padding: p,\r\n                border_radius: br\r\n            } = so;\r\n            p += 1;\r\n\r\n            // Draw select border\r\n            drawRect(ctx, x - p, y - p, w + p*2, h + p*2, br, 1);\r\n            ctx.strokeStyle = color;\r\n            ctx.stroke();\r\n\r\n        } else if(this.el.isHovered(attrs)) {\r\n\r\n            // Init\r\n            let {\r\n                color,\r\n                size\r\n            } = this.el.style.anchor_markers;\r\n            \r\n            // Draw anchors\r\n            super.renderTo(ctx, vr, dsx, dsy);    \r\n\r\n            // Draw anchor markers\r\n            ctx.strokeStyle = color;\r\n            ctx.beginPath();\r\n            for(let o of this.children) {\r\n                ctx.moveTo(o.x - size, o.y - size);\r\n                ctx.lineTo(o.x + size, o.y + size);\r\n                ctx.moveTo(o.x + size, o.y - size);\r\n                ctx.lineTo(o.x - size, o.y + size);\r\n            }\r\n            ctx.stroke();\r\n        \r\n        }\r\n\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  3. Model Synchronization  /////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Synchronizes the view with the underlying model.\r\n     * @returns\r\n     *  The view.\r\n     */\r\n    public override updateView(): DictionaryBlockView {\r\n        // Update view\r\n        super.updateView();\r\n        // Update top-left corner\r\n        this.tlx = this.el.boundingBox.xMin + this.el.layout.dx;\r\n        this.tly = this.el.boundingBox.yMin + this.el.layout.dy;\r\n        // Return\r\n        return this;\r\n    }\r\n\r\n}\r\n","import { drawRect } from \"../Utilities\";\r\nimport { RasterCache } from \"../DiagramElement/RasterCache\";\r\nimport { ViewportRegion } from \"../DiagramElement\";\r\nimport { BranchBlockModel } from \"../DiagramModelTypes\";\r\nimport { DiagramObjectView } from \".\";\r\n\r\nexport class BranchBlockView extends DiagramObjectView {\r\n    \r\n    /**\r\n     * The underlying model.\r\n     */\r\n    public override el: BranchBlockModel;\r\n\r\n    /**\r\n     * The block's top-left x coordinate.\r\n     */\r\n    public tlx: number;\r\n\r\n    /**\r\n     * The block's top-left y coordinate.\r\n     */\r\n    public tly: number;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link BranchBlockView}.\r\n     * @param el\r\n     *  The underlying model.\r\n     * @param rasterCache\r\n     *  The view's raster cache.\r\n     */\r\n    constructor(el: BranchBlockModel, rasterCache: RasterCache) {\r\n        super(el, rasterCache);\r\n        this.el = el;\r\n        this.tlx = 0;\r\n        this.tly = 0;\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Movement  //////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Moves the object relative to its current position. \r\n     * @param dx\r\n     *  The change in x.\r\n     * @param dy \r\n     *  The change in y.\r\n     * @param attrs\r\n     *  If specified, this set of attributes will override the object's\r\n     *  underlying attributes.\r\n     */\r\n    public override moveBy(dx: number, dy: number, attrs?: number) {\r\n        super.moveBy(dx, dy);\r\n        // Move top left corner\r\n        this.tlx += dx;\r\n        this.tly += dy;\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  2. Render  ////////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n    \r\n    /**\r\n     * Renders the object to a context.\r\n     * @param ctx\r\n     *  The context to render to.\r\n     * @param vr\r\n     *  The context's viewport.\r\n     * @param dsx\r\n     *  The drop shadow's x-offset.\r\n     *  (Default: 0)\r\n     * @param dsy\r\n     *  The drop shadow's y-offset.\r\n     *  (Default: 0)\r\n     * @param attrs\r\n     *  If specified, these attributes will override the object's underlying\r\n     *  attributes.\r\n     */\r\n    public override renderTo(\r\n        ctx: CanvasRenderingContext2D, vr: ViewportRegion,\r\n        dsx: number = 0, dsy: number = 0, attrs?: number\r\n    ) { \r\n        if(!this.isVisible(vr)) {\r\n            return;\r\n        }\r\n\r\n        // Init\r\n        let { tlx: x, tly: y } = this;\r\n        let { \r\n            body, \r\n            head,\r\n            select_outline: so,\r\n            border_radius: br,\r\n        } = this.el.style;\r\n        let {\r\n            width: w,\r\n            height: h,\r\n            headerHeight: hh,\r\n            text,\r\n            lines\r\n        } = this.el.layout;\r\n        let isSplitBlock = hh !== h;\r\n\r\n        // Draw body\r\n        let bf, bs;\r\n        if(isSplitBlock) {\r\n            bf = body.fill_color\r\n            bs = body.stroke_color\r\n        } else {\r\n            bf = head.fill_color\r\n            bs = head.stroke_color\r\n        }\r\n        ctx.lineWidth = 1.1;\r\n        drawRect(ctx, x, y, w, h, br);\r\n        if(dsx | dsy) {\r\n            ctx.shadowOffsetX = dsx + (0.5 * vr.scale);\r\n            ctx.shadowOffsetY = dsy + (0.5 * vr.scale);\r\n            ctx.fillStyle = bf;\r\n            ctx.strokeStyle = bs;\r\n            ctx.fill();\r\n            ctx.shadowOffsetX = 0;\r\n            ctx.shadowOffsetY = 0;\r\n            ctx.stroke();\r\n        } else {\r\n            ctx.fillStyle = bf;\r\n            ctx.strokeStyle = bs;\r\n            ctx.fill();\r\n            ctx.stroke();\r\n        }\r\n\r\n        // Draw lines\r\n        for(let line of lines) {\r\n            ctx.moveTo(x + line.x0, y + line.y0);\r\n            ctx.lineTo(x + line.x1, y + line.y1);\r\n        }\r\n        ctx.stroke();\r\n\r\n        // Draw head\r\n        if(isSplitBlock) {\r\n            drawRect(ctx, x, y, w, hh, { tr: br, tl: br });\r\n            ctx.fillStyle = head.fill_color;\r\n            ctx.strokeStyle = head.stroke_color;\r\n            ctx.fill();\r\n            ctx.stroke();\r\n        }\r\n\r\n        // Draw text\r\n        for(let set of text) {\r\n            ctx.font = set.font.css;\r\n            ctx.fillStyle = set.color;\r\n            for(let text of set.text) {\r\n                ctx.fillText(text.t, x + text.x, y + text.y)\r\n            }\r\n        }\r\n\r\n        if(this.el.isSelected(attrs)) {\r\n            \r\n            // Init\r\n            let { \r\n                color,\r\n                padding: p,\r\n                border_radius: br\r\n            } = so;\r\n            p += 1;\r\n\r\n            // Draw select border\r\n            drawRect(ctx, x - p, y - p, w + p*2, h + p*2, br, 1);\r\n            ctx.strokeStyle = color;\r\n            ctx.stroke();\r\n\r\n        } else if(this.el.isHovered(attrs)) {\r\n\r\n            // Init\r\n            let {\r\n                color,\r\n                size\r\n            } = this.el.style.anchor_markers;\r\n            \r\n            // Draw anchors\r\n            super.renderTo(ctx, vr, dsx, dsy);    \r\n\r\n            // Draw anchor markers\r\n            ctx.strokeStyle = color;\r\n            ctx.beginPath();\r\n            for(let o of this.children) {\r\n                ctx.moveTo(o.x - size, o.y - size);\r\n                ctx.lineTo(o.x + size, o.y + size);\r\n                ctx.moveTo(o.x + size, o.y - size);\r\n                ctx.lineTo(o.x - size, o.y + size);\r\n            }\r\n            ctx.stroke();\r\n        \r\n        }\r\n\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  3. Model Synchronization  /////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Synchronizes the view with the underlying model.\r\n     * @returns\r\n     *  The view.\r\n     */\r\n    public override updateView(): BranchBlockView {\r\n        // Update view\r\n        super.updateView();\r\n        // Update top-left corner\r\n        this.tlx = this.el.boundingBox.xMin + this.el.layout.dx;\r\n        this.tly = this.el.boundingBox.yMin + this.el.layout.dy;\r\n        // Return\r\n        return this;\r\n    }\r\n\r\n}\r\n","import { drawRect } from \"../Utilities\";\r\nimport { RasterCache, ViewportRegion } from \"../DiagramElement\";\r\nimport { TextBlockModel } from \"../DiagramModelTypes\";\r\nimport { DiagramObjectView } from \".\";\r\n\r\nexport class TextBlockView extends DiagramObjectView {\r\n    \r\n    /**\r\n     * The underlying model.\r\n     */\r\n    public override el: TextBlockModel;\r\n\r\n    /**\r\n     * The block's top-left x coordinate.\r\n     */\r\n    public tlx: number;\r\n\r\n    /**\r\n     * The block's top-left y coordinate.\r\n     */\r\n    public tly: number;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link DictionaryBlockView}.\r\n     * @param el\r\n     *  The underlying model.\r\n     * @param rasterCache\r\n     *  The view's raster cache.\r\n     */\r\n    constructor(el: TextBlockModel, rasterCache: RasterCache) {\r\n        super(el, rasterCache);\r\n        this.el = el;\r\n        this.tlx = 0;\r\n        this.tly = 0;\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Movement  //////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Moves the object relative to its current position. \r\n     * @param dx\r\n     *  The change in x.\r\n     * @param dy \r\n     *  The change in y.\r\n     * @param attrs\r\n     *  If specified, this set of attributes will override the object's\r\n     *  underlying attributes.\r\n     */\r\n    public override moveBy(dx: number, dy: number, attrs?: number) {\r\n        super.moveBy(dx, dy);\r\n        // Move top left corner\r\n        this.tlx += dx;\r\n        this.tly += dy;\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  2. Render  ////////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n    \r\n    /**\r\n     * Renders the object to a context.\r\n     * @param ctx\r\n     *  The context to render to.\r\n     * @param vr\r\n     *  The context's viewport.\r\n     * @param dsx\r\n     *  The drop shadow's x-offset.\r\n     *  (Default: 0)\r\n     * @param dsy\r\n     *  The drop shadow's y-offset.\r\n     *  (Default: 0)\r\n     * @param attrs\r\n     *  If specified, these attributes will override the object's underlying\r\n     *  attributes.\r\n     */\r\n    public override renderTo(\r\n        ctx: CanvasRenderingContext2D, vr: ViewportRegion,\r\n        dsx: number = 0, dsy: number = 0, attrs?: number\r\n    ) { \r\n        if(!this.isVisible(vr)) {\r\n            return;\r\n        }\r\n\r\n        // Init\r\n        let { tlx: x, tly: y } = this;\r\n        let {\r\n            text,\r\n            fill_color,\r\n            stroke_color,\r\n            select_outline: so,\r\n            border_radius: br,\r\n        } = this.el.style;\r\n        let {\r\n            width: w,\r\n            height: h,\r\n            text: placements\r\n        } = this.el.layout;\r\n\r\n        // Draw body\r\n        ctx.lineWidth = 1.1;\r\n        if(dsx | dsy){\r\n            drawRect(ctx, x, y, w, h, br);\r\n            ctx.shadowOffsetX = dsx + (0.5 * vr.scale);\r\n            ctx.shadowOffsetY = dsy + (0.5 * vr.scale);\r\n            ctx.fillStyle = fill_color;\r\n            ctx.strokeStyle = stroke_color;\r\n            ctx.fill();\r\n            ctx.shadowOffsetX = 0;\r\n            ctx.shadowOffsetY = 0;\r\n            ctx.stroke();\r\n        } else {\r\n            drawRect(ctx, x, y, w, h, br);\r\n            ctx.fillStyle = fill_color;\r\n            ctx.strokeStyle = stroke_color;\r\n            ctx.fill();\r\n            ctx.stroke();\r\n        }\r\n\r\n        // Draw text\r\n        ctx.font = text.font.css;\r\n        ctx.fillStyle = text.color;\r\n        for(let p of placements) {\r\n            ctx.fillText(p.t, x + p.x, y + p.y)\r\n        }\r\n\r\n        if(this.el.isSelected(attrs)) {\r\n            \r\n            // Init\r\n            let { \r\n                color,\r\n                padding: p,\r\n                border_radius: br\r\n            } = so;\r\n            p += 1;\r\n\r\n            // Draw select border\r\n            drawRect(ctx, x - p, y - p, w + p*2, h + p*2, br, 1);\r\n            ctx.strokeStyle = color;\r\n            ctx.stroke();\r\n\r\n        } else if(this.el.isHovered(attrs)) {\r\n\r\n            // Init\r\n            let {\r\n                color,\r\n                size\r\n            } = this.el.style.anchor_markers;\r\n            \r\n            // Draw anchors\r\n            super.renderTo(ctx, vr, dsx, dsy);    \r\n\r\n            // Draw anchor markers\r\n            ctx.strokeStyle = color;\r\n            ctx.beginPath();\r\n            for(let o of this.children) {\r\n                ctx.moveTo(o.x - size, o.y - size);\r\n                ctx.lineTo(o.x + size, o.y + size);\r\n                ctx.moveTo(o.x + size, o.y - size);\r\n                ctx.lineTo(o.x - size, o.y + size);\r\n            }\r\n            ctx.stroke();\r\n        \r\n        }\r\n\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  3. Model Synchronization  /////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Synchronizes the view with the underlying model.\r\n     * @returns\r\n     *  The view.\r\n     */\r\n    public override updateView(): TextBlockView {\r\n        // Update view\r\n        super.updateView();\r\n        // Update top-left corner\r\n        this.tlx = this.el.boundingBox.xMin + this.el.layout.dx;\r\n        this.tly = this.el.boundingBox.yMin + this.el.layout.dy;\r\n        // Return\r\n        return this;\r\n    }\r\n\r\n}\r\n","import { RasterCache } from \"../DiagramElement/RasterCache\";\r\nimport { ViewportRegion } from \"../DiagramElement\";\r\nimport { PageModel } from \"../DiagramModelTypes\";\r\nimport { \r\n    DiagramObjectView,\r\n    DiagramRootView\r\n} from \".\";\r\n\r\nexport class PageView extends DiagramRootView {\r\n    \r\n    /**\r\n     * The underlying model.\r\n     */\r\n    public override el: PageModel;    \r\n    \r\n    /**\r\n     * The page's grid pattern.\r\n     */\r\n    private _gridPattern: CanvasPattern;\r\n\r\n    /**\r\n     * The page's current selection.\r\n     */\r\n    public get selects(): DiagramObjectView[] {\r\n        return [...this.getSubtree(o => o.el.isSelected())];\r\n    }\r\n\r\n\r\n    /**\r\n     * Creates a new {@link PageView}.\r\n     * @param el\r\n     *  The underlying model.\r\n     * @param rasterCache\r\n     *  The view's raster cache.\r\n     */\r\n    constructor(el: PageModel, rasterCache: RasterCache) {\r\n        super(el, rasterCache);\r\n        this.el = el;\r\n        // Create grid pattern\r\n        let { \r\n            grid_color: gc, background_color: bc\r\n        } = this.el.style;\r\n        this._gridPattern = this.createGridPattern(\r\n            ...this.el.grid, bc, gc\r\n        );\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Render  ////////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Renders the page surface to a context.\r\n     * @param grid\r\n     *  [true]\r\n     *   Show the grid.\r\n     *  [false]\r\n     *   Hide the grid.\r\n     */\r\n    public renderPageSurfaceTo(ctx: CanvasRenderingContext2D, vr: ViewportRegion, grid: boolean) {\r\n        // Draw page\r\n        ctx.fillStyle = grid ? this._gridPattern : this.el.style.background_color;\r\n        ctx.fillRect(\r\n            vr.xMin,  vr.yMin,\r\n            vr.xMax - vr.xMin,\r\n            vr.yMax - vr.yMin\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Renders the object to a context.\r\n     * @param ctx\r\n     *  The context to render to.\r\n     * @param vr\r\n     *  The context's viewport.\r\n     * @param dsx\r\n     *  The drop shadow's x-offset.\r\n     *  (Default: The page's styled x-offset)\r\n     * @param dsy\r\n     *  The drop shadow's y-offset.\r\n     *  (Default: The page's styled y-offset)\r\n     * @param attrs\r\n     *  If specified, these attributes will override the object's underlying\r\n     *  attributes.\r\n     */\r\n    public override renderTo(\r\n        ctx: CanvasRenderingContext2D, vr: ViewportRegion,\r\n        dsx: number = this.el.style.drop_shadow.offset[0], \r\n        dsy: number = this.el.style.drop_shadow.offset[1],\r\n        attrs?: number\r\n    ) { \r\n        // Configure drop shadow\r\n        ctx.shadowColor = this.el.style.drop_shadow.color;\r\n        // Draw contents\r\n        super.renderTo(ctx, vr, dsx * vr.scale, dsy * vr.scale);\r\n    }\r\n\r\n    /**\r\n     * Generates a grid canvas pattern.\r\n     * @param gridX\r\n     *  The grid size on the x-axis.\r\n     * @param gridY\r\n     *  The grid size on the y-axis.\r\n     * @param fillColor\r\n     *  The background color.\r\n     * @param strokeColor\r\n     *  The line color.\r\n     * @returns\r\n     *  The grid canvas pattern centered on the origin.\r\n     */\r\n    private createGridPattern(gridX: number, gridY: number, fillColor: string, strokeColor: string): CanvasPattern {\r\n        let can = document.createElement(\"canvas\");\r\n        let ctx = can.getContext(\"2d\", { alpha: false })!;\r\n        can.width = gridX;\r\n        can.height = gridY;\r\n        ctx.fillStyle = fillColor;\r\n        ctx.lineWidth = 2;\r\n        ctx.strokeStyle = strokeColor;\r\n        ctx.fillRect(0, 0, gridX, gridY);\r\n        ctx.moveTo(0, 0);\r\n        ctx.lineTo(0, gridY);\r\n        ctx.lineTo(gridX, gridY);\r\n        ctx.stroke();\r\n        let ptr = ctx.createPattern(can, \"repeat\")!;\r\n        ptr.setTransform(new DOMMatrix().translate(0, 1));\r\n        return ptr;\r\n    }\r\n\r\n}\r\n","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./NumberField.vue?vue&type=style&index=0&id=60cf922a&scoped=true&lang=css\"","import { \r\n    SerializedAnchorPointStyle,\r\n    SerializedBranchBlockStyle,\r\n    SerializedDictionaryBlockStyle,\r\n    SerializedLineEndingPointStyle,\r\n    SerializedLineHandlePointStyle,\r\n    SerializedLineStyle,\r\n    SerializedTextBlockStyle,\r\n    SerializedPageStyle\r\n} from \"..\";\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  1. Colors  ////////////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport const Colors = {\r\n    Blue   : { fill_color: \"#637bc9\", stroke_color: \"#708ce6\" },\r\n    Orange : { fill_color: \"#c26130\", stroke_color: \"#e57339\" },\r\n    Green  : { fill_color: \"#2a9642\", stroke_color: \"#32b34e\" },\r\n    Red    : { fill_color: \"#c94040\", stroke_color: \"#dd5050\" },\r\n    Gray   : { fill_color: \"#848484\", stroke_color: \"#6b6b6b\" }\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  2. Block Diagram Theme  ///////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nclass BlockDiagramTheme {\r\n\r\n    /**\r\n     * The theme definition.\r\n     */\r\n    private readonly _theme: Theme\r\n\r\n    \r\n    /**\r\n     * Creates a new {@link Theme}.\r\n     * @param theme\r\n     *  The theme definition.\r\n     */\r\n    public constructor(theme: Theme) {\r\n        this._theme = theme;\r\n    }\r\n\r\n\r\n    /**\r\n     * Returns the anchor point style.\r\n     * @param style\r\n     *  The style parameters.\r\n     *  (Default: {}) \r\n     * @returns\r\n     *  The anchor point style.\r\n     */\r\n    public AnchorPoint(\r\n        style: DeepPartial<SerializedAnchorPointStyle> = {}\r\n    ): SerializedAnchorPointStyle {\r\n        return this.merge(style, structuredClone(this._theme.anchor));\r\n    }\r\n\r\n    /**\r\n     * Returns the branch block style.\r\n     * @param style\r\n     *  The style parameters.\r\n     *  (Default: {}) \r\n     * @returns\r\n     *  The branch block style.\r\n     */\r\n    public BranchBlock(\r\n        style: DeepPartial<SerializedBranchBlockStyle> = {}\r\n    ): SerializedBranchBlockStyle {\r\n        return this.merge(style, structuredClone(this._theme.branch));\r\n    }\r\n\r\n    /**\r\n     * Returns the dictionary block style.\r\n     * @param style\r\n     *  The style parameters.\r\n     *  (Default: {}) \r\n     * @returns\r\n     *  The dictionary block style.\r\n     */\r\n    public DictionaryBlock(\r\n        style: DeepPartial<SerializedDictionaryBlockStyle> = {}\r\n    ): SerializedDictionaryBlockStyle {\r\n        return this.merge(style, structuredClone(this._theme.dictionary));\r\n    }\r\n\r\n    /**\r\n     * Returns the line style.\r\n     * @param style\r\n     *  The style parameters.\r\n     *  (Default: {}) \r\n     * @returns\r\n     *  The line style.\r\n     */\r\n    public Line(\r\n        style: DeepPartial<SerializedLineStyle> = {}\r\n    ): SerializedLineStyle {\r\n        return this.merge(style, structuredClone(this._theme.line));\r\n    }\r\n\r\n    /**\r\n     * Returns the line ending style.\r\n     * @param style\r\n     *  The style parameters.\r\n     *  (Default: {}) \r\n     * @returns\r\n     *  The line ending style.\r\n     */\r\n    public LineEnding(\r\n        style: DeepPartial<SerializedLineEndingPointStyle> = {}\r\n    ): SerializedLineEndingPointStyle {\r\n        return this.merge(style, structuredClone(this._theme.lineEnding));\r\n    }\r\n\r\n    /**\r\n     * Returns the line handle style.\r\n     * @param style\r\n     *  The style parameters.\r\n     *  (Default: {}) \r\n     * @returns\r\n     *  The line handle style.\r\n     */\r\n    public LineHandle(\r\n        style: DeepPartial<SerializedLineHandlePointStyle> = {}\r\n    ): SerializedLineHandlePointStyle {\r\n        return this.merge(style, structuredClone(this._theme.lineHandle));\r\n    }\r\n\r\n    /**\r\n     * Returns the text block style.\r\n     * @param style\r\n     *  The style parameters.\r\n     *  (Default: {}) \r\n     * @returns\r\n     *  The text block style.\r\n     */\r\n    public TextBlock(\r\n        style: DeepPartial<SerializedTextBlockStyle> = {}\r\n    ): SerializedTextBlockStyle {\r\n        return this.merge(style, structuredClone(this._theme.text));\r\n    }\r\n\r\n    /**\r\n     * Returns the page style.\r\n     * @param style\r\n     *  The style parameters.\r\n     *  (Default: {}) \r\n     * @returns\r\n     *  The page style.\r\n     */\r\n    public Page(\r\n        style: DeepPartial<SerializedPageStyle> = {}\r\n    ): SerializedPageStyle {\r\n        return this.merge(style, structuredClone(this._theme.page));\r\n    }\r\n\r\n    /**\r\n     * Merges object `src` into `dst`.\r\n     * @param src\r\n     *  The source object.\r\n     * @param dst\r\n     *  The destination object.\r\n     * @returns\r\n     *  The destination object.\r\n     */\r\n    private merge<T>(src: T, dst: T) {\r\n        for(let key in src) {\r\n            if(!(key in dst)) {\r\n                throw new Error(\"Objects do not overlap.\");\r\n            }\r\n            if(typeof src[key] !== typeof dst[key]) {\r\n                throw new Error(`'${ key }' has mismatching types.`);\r\n            }\r\n\r\n            if(typeof src[key] === \"object\") {\r\n                this.merge(src[key], dst[key]);\r\n            } else {\r\n                dst[key] = src[key];\r\n            }\r\n        }\r\n        return dst;\r\n    }\r\n\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  3. Themes  ////////////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n/**\r\n * Theme definition.\r\n */\r\ntype Theme = {\r\n    anchor: SerializedAnchorPointStyle,\r\n    branch: SerializedBranchBlockStyle,\r\n    dictionary: SerializedDictionaryBlockStyle,\r\n    line: SerializedLineStyle,\r\n    lineEnding: SerializedLineEndingPointStyle,\r\n    lineHandle: SerializedLineHandlePointStyle,\r\n    text: SerializedTextBlockStyle,\r\n    page: SerializedPageStyle,\r\n}\r\n\r\n/**\r\n * Dark Theme\r\n */\r\nexport const DarkTheme = new BlockDiagramTheme({\r\n\r\n    anchor: {\r\n        color: \"rgba(255, 255, 255, 0.25)\"\r\n    },\r\n\r\n    branch: {\r\n        max_width: 320,\r\n        head: {\r\n            fill_color: \"#000\",\r\n            stroke_color: \"#000\",\r\n            one_title: {\r\n                title: {\r\n                    font: { family: \"Inter\", size: \"10.5pt\", weight: 800 },\r\n                    color: \"#d8d8d8\"\r\n                }\r\n            },\r\n            two_title: {\r\n                title: {\r\n                    font: { family: \"Inter\", size: \"8pt\", weight: 600 },\r\n                    color: \"#d8d8d8\",\r\n                    padding: 8\r\n                },\r\n                subtitle:  {\r\n                    font: { family: \"Inter\", size: \"13pt\", weight: 800 },\r\n                    color: \"#d8d8d8\",\r\n                    line_height: 23\r\n                }\r\n            },\r\n            vertical_padding: 14\r\n        },\r\n        body: {\r\n            fill_color: \"#1f1f1f\",\r\n            stroke_color: \"#383838\",\r\n            field_name: {\r\n                font: { family: \"Inter\", size: \"8pt\", weight: 600 },\r\n                color: \"#b3b3b3\",\r\n                padding: 12\r\n            },\r\n            field_value: {\r\n                font: { family: \"Inter\", size: \"10.5pt\" },\r\n                color: \"#bfbfbf\",\r\n                line_height: 20,\r\n                padding: 22\r\n            },\r\n            vertical_padding: 18\r\n        },\r\n        branch: {\r\n            font: { family: \"Inter\", size: \"10.5pt\" },\r\n            color: \"#bfbfbf\",\r\n            vertical_padding: 12,\r\n            horizontal_padding: 30\r\n        },\r\n        select_outline: {\r\n            color: \"#e6d845\",\r\n            padding: 4,\r\n            border_radius: 9\r\n        },\r\n        anchor_markers: {\r\n            color: \"#ffffff\",\r\n            size: 3\r\n        },\r\n        border_radius: 5,\r\n        horizontal_padding: 20\r\n    },\r\n\r\n    dictionary: {\r\n        max_width: 320,\r\n        head: {\r\n            fill_color: \"#000\",\r\n            stroke_color: \"#000\",\r\n            one_title: {\r\n                title: {\r\n                    font: { family: \"Inter\", size: \"10.5pt\", weight: 800 },\r\n                    color: \"#d8d8d8\"\r\n                }\r\n            },\r\n            two_title: {\r\n                title: {\r\n                    font: { family: \"Inter\", size: \"8pt\", weight: 600 },\r\n                    color: \"#d8d8d8\",\r\n                    padding: 8\r\n                },\r\n                subtitle:  {\r\n                    font: { family: \"Inter\", size: \"13pt\", weight: 800 },\r\n                    color: \"#d8d8d8\",\r\n                    line_height: 23\r\n                }\r\n            },\r\n            vertical_padding: 14\r\n        },\r\n        body: {\r\n            fill_color: \"#1f1f1f\",\r\n            stroke_color: \"#383838\",\r\n            field_name: {\r\n                font: { family: \"Inter\", size: \"8pt\", weight: 600 },\r\n                color: \"#b3b3b3\",\r\n                padding: 12\r\n            },\r\n            field_value: {\r\n                font: { family: \"Inter\", size: \"10.5pt\" },\r\n                color: \"#bfbfbf\",\r\n                line_height: 20,\r\n                padding: 22\r\n            },\r\n            vertical_padding: 18\r\n        },\r\n        select_outline: {\r\n            color: \"#e6d845\",\r\n            padding: 4,\r\n            border_radius: 9\r\n        },\r\n        anchor_markers: {\r\n            color: \"#ffffff\",\r\n            size: 3\r\n        },\r\n        border_radius: 5,\r\n        horizontal_padding: 20\r\n    },\r\n\r\n    line: {\r\n        width: 5,\r\n        cap_size: 16,\r\n        color: \"#646464\",\r\n        select_color: \"#646464\"\r\n    },\r\n    \r\n    lineEnding: {\r\n        radius: 6,\r\n        fill_color: \"#fedb22\",\r\n        stroke_color: \"#141414\",\r\n        stroke_width: 1.5\r\n    },\r\n\r\n    lineHandle: {\r\n        radius: 6,\r\n        fill_color: \"#fedb22\",\r\n        stroke_color: \"#141414\",\r\n        stroke_width: 1.5\r\n    },\r\n\r\n    text: {\r\n        max_width: 320,\r\n        fill_color: \"#000\",\r\n        stroke_color: \"#000\",\r\n        text: {\r\n            font: { family: \"Inter\", size: \"14pt\", weight: 800 },\r\n            color: \"#d8d8d8\",\r\n            line_height: 24\r\n        },\r\n        border_radius: 13,\r\n        select_outline: {\r\n            color: \"#e6d845\",\r\n            padding: 4,\r\n            border_radius: 19\r\n        },\r\n        anchor_markers: {\r\n            color: \"#ffffff\",\r\n            size: 3\r\n        },\r\n        vertical_padding: 18,\r\n        horizontal_padding: 20\r\n    },\r\n\r\n    page: {\r\n        grid_color: \"#1d1d1d\",\r\n        background_color: \"#141414\",\r\n        drop_shadow: {\r\n            color: \"rgba(0,0,0,.4)\",\r\n            offset: [3, 3]\r\n        }\r\n    },\r\n    \r\n});\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  4. Type Helpers  //////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n/**\r\n * Recursive version of Partial<T>.\r\n */\r\ntype DeepPartial<T> = T extends object ? {\r\n    [P in keyof T]?: DeepPartial<T[P]>;\r\n} : T;\r\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./AccordionPane.vue?vue&type=style&index=0&id=22255fa2&scoped=true&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./HotkeyBox.vue?vue&type=style&index=0&id=5e99f3da&scoped=true&lang=css\"","import { RasterCache } from \"../../DiagramElement/RasterCache\";\r\nimport { DiagramObjectView } from \"../../DiagramViewTypes\";\r\nimport { \r\n    DiagramAnchorableModel,\r\n    DiagramAnchorModel\r\n} from \"./BaseModels\";\r\nimport {\r\n    RootProperty\r\n} from \"../../Property\";\r\nimport { \r\n    DiagramFactory,\r\n    DiagramObjectExport,\r\n    DiagramObjectValues,\r\n    ObjectTemplate,\r\n    SemanticRole\r\n} from \"../../DiagramFactory\";\r\nimport {\r\n    Alignment, AlignmentMask, Cursor, CursorMask, Hover, HoverMask,\r\n    InheritAlignmentMask, InheritAlignment, PositionSetByUser,\r\n    PositionSetByUserMask, Priority, PriorityMask, Select, SelectMask,\r\n    SemanticRoleMask     \r\n} from \"../../Attributes\";\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  1. Diagram Object Model  //////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport abstract class DiagramObjectModel {\r\n\r\n    /**\r\n     * The object's id.\r\n     */\r\n    public readonly id: string;\r\n\r\n    /**\r\n     * The object's attributes.\r\n     */\r\n    public attrs: number;\r\n\r\n    /**\r\n     * The object's parent.\r\n     */\r\n    public parent: DiagramObjectModel | undefined;\r\n\r\n     /**\r\n      * The object's children.\r\n      */\r\n    public readonly children: DiagramObjectModel[];\r\n\r\n    /**\r\n     * The object's properties.\r\n     */\r\n    public readonly props: RootProperty;\r\n\r\n    /**\r\n     * The object's diagram factory.\r\n     */\r\n    public readonly factory: DiagramFactory;\r\n\r\n    /**\r\n     * The template the object was configured with.\r\n     */\r\n    public readonly template: ObjectTemplate;\r\n\r\n    /**\r\n     * The object's bounding box.\r\n     */\r\n    public readonly boundingBox: BoundingBox;\r\n\r\n    /**\r\n     * The object's root.\r\n     */\r\n    public get root(): DiagramObjectModel {\r\n        let owner = this as DiagramObjectModel;\r\n        while(owner.parent) {\r\n            owner = owner.parent;\r\n        }\r\n        return owner;\r\n    }\r\n\r\n    \r\n    /**\r\n     * Creates a new {@link DiagramObjectModel}.\r\n     * @param factory\r\n     *  The object's diagram factory.\r\n     * @param template\r\n     *  The object's template.\r\n     * @param values\r\n     *  The object's values.\r\n     */\r\n    constructor(\r\n        factory: DiagramFactory, \r\n        template: ObjectTemplate,\r\n        values?: DiagramObjectValues\r\n    ) {\r\n        this.id = values?.id ?? (crypto as any).randomUUID();\r\n        this.attrs = values?.attrs ?? PositionSetByUser.False;\r\n        this.setAlignment(Alignment.Free);\r\n        this.setCursor(Cursor.Default);\r\n        this.setInheritAlignment(InheritAlignment.True);\r\n        this.setSemanticRole(SemanticRole.None);\r\n        this.children = [];\r\n        this.factory = factory;\r\n        this.template = template;\r\n        this.boundingBox = new BoundingBox();\r\n        this.boundingBox.xMid = values?.x ?? 0;\r\n        this.boundingBox.yMid = values?.y ?? 0;\r\n        // Value configuration\r\n        this.props = new RootProperty(\r\n            this, template?.properties ?? {}, values?.properties\r\n        );\r\n        if(values?.children) {\r\n            for(let i = 0; i < values.children.length; i++) {\r\n                this.addChild(values.children[i], i, false);\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Structure  /////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Returns this object and all child objects (in a breadth-first fashion).\r\n     * @param match\r\n     *  A predicate which is applied to each object. If the predicate returns\r\n     *  false, the object is not included in the enumeration.\r\n     * @returns\r\n     *  This object and all child objects.\r\n     */\r\n    public *getSubtree(\r\n        match?: (o: DiagramObjectModel) => boolean\r\n    ): IterableIterator<DiagramObjectModel> {\r\n        let visited = new Set<string>([this.id]);\r\n        let queue: DiagramObjectModel[] = [this];\r\n        while(queue.length != 0) {\r\n            let obj = queue.shift()!;\r\n            // Yield object\r\n            if(!match || match(obj)) {\r\n                yield obj;\r\n            }\r\n            // Don't traverse anchors\r\n            if(obj instanceof DiagramAnchorModel) {\r\n                continue;\r\n            }\r\n            // Enumerate children\r\n            for(let child of obj.children){\r\n                if(!visited.has(child.id)) {\r\n                    visited.add(child.id);\r\n                    queue.push(child);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Adds a child object.\r\n     * @param obj\r\n     *  The object to add.\r\n     * @param index\r\n     *  The child object's location in the array.\r\n     *  (Default: End of the array)\r\n     * @param update\r\n     *  If the layout should be updated.\r\n     *  (Default: true)\r\n     */\r\n    public addChild(\r\n        obj: DiagramObjectModel,\r\n        index: number = this.children.length,\r\n        update: boolean = true,\r\n    ) {\r\n        // Ensure it isn't already added\r\n        if(this.children.indexOf(obj) !== -1) {\r\n            throw new DiagramObjectModelError(\r\n                `Object already has a child with the id '${ obj.id }'.`, this\r\n            )\r\n        }\r\n        // Set object's parent\r\n        obj.parent = this;\r\n        // Add object to children\r\n        this.children.splice(index, 0, obj);\r\n        // Update layout\r\n        if(update) {\r\n            this.updateLayout(LayoutUpdateReason.ChildAdded);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes a child object.\r\n     * @param obj\r\n     *  The object to remove.\r\n     * @param update\r\n     *  If the layout should be updated.\r\n     *  (Default: true)\r\n     * @param safely\r\n     *  If the object should be checked for external attachments. Ordinarily,\r\n     *  all external attachments should be removed before removing an object to\r\n     *  ensure references to the object aren't kept elsewhere. However, when \r\n     *  executing a mass removal, removing ALL external attachments may not be\r\n     *  needed or wanted. Only disable this if you know what you're doing. \r\n     *  (Default: true)\r\n     */\r\n    public removeChild(obj: DiagramObjectModel, update: boolean = true, safely: boolean = true) {\r\n        let i = this.children.indexOf(obj);\r\n        if(i === -1) {\r\n            throw new DiagramObjectModelError(\r\n                `'${ obj.id }' is not a child of '${ this.id }'.`, obj\r\n            );\r\n        }\r\n        // Check for external attachments\r\n        if(safely && obj.hasExternalAttachments()) {\r\n            throw new DiagramObjectModelError(\r\n                `'${ obj.id }' still maintains external attachments.`, obj\r\n            );\r\n        }\r\n        // Clear object's parent\r\n        obj.parent = undefined;\r\n        // Remove object from children\r\n        this.children.splice(i, 1);\r\n        // Update layout\r\n        if(update) {\r\n            this.updateLayout(LayoutUpdateReason.ChildDeleted);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reorders a child object.\r\n     * @param id\r\n     *  The id of the object.\r\n     * @param index\r\n     *  The object's new location.\r\n     */\r\n    public reorderChild(id: string, index: number) {\r\n        let i = this.children.findIndex(o => o.id === id);\r\n        let obj = this.children[i];\r\n        if(!obj) {\r\n            throw new DiagramObjectModelError(\r\n                `Object has no child with the id '${ id }'.`\r\n            );\r\n        }\r\n        // Remove child\r\n        this.children.splice(i, 1);\r\n        // Reinsert child\r\n        this.children.splice(index, 0, obj);\r\n    }\r\n\r\n    /**\r\n     * Tests if the object has any external attachments.\r\n     * @returns\r\n     *  True if the object has external attachments, false otherwise.\r\n     */\r\n    protected hasExternalAttachments(): boolean {\r\n        // Compile list of anchors and anchor-ables\r\n        let map = new Map<string, DiagramObjectModel>();\r\n        for(let obj of this.getSubtree()) {\r\n            if(\r\n                obj instanceof DiagramAnchorModel ||\r\n                obj instanceof DiagramAnchorableModel\r\n            ) {\r\n                map.set(obj.id, obj);\r\n            }\r\n        }\r\n        // Look for any dependencies that can't be found in the list\r\n        for(let obj of map.values()) {\r\n            if(obj instanceof DiagramAnchorableModel) {\r\n                if(obj.isAttached() && !map.has(obj.anchor!.id))\r\n                    return true;\r\n                continue;\r\n            }\r\n            if(obj instanceof DiagramAnchorModel) {\r\n                for(let c of obj.children) {\r\n                    if(!map.has(c.id))\r\n                        return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Returns the object's location in its parent.\r\n     * @returns\r\n     *  The object's location, -1 if it doesn't have a parent.\r\n     */\r\n    public getIndexInParent() {\r\n        return this.parent?.children.indexOf(this) ?? -1;\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  2. Selection  /////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Returns the topmost object at the given coordinate.\r\n     * @param x\r\n     *  The x coordinate.\r\n     * @param y\r\n     *  The y coordinate.\r\n     * @returns\r\n     *  The topmost object, undefined if there isn't one.\r\n     */\r\n    public getObjectAt(x: number, y: number): DiagramObjectModel | undefined {\r\n        let object = undefined;\r\n        let select = undefined;\r\n        for(let i = this.children.length - 1; 0 <= i; i--) {\r\n            let child = this.children[i];\r\n            if(child instanceof DiagramAnchorableModel && child.isAttached()) {\r\n                // If child is attached to an anchor, selection is decided by anchor\r\n                continue;\r\n            }\r\n            select = child.getObjectAt(x, y);\r\n            if(select && (!object || select.hasHigherPriorityThan(object))) {\r\n                object = select;\r\n                if(object.getPriority() === Priority.High) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return object;\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  3. Movement  //////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Moves the object to a specific coordinate.\r\n     * @param x\r\n     *  The x coordinate.\r\n     * @param y\r\n     *  The y coordinate.\r\n     * @param updateParent\r\n     *  If the parent's layout should be updated.\r\n     *  (Default: true)\r\n     */\r\n    public moveTo(x: number, y: number, updateParent: boolean = true) {\r\n        this.moveBy(\r\n            x - this.boundingBox.xMid,\r\n            y - this.boundingBox.yMid,\r\n            updateParent\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Moves the object relative to its current position. \r\n     * @param dx\r\n     *  The change in x.\r\n     * @param dy \r\n     *  The change in y.\r\n     * @param updateParent\r\n     *  If the parent's layout should be updated.\r\n     *  (Default: true)\r\n     */\r\n    public moveBy(dx: number, dy: number, updateParent: boolean = true) {\r\n        // Move self\r\n        this.boundingBox.xMin += dx;\r\n        this.boundingBox.xMid += dx;\r\n        this.boundingBox.xMax += dx;\r\n        this.boundingBox.yMin += dy;\r\n        this.boundingBox.yMid += dy;\r\n        this.boundingBox.yMax += dy;\r\n        // Move non-anchored children\r\n        let atBaseOfMovement = true;\r\n        for(let obj of this.children) {\r\n            if(obj instanceof DiagramAnchorableModel && obj.isAttached()) {\r\n                continue;\r\n            }\r\n            atBaseOfMovement = false;\r\n            obj.moveBy(dx, dy);\r\n        }\r\n        // Update layout\r\n        if(atBaseOfMovement) {\r\n            this.updateLayout(LayoutUpdateReason.Movement, updateParent);\r\n        }\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  4. Layout & View  /////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Completely recalculates the object's layout from the ground up.\r\n     */\r\n    public recalculateLayout() {\r\n        let atBaseOfLayout = true;\r\n        for(let obj of this.children) {\r\n            atBaseOfLayout = false;\r\n            obj.recalculateLayout();\r\n        }\r\n        if(atBaseOfLayout){\r\n            this.updateLayout(LayoutUpdateReason.Initialization);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Updates the object's alignment and bounding box.\r\n     * @param reasons\r\n     *  The reasons the layout was updated. \r\n     * @param updateParent\r\n     *  If the parent's layout should be updated.\r\n     *  (Default: true)\r\n     */\r\n    public updateLayout(reasons: number, updateParent: boolean = true) {\r\n        let bb = this.boundingBox;\r\n        // Reset bounding box\r\n        bb.xMin = Infinity;\r\n        bb.yMin = Infinity;\r\n        bb.xMax = -Infinity;\r\n        bb.yMax = -Infinity;\r\n        // Reset alignment\r\n        let align = Alignment.Free;\r\n        // Update bounding box\r\n        for(let obj of this.children) {\r\n            bb.xMin = Math.min(bb.xMin, obj.boundingBox.xMin);\r\n            bb.yMin = Math.min(bb.yMin, obj.boundingBox.yMin);\r\n            bb.xMax = Math.max(bb.xMax, obj.boundingBox.xMax);\r\n            bb.yMax = Math.max(bb.yMax, obj.boundingBox.yMax);\r\n            align = Math.max(align, obj.getAlignment());\r\n        }\r\n        // Update center\r\n        bb.xMid = Math.floor((bb.xMin + bb.xMax) / 2);\r\n        bb.yMid = Math.floor((bb.yMin + bb.yMax) / 2);\r\n        // Update alignment\r\n        if(this.isAlignmentInherited()) {\r\n            this.setAlignment(align);\r\n        }\r\n        // Update parent\r\n        if(updateParent) {\r\n            this.parent?.updateLayout(reasons);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns this object wrapped inside a view object.\r\n     *  @param cache\r\n     *   The view's raster cache.\r\n     *  @returns\r\n     *   This object wrapped inside a view object.\r\n     */\r\n    public abstract createView(cache: RasterCache): DiagramObjectView;\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  5. Attribute Getters  /////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Returns the object's alignment.\r\n     * @param attrs\r\n     *  If specified, these attributes will override the object's attributes.\r\n     * @returns\r\n     *  The object's alignment.\r\n     */\r\n    public getAlignment(attrs: number = this.attrs): number {\r\n        return attrs & AlignmentMask\r\n    }\r\n\r\n    /**\r\n     * Returns the object's cursor.\r\n     * @param attrs\r\n     *  If specified, these attributes will override the object's attributes.\r\n     * @returns\r\n     *  The object's cursor.\r\n     */\r\n    public getCursor(attrs: number = this.attrs): number {\r\n        return attrs & CursorMask;\r\n    }\r\n\r\n    /**\r\n     * Tests if the object is hovered.\r\n     * @param attrs\r\n     *  If specified, these attributes will override the object's attributes.\r\n     * @returns\r\n     *  True if the object is hovered, false otherwise.\r\n     */\r\n    public isHovered(attrs: number = this.attrs): boolean {\r\n        return (attrs & HoverMask) !== Hover.Off;\r\n    }\r\n\r\n    /**\r\n     * Tests if the object is hovered or selected.\r\n     * @param attrs\r\n     *  If specified, these attributes will override the object's attributes.\r\n     * @returns\r\n     *  True if the object is either hovered or selected, false otherwise.\r\n     */\r\n    public isHoveredOrSelected(attrs: number = this.attrs): boolean {\r\n        return 0 < (attrs & (SelectMask | HoverMask));\r\n    }\r\n    \r\n    /**\r\n     * Test if the object inherits alignment from it's children.\r\n     * @param attrs\r\n     *  If specified, these attributes will override the object's attributes.\r\n     * @return\r\n     *  True if the object inherits alignment, false otherwise.\r\n     */\r\n    public isAlignmentInherited(attrs: number = this.attrs): boolean {\r\n        return (attrs & InheritAlignmentMask) === InheritAlignment.True;\r\n    }\r\n\r\n    /**\r\n     * Tests if the user has explicitly set the object's position.\r\n     * @param attrs\r\n     *  If specified, these attributes will override the object's attributes.\r\n     * @returns\r\n     *  True if the user has set the object's position, false otherwise.\r\n     */\r\n    public hasUserSetPosition(attrs: number = this.attrs): boolean {\r\n        return (attrs & PositionSetByUserMask) === PositionSetByUser.True;\r\n    }\r\n\r\n    /**\r\n     * Returns the object's 'position set by user' attribute. \r\n     * @param attrs\r\n     *  If specified, these attributes will override the object's attributes.\r\n     * @returns\r\n     *  The object's 'position set by user' attribute.\r\n     */\r\n    public getPositionSetByUser(attrs: number = this.attrs): number {\r\n        return attrs & PositionSetByUserMask\r\n    }\r\n\r\n    /**\r\n     * Returns the object's selection priority.\r\n     * @param attrs\r\n     *  If specified, these attributes will override the object's attributes.\r\n     * @returns\r\n     *  The object's selection priority;\r\n     */\r\n    public getPriority(attrs: number = this.attrs): number  {\r\n        return attrs & PriorityMask;\r\n    }\r\n    \r\n    /**\r\n     * Tests which object has the higher selection priority.\r\n     * @param obj\r\n     *  The object to compare to.\r\n     * @returns\r\n     *  True if this object has a higher selection priority, false otherwise.\r\n     */\r\n    public hasHigherPriorityThan(obj: DiagramObjectModel): boolean {\r\n        return this.getPriority() > obj.getPriority();\r\n    }\r\n\r\n    /**\r\n     * Tests if the object is selected.\r\n     * @param attrs\r\n     *  If specified, these attributes will override the object's attributes.\r\n     * @returns\r\n     *  True if the object is selected, false otherwise.\r\n     */\r\n    public isSelected(attrs: number = this.attrs): boolean {\r\n        return (attrs & SelectMask) === Select.True;\r\n    }\r\n\r\n    /**\r\n     * Returns the object's semantic role.\r\n     * @param attrs\r\n     *  If specified, these attributes will override the object's attributes.\r\n     * @returns\r\n     *  The object's semantic role.\r\n     */\r\n    public getSemanticRole(attrs: number = this.attrs): number {\r\n        return attrs & SemanticRoleMask;\r\n    }\r\n\r\n    /**\r\n     * Tests if the object has a semantic role.\r\n     * @param role\r\n     *  The role.\r\n     * @param attrs\r\n     *  If specified, these attributes will override the object's attributes.\r\n     * @returns\r\n     *  True if the object has the role, false otherwise.\r\n     */\r\n    public hasRole(role: number, attrs: number = this.attrs): boolean {\r\n        return (attrs & SemanticRoleMask) === role;\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  6. Attribute Setters  /////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Sets the object's alignment.\r\n     * @param alignment\r\n     *  The alignment.\r\n     */\r\n    public setAlignment(alignment: number) {\r\n        this.attrs = (this.attrs & ~AlignmentMask) | alignment;\r\n    }\r\n\r\n    /**\r\n     * Sets the object's cursor.\r\n     * @param cursor\r\n     *  The cursor.\r\n     */\r\n    public setCursor(cursor: number) {\r\n        this.attrs = (this.attrs & ~CursorMask) | cursor;\r\n    }\r\n\r\n    /**\r\n     * Sets the object's hover state.\r\n     * @param hover\r\n     *  The hover state.\r\n     */\r\n    public setHover(hover: number) {\r\n        this.attrs = (this.attrs & ~HoverMask) | hover;\r\n    }\r\n\r\n    /**\r\n     * Sets the object's 'inherit alignment' attribute.\r\n     * @param inherit\r\n     *  The attribute.\r\n     */\r\n    public setInheritAlignment(inherit: number) {\r\n        this.attrs = (this.attrs & ~InheritAlignmentMask) | inherit;\r\n    }\r\n\r\n    /**\r\n     * Sets the object's 'position set by user' attribute.\r\n     * @param positionSetByUser\r\n     *  The attribute.\r\n     */\r\n    public setPositionSetByUser(positionSetByUser: number) {\r\n        this.attrs = (this.attrs & ~PositionSetByUserMask) | positionSetByUser;\r\n    }\r\n\r\n    /**\r\n     * Sets the object's selection priority.\r\n     * @param priority\r\n     *  The selection priority.\r\n     */\r\n    public setPriority(priority: number) {\r\n        this.attrs = (this.attrs & ~PriorityMask) | priority;\r\n    }\r\n\r\n    /**\r\n     * Sets the object's selection state.\r\n     * @param select\r\n     *  The selection state.\r\n     */\r\n    public setSelect(select: number) {\r\n        this.attrs = (this.attrs & ~SelectMask) | select;\r\n    }\r\n\r\n    /**\r\n     * Sets the object's semantic role.\r\n     * @param role\r\n     *  The role.\r\n     */\r\n    public setSemanticRole(role: number) {\r\n        this.attrs = (this.attrs & ~SemanticRoleMask) | role;\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  7. Content  ///////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    \r\n\r\n    /**\r\n     * Exports the {@link DiagramObjectModel}.\r\n     * @returns\r\n     *  The {@link DiagramObjectExport}.\r\n     */\r\n    public toExport(): DiagramObjectExport {\r\n        return {\r\n            id: this.id,\r\n            x: this.boundingBox.xMid,\r\n            y: this.boundingBox.yMid,\r\n            attrs: this.getPositionSetByUser(),\r\n            template: this.template.id,\r\n            children: this.children.map(el => el.id),\r\n            properties: this.props.toRawValue()\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  2. Diagram Object Model Error  ////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport class DiagramObjectModelError extends Error {\r\n\r\n    /**\r\n     * The error's subject.\r\n     */\r\n    public subject: DiagramObjectModel | undefined;\r\n\r\n    /**\r\n     * Creates a new {@link DiagramObjectModel}.\r\n     * @param subject\r\n     *  The error's subject.\r\n     */\r\n    constructor(message: string, subject?: DiagramObjectModel) {\r\n        super(message);\r\n        this.subject = subject;\r\n    }\r\n\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  3. Bounding Box  //////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport class BoundingBox {\r\n\r\n    /**\r\n     * The bounding region's minimum x coordinate.\r\n     */\r\n    public xMin: number\r\n\r\n    /**\r\n     * The bounding region's minimum y coordinate.\r\n     */\r\n    public yMin: number\r\n\r\n    /**\r\n     * The bounding region's center x coordinate.\r\n     */\r\n    public xMid: number;\r\n\r\n    /**\r\n     * The bounding region's center y coordinate.\r\n     */\r\n    public yMid: number;\r\n\r\n    /**\r\n     * The bounding region's maximum x coordinate.\r\n     */\r\n    public xMax: number\r\n\r\n    /**\r\n     * The bounding region's maximum y coordinate.\r\n     */\r\n    public yMax: number;\r\n\r\n    /**\r\n     * Creates a new {@link BoundingBox}.\r\n     */\r\n    constructor() {\r\n        this.xMin = 0;\r\n        this.yMin = 0;\r\n        this.xMid = 0;\r\n        this.yMid = 0;\r\n        this.xMax = 0;\r\n        this.yMax = 0;\r\n    }\r\n\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  4. Layout Update Reason  //////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport const LayoutUpdateReason = {\r\n    Initialization : 0b00001,\r\n    Movement       : 0b00010,\r\n    ChildAdded     : 0b00100,\r\n    ChildDeleted   : 0b01000,\r\n    PropUpdate     : 0b10000\r\n}\r\n","import { RasterCache } from \"../../DiagramElement/RasterCache\";\r\nimport { DiagramAnchorView } from \"../../DiagramViewTypes\";\r\nimport { \r\n    DiagramAnchorableModel,\r\n    DiagramLineModel,\r\n    DiagramObjectModel,\r\n    DiagramObjectModelError,\r\n    LayoutUpdateReason\r\n} from \"./BaseModels\";\r\nimport {\r\n    AnchorAngle,\r\n    AnchorTemplate, \r\n    DiagramAnchorExport, \r\n    DiagramAnchorValues,\r\n    DiagramFactory\r\n} from \"../../DiagramFactory\";\r\nimport { Priority } from \"../../Attributes\";\r\n\r\nexport abstract class DiagramAnchorModel extends DiagramObjectModel {\r\n\r\n    /**\r\n     * The anchor's children.\r\n     */\r\n    // @ts-ignore Children will be initialized in DiagramObjectModel\r\n    public override readonly children: DiagramAnchorableModel[];\r\n\r\n    /**\r\n     * The template the object was configured with.\r\n     */\r\n    public override readonly template: AnchorTemplate;\r\n\r\n    /**\r\n     * The anchor's angle.\r\n     */\r\n    public angle: AnchorAngle;\r\n\r\n    /**\r\n     * The anchor's radius.\r\n     */\r\n    public readonly radius: number;\r\n\r\n    /**\r\n     * The anchor's line templates.\r\n     */\r\n    public readonly lineTemplates: { [key: number]: string }\r\n\r\n\r\n    /**\r\n     * Creates a new {@link DiagramAnchorModel}.\r\n     * @param factory\r\n     *  The anchor's diagram factory.\r\n     * @param template\r\n     *  The anchor's template.\r\n     * @param values\r\n     *  The anchor's values. \r\n     */\r\n    constructor(\r\n        factory: DiagramFactory, \r\n        template: AnchorTemplate,\r\n        values?: DiagramAnchorValues\r\n    ) {\r\n        super(factory, template, values);\r\n        this.radius = template.radius;\r\n        this.template = template;\r\n        this.lineTemplates = template.line_templates;\r\n        this.angle = values?.angle ?? AnchorAngle.DEG_0;\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Structure  /////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Links an anchorable to the anchor.\r\n     * @param obj\r\n     *  The anchorable object.\r\n     * @param index\r\n     *  The child object's location in the array.\r\n     *  (Default: End of the array)\r\n     * @throws { DiagramObjectModelError }\r\n     *  If `obj` is already anchored to another anchor.\r\n     */\r\n    public override addChild(\r\n        obj: DiagramAnchorableModel,\r\n        index: number = this.children.length\r\n    ): void {\r\n        // Ensure object is not attached to something else\r\n        if(obj.isAttached()) {\r\n            throw new DiagramObjectModelError(\r\n                `'${ obj.id }' is already anchored.`, obj\r\n            );\r\n        }\r\n        // Add anchor to object\r\n        obj.anchor = this;\r\n        // Add object to anchor\r\n        this.children.splice(index, 0, obj);\r\n    }\r\n\r\n    /**\r\n     * Unlinks an anchorable from the anchor. \r\n     * @param obj\r\n     *  The anchorable object.\r\n     */\r\n    public override removeChild(obj: DiagramAnchorableModel): void {\r\n        let i = this.children.indexOf(obj);\r\n        if(i === -1) {\r\n            throw new DiagramObjectModelError(\r\n                `'${ obj.id }' is not attached to the '${ this.id }'.`, obj\r\n            );\r\n        }\r\n        // Remove anchor from object\r\n        obj.anchor = undefined;\r\n        // Remove object from anchor\r\n        this.children.splice(i, 1);\r\n    }\r\n\r\n    /**\r\n     * Tests if the anchor has attachments.\r\n     * @returns\r\n     *  True if the anchor has attachments, false otherwise.\r\n     */\r\n    public hasAttachments(): boolean {\r\n        return 0 < this.children.length\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  2. Selection  /////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Returns the topmost object at the given coordinate.\r\n     * @param x\r\n     *  The x coordinate.\r\n     * @param y\r\n     *  The y coordinate.\r\n     * @returns\r\n     *  The topmost object, undefined if there isn't one.\r\n     */\r\n    public override getObjectAt(x: number, y: number): DiagramObjectModel | undefined {\r\n        let object = undefined;\r\n        let select = undefined;\r\n        for(let i = this.children.length - 1; 0 <= i; i--) {\r\n            select = this.children[i].getObjectAt(x, y)\r\n            if(select && (!object || select.hasHigherPriorityThan(object))) {\r\n                object = select;\r\n                if(object.getPriority() === Priority.High) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        let r = this.radius;\r\n        let dx = x - this.boundingBox.xMid;\r\n        let dy = y - this.boundingBox.yMid;\r\n        if(object && object.getPriority() > Priority.Normal) {\r\n            return object;\r\n        } else if(dx * dx + dy * dy < r * r) {\r\n            return this;\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    \r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  3. Movement  //////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Moves the object relative to its current position. \r\n     * @param dx\r\n     *  The change in x.\r\n     * @param dy \r\n     *  The change in y.\r\n     * @param updateParent\r\n     *  If the parent's layout should be updated.\r\n     *  (Default: true)\r\n     */\r\n    public override moveBy(dx: number, dy: number, updateParent: boolean = true) {\r\n        // Move self\r\n        this.boundingBox.xMin += dx;\r\n        this.boundingBox.xMid += dx;\r\n        this.boundingBox.xMax += dx;\r\n        this.boundingBox.yMin += dy;\r\n        this.boundingBox.yMid += dy;\r\n        this.boundingBox.yMax += dy;\r\n        // Move anchored children\r\n        for(let obj of this.children) {\r\n            if(!obj.isAttached(this)) {\r\n                console.warn(`'${ obj.id }' incorrectly attached to anchor.`);\r\n                continue;\r\n            }\r\n            obj.moveTo(this.boundingBox.xMid, this.boundingBox.yMid);\r\n        }\r\n        // Update layout\r\n        this.updateLayout(LayoutUpdateReason.Movement, updateParent);\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  4. Layout & View  /////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Updates the anchor's bounding box.\r\n     * @param reasons\r\n     *  The reasons the layout was updated. \r\n     * @param updateParent\r\n     *  If the parent's layout should be updated.\r\n     *  (Default: true)\r\n     */\r\n    public override updateLayout(reasons: number, updateParent: boolean = true) {\r\n        let bb = this.boundingBox;\r\n        // Update bounding box\r\n        bb.xMin = bb.xMid - this.radius;\r\n        bb.yMin = bb.yMid - this.radius;\r\n        bb.xMax = bb.xMid + this.radius;\r\n        bb.yMax = bb.yMid + this.radius;\r\n        // Update parent\r\n        if(updateParent) {\r\n            this.parent?.updateLayout(reasons);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns this object wrapped inside a view object.\r\n     *  @param cache\r\n     *   The view's raster cache.\r\n     *  @returns\r\n     *   This object wrapped inside a view object.\r\n     */\r\n    public abstract override createView(cache: RasterCache): DiagramAnchorView;\r\n\r\n    \r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  5. Content  ///////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Exports the {@link DiagramAnchorModel}.\r\n     * @returns\r\n     *  The {@link DiagramAnchorExport}.\r\n     */\r\n    public override toExport(): DiagramAnchorExport {\r\n        return {\r\n            ...super.toExport(),\r\n            angle: this.angle\r\n        }\r\n    }\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  6. Object Creation  ///////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Creates a new line according to the anchor's current angle.\r\n     * @returns\r\n     *  The newly created line.\r\n     * @throws { DiagramObjectModelError }\r\n     *  If the configured template type is not a line.\r\n     */\r\n    public makeLine(): DiagramLineModel {\r\n        // Create line\r\n        let tem = this.lineTemplates[this.angle];\r\n        let obj = this.factory.createObject(tem);\r\n        // Return object\r\n        if(obj instanceof DiagramLineModel){\r\n            return obj;\r\n        } else {\r\n            throw new DiagramObjectModelError(\r\n                `Template '${ tem }' is not a line.`, obj\r\n            );\r\n        }\r\n    }\r\n\r\n}\r\n","import { RasterCache } from \"../../DiagramElement/RasterCache\";\r\nimport { DiagramAnchorableView } from \"../../DiagramViewTypes\";\r\nimport { \r\n    DiagramAnchorModel,\r\n    DiagramObjectModel\r\n} from \"./BaseModels\";\r\nimport { \r\n    DiagramFactory,\r\n    DiagramObjectValues,\r\n    ObjectTemplate\r\n} from \"../../DiagramFactory\";\r\n\r\nexport abstract class DiagramAnchorableModel extends DiagramObjectModel {\r\n\r\n    /**\r\n     * The anchorable's anchor.\r\n     */\r\n    public anchor: DiagramAnchorModel | undefined; \r\n\r\n\r\n    /**\r\n     * Creates a new {@link DiagramAnchorableModel}.\r\n     * @param factory\r\n     *  The anchorable's diagram factory.\r\n     * @param template\r\n     *  The anchorable's template.\r\n     * @param values\r\n     *  The anchorable's values. \r\n     */\r\n    constructor(\r\n        factory: DiagramFactory,\r\n        template: ObjectTemplate,\r\n        values?: DiagramObjectValues\r\n    ) {\r\n        super(factory, template, values);\r\n        this.anchor = undefined;\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Structure  /////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    \r\n\r\n    /**\r\n     * Tests if this object is attached to an anchor.\r\n     * @returns\r\n     *  True if this object is attached to an anchor, false otherwise.\r\n     */\r\n    public isAttached(): boolean;\r\n\r\n    /**\r\n     * Tests if this object is attached to the given anchor.\r\n     * @param anchor\r\n     *  The anchor.\r\n     * @returns\r\n     *  True if this object is attached to the given anchor, false otherwise.\r\n     */\r\n    public isAttached(anchor: DiagramAnchorModel): boolean;\r\n    public isAttached(anchor?: DiagramAnchorModel): boolean {\r\n        return anchor ? this.anchor === anchor : this.anchor !== undefined;\r\n    }\r\n\r\n    /**\r\n     * Returns the object's location in its anchor.\r\n     * @returns\r\n     *  The object's location, -1 if it isn't attached to an anchor.\r\n     */\r\n    public getIndexInAnchor() {\r\n        return this.anchor?.children.indexOf(this) ?? -1;\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  2. Layout & View  /////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Returns this object wrapped inside a view object.\r\n     *  @param cache\r\n     *   The view's raster cache.\r\n     *  @returns\r\n     *   This object wrapped inside a view object.\r\n     */\r\n    public abstract override createView(cache: RasterCache): DiagramAnchorableView;\r\n\r\n}\r\n","import { RasterCache } from \"../../DiagramElement/RasterCache\";\r\nimport { DiagramLineEndingView } from \"../../DiagramViewTypes\";\r\nimport {\r\n    DiagramLineModel,\r\n    DiagramAnchorableModel\r\n} from \"./BaseModels\";\r\nimport {\r\n    DiagramFactory,\r\n    DiagramObjectValues,\r\n    ObjectTemplate\r\n} from \"../../DiagramFactory\";\r\n\r\nexport abstract class DiagramLineEndingModel extends DiagramAnchorableModel {\r\n\r\n    /**\r\n     * The line ending's parent.\r\n     */\r\n    public override parent: DiagramLineModel | undefined;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link DiagramLineEndingModel}.\r\n     * @param factory\r\n     *  The line ending's diagram factory.\r\n     * @param template\r\n     *  The line ending's template.\r\n     * @param values\r\n     *  The line ending's values. \r\n     */\r\n    constructor(\r\n        factory: DiagramFactory,\r\n        template: ObjectTemplate,\r\n        values?: DiagramObjectValues\r\n    ) {\r\n        super(factory, template, values);\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Movement  //////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Moves the object relative to its current position. \r\n     * @param dx\r\n     *  The change in x.\r\n     * @param dy \r\n     *  The change in y.\r\n     * @param updateParent\r\n     *  If the parent's layout should be updated.\r\n     *  (Default: true)\r\n     * @param useSuper\r\n     *  If true, the object will use its inherited `moveBy()` function.\r\n     *  (Default: false)\r\n     */\r\n    public override moveBy(\r\n        dx: number, dy: number, updateParent: boolean = true, useSuper: boolean = false\r\n    ): void {\r\n        if(useSuper) {\r\n            super.moveBy(dx, dy, updateParent);\r\n        } else {\r\n            this.parent?.moveChild(this.id, dx, dy, updateParent);\r\n        }\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  2. Layout & View  /////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Returns this object wrapped inside a view object.\r\n     *  @param cache\r\n     *   The view's raster cache.\r\n     *  @returns\r\n     *   This object wrapped inside a view object.\r\n     */\r\n    public abstract override createView(cache: RasterCache): DiagramLineEndingView;\r\n\r\n}\r\n","import { RasterCache } from \"../../DiagramElement/RasterCache\";\r\nimport { DiagramLineHandleView } from \"../../DiagramViewTypes\";\r\nimport {\r\n    DiagramLineModel,\r\n    DiagramObjectModel\r\n} from \"./BaseModels\";\r\nimport {\r\n    DiagramFactory,\r\n    DiagramObjectValues,\r\n    ObjectTemplate\r\n} from \"../../DiagramFactory\";\r\n\r\nexport abstract class DiagramLineHandleModel extends DiagramObjectModel {\r\n\r\n    /**\r\n     * The line handle's parent.\r\n     */\r\n    public override parent: DiagramLineModel | undefined;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link DiagramLineHandleModel}.\r\n     * @param factory\r\n     *  The line handle's diagram factory.\r\n     * @param template\r\n     *  The line handle's template.\r\n     * @param values\r\n     *  The line handle's values. \r\n     */\r\n    constructor(\r\n        factory: DiagramFactory,\r\n        template: ObjectTemplate,\r\n        values?: DiagramObjectValues\r\n    ) {\r\n        super(factory, template, values);\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Movement  //////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Moves the object relative to its current position. \r\n     * @param dx\r\n     *  The change in x.\r\n     * @param dy \r\n     *  The change in y.\r\n     * @param updateParent\r\n     *  If the parent's layout should be updated.\r\n     *  (Default: true)\r\n     * @param useSuper\r\n     *  If true, the object will use its inherited `moveBy()` function.\r\n     *  (Default: false)\r\n     */\r\n    public override moveBy(\r\n        dx: number, dy: number, updateParent: boolean = true, useSuper: boolean = false\r\n    ): void {\r\n        if(useSuper) {\r\n            super.moveBy(dx, dy, updateParent);\r\n        } else {\r\n            this.parent?.moveChild(this.id, dx, dy, updateParent);\r\n        }\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  2. Layout & View  /////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Returns this object wrapped inside a view object.\r\n     *  @param cache\r\n     *   The view's raster cache.\r\n     *  @returns\r\n     *   This object wrapped inside a view object.\r\n     */\r\n    public abstract override createView(cache: RasterCache): DiagramLineHandleView;\r\n\r\n}\r\n","import { RasterCache } from \"../../DiagramElement/RasterCache\";\r\nimport { DiagramLineView } from \"../../DiagramViewTypes\";\r\nimport {\r\n    DiagramObjectModel,\r\n    DiagramLineEndingModel,\r\n    DiagramLineHandleModel,\r\n    DiagramObjectModelError\r\n} from \"./BaseModels\";\r\nimport {\r\n    DiagramFactory,\r\n    DiagramObjectValues,\r\n    LineStyle,\r\n    LineTemplate\r\n} from \"../../DiagramFactory\";\r\nimport { Priority } from \"../../Attributes\";\r\n\r\nexport abstract class DiagramLineModel extends DiagramObjectModel {\r\n\r\n    /**\r\n     * The line's children.\r\n     */\r\n    // @ts-ignore Children will be initialized in DiagramObjectModel\r\n    public override readonly children: DiagramLineObjectModel[];\r\n\r\n    /**\r\n     * The template the object was configured with.\r\n     */\r\n    public override readonly template: LineTemplate;\r\n\r\n    /**\r\n     * The line's hitbox width.\r\n     */\r\n    protected readonly hitboxWidth: number;\r\n\r\n    /**\r\n     * The line's style.\r\n     */\r\n    public readonly style: LineStyle;\r\n\r\n    /**\r\n     * The line's source ending.\r\n     */\r\n    public get srcEnding(): DiagramLineEndingModel {\r\n        return this.children.at(0) as DiagramLineEndingModel;\r\n    }\r\n    \r\n    /**\r\n     * The line's target ending.\r\n     */\r\n    public get trgEnding(): DiagramLineEndingModel {\r\n        return this.children.at(-1) as DiagramLineEndingModel;\r\n    }\r\n\r\n    \r\n    /**\r\n     * Creates a new {@link DiagramLineModel}.\r\n     * @param factory\r\n     *  The line's diagram factory.\r\n     * @param template\r\n     *  The line's template.\r\n     * @param values\r\n     *  The line's values.\r\n     */\r\n     constructor(\r\n        factory: DiagramFactory, \r\n        template: LineTemplate,\r\n        values?: DiagramObjectValues\r\n    ) {\r\n        super(factory, template, values);\r\n        this.style = template.style;\r\n        this.template = template;\r\n        this.hitboxWidth = template.hitbox_width;\r\n    }\r\n    \r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Structure //////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Adds a child object.\r\n     * @param obj\r\n     *  The object to add.\r\n     * @param index\r\n     *  The child object's location in the array.\r\n     *  (Default: End of the array)\r\n     * @param update\r\n     *  If the layout should be updated.\r\n     *  (Default: true)\r\n     * @throws { Error }\r\n     *  If `obj` is not of type {@link DiagramLineObjectModel}.\r\n     */\r\n    public override addChild(\r\n        obj: DiagramLineObjectModel,\r\n        index: number = this.children.length,\r\n        update: boolean = true\r\n    ): void {\r\n        if(obj instanceof DiagramLineEndingModel || obj instanceof DiagramLineHandleModel) {\r\n            super.addChild(obj, index, update);\r\n        } else {\r\n            let le = DiagramLineEndingModel.name;\r\n            let lh = DiagramLineHandleModel.name;\r\n            throw new DiagramObjectModelError(\r\n                `Child must be of type '${ le }' or '${ lh }.'`, obj\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reorders a child object.\r\n     * @param id\r\n     *  The id of the object.\r\n     * @param index\r\n     *  The object's new location.\r\n     * @param update\r\n     *  If the layout should be updated.\r\n     *  (Default: true)\r\n     */\r\n    public override reorderChild(id: string, index: number, update: boolean= true) {\r\n        throw new DiagramObjectModelError(\r\n            `Line objects cannot be reordered.`, this\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Tests if the line is anchored on either end.\r\n     * @returns\r\n     *  True if the line is anchored on either end, false otherwise.\r\n     */\r\n    protected isAnchored() {\r\n        for(let obj of this.children) {\r\n            if(obj instanceof DiagramLineEndingModel && obj.isAttached()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    \r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  2. Movement  //////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Moves one of the line's children relative to its current position. \r\n     * @param id\r\n     *  The id of the child.\r\n     * @param dx\r\n     *  The change in x.\r\n     * @param dy\r\n     *  The change in y.\r\n     * @param updateParent\r\n     *  If the parent's layout should be updated.\r\n     *  (Default: true)\r\n     */\r\n    public abstract moveChild(id: string, dx: number, dy: number, updateParent?: boolean): void;\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  3. Layout & View  /////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Returns this object wrapped inside a view object.\r\n     *  @param cache\r\n     *   The view's raster cache.\r\n     *  @returns\r\n     *   This object wrapped inside a view object.\r\n     */\r\n    public abstract override createView(cache: RasterCache): DiagramLineView;\r\n\r\n    \r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  4. Attribute Setters  /////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Sets the object's selection state.\r\n     * @param select\r\n     *  The selection state.\r\n     */\r\n    public override setSelect(select: number) {\r\n        super.setSelect(select);\r\n        // Promote priority of children when selected\r\n        let priority = this.isSelected() \r\n            ? Priority.High\r\n            : Priority.Normal;\r\n        for(let obj of this.children) {\r\n            obj.setPriority(priority);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  Internal Types  ///////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport type DiagramLineObjectModel \r\n    = DiagramLineEndingModel \r\n    | DiagramLineHandleModel;\r\n","import { RasterCache } from \"../../DiagramElement/RasterCache\";\r\nimport { DiagramRootView } from \"../../DiagramViewTypes\";\r\nimport {\r\n    DiagramAnchorModel,\r\n    DiagramObjectModel,\r\n    LayoutUpdateReason\r\n} from \"./BaseModels\";\r\nimport {\r\n    DiagramFactory,\r\n    DiagramObjectValues,\r\n    ObjectTemplate\r\n} from \"../../DiagramFactory\";\r\n\r\nexport abstract class DiagramRootModel extends DiagramObjectModel {\r\n    \r\n    /**\r\n     * The root's internal anchor cache.\r\n     */\r\n    public readonly anchorCache: DiagramAnchorModel[];\r\n    \r\n    /**\r\n     * The root's internal object cache.\r\n     */\r\n    private readonly _objectCache: Map<string, DiagramObjectModel>;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link DiagramRootModel}.\r\n     * @param factory\r\n     *  The root's diagram factory.\r\n     * @param template\r\n     *  The root's template.\r\n     * @param values \r\n     *  The root's values.\r\n     */\r\n    constructor(factory: DiagramFactory, template: ObjectTemplate, values?: DiagramObjectValues) {\r\n        super(factory, template, values);\r\n        this.anchorCache = [];\r\n        this._objectCache = new Map([[this.id, this]]);\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Diagram Object Lookup  /////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Returns an object from the diagram.\r\n     * @param id\r\n     *  The id of the object.\r\n     * @returns\r\n     *  The object or `undefined` if no object with that id exists.\r\n     */\r\n    public lookup<T extends DiagramObjectModel>(id: string): T | undefined {\r\n        return this._objectCache.get(id) as T;\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  2. Layout & View  /////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Updates the root's alignment, bounding box, and object cache.\r\n     * @param reasons\r\n     *  The reasons the layout was updated. \r\n     */\r\n    public override updateLayout(reasons: number): void {\r\n        let { ChildAdded, ChildDeleted, Initialization } = LayoutUpdateReason;\r\n        // Update layout\r\n        super.updateLayout(reasons);\r\n        // Rebuild caches\r\n        if(reasons & (Initialization | ChildAdded | ChildDeleted)){\r\n            this._objectCache.clear();\r\n            this.anchorCache.splice(0, this.anchorCache.length);\r\n            for(let obj of this.getSubtree()) {\r\n                if(obj instanceof DiagramAnchorModel) {\r\n                    this.anchorCache.push(obj);\r\n                }\r\n                this._objectCache.set(obj.id, obj);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns this object wrapped inside a view object.\r\n     *  @param cache\r\n     *   The view's raster cache.\r\n     *  @returns\r\n     *   This object wrapped inside a view object.\r\n     */\r\n    public abstract override createView(cache: RasterCache): DiagramRootView;\r\n\r\n}\r\n","import { RasterCache } from \"../DiagramElement/RasterCache\";\r\nimport { LineEndingPointView } from \"../DiagramViewTypes\";\r\nimport { \r\n    DiagramLineEndingModel,\r\n    DiagramObjectModel,\r\n    LayoutUpdateReason\r\n} from \"./BaseTypes/BaseModels\";\r\nimport {\r\n    DiagramFactory,\r\n    DiagramObjectValues,\r\n    LineEndingPointStyle,\r\n    LineEndingPointTemplate\r\n} from \"../DiagramFactory\";\r\nimport { Cursor } from \"../Attributes\";\r\n\r\nexport class LineEndingPointModel extends DiagramLineEndingModel {\r\n\r\n    /**\r\n     * The template the object was configured with.\r\n     */\r\n    public override readonly template: LineEndingPointTemplate;\r\n\r\n    /**\r\n     * The line ending's style.\r\n     */\r\n    public readonly style: LineEndingPointStyle;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link LineEndingPointModel}.\r\n     * @param factory\r\n     *  The line ending point's diagram factory.\r\n     * @param template\r\n     *  The line ending point's template.\r\n     * @param values\r\n     *  The line ending point's values.\r\n     */\r\n    constructor(\r\n        factory: DiagramFactory,\r\n        template: LineEndingPointTemplate,\r\n        values?: DiagramObjectValues\r\n    ) {\r\n        super(factory, template, values);\r\n        this.setCursor(Cursor.Pointer);\r\n        // Template configuration\r\n        this.setSemanticRole(template.role);\r\n        this.template = template;\r\n        this.style = template.style;\r\n        // Update Layout\r\n        this.updateLayout(LayoutUpdateReason.Initialization);\r\n    }\r\n    \r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Selection  /////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Returns the topmost object at the given coordinate.\r\n     * @param x\r\n     *  The x coordinate.\r\n     * @param y\r\n     *  The y coordinate.\r\n     * @returns\r\n     *  The topmost object, undefined if there isn't one.\r\n     */\r\n    public override getObjectAt(x: number, y: number): DiagramObjectModel | undefined {\r\n        let dx = x - this.boundingBox.xMid;\r\n        let dy = y - this.boundingBox.yMid;\r\n        let r = this.style.radius;\r\n        return dx * dx + dy * dy < r * r ? this : undefined;\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  2. Layout & View  /////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Updates the line ending's bounding box.\r\n     * @param reasons\r\n     *  The reasons the layout was updated. \r\n     * @param updateParent\r\n     *  If the parent's layout should be updated.\r\n     *  (Default: true)\r\n     */\r\n    public override updateLayout(reasons: number, updateParent: boolean = true) {\r\n        let bb = this.boundingBox;\r\n        // Update bounding box\r\n        bb.xMin = bb.xMid - this.style.radius;\r\n        bb.yMin = bb.yMid - this.style.radius;\r\n        bb.xMax = bb.xMid + this.style.radius;\r\n        bb.yMax = bb.yMid + this.style.radius;\r\n        // Update parent\r\n        if(updateParent) {\r\n            this.parent?.updateLayout(reasons);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns this object wrapped inside a view object.\r\n     *  @param cache\r\n     *   The view's raster cache.\r\n     *  @returns\r\n     *   This object wrapped inside a view object.\r\n     */\r\n    public createView(cache: RasterCache): LineEndingPointView {\r\n        return new LineEndingPointView(this, cache);\r\n    }\r\n\r\n}\r\n","import { RasterCache } from \"../DiagramElement/RasterCache\";\r\nimport { LineHandlePointView } from \"../DiagramViewTypes\";\r\nimport {\r\n    DiagramLineHandleModel,\r\n    DiagramObjectModel,\r\n    LayoutUpdateReason\r\n} from \"./BaseTypes/BaseModels\";\r\nimport {\r\n    DiagramFactory,\r\n    DiagramObjectValues,\r\n    LineHandlePointStyle,\r\n    LineHandlePointTemplate\r\n} from \"../DiagramFactory\";\r\nimport { Cursor } from \"../Attributes\";\r\n\r\nexport class LineHandlePointModel extends DiagramLineHandleModel {\r\n    \r\n    /**\r\n     * The template the object was configured with.\r\n     */\r\n    public override readonly template: LineHandlePointTemplate;\r\n\r\n    /**\r\n     * The line handle's style.\r\n     */\r\n    public readonly style: LineHandlePointStyle;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link LineHandlePointModel}.\r\n     * @param factory\r\n     *  The line handle point's diagram factory.\r\n     * @param template\r\n     *  The line handle point's template.\r\n     * @param values\r\n     *  The line handle point's values.\r\n     */\r\n    constructor(\r\n        factory: DiagramFactory,\r\n        template: LineHandlePointTemplate,\r\n        values?: DiagramObjectValues\r\n    ) {\r\n        super(factory, template, values);\r\n        this.setCursor(Cursor.Move);\r\n        // Template configuration\r\n        this.setSemanticRole(template.role);\r\n        this.template = template;\r\n        this.style = template.style;\r\n        // Update Layout\r\n        this.updateLayout(LayoutUpdateReason.Initialization);\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Selection  /////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Returns the topmost object at the given coordinate.\r\n     * @param x\r\n     *  The x coordinate.\r\n     * @param y\r\n     *  The y coordinate.\r\n     * @returns\r\n     *  The topmost object, undefined if there isn't one.\r\n     */\r\n    public override getObjectAt(x: number, y: number): DiagramObjectModel | undefined {\r\n        let dx = x - this.boundingBox.xMid;\r\n        let dy = y - this.boundingBox.yMid;\r\n        let r = this.style.radius;\r\n        return dx * dx + dy * dy < r * r ? this : undefined;\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  2. Layout & View  /////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Updates the line handle's bounding box.\r\n     * @param reasons\r\n     *  The reasons the layout was updated.\r\n     * @param updateParent\r\n     *  If the parent's layout should be updated.\r\n     *  (Default: true)\r\n     */\r\n    public override updateLayout(reasons: number, updateParent: boolean = true) {\r\n        let bb = this.boundingBox;\r\n        // Update bounding box\r\n        bb.xMin = bb.xMid - this.style.radius;\r\n        bb.yMin = bb.yMid - this.style.radius;\r\n        bb.xMax = bb.xMid + this.style.radius;\r\n        bb.yMax = bb.yMid + this.style.radius;\r\n        // Update parent\r\n        if(updateParent) {\r\n            this.parent?.updateLayout(reasons);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns this object wrapped inside a view object.\r\n     *  @param cache\r\n     *   The view's raster cache.\r\n     *  @returns\r\n     *   This object wrapped inside a view object.\r\n     */\r\n    public createView(cache: RasterCache): LineHandlePointView {\r\n        return new LineHandlePointView(this, cache);\r\n    }\r\n\r\n}\r\n","import { RasterCache } from \"../DiagramElement/RasterCache\";\r\nimport { LineHorizontalElbowView } from \"../DiagramViewTypes\";\r\nimport { getLineHitbox, isInsideRegion } from \"../Utilities\";\r\nimport {\r\n    DiagramLineModel,\r\n    DiagramObjectModel,\r\n    LayoutUpdateReason,\r\n    LineEndingPointModel,\r\n    LineHandlePointModel\r\n} from \".\";\r\nimport {\r\n    DiagramFactory,\r\n    DiagramObjectValues,\r\n    LineHorizontalElbowTemplate\r\n} from \"../DiagramFactory\";\r\nimport { Cursor } from \"../Attributes\";\r\n\r\nexport class LineHorizontalElbowModel extends DiagramLineModel {\r\n\r\n    /**\r\n     * The template the object was configured with.\r\n     */\r\n    public override readonly template: LineHorizontalElbowTemplate;\r\n\r\n    /**\r\n     * The line's hitboxes.\r\n     *  [0] = The 1st horizontal segment's hitbox.\r\n     *  [1] = The vertical segment's hitbox.\r\n     *  [2] = The 2nd horizontal segment's hitbox.\r\n     */\r\n    public readonly hitboxes: number[][];\r\n\r\n\r\n    /**\r\n     * Creates a new {@link LineHorizontalElbowModel}.\r\n     * @param factory\r\n     *  The line's diagram factory.\r\n     * @param template\r\n     *  The line's template.\r\n     * @param values\r\n     *  The line's values.\r\n     */\r\n     constructor(\r\n        factory: DiagramFactory, \r\n        template: LineHorizontalElbowTemplate,\r\n        values?: DiagramObjectValues\r\n    ) {\r\n        super(factory, template, values);\r\n        this.hitboxes = [[],[],[]];\r\n        this.setCursor(Cursor.Move);\r\n        // Template configuration\r\n        this.setSemanticRole(template.role);\r\n        this.template = template;\r\n        // Define children \r\n        if(!this.children.length) {\r\n            let x = this.boundingBox.xMid;\r\n            let y = this.boundingBox.yMid;\r\n            // Define Caps and Handles\r\n            let src = template.line_ending_template.source;\r\n            let han = template.line_handle_template;\r\n            let trg = template.line_ending_template.target;\r\n            this.addChild(factory.createObject(src) as LineEndingPointModel, 0, false);\r\n            this.addChild(factory.createObject(han) as LineHandlePointModel, 1, false);\r\n            this.addChild(factory.createObject(trg) as LineEndingPointModel, 2, false);\r\n            // Define position\r\n            for(let obj of this.children) {\r\n                obj.moveTo(x, y);\r\n            }\r\n            this.children[0].moveBy(-100, 50);\r\n            this.children[2].moveBy(100, -50);\r\n        }        \r\n        // Update layout\r\n        this.updateLayout(LayoutUpdateReason.Initialization);\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Selection  /////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    \r\n\r\n    /**\r\n     * Returns the topmost object at the given coordinate.\r\n     * @param x\r\n     *  The x coordinate.\r\n     * @param y\r\n     *  The y coordinate.\r\n     * @returns\r\n     *  The topmost object, undefined if there isn't one.\r\n     */\r\n    public override getObjectAt(x: number, y: number): DiagramObjectModel | undefined {\r\n        if(this.isAnchored()) {\r\n            // Try points\r\n            let obj = super.getObjectAt(x, y);\r\n            if(obj) {\r\n                return obj;\r\n            }\r\n            // Try segments\r\n            for(let i = 0; i < this.hitboxes.length; i++) {\r\n                if(!isInsideRegion(x, y, this.hitboxes[i]))\r\n                    continue;\r\n                if(i === 1) {\r\n                    return this.children[i];\r\n                } else {\r\n                    return this;\r\n                }\r\n            }\r\n        } else {\r\n            if(this.isSelected()) {\r\n                // Try points\r\n                let obj = super.getObjectAt(x, y);\r\n                if(obj) {\r\n                    return obj;\r\n                }\r\n            }\r\n            // Try segments\r\n            for(let hitbox of this.hitboxes) {\r\n                if(isInsideRegion(x, y, hitbox)) {\r\n                    return this;\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    }   \r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  2. Movement  //////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Moves one of the line's children relative to its current position. \r\n     * @param id\r\n     *  The id of the child.\r\n     * @param dx\r\n     *  The change in x.\r\n     * @param dy\r\n     *  The change in y.\r\n     * @param updateParent\r\n     *  If the parent's layout should be updated.\r\n     *  (Default: true)\r\n     */\r\n    public moveChild(id: string, dx: number, dy: number, updateParent: boolean = true) {\r\n        // Select child\r\n        let obj = this.children.find(o => o.id === id)!;\r\n        if(!obj)\r\n            return;\r\n        // Move ending\r\n        if(obj instanceof LineEndingPointModel) {\r\n            obj.moveBy(dx, dy, updateParent, true);\r\n        }\r\n        // Move handle\r\n        let [e1, h1, e2] = this.children;\r\n        let e1x = e1.boundingBox.xMid,\r\n            e1y = e1.boundingBox.yMid,\r\n            e2x = e2.boundingBox.xMid,\r\n            e2y = e2.boundingBox.yMid,\r\n            h1x = h1.boundingBox.xMid,\r\n            h2y = h1.boundingBox.yMid,\r\n            hdx = ((e1x + e2x) / 2) - h1x,\r\n            hdy = ((e1y + e2y) / 2) - h2y;\r\n        if(!h1.hasUserSetPosition()) {\r\n            h1.moveBy(hdx, 0, updateParent, true);\r\n        } else if(obj === h1) {\r\n            h1.moveBy(dx, 0, updateParent, true);\r\n        }\r\n        h1.moveBy(0, hdy, updateParent, true);\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  3. Layout & View  /////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    \r\n\r\n    /**\r\n     * Updates the line's alignment, cursor, bounding box, and hitbox.\r\n     * @param reasons\r\n     *  The reasons the layout was updated.\r\n     * @param updateParent\r\n     *  If the parent's layout should be updated.\r\n     *  (Default: true)\r\n     */\r\n    public override updateLayout(reasons: number, updateParent: boolean = true) {\r\n        let [e1, h1, e2] = this.children.map(o => o.boundingBox);\r\n        // Update hitboxes\r\n        let w = this.hitboxWidth;\r\n        this.hitboxes[0] = getLineHitbox(e1.xMid, e1.yMid, h1.xMid, e1.yMid, w);\r\n        this.hitboxes[1] = getLineHitbox(h1.xMid, e1.yMid, h1.xMid, e2.yMid, w);\r\n        this.hitboxes[2] = getLineHitbox(h1.xMid, e2.yMid, e2.xMid, e2.yMid, w);\r\n        // Update cursor\r\n        this.children[1].setCursor(Cursor.Col_Resize);\r\n        // Update bounding box\r\n        super.updateLayout(reasons, updateParent);\r\n    }\r\n\r\n    /**\r\n     * Returns this object wrapped inside a view object.\r\n     *  @param cache\r\n     *   The view's raster cache.\r\n     *  @returns\r\n     *   This object wrapped inside a view object.\r\n     */\r\n    public createView(cache: RasterCache): LineHorizontalElbowView {\r\n        return new LineHorizontalElbowView(this, cache);\r\n    }\r\n\r\n}\r\n","import { RasterCache } from \"../DiagramElement/RasterCache\";\r\nimport { LineVerticalElbowView } from \"../DiagramViewTypes\";\r\nimport { getLineHitbox, isInsideRegion } from \"../Utilities\";\r\nimport {\r\n    DiagramLineModel,\r\n    DiagramObjectModel,\r\n    LayoutUpdateReason,\r\n    LineEndingPointModel,\r\n    LineHandlePointModel\r\n} from \".\";\r\nimport {\r\n    DiagramFactory,\r\n    DiagramObjectValues,\r\n    LineVerticalElbowTemplate\r\n} from \"../DiagramFactory\";\r\nimport { Cursor } from \"../Attributes\";\r\n\r\nexport class LineVerticalElbowModel extends DiagramLineModel {\r\n    \r\n    /**\r\n     * The template the object was configured with.\r\n     */\r\n    public override readonly template: LineVerticalElbowTemplate;\r\n\r\n    /**\r\n     * The line's hitboxes.\r\n     *  [0] = The 1st vertical segment's hitbox.\r\n     *  [1] = The horizontal segment's hitbox.\r\n     *  [2] = The 2nd vertical segment's hitbox.\r\n     */\r\n    public readonly hitboxes: number[][];\r\n\r\n\r\n    /**\r\n     * Creates a new {@link LineVerticalElbowModel}.\r\n     * @param factory\r\n     *  The line's diagram factory.\r\n     * @param template\r\n     *  The line's template.\r\n     * @param values\r\n     *  The line's values.\r\n     */\r\n     constructor(\r\n        factory: DiagramFactory, \r\n        template: LineVerticalElbowTemplate,\r\n        values?: DiagramObjectValues\r\n    ) {\r\n        super(factory, template, values);\r\n        this.hitboxes = [[],[],[]];\r\n        this.setCursor(Cursor.Move);\r\n        // Template configuration\r\n        this.setSemanticRole(template.role);\r\n        this.template = template;\r\n        // Define children \r\n        if(!this.children.length) {\r\n            let x = this.boundingBox.xMid;\r\n            let y = this.boundingBox.yMid;\r\n            // Define Caps and Handles\r\n            let src = template.line_ending_template.source;\r\n            let han = template.line_handle_template;\r\n            let trg = template.line_ending_template.target;\r\n            this.addChild(factory.createObject(src) as LineEndingPointModel, 0, false);\r\n            this.addChild(factory.createObject(han) as LineHandlePointModel, 1, false);\r\n            this.addChild(factory.createObject(trg) as LineEndingPointModel, 2, false);\r\n            // Define position\r\n            for(let obj of this.children) {\r\n                obj.moveTo(x, y);\r\n            }\r\n            this.children[0].moveBy(-50, 100);\r\n            this.children[2].moveBy(50, -100);\r\n        }        \r\n        // Update layout\r\n        this.updateLayout(LayoutUpdateReason.Initialization);\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Selection  /////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    \r\n\r\n    /**\r\n     * Returns the topmost object at the given coordinate.\r\n     * @param x\r\n     *  The x coordinate.\r\n     * @param y\r\n     *  The y coordinate.\r\n     * @returns\r\n     *  The topmost object, undefined if there isn't one.\r\n     */\r\n    public override getObjectAt(x: number, y: number): DiagramObjectModel | undefined {\r\n        if(this.isAnchored()) {\r\n            // Try points\r\n            let obj = super.getObjectAt(x, y);\r\n            if(obj) {\r\n                return obj;\r\n            }\r\n            // Try segments\r\n            for(let i = 0; i < this.hitboxes.length; i++) {\r\n                if(!isInsideRegion(x, y, this.hitboxes[i]))\r\n                    continue;\r\n                if(i === 1) {\r\n                    return this.children[i];\r\n                } else {\r\n                    return this;\r\n                }\r\n            }\r\n        } else {\r\n            if(this.isSelected()) {\r\n                // Try points\r\n                let obj = super.getObjectAt(x, y);\r\n                if(obj) {\r\n                    return obj;\r\n                }\r\n            }\r\n            // Try segments\r\n            for(let hitbox of this.hitboxes) {\r\n                if(isInsideRegion(x, y, hitbox)) {\r\n                    return this;\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    }   \r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  2. Movement  //////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Moves one of the line's children relative to its current position. \r\n     * @param id\r\n     *  The id of the child.\r\n     * @param dx\r\n     *  The change in x.\r\n     * @param dy\r\n     *  The change in y.\r\n     * @param updateParent\r\n     *  If the parent's layout should be updated.\r\n     *  (Default: true)\r\n     */\r\n    public moveChild(id: string, dx: number, dy: number, updateParent: boolean = true) {\r\n        // Select child\r\n        let obj = this.children.find(o => o.id === id)!;\r\n        if(!obj)\r\n            return;\r\n        // Move ending\r\n        if(obj instanceof LineEndingPointModel) {\r\n            obj.moveBy(dx, dy, updateParent, true);\r\n        }\r\n        // Move handle\r\n        let [e1, h1, e2] = this.children;\r\n        let e1x = e1.boundingBox.xMid,\r\n            e1y = e1.boundingBox.yMid,\r\n            e2x = e2.boundingBox.xMid,\r\n            e2y = e2.boundingBox.yMid,\r\n            h1x = h1.boundingBox.xMid,\r\n            h2y = h1.boundingBox.yMid,\r\n            hdx = ((e1x + e2x) / 2) - h1x,\r\n            hdy = ((e1y + e2y) / 2) - h2y;\r\n        if(!h1.hasUserSetPosition()) {\r\n            h1.moveBy(0, hdy, updateParent, true);\r\n        } else if(obj === h1) {\r\n            h1.moveBy(0, dy, updateParent, true);\r\n        }\r\n        h1.moveBy(hdx, 0, updateParent, true);\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  3. Layout & View  /////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    \r\n\r\n    /**\r\n     * Updates the line's alignment, cursor, bounding box, and hitbox.\r\n     * @param reasons\r\n     *  The reasons the layout was updated.\r\n     * @param updateParent\r\n     *  If the parent's layout should be updated.\r\n     *  (Default: true)\r\n     */\r\n    public override updateLayout(reasons: number, updateParent: boolean = true) {\r\n        let [e1, h1, e2] = this.children.map(o => o.boundingBox);\r\n        // Update hitboxes\r\n        let w = this.hitboxWidth;\r\n        this.hitboxes[0] = getLineHitbox(e1.xMid, e1.yMid, e1.xMid, h1.yMid, w);\r\n        this.hitboxes[1] = getLineHitbox(e1.xMid, h1.yMid, e2.xMid, h1.yMid, w);\r\n        this.hitboxes[2] = getLineHitbox(e2.xMid, h1.yMid, e2.xMid, e2.yMid, w);\r\n        // Update cursor\r\n        this.children[1].setCursor(Cursor.Row_Resize);\r\n        // Update bounding box\r\n        super.updateLayout(reasons, updateParent);\r\n    }\r\n\r\n    /**\r\n     * Returns this object wrapped inside a view object.\r\n     *  @param cache\r\n     *   The view's raster cache.\r\n     *  @returns\r\n     *   This object wrapped inside a view object.\r\n     */\r\n    public createView(cache: RasterCache): LineVerticalElbowView {\r\n        return new LineVerticalElbowView(this, cache);\r\n    }\r\n\r\n}\r\n","import { RasterCache } from \"../DiagramElement/RasterCache\";\r\nimport { AnchorPointView } from \"../DiagramViewTypes\";\r\nimport { \r\n    DiagramAnchorModel,\r\n    LayoutUpdateReason\r\n} from \".\";\r\nimport {\r\n    AnchorPointStyle,\r\n    AnchorPointTemplate,\r\n    DiagramAnchorValues,\r\n    DiagramFactory\r\n} from \"../DiagramFactory\";\r\n\r\nexport class AnchorPointModel extends DiagramAnchorModel {\r\n    \r\n    /**\r\n     * The template the object was configured with.\r\n     */\r\n    public override readonly template: AnchorPointTemplate;\r\n\r\n    /**\r\n     * The point's style.\r\n     */\r\n    public readonly style: AnchorPointStyle;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link AnchorPointModel}.\r\n     * @param factory\r\n     *  The anchor point's diagram factory.\r\n     * @param template\r\n     *  The anchor point's template.\r\n     * @param values\r\n     *  The anchor point's values.\r\n     */\r\n    constructor(\r\n        factory: DiagramFactory,\r\n        template: AnchorPointTemplate,\r\n        values?: DiagramAnchorValues\r\n    ) {\r\n        super(factory, template, values);\r\n        // Template configuration\r\n        this.setSemanticRole(template.role);\r\n        this.template = template;\r\n        this.style = template.style;\r\n        // Update Layout\r\n        this.updateLayout(LayoutUpdateReason.Initialization);\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Layout & View  /////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Updates the anchor point's bounding box.\r\n     * @param reasons\r\n     *  The reasons the layout was updated. \r\n     * @param updateParent\r\n     *  If the parent's layout should be updated.\r\n     *  (Default: true)\r\n     */\r\n    public override updateLayout(reasons: number, updateParent: boolean = true) {\r\n        let bb = this.boundingBox;\r\n        // Update bounding box\r\n        bb.xMin = bb.xMid - this.radius;\r\n        bb.yMin = bb.yMid - this.radius;\r\n        bb.xMax = bb.xMid + this.radius;\r\n        bb.yMax = bb.yMid + this.radius;\r\n        // Update parent\r\n        if(updateParent) {\r\n            this.parent?.updateLayout(reasons);\r\n        }   \r\n    }\r\n\r\n    /**\r\n     * Returns this object wrapped inside a view object.\r\n     *  @param cache\r\n     *   The view's raster cache.\r\n     *  @returns\r\n     *   This object wrapped inside a view object.\r\n     */\r\n    public override createView(cache: RasterCache): AnchorPointView {\r\n        return new AnchorPointView(this, cache);\r\n    }\r\n    \r\n}\r\n","import { Font, titleCase } from \"../Utilities\";\r\nimport { RasterCache } from \"../DiagramElement/RasterCache\";\r\nimport { DictionaryBlockView } from \"../DiagramViewTypes\";\r\nimport {\r\n    AnchorPointModel,\r\n    DiagramObjectModel,\r\n    LayoutUpdateReason\r\n} from \".\";\r\nimport {\r\n    AnchorAngle,\r\n    DiagramFactory,\r\n    DiagramObjectValues,\r\n    DictionaryBlockStyle,\r\n    DictionaryBlockTemplate\r\n} from \"../DiagramFactory\";\r\nimport {\r\n    Alignment,\r\n    Cursor,\r\n    InheritAlignment\r\n} from \"../Attributes\";\r\n\r\nexport class DictionaryBlockModel extends DiagramObjectModel {\r\n\r\n    /**\r\n     * The template the object was configured with.\r\n     */\r\n    public override readonly template: DictionaryBlockTemplate;\r\n\r\n    /**\r\n     * The block's style.\r\n     */\r\n    public readonly style: DictionaryBlockStyle\r\n\r\n    /**\r\n     * The block's render layout.\r\n     */\r\n    public layout: DictionaryBlockRenderLayout;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link DictionaryBlockModel}.\r\n     * @param factory\r\n     *  The block's diagram factory.\r\n     * @param template\r\n     *  The block's template.\r\n     * @param values\r\n     *  The block's values.\r\n     */\r\n    constructor(\r\n        factory: DiagramFactory, \r\n        template: DictionaryBlockTemplate, \r\n        values?: DiagramObjectValues\r\n    ) {\r\n        super(factory, template, values);\r\n        this.setInheritAlignment(InheritAlignment.False);\r\n        this.setAlignment(Alignment.Grid);\r\n        this.setCursor(Cursor.Move);\r\n        this.layout = {} as any;\r\n        // Template configuration\r\n        this.setSemanticRole(template.role);\r\n        this.template = template;\r\n        this.style = template.style;\r\n        // Anchor configuration\r\n        if(!this.children.length) {\r\n            let t = template.anchor_template;\r\n            let a = [AnchorAngle.DEG_90, AnchorAngle.DEG_0];\r\n            for(let i = 0, anchor; i < 12; i++) {\r\n                anchor = factory.createObject(t) as AnchorPointModel;\r\n                anchor.angle = a[Math.floor(i / 3) % 2];\r\n                this.addChild(anchor, i, false);\r\n            }\r\n        }\r\n        // Property configuration\r\n        this.props.onUpdate(() => {\r\n            this.updateLayout(LayoutUpdateReason.PropUpdate);\r\n        });\r\n        // Update Layout\r\n        this.updateLayout(LayoutUpdateReason.Initialization);\r\n    }\r\n    \r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Selection  /////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Returns the topmost object at the given coordinate.\r\n     * @param x\r\n     *  The x coordinate.\r\n     * @param y\r\n     *  The y coordinate.\r\n     * @returns\r\n     *  The topmost object, undefined if there isn't one.\r\n     */\r\n    public override getObjectAt(x: number, y: number): DiagramObjectModel | undefined {\r\n        // Try anchors\r\n        let obj = super.getObjectAt(x, y);\r\n        if(obj) {\r\n            return obj;\r\n        }\r\n        // Try object\r\n        let bb = this.boundingBox;\r\n        if(\r\n            bb.xMin <= x && x <= bb.xMax &&\r\n            bb.yMin <= y && y <= bb.yMax  \r\n        ) {\r\n            return this;\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  2. Layout & View  /////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Updates the block's bounding box and render layout.\r\n     * @param reasons\r\n     *  The reasons the layout was updated. \r\n     * @param updateParent\r\n     *  If the parent's layout should be updated.\r\n     *  (Default: true)\r\n     */\r\n    public override updateLayout(reasons: number, updateParent: boolean = true) {\r\n        let contentHash = this.props.toHashValue();\r\n        let contentChanged = this.layout.contentHash !== contentHash;\r\n        let fullLayoutRequired = reasons & LayoutUpdateReason.Initialization;\r\n        \r\n        // Update layout\r\n        if(fullLayoutRequired || contentChanged) {\r\n\r\n            let {\r\n                max_width,\r\n                head,\r\n                body,\r\n                horizontal_padding\r\n            } = this.style;\r\n            let fnf = body.field_name;\r\n            let fvf = body.field_value;\r\n            let text: TextSet[] = [];\r\n            let strokeWidth = 1;\r\n            \r\n            // Configure title and subtitle\r\n            let titleText = titleCase(this.template.id).toLocaleUpperCase();\r\n            let subtitleText = this.props.isDefined() ? this.props.toString() : \"\";\r\n            let hasSubtitle = subtitleText !== \"\";\r\n            let hasBody = this.hasFields();\r\n            let tf = (hasSubtitle ? head.two_title : head.one_title).title;\r\n\r\n            // Calculate max width\r\n            let mw = max_width;\r\n            mw = Math.max(mw, tf.font.measureWidth(titleText));\r\n            for(let key of this.props.value.keys()) {\r\n                mw = Math.max(mw, body.field_name.font.measureWidth(key));\r\n            }\r\n\r\n            // Calculate text\r\n            let m = null;\r\n            let w = 0;\r\n            let x = strokeWidth + horizontal_padding;\r\n            let y = strokeWidth + head.vertical_padding;\r\n            \r\n            // Create title text set\r\n            let title: TextSet = {\r\n                font: tf.font,\r\n                color: tf.color,\r\n                text: []\r\n            }\r\n            text.push(title);\r\n            \r\n            // Calculate title text\r\n            m = tf.font.measure(titleText);\r\n            w = Math.max(w, m.width);\r\n            y += m.ascent;\r\n            title.text.push({ x, y, t: titleText });\r\n            y += m.descent + ((tf as any).padding ?? 0);\r\n            \r\n            if(hasSubtitle) {\r\n                let stf = head.two_title.subtitle;\r\n\r\n                // Create subtitle text set\r\n                let subtitle: TextSet = {\r\n                    font: stf.font,\r\n                    color: stf.color,\r\n                    text: []\r\n                }\r\n                text.push(subtitle);\r\n\r\n                // Calculate subtitle text\r\n                let lines = stf.font.wordWrap(subtitleText, mw);\r\n                m = stf.font.measure(lines[0]);\r\n                w = Math.max(w, m.width);\r\n                y += m.ascent;\r\n                subtitle.text.push({ x, y, t: lines[0] });\r\n                for(let i = 1; i < lines.length; i++) {\r\n                    m = stf.font.measure(lines[i]);\r\n                    w = Math.max(w, m.width);\r\n                    y += stf.line_height;\r\n                    subtitle.text.push({ x, y, t: lines[i] });\r\n                }\r\n\r\n            }\r\n\r\n            y += head.vertical_padding;\r\n\r\n            let headerHeight;\r\n            if(hasBody) {\r\n\r\n                // Create field name & value text sets\r\n                let fieldName: TextSet = {\r\n                    font: fnf.font,\r\n                    color: fnf.color,\r\n                    text: []\r\n                }\r\n                let fieldValue: TextSet = {\r\n                    font: fvf.font,\r\n                    color: fvf.color,\r\n                    text: []\r\n                }\r\n                text.push(fieldName);\r\n                text.push(fieldValue);\r\n\r\n                // Calculate fields\r\n                y += strokeWidth\r\n                headerHeight = Math.round(y);\r\n                y += body.vertical_padding;\r\n                for(let [key, value] of this.props.value) {\r\n\r\n                    // Ignore empty fields\r\n                    if(!value.isDefined())\r\n                        continue;\r\n\r\n                    // Ignore hidden fields \r\n                    if(!(value.descriptor.is_visible ?? true))\r\n                        continue;\r\n                    \r\n                    // Ignore the primary key\r\n                    if(key === this.props.primaryKey)\r\n                        continue;\r\n                    \r\n                    // Calculate field name text\r\n                    key = key.toLocaleUpperCase();\r\n                    m = fnf.font.measure(key);\r\n                    w = Math.max(w, m.width);\r\n                    y += m.ascent;\r\n                    fieldName.text.push({ x, y, t: key });\r\n                    y += m.descent + body.field_name.padding;\r\n                    \r\n                    // Calculate field value text\r\n                    let lines = fvf.font.wordWrap(value.toString(), mw);\r\n                    m = fvf.font.measure(lines[0]);\r\n                    w = Math.max(w, m.width);\r\n                    y += m.ascent;\r\n                    fieldValue.text.push({ x, y, t: lines[0] });\r\n                    for(let i = 1; i < lines.length; i++) {\r\n                        m = fvf.font.measure(lines[i]);\r\n                        w = Math.max(w, m.width);\r\n                        y += fvf.line_height;\r\n                        fieldValue.text.push({ x, y, t: lines[i] });\r\n                    }\r\n                    y += body.field_value.padding;\r\n                    \r\n                }\r\n                y -= body.field_value.padding;\r\n                y += body.vertical_padding;\r\n\r\n            } else {\r\n                headerHeight = Math.round(y + strokeWidth);\r\n            }\r\n\r\n            // Calculate block's size\r\n            let width = Math.round(w + ((horizontal_padding + strokeWidth) * 2));\r\n            let height = Math.round(y + strokeWidth);\r\n            \r\n            // Calculate block's bounding box\r\n            let bb = this.boundingBox;\r\n            let xMin = Math.round(bb.xMid - (width / 2));\r\n            let yMin = Math.round(bb.yMid - (height / 2));\r\n            let xMax = Math.round(bb.xMid + (width / 2));\r\n            let yMax = Math.round(bb.yMid + (height / 2));\r\n\r\n            // Update anchors\r\n            let xo = (bb.xMid - xMin) / 2;\r\n            let yo = (bb.yMid - yMin) / 2;\r\n            let anchors = [\r\n                bb.xMid - xo, yMin,\r\n                bb.xMid, yMin,\r\n                bb.xMid + xo, yMin,\r\n                xMax, bb.yMid - yo,\r\n                xMax, bb.yMid,\r\n                xMax, bb.yMid + yo,\r\n                bb.xMid + xo, yMax,\r\n                bb.xMid, yMax,\r\n                bb.xMid - xo, yMax,\r\n                xMin, bb.yMid + yo,\r\n                xMin, bb.yMid,\r\n                xMin, bb.yMid - yo\r\n            ];\r\n            for(let i = 0; i < anchors.length; i += 2) {\r\n                this.children[i / 2].moveTo(anchors[i], anchors[i + 1], false);\r\n            }\r\n\r\n            // Update object's bounding box\r\n            super.updateLayout(reasons, false);\r\n\r\n            // Update layout\r\n            this.layout = {\r\n                contentHash,\r\n                dx: xMin - bb.xMin,\r\n                dy: yMin - bb.yMin,\r\n                width,\r\n                height,\r\n                headerHeight,\r\n                text\r\n            };\r\n\r\n        }\r\n\r\n        // Update parent\r\n        if(updateParent) {\r\n            this.parent?.updateLayout(reasons);\r\n        }\r\n        \r\n    }\r\n\r\n    /**\r\n     * Tests if the block has defined fields.\r\n     * @returns\r\n     *  True if the block has defined fields, false otherwise.\r\n     */\r\n    public hasFields() {\r\n        for(let [key, value] of this.props.value) {\r\n            if(key === this.props.primaryKey)\r\n                continue;\r\n            if(!(value.descriptor.is_visible ?? true))\r\n                continue;\r\n            if(value.isDefined())\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Returns this object wrapped inside a view object.\r\n     *  @param cache\r\n     *   The view's raster cache.\r\n     *  @returns\r\n     *   This object wrapped inside a view object.\r\n     */\r\n    public override createView(cache: RasterCache): DictionaryBlockView {\r\n        return new DictionaryBlockView(this, cache);\r\n    }\r\n\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  Internal Types  ///////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\ntype DictionaryBlockRenderLayout = {\r\n    \r\n    /**\r\n     * The layout's content hash.\r\n     */\r\n    contentHash: number\r\n    \r\n    /**\r\n     * The block's x offset from the top-left corner of the bounding box.\r\n     */\r\n    dx: number;\r\n\r\n    /**\r\n     * The block's y offset from the top-left corner of the bounding box.\r\n     */\r\n    dy: number;\r\n\r\n    /**\r\n     * The block's width.\r\n     */\r\n    width: number,\r\n\r\n    /**\r\n     * The blocks's height.\r\n     */\r\n    height: number,\r\n\r\n    /**\r\n     * The block's header height.\r\n     */\r\n    headerHeight: number\r\n\r\n    /**\r\n     * The text to draw.\r\n     */\r\n    text: TextSet[]\r\n\r\n}\r\n\r\ntype TextSet = {\r\n\r\n    /**\r\n     * The text's fonts.\r\n     */\r\n    font: Font,\r\n\r\n    /**\r\n     * The text's color.\r\n     */\r\n    color: string,\r\n\r\n    /**\r\n     * The text placements.\r\n     */\r\n    text: TextPlacement[]\r\n\r\n}\r\n\r\ntype TextPlacement = { \r\n    \r\n    /**\r\n     * The x-axis coordinate relative to the top-left coordinate of the block.\r\n     */\r\n    x: number,\r\n\r\n    /**\r\n     * The y-axis coordinate relative to the top-left coordinate of the block.\r\n     */\r\n    y: number,\r\n\r\n    /**\r\n     * The text.\r\n     */\r\n    t: string\r\n\r\n}\r\n","import { RasterCache } from \"../DiagramElement/RasterCache\";\r\nimport { BranchBlockView, DictionaryBlockView } from \"../DiagramViewTypes\";\r\nimport {\r\n    AnchorPointModel,\r\n    DiagramObjectModel,\r\n    LayoutUpdateReason\r\n} from \".\";\r\nimport {\r\n    AnchorAngle,\r\n    BranchBlockStyle,\r\n    BranchBlockTemplate,\r\n    DiagramFactory,\r\n    DiagramObjectValues\r\n} from \"../DiagramFactory\";\r\nimport {\r\n    Alignment,\r\n    Cursor,\r\n    InheritAlignment\r\n} from \"../Attributes\";\r\nimport { Font, titleCase } from \"../Utilities\";\r\n\r\nexport class BranchBlockModel extends DiagramObjectModel {\r\n\r\n    /**\r\n     * The template the object was configured with.\r\n     */\r\n    public override readonly template: BranchBlockTemplate;\r\n\r\n    /**\r\n     * The block's style.\r\n     */\r\n    public readonly style: BranchBlockStyle\r\n\r\n    /**\r\n     * The block's render layout.\r\n     */\r\n    public layout: DictionaryBlockRenderLayout;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link BranchBlockModel}.\r\n     * @param factory\r\n     *  The block's diagram factory.\r\n     * @param template\r\n     *  The block's template.\r\n     * @param values\r\n     *  The block's values.\r\n     */\r\n    constructor(\r\n        factory: DiagramFactory, \r\n        template: BranchBlockTemplate, \r\n        values?: DiagramObjectValues\r\n    ) {\r\n        super(factory, template, values);\r\n        this.setInheritAlignment(InheritAlignment.False);\r\n        this.setAlignment(Alignment.Grid);\r\n        this.setCursor(Cursor.Move);\r\n        this.layout = {} as any;\r\n        // Template configuration\r\n        this.setSemanticRole(template.role);\r\n        this.template = template;\r\n        this.style = template.style;\r\n        // Anchor configuration\r\n        if(!this.children.length) {\r\n            let anchor;\r\n            let t = template.anchor_template;\r\n            let a = [AnchorAngle.DEG_90, AnchorAngle.DEG_0];\r\n            for(let i = 0; i < 9; i++) {\r\n                anchor = factory.createObject(t) as AnchorPointModel;\r\n                anchor.angle = a[Math.floor(i / 3) % 2];\r\n                this.addChild(anchor, i, false);\r\n            }\r\n            for(let b of this.template.branches) {\r\n                anchor = factory.createObject(b.anchor_template) as AnchorPointModel;\r\n                anchor.angle = AnchorAngle.DEG_90,\r\n                this.addChild(anchor, this.children.length, false);\r\n            }\r\n        }\r\n        // Property configuration\r\n        this.props.onUpdate(() => {\r\n            this.updateLayout(LayoutUpdateReason.PropUpdate);\r\n        })\r\n        // Update Layout\r\n        this.updateLayout(LayoutUpdateReason.Initialization);\r\n    }\r\n    \r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Selection  /////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Returns the topmost object at the given coordinate.\r\n     * @param x\r\n     *  The x coordinate.\r\n     * @param y\r\n     *  The y coordinate.\r\n     * @returns\r\n     *  The topmost object, undefined if there isn't one.\r\n     */\r\n    public override getObjectAt(x: number, y: number): DiagramObjectModel | undefined {\r\n        // Try anchors\r\n        let obj = super.getObjectAt(x, y);\r\n        if(obj) {\r\n            return obj;\r\n        }\r\n        // Try object\r\n        let bb = this.boundingBox;\r\n        if(\r\n            bb.xMin <= x && x <= bb.xMax &&\r\n            bb.yMin <= y && y <= bb.yMax  \r\n        ) {\r\n            return this;\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  2. Layout & View  /////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Updates the block's bounding box and render layout.\r\n     * @param reasons\r\n     *  The reasons the layout was updated. \r\n     * @param updateParent\r\n     *  If the parent's layout should be updated.\r\n     *  (Default: true)\r\n     */\r\n    public override updateLayout(reasons: number, updateParent: boolean = true) {\r\n        let contentHash = this.props.toHashValue();\r\n        let contentChanged = this.layout.contentHash !== contentHash;\r\n        let fullLayoutRequired = reasons & LayoutUpdateReason.Initialization;\r\n        \r\n        // Update layout\r\n        if(fullLayoutRequired || contentChanged) {\r\n\r\n            let {\r\n                max_width,\r\n                head,\r\n                body,\r\n                branch,\r\n                horizontal_padding\r\n            } = this.style;\r\n            let fnf = body.field_name;\r\n            let fvf = body.field_value;\r\n            let text: TextSet[] = [];\r\n            let lines: Line[] = [];\r\n            let strokeWidth = 1;\r\n            \r\n            // Configure title and subtitle\r\n            let titleText = titleCase(this.template.id).toLocaleUpperCase();\r\n            let subtitleText = this.props.isDefined() ? this.props.toString() : \"\";\r\n            let hasSubtitle = subtitleText !== \"\";\r\n            let hasBody = this.hasFields();\r\n            let tf = (hasSubtitle ? head.two_title : head.one_title).title;\r\n\r\n            // Calculate base width\r\n            let bw = 0;\r\n            for(let b of this.template.branches) {\r\n                bw += branch.horizontal_padding;\r\n                bw += branch.font.measureWidth(b.text);\r\n                bw += branch.horizontal_padding + strokeWidth;\r\n            }\r\n            bw -= strokeWidth;\r\n\r\n            // Calculate max width\r\n            let mw = max_width;\r\n            mw = Math.max(mw, tf.font.measureWidth(titleText));\r\n            for(let key of this.props.value.keys()) {\r\n                mw = Math.max(mw, body.field_name.font.measureWidth(key));\r\n            }\r\n            mw = Math.max(mw, bw);\r\n\r\n            // Calculate text\r\n            let m = null;\r\n            let w = 0;\r\n            let x = strokeWidth + horizontal_padding;\r\n            let y = strokeWidth + head.vertical_padding;\r\n            \r\n            // Create title text set\r\n            let title: TextSet = {\r\n                font: tf.font,\r\n                color: tf.color,\r\n                text: []\r\n            }\r\n            text.push(title);\r\n            \r\n            // Calculate title text\r\n            m = tf.font.measure(titleText);\r\n            w = Math.max(w, m.width);\r\n            y += m.ascent;\r\n            title.text.push({ x, y, t: titleText });\r\n            y += m.descent + ((tf as any).padding ?? 0);\r\n\r\n            if(hasSubtitle) {\r\n                let stf = head.two_title.subtitle;\r\n\r\n                // Create subtitle text set\r\n                let subtitle: TextSet = {\r\n                    font: stf.font,\r\n                    color: stf.color,\r\n                    text: []\r\n                }\r\n                text.push(subtitle);\r\n\r\n                // Calculate subtitle text\r\n                let lines = stf.font.wordWrap(subtitleText, mw);\r\n                m = stf.font.measure(lines[0]);\r\n                w = Math.max(w, m.width);\r\n                y += m.ascent;\r\n                subtitle.text.push({ x, y, t: lines[0] });\r\n                for(let i = 1; i < lines.length; i++) {\r\n                    m = stf.font.measure(lines[i]);\r\n                    w = Math.max(w, m.width);\r\n                    y += stf.line_height;\r\n                    subtitle.text.push({ x, y, t: lines[i] });\r\n                }\r\n\r\n            }\r\n\r\n            y += head.vertical_padding;\r\n\r\n            let headerHeight;\r\n            if(hasBody) {\r\n\r\n                // Create field name & value text sets\r\n                let fieldName: TextSet = {\r\n                    font: fnf.font,\r\n                    color: fnf.color,\r\n                    text: []\r\n                }\r\n                let fieldValue: TextSet = {\r\n                    font: fvf.font,\r\n                    color: fvf.color,\r\n                    text: []\r\n                }\r\n                text.push(fieldName);\r\n                text.push(fieldValue);\r\n\r\n                // Calculate fields\r\n                y += strokeWidth\r\n                headerHeight = Math.round(y);\r\n                y += body.vertical_padding;\r\n                for(let [key, value] of this.props.value) {\r\n\r\n                    // Ignore empty fields\r\n                    if(!value.isDefined())\r\n                        continue;\r\n                    \r\n                    // Ignore the primary key\r\n                    if(key === this.props.primaryKey)\r\n                        continue;\r\n                    \r\n                    // Calculate field name text\r\n                    key = key.toLocaleUpperCase();\r\n                    m = fnf.font.measure(key);\r\n                    w = Math.max(w, m.width);\r\n                    y += m.ascent;\r\n                    fieldName.text.push({ x, y, t: key });\r\n                    y += m.descent + body.field_name.padding;\r\n                    \r\n                    // Calculate field value text\r\n                    let lines = fvf.font.wordWrap(value.toString(), mw);\r\n                    m = fvf.font.measure(lines[0]);\r\n                    w = Math.max(w, m.width);\r\n                    y += m.ascent;\r\n                    fieldValue.text.push({ x, y, t: lines[0] });\r\n                    for(let i = 1; i < lines.length; i++) {\r\n                        m = fvf.font.measure(lines[i]);\r\n                        w = Math.max(w, m.width);\r\n                        y += fvf.line_height;\r\n                        fieldValue.text.push({ x, y, t: lines[i] });\r\n                    }\r\n                    y += body.field_value.padding;\r\n                    \r\n                }\r\n                y -= body.field_value.padding;\r\n                y += body.vertical_padding;\r\n\r\n            } else {\r\n                headerHeight = Math.round(y + strokeWidth);\r\n            }\r\n\r\n            // Create branch text set\r\n            let branches: TextSet = {\r\n                font: branch.font,\r\n                color: branch.color,\r\n                text: []\r\n            }\r\n            text.push(branches);\r\n\r\n            // Calculate branches\r\n            y += strokeWidth;\r\n            w = Math.max(w + (2 * horizontal_padding), bw);\r\n            let lx = 0;\r\n            let _h = 0;\r\n            let _y = 0;\r\n            let _x = strokeWidth;\r\n\r\n            let _bw = w / this.template.branches.length;\r\n\r\n            for(let b of this.template.branches) {\r\n                m = branch.font.measure(b.text);\r\n                _y = branch.vertical_padding + m.ascent;\r\n                _x += branch.horizontal_padding;\r\n                \r\n                // Calculate branch text\r\n                branches.text.push({ x: _x, y: y + _y, t: b.text });\r\n                _y += m.descent + branch.vertical_padding;\r\n                _x += m.width;\r\n                _x += branch.horizontal_padding;\r\n                lx = Math.round(_x) + 0.5;\r\n                _h = Math.max(_h, _y);\r\n\r\n                // Calculate branch line\r\n                lines.push({ x0: lx, y0: 0, x1: lx, y1: 100000 });\r\n                _x += strokeWidth;\r\n\r\n            }\r\n            lines.pop();\r\n            for(let line of lines) {\r\n                line.y0 = y,\r\n                line.y1 = y + _h;\r\n            }\r\n            y += _h;\r\n\r\n\r\n            // Calculate block's size\r\n            let width = Math.round(w + (strokeWidth * 2));\r\n            let height = Math.round(y + strokeWidth);\r\n            \r\n            // Calculate block's bounding box\r\n            let bb = this.boundingBox;\r\n            let xMin = Math.round(bb.xMid - (width / 2));\r\n            let yMin = Math.round(bb.yMid - (height / 2));\r\n            let xMax = Math.round(bb.xMid + (width / 2));\r\n            let yMax = Math.round(bb.yMid + (height / 2));\r\n\r\n            // Update anchors\r\n            let xo = (bb.xMid - xMin) / 2;\r\n            let yo = (bb.yMid - yMin) / 2;\r\n            let anchors = [\r\n                bb.xMid - xo, yMin,\r\n                bb.xMid, yMin,\r\n                bb.xMid + xo, yMin,\r\n                xMax, bb.yMid - yo,\r\n                xMax, bb.yMid,\r\n                xMax, bb.yMid + yo,\r\n                xMin, bb.yMid + yo,\r\n                xMin, bb.yMid,\r\n                xMin, bb.yMid - yo,\r\n                bb.xMid - xo, yMax,\r\n                bb.xMid + xo, yMax,\r\n            ];\r\n            for(let i = 0; i < anchors.length; i += 2) {\r\n                this.children[i / 2].moveTo(anchors[i], anchors[i + 1], false);\r\n            }\r\n\r\n            // Update object's bounding box\r\n            super.updateLayout(reasons, false);\r\n\r\n            // Update layout\r\n            this.layout = {\r\n                contentHash,\r\n                dx: xMin - bb.xMin,\r\n                dy: yMin - bb.yMin,\r\n                width,\r\n                height,\r\n                headerHeight,\r\n                text,\r\n                lines\r\n            };\r\n\r\n        }\r\n\r\n        // Update parent\r\n        if(updateParent) {\r\n            this.parent?.updateLayout(reasons);\r\n        }\r\n        \r\n    }\r\n\r\n    /**\r\n     * Tests if the block has defined fields.\r\n     * @returns\r\n     *  True if the block has defined fields, false otherwise.\r\n     */\r\n    public hasFields() {\r\n        for(let [key, value] of this.props.value) {\r\n            if(key === this.props.primaryKey)\r\n                continue;\r\n            if(value.isDefined())\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Returns this object wrapped inside a view object.\r\n     *  @param cache\r\n     *   The view's raster cache.\r\n     *  @returns\r\n     *   This object wrapped inside a view object.\r\n     */\r\n    public override createView(cache: RasterCache): BranchBlockView {\r\n        return new BranchBlockView(this, cache);\r\n    }\r\n\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  Internal Types  ///////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\ntype DictionaryBlockRenderLayout = {\r\n    \r\n    /**\r\n     * The layout's content hash.\r\n     */\r\n    contentHash: number\r\n    \r\n    /**\r\n     * The block's x offset from the top-left corner of the bounding box.\r\n     */\r\n    dx: number;\r\n\r\n    /**\r\n     * The block's y offset from the top-left corner of the bounding box.\r\n     */\r\n    dy: number;\r\n\r\n    /**\r\n     * The block's width.\r\n     */\r\n    width: number,\r\n\r\n    /**\r\n     * The blocks's height.\r\n     */\r\n    height: number,\r\n\r\n    /**\r\n     * The block's header height.\r\n     */\r\n    headerHeight: number\r\n\r\n    /**\r\n     * The text to draw.\r\n     */\r\n    text: TextSet[],\r\n\r\n    /**\r\n     * The lines to draw\r\n     */\r\n    lines: Line[]\r\n\r\n}\r\n\r\ntype Line = {\r\n\r\n    /**\r\n     * The starting x.\r\n     */\r\n    x0: number,\r\n\r\n    /**\r\n     * The starting y.\r\n     */\r\n    y0: number,\r\n\r\n    /**\r\n     * The ending x.\r\n     */\r\n    x1: number,\r\n\r\n    /**\r\n     * The ending y.\r\n     */\r\n    y1: number\r\n\r\n}\r\n\r\ntype TextSet = {\r\n\r\n    /**\r\n     * The text's fonts.\r\n     */\r\n    font: Font,\r\n\r\n    /**\r\n     * The text's color.\r\n     */\r\n    color: string,\r\n\r\n    /**\r\n     * The text placements.\r\n     */\r\n    text: TextPlacement[]\r\n\r\n}\r\n\r\ntype TextPlacement = { \r\n    \r\n    /**\r\n     * The x-axis coordinate relative to the top-left coordinate of the block.\r\n     */\r\n    x: number,\r\n\r\n    /**\r\n     * The y-axis coordinate relative to the top-left coordinate of the block.\r\n     */\r\n    y: number,\r\n\r\n    /**\r\n     * The text.\r\n     */\r\n    t: string\r\n\r\n}\r\n","import { computeHash } from \"../Utilities\";\r\nimport { RasterCache } from \"../DiagramElement\";\r\nimport { TextBlockView } from \"../DiagramViewTypes\";\r\nimport {\r\n    AnchorPointModel,\r\n    DiagramObjectModel,\r\n    LayoutUpdateReason\r\n} from \".\";\r\nimport {\r\n    AnchorAngle,\r\n    DiagramFactory,\r\n    DiagramObjectValues,\r\n    TextBlockStyle,\r\n    TextBlockTemplate\r\n} from \"../DiagramFactory\";\r\nimport { Alignment, Cursor, InheritAlignment } from \"../Attributes\";\r\n\r\nexport class TextBlockModel extends DiagramObjectModel {\r\n\r\n    /**\r\n     * The template the object was configured with.\r\n     */\r\n    public override readonly template: TextBlockTemplate;\r\n\r\n    /**\r\n     * The block's style.\r\n     */\r\n    public readonly style: TextBlockStyle\r\n\r\n    /**\r\n     * The block's render layout.\r\n     */\r\n    public layout: TextBlockRenderLayout;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link DictionaryBlockModel}.\r\n     * @param factory\r\n     *  The block's diagram factory.\r\n     * @param template\r\n     *  The block's template.\r\n     * @param values\r\n     *  The block's values.\r\n     */\r\n    constructor(\r\n        factory: DiagramFactory, \r\n        template: TextBlockTemplate, \r\n        values?: DiagramObjectValues\r\n    ) {\r\n        super(factory, template, values);\r\n        this.setInheritAlignment(InheritAlignment.False);\r\n        this.setAlignment(Alignment.Grid);\r\n        this.setCursor(Cursor.Move);\r\n        this.layout = {} as any;\r\n        // Template configuration\r\n        this.setSemanticRole(template.role);\r\n        this.template = template;\r\n        this.style = template.style;\r\n        // Anchor configuration\r\n        if(!this.children.length) {\r\n            let t = template.anchor_template;\r\n            let a = [AnchorAngle.DEG_90, AnchorAngle.DEG_0];\r\n            for(let i = 0, anchor; i < 12; i++) {\r\n                anchor = factory.createObject(t) as AnchorPointModel;\r\n                anchor.angle = a[Math.floor(i / 3) % 2];\r\n                this.addChild(anchor, i, false);\r\n            }\r\n        }\r\n        // Property configuration\r\n        this.props.onUpdate(() => {\r\n            this.updateLayout(LayoutUpdateReason.PropUpdate);\r\n        });\r\n        // Update Layout\r\n        this.updateLayout(LayoutUpdateReason.Initialization);\r\n    }\r\n    \r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Selection  /////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Returns the topmost object at the given coordinate.\r\n     * @param x\r\n     *  The x coordinate.\r\n     * @param y\r\n     *  The y coordinate.\r\n     * @returns\r\n     *  The topmost object, undefined if there isn't one.\r\n     */\r\n    public override getObjectAt(x: number, y: number): DiagramObjectModel | undefined {\r\n        // Try anchors\r\n        let obj = super.getObjectAt(x, y);\r\n        if(obj) {\r\n            return obj;\r\n        }\r\n        // Try object\r\n        let bb = this.boundingBox;\r\n        if(\r\n            bb.xMin <= x && x <= bb.xMax &&\r\n            bb.yMin <= y && y <= bb.yMax  \r\n        ) {\r\n            return this;\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  2. Layout & View  /////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Updates the block's bounding box and render layout.\r\n     * @param reasons\r\n     *  The reasons the layout was updated. \r\n     * @param updateParent\r\n     *  If the parent's layout should be updated.\r\n     *  (Default: true)\r\n     */\r\n    public override updateLayout(reasons: number, updateParent: boolean = true) {\r\n        let contentHash = computeHash(this.props.toString());\r\n        let contentChanged = this.layout.contentHash !== contentHash;\r\n        let fullLayoutRequired = reasons & LayoutUpdateReason.Initialization;\r\n        \r\n        // Update layout\r\n        if(fullLayoutRequired || contentChanged)  {\r\n\r\n            let {\r\n                max_width,\r\n                text: t,\r\n                vertical_padding: vp,\r\n                horizontal_padding: hp\r\n            } = this.style;\r\n            let strokeWidth = 1;\r\n\r\n            // Calculate text\r\n            let text = [];\r\n            let lines = t.font.wordWrap(this.props.toString(), max_width);\r\n            let m = t.font.measure(lines[0]);\r\n            let w = m.width;\r\n            let x = strokeWidth + hp;\r\n            let y = strokeWidth + vp + m.ascent;\r\n            text.push({ x, y, t: lines[0] });\r\n            for(let i = 1; i < lines.length; i++) {\r\n                m = t.font.measure(lines[i]);\r\n                w = Math.max(w, m.width);\r\n                y += t.line_height;\r\n                text.push({ x, y, t: lines[i] });\r\n            }\r\n            y += vp + strokeWidth;\r\n            x += w + x;\r\n\r\n            // Calculate block's size\r\n            let width = Math.round(x);\r\n            let height = Math.round(y);\r\n\r\n            // Calculate block's bounding box\r\n            let bb = this.boundingBox;\r\n            let xMin = Math.round(bb.xMid - (width / 2));\r\n            let yMin = Math.round(bb.yMid - (height / 2));\r\n            let xMax = Math.round(bb.xMid + (width / 2));\r\n            let yMax = Math.round(bb.yMid + (height / 2));\r\n\r\n            // Update anchors\r\n            let xo = (bb.xMid - xMin) / 2;\r\n            let yo = (bb.yMid - yMin) / 2;\r\n            let anchors = [\r\n                bb.xMid - xo, yMin,\r\n                bb.xMid, yMin,\r\n                bb.xMid + xo, yMin,\r\n                xMax, bb.yMid - yo,\r\n                xMax, bb.yMid,\r\n                xMax, bb.yMid + yo,\r\n                bb.xMid + xo, yMax,\r\n                bb.xMid, yMax,\r\n                bb.xMid - xo, yMax,\r\n                xMin, bb.yMid + yo,\r\n                xMin, bb.yMid,\r\n                xMin, bb.yMid - yo\r\n            ]\r\n            for(let i = 0; i < anchors.length; i += 2) {\r\n                this.children[i / 2].moveTo(anchors[i], anchors[i + 1], false);\r\n            }\r\n\r\n            // Update object's bounding box\r\n            super.updateLayout(reasons, false);\r\n\r\n            // Update layout\r\n            this.layout = {\r\n                contentHash,\r\n                dx: xMin - bb.xMin,\r\n                dy: yMin - bb.yMin,\r\n                width,\r\n                height,\r\n                text\r\n            };\r\n\r\n        }\r\n\r\n        // Update parent\r\n        if(updateParent) {\r\n            this.parent?.updateLayout(reasons);\r\n        }\r\n        \r\n    }\r\n\r\n    /**\r\n     * Returns this object wrapped inside a view object.\r\n     *  @param cache\r\n     *   The view's raster cache.\r\n     *  @returns\r\n     *   This object wrapped inside a view object.\r\n     */\r\n    public override createView(cache: RasterCache): TextBlockView {\r\n        return new TextBlockView(this, cache);\r\n    }\r\n\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  Internal Types  ///////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\ntype TextBlockRenderLayout = {\r\n    \r\n    /**\r\n     * The layout's content hash.\r\n     */\r\n    contentHash: number\r\n    \r\n    /**\r\n     * The block's x offset from the top-left corner of the bounding box.\r\n     */\r\n    dx: number;\r\n\r\n    /**\r\n     * The block's y offset from the top-left corner of the bounding box.\r\n     */\r\n    dy: number;\r\n\r\n    /**\r\n     * The block's width.\r\n     */\r\n    width: number,\r\n\r\n    /**\r\n     * The blocks's height.\r\n     */\r\n    height: number,\r\n\r\n    /**\r\n     * The text to draw.\r\n     */\r\n    text: TextPlacement[]\r\n\r\n}\r\n\r\ntype TextPlacement = { \r\n    \r\n    /**\r\n     * The x-axis coordinate relative to the top-left coordinate of the block.\r\n     */\r\n    x: number,\r\n\r\n    /**\r\n     * The y-axis coordinate relative to the top-left coordinate of the block.\r\n     */\r\n    y: number,\r\n\r\n    /**\r\n     * The text.\r\n     */\r\n    t: string\r\n\r\n}\r\n","import { RasterCache } from \"../DiagramElement/RasterCache\";\r\nimport { PageView } from \"../DiagramViewTypes\";\r\nimport {\r\n    DiagramRootModel,\r\n    LayoutUpdateReason\r\n} from \"./BaseTypes/BaseModels\"\r\nimport {\r\n    DiagramFactory,\r\n    PageStyle,\r\n    PageTemplate,\r\n    TemplateType,\r\n    SemanticRole,\r\n    DiagramObjectValues\r\n} from \"../DiagramFactory\";\r\n\r\nexport class PageModel extends DiagramRootModel {\r\n\r\n    /**\r\n     * The template the object was configured with.\r\n     */\r\n    public override readonly template: PageTemplate;\r\n    \r\n    /**\r\n     * The page's grid size.\r\n     */\r\n    public readonly grid: [number, number];\r\n    \r\n    /**\r\n     * The page's style.\r\n     */\r\n    public readonly style: PageStyle;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link PageModel}.\r\n     * @param factory\r\n     *  The page's diagram factory.\r\n     * @param template\r\n     *  The page's template.\r\n     * @param values\r\n     *  The page's values.\r\n     */\r\n    constructor(\r\n        factory: DiagramFactory,\r\n        template: PageTemplate,\r\n        values?: DiagramObjectValues\r\n    ) {\r\n        super(factory, template, values);\r\n        // Template configuration\r\n        this.setSemanticRole(template.role);\r\n        this.template = template;\r\n        this.grid = template.grid;\r\n        this.style = template.style;\r\n        // Update layout\r\n        this.updateLayout(LayoutUpdateReason.Initialization);\r\n    }\r\n\r\n\r\n    /**\r\n     * Returns a dummy {@link PageModel} not associated with any document.\r\n     * @returns\r\n     *  A dummy {@link PageModel}.\r\n     */\r\n    public static createDummy(): PageModel {\r\n        return new this(\r\n            DiagramFactory.createDummy(),\r\n            { \r\n                id: \"\",\r\n                name: \"\",\r\n                type: TemplateType.Page, \r\n                role: SemanticRole.None,\r\n                grid: [10, 10],\r\n                style: { \r\n                    grid_color: \"#1d1d1d\",\r\n                    background_color: \"#141414\",\r\n                    drop_shadow: {\r\n                        color: \"rgba(0,0,0,.4)\",\r\n                        offset: [3, 3]\r\n                    }\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Layout & View  /////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Returns this object wrapped inside a view object.\r\n     *  @param cache\r\n     *   The view's raster cache.\r\n     *  @returns\r\n     *   This object wrapped inside a view object.\r\n     */\r\n    public override createView(cache: RasterCache): PageView {\r\n        return new PageView(this, cache);\r\n    }\r\n\r\n}\r\n","import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, normalizeStyle as _normalizeStyle, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"frame center\" }\nconst _hoisted_2 = { class: \"frame right\" }\nconst _hoisted_3 = { class: \"frame bottom\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_AppTitleBar = _resolveComponent(\"AppTitleBar\")!\n  const _component_BlockDiagram = _resolveComponent(\"BlockDiagram\")!\n  const _component_EditorSidebar = _resolveComponent(\"EditorSidebar\")!\n  const _component_AppFooterBar = _resolveComponent(\"AppFooterBar\")!\n  const _component_AppHotkeyBox = _resolveComponent(\"AppHotkeyBox\")!\n\n  return (_openBlock(), _createBlock(_component_AppHotkeyBox, { id: \"main\" }, {\n    default: _withCtx(() => [\n      _createVNode(_component_AppTitleBar, { id: \"app-title-bar\" }),\n      _createElementVNode(\"div\", {\n        id: \"app-body\",\n        ref: \"body\",\n        style: _normalizeStyle(_ctx.gridLayout)\n      }, [\n        _createElementVNode(\"div\", _hoisted_1, [\n          _createVNode(_component_BlockDiagram, { id: \"block-diagram\" })\n        ]),\n        _createElementVNode(\"div\", _hoisted_2, [\n          _createElementVNode(\"div\", {\n            class: \"resize-handle\",\n            onPointerdown: _cache[0] || (_cache[0] = ($event: any) => (_ctx.startResize($event, _ctx.Handle.Right)))\n          }, null, 32),\n          _createVNode(_component_EditorSidebar, { id: \"app-sidebar\" })\n        ]),\n        _createElementVNode(\"div\", _hoisted_3, [\n          _createVNode(_component_AppFooterBar, { id: \"app-footer-bar\" })\n        ])\n      ], 4)\n    ]),\n    _: 1\n  }))\n}","import { ValidationErrorResult } from \"./ValidationErrorResult\";\r\nimport { ValidationWarningResult } from \"./ValidationWarningResult\";\r\nimport {\r\n    DiagramObjectModel,\r\n    GraphObjectExport\r\n} from \"../BlockDiagram\";\r\n\r\nexport class DiagramValidator {\r\n\r\n    /**\r\n     * The validator's error list.\r\n     */\r\n    private _errors: ValidationErrorResult[];\r\n\r\n    /**\r\n     * The validator's warning list.\r\n     */\r\n    private _warnings: ValidationWarningResult[];\r\n\r\n\r\n    /**\r\n     * Creates a new {@link DiagramValidator}.\r\n     */\r\n    constructor() {\r\n        this._errors = [];\r\n        this._warnings = [];\r\n    } \r\n\r\n\r\n    /**\r\n     * Resets and runs the validator.\r\n     * @param object\r\n     *  The diagram object to validate.\r\n     */\r\n    public run(object: DiagramObjectModel) {\r\n        this.reset();\r\n        this.validate(object);\r\n    }\r\n\r\n    /**\r\n     * Validates a diagram.\r\n     * @param diagram\r\n     *  The diagram to validate.\r\n     */\r\n    protected validate(diagram: DiagramObjectModel) {}\r\n\r\n    /**\r\n     * Returns the validator's current set of warnings.\r\n     * @returns\r\n     *  The validator's current set of warnings.\r\n     */\r\n    public getWarnings(): ValidationWarningResult[] {\r\n        return this._warnings;\r\n    }\r\n\r\n    /**\r\n     * Returns the validator's current set of errors.\r\n     * @returns\r\n     *  The validator's current set of errors.\r\n     */\r\n    public getErrors(): ValidationErrorResult[] {\r\n        return this._errors;\r\n    }\r\n\r\n    /**\r\n     * Adds a warning to the validator.\r\n     * @param object\r\n     *  The object that failed to validate.\r\n     * @param reason\r\n     *  The reason the object failed to validate.\r\n     */\r\n    public addWarning(object: GraphObjectExport, reason: string) {\r\n        this._warnings.push({\r\n            object: object.id,\r\n            reason\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Adds an error to the validator.\r\n     * @param object\r\n     *  The object that failed to validate.\r\n     * @param reason\r\n     *  The reason the object failed to validate.\r\n     */\r\n    protected addError(object: GraphObjectExport, reason: string) {\r\n        this._errors.push({\r\n            object: object.id,\r\n            reason\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Tests if the validator is in a valid state.\r\n     * @returns\r\n     *  True if the validator is in a valid state, false otherwise.\r\n     */\r\n    public inValidState(): boolean {\r\n        return this._errors.length === 0;\r\n    }\r\n\r\n    /**\r\n     * Resets the validator's state.\r\n     */\r\n    public reset() {\r\n        this._errors = [];\r\n        this._warnings = [];\r\n    }\r\n\r\n}\r\n","import { DiagramValidator } from \"./scripts/DiagramValidator/DiagramValidator\";\r\nimport { \r\n    DiagramObjectModel, \r\n    DictionaryProperty, \r\n    GraphObjectExport, \r\n    ListProperty, \r\n    Property, \r\n    PropertyType, \r\n    SemanticAnalyzer \r\n} from \"./scripts/BlockDiagram\";\r\n\r\nclass AttackFlowValidator extends DiagramValidator {\r\n\r\n    /**\r\n     * Validates a diagram.\r\n     * @param diagram\r\n     *  The diagram to validate.\r\n     */\r\n    protected override validate(diagram: DiagramObjectModel): void {\r\n        let graph = SemanticAnalyzer.toGraph(diagram);\r\n        let nodes = new Map<string, GraphObjectExport>();\r\n\r\n        // Check nodes:\r\n        for (let node of graph.nodes) {\r\n            this.checkNode(node);\r\n            nodes.set(node.id, node);\r\n        }\r\n        // Check edges:\r\n        for (let edge of graph.edges) {\r\n            this.checkEdge(edge);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Check that the edge is connected to a source and target node.\r\n     *\r\n     * @param edge\r\n     */\r\n    protected checkEdge(edge: GraphObjectExport) {\r\n        if (edge.prev.length === 0 || edge.next.length === 0) {\r\n            this.addWarning(edge, \"Edges should be connected on both ends.\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Validate a node.\r\n     *\r\n     * @param node\r\n     */\r\n    protected checkNode(node: GraphObjectExport) {\r\n        for (const [key, value] of node.data.value) {\r\n            if (node.template.properties) {\r\n                this.checkProperty(node, key, value)\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check a value against a property descriptor.\r\n     *\r\n     * @param node - The node associated with this value\r\n     * @param name - The property name\r\n     * @param value - The property value\r\n     * @param prop - The property descriptor\r\n     */\r\n    protected checkProperty(node: GraphObjectExport, name: string, value: Property) {\r\n        switch (value.type) {\r\n            case PropertyType.Int:\r\n            case PropertyType.Float:\r\n            case PropertyType.String:\r\n            case PropertyType.Date:\r\n            case PropertyType.Enum:\r\n                if((value.descriptor as any).is_required && !value.isDefined()) {\r\n                    this.addError(node, `Missing required field: ${name}`);\r\n                }\r\n                break;\r\n            case PropertyType.Dictionary:\r\n                if(value instanceof DictionaryProperty) {\r\n                    for(let [k, v] of value.value) {\r\n                        this.checkProperty(node, k, v);\r\n                    }\r\n                }\r\n                break;\r\n            case PropertyType.List:\r\n                if(value instanceof ListProperty) {\r\n                    for(let [k, v] of value.value) {\r\n                        if((v.descriptor as any).is_required && !v.isDefined()) {\r\n                            this.addError(node, `Empty item in list: ${name}.`);\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default AttackFlowValidator;\r\n","import { DiagramObjectModel } from \"../BlockDiagram\";\r\n\r\nexport class DiagramPublisher {\r\n\r\n    /**\r\n     * Returns the published diagram in text form.\r\n     * @param diagram\r\n     *  The diagram to publish.\r\n     * @returns\r\n     *  The published diagram in text form.\r\n     */\r\n    public publish(diagram: DiagramObjectModel): string {\r\n        return \"\";\r\n    };\r\n\r\n}\r\n","import { DiagramPublisher } from \"./scripts/DiagramPublisher/DiagramPublisher\";\r\nimport { DiagramObjectModel, DictionaryProperty, GraphObjectExport, ListProperty, Property, PropertyType, SemanticAnalyzer } from \"./scripts/BlockDiagram\";\r\n\r\nconst AttackFlowExtensionId \r\n    = \"fb9c968a-745b-4ade-9b25-c324172197f4\";\r\nconst AttackFlowSchemaUrl\r\n    = \"https://center-for-threat-informed-defense.github.io/attack-flow/stix/attack-flow-schema-2.0.0.json\";\r\nconst AttackFlowSchemaVersion\r\n    = \"2.0.0\";\r\nconst AttackFlowExtensionCreatedDate\r\n    = \"2022-08-02T19:34:35.143Z\";\r\nconst AttackFlowExtensionModifiedDate\r\n    = AttackFlowExtensionCreatedDate;\r\nconst AttackFlowDocsExternalReference\r\n    = {\r\n        \"source_name\": \"Documentation\",\r\n        \"description\": \"Documentation for Attack Flow\",\r\n        \"url\": \"https://center-for-threat-informed-defense.github.io/attack-flow\"\r\n    };\r\nconst AttackFlowGitHubExternalReference\r\n    = {\r\n        \"source_name\": \"GitHub\",\r\n        \"description\": \"Source code repository for Attack Flow\",\r\n        \"url\": \"https://github.com/center-for-threat-informed-defense/attack-flow\"\r\n    };\r\nconst AttackFlowExtensionCreatorName\r\n    = \"MITRE Engenuity Center for Threat-Informed Defense\";\r\nconst AttackFlowSdos\r\n    = new Set<string>([\r\n        \"attack-flow\",\r\n        \"attack-action\",\r\n        \"attack-asset\",\r\n        \"attack-condition\",\r\n        \"attack-operator\"\r\n    ]);\r\nconst AttackFlowTemplates: Map<string, string>\r\n    = new Map([\r\n        [\"action\", \"attack-action\"],\r\n        [\"asset\", \"attack-asset\"],\r\n        [\"condition\", \"attack-condition\"],\r\n        [\"or\", \"attack-operator\"],\r\n        [\"and\", \"attack-operator\"],\r\n    ]);\r\n\r\nclass AttackFlowPublisher extends DiagramPublisher {\r\n\r\n    /**\r\n     * Returns the published diagram in text form.\r\n     * @param diagram\r\n     *  The diagram to publish.\r\n     * @returns\r\n     *  The published diagram in text form.\r\n     */\r\n     public override publish(diagram: DiagramObjectModel): string {\r\n        const graph = SemanticAnalyzer.toGraph(diagram);\r\n        const stixBundle = this.createStixBundle();\r\n        // Map STIX id -> STIX node.\r\n        const stixNodes = new Map<string, any>();\r\n        // Map parent's stix ID -> children STIX IDs\r\n        const stixChildren = new Map<string, Array<string>>();\r\n        // Map graph node ID -> stix node ID\r\n        const graphToStixId = new Map<string, string>();\r\n\r\n        // Iterate over graph nodes and create corresponding STIX nodes (either SDO\r\n        // or SCO).\r\n        for (const node of graph.nodes) {\r\n            const stixNode = this.exportNodeObject(node)\r\n            stixBundle.objects.push(stixNode);\r\n            stixNodes.set(stixNode.id, stixNode);\r\n            stixChildren.set(stixNode.id, new Array<string>());\r\n            graphToStixId.set(node.id, stixNode.id);\r\n        }\r\n\r\n        // Iterate over edges and create an adjacency list for each STIX node.\r\n        for (const edge of graph.edges) {\r\n            const stixParentId = graphToStixId.get(edge.prev[0]);\r\n            const stixChildId = graphToStixId.get(edge.next[0]);\r\n            if (stixParentId && stixChildId) {\r\n                stixChildren.get(stixParentId)?.push(stixChildId);\r\n            } else {\r\n                throw new Error(`The endpoints for this edge do not exist: ${edge}`);\r\n            }\r\n        }\r\n\r\n        // Iterate over the STIX nodes and process their children by adding embedded\r\n        // refs to the existing objects and creating new SROs as needed.\r\n        for (const stixNode of stixNodes.values()) {\r\n            const children = new Array<any>();\r\n            const childIds = stixChildren.get(stixNode.id);\r\n            if (!childIds) {\r\n                throw new Error(`Cannot look up children of STIX node: id=${stixNode.id}`);\r\n            }\r\n            for (const childId of childIds) {\r\n                children.push(stixNodes.get(childId));\r\n            }\r\n            const newNodes = this.handleChildren(stixNode, children);\r\n            stixBundle.objects.push(...newNodes);\r\n        }\r\n\r\n        // TODO - Create flow authors.\r\n        const author = this.createStixObj(\"identity\");\r\n        author.name = \"John Doe\";\r\n        author.identity_class = \"individual\";\r\n        author.contact_information = \"johndoe@mitre.org\";\r\n        stixBundle.objects.splice(2, 0, author)\r\n\r\n        // TODO - Set flow metadata.\r\n        const flowObject = this.createStixObj(\"attack-flow\");\r\n        flowObject.name = \"Placeholder name\";\r\n        flowObject.scope = \"other\";\r\n        flowObject.description = \"Placeholder description.\";\r\n        flowObject.created_by_ref = author.id;\r\n        // flowObject.created = \"TODO\";\r\n        // flowObject.modified = \"TODO\";\r\n        flowObject.start_refs = this.findFlowRoots(stixNodes, stixChildren);\r\n        stixBundle.objects.splice(2, 0, flowObject);\r\n\r\n        return JSON.stringify(stixBundle, null, 2);\r\n    }\r\n\r\n    /**\r\n     * Process a node in the Attack Flow and exportable STIX objects.\r\n     *\r\n     * @remarks\r\n     * While processing each node, we also process the in edges and out edges of that\r\n     * node. Some edges may be represented as embedded refs in the node's SDO, and\r\n     * others may be represented as separate relationship objects (i.e. SROs), therefore\r\n     * this method can return multiple objects.\r\n     *\r\n     * @parm node - The node to be published\r\n     * @returns - an array of objects containing 1 SDO or SCO and 0 or more SROs\r\n     */\r\n    protected exportNodeObject(node: GraphObjectExport): any {\r\n        // Produce an SDO or SCO for this node.\r\n        const type = node.template.id;\r\n        const obj = this.createStixObj(type, node.id);\r\n        if (node.template.id === \"or\") {\r\n            obj.operator = \"OR\";\r\n        } else if (node.template.id === \"and\") {\r\n            obj.operator = \"AND\";\r\n        }\r\n        // Merge properties into stix obj\r\n        this.mergeDictionaryProperty(obj, node.data);\r\n        return obj;\r\n    }\r\n\r\n\r\n    protected mergeDictionaryProperty(obj: any, property: DictionaryProperty) {\r\n        for(let [key, value] of property.value) {\r\n            switch(value.type) {\r\n                case PropertyType.Dictionary:\r\n                    if(value instanceof DictionaryProperty) {\r\n                        obj[key] = {};\r\n                        this.mergeDictionaryProperty(obj[key], value);\r\n                    }\r\n                    break;\r\n                case PropertyType.List:\r\n                    if(value instanceof ListProperty && value.isDefined()) {\r\n                        obj[key] = [];\r\n                        this.mergeListProperty(obj[key], value)\r\n                    }\r\n                    break;\r\n                default:\r\n                    if(value.isDefined()) {\r\n                        obj[key] = value.toRawValue();\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected mergeListProperty(obj: any, property: ListProperty) {\r\n        for(let value of property.value.values()) {\r\n            switch(value.type) {\r\n                case PropertyType.Dictionary:\r\n                    if(value instanceof DictionaryProperty) {\r\n                        obj.push({});\r\n                        this.mergeDictionaryProperty(obj.at(-1), value);\r\n                    }\r\n                    break;\r\n                case PropertyType.List:\r\n                    if(value instanceof ListProperty && value.isDefined()) {\r\n                        obj.push([]);\r\n                        this.mergeListProperty(obj.at(-1), value);\r\n                    }\r\n                    break;\r\n                default:\r\n                    if(value.isDefined()) {\r\n                        obj.push(value.toRawValue())\r\n                    }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Process a node in the Attack Flow and exportable STIX objects.\r\n     *\r\n     * @remarks\r\n     * While processing each node, we also process the in edges and out edges of that\r\n     * node. Some edges may be represented as embedded refs in the node's SDO, and\r\n     * others may be represented as separate relationship objects (i.e. SROs), therefore\r\n     * this method can return multiple objects.\r\n     *\r\n     * @param node - A STIX node (SDO or SCO)\r\n     * @param children - An array of child nodes (SDOs and SCOs)\r\n     * @returns - an array of objects 0 or more SROs\r\n     */\r\n    protected handleChildren(node: any, children: Array<any>): Array<any> {\r\n        const newSros: Array<any> = [];\r\n\r\n        // Examine edges and either set embedded refs or create SROs.\r\n        for (const child of children) {\r\n            let newSro: any = null;\r\n            switch (node.type) {\r\n                case \"attack-action\":\r\n                    newSro = this.handleActionChild(node, child);\r\n                    break;\r\n                case \"attack-asset\":\r\n                    newSro = this.handleAssetChild(node, child);\r\n                    break;\r\n                case \"attack-condition\":\r\n                    newSro = this.handleConditionChild(node, child);\r\n                    break;\r\n                case \"attack-operator\":\r\n                    newSro = this.handleOperatorChild(node, child);\r\n                    break;\r\n                default:\r\n                    newSro = this.handleDefaultChild(node, child);\r\n            }\r\n            if (newSro) {\r\n                newSros.push(newSro);\r\n            }\r\n        }\r\n\r\n        return newSros;\r\n    }\r\n\r\n    /**\r\n     * Handle a child node of an Action node by creating either embedded ref in the\r\n     * current node and/or returning an array of SROs.\r\n     *\r\n     * @param node - a STIX parent node\r\n     * @param child - a STIX childe node\r\n     * @returns zero or more SRO nodes\r\n     */\r\n    protected handleActionChild(node: any, child: any): any {\r\n        let sro: any = null;\r\n        switch (child.type) {\r\n            case \"process\":\r\n                // Note that if there are multiple children with type \"process\", only\r\n                // the first one will be set as the command ref. The others will be\r\n                // set as SROs.\r\n                if (node.command_ref) {\r\n                    sro = this.createSro(node, child);\r\n                } else {\r\n                    node.command_ref = child.id;\r\n                }\r\n                break;\r\n            case \"attack-asset\":\r\n                if (!node.asset_refs) {\r\n                    node.asset_refs = [];\r\n                }\r\n                node.asset_refs.push(child.id);\r\n                break;\r\n            case \"attack-action\": // falls through\r\n            case \"attack-operator\": // falls through\r\n            case \"attack-condition\":\r\n                if (!node.effect_refs) {\r\n                    node.effect_refs = [];\r\n                }\r\n                node.effect_refs.push(child.id);\r\n                break;\r\n            default:\r\n                sro = this.createSro(node, child);\r\n        }\r\n        return sro;\r\n    }\r\n\r\n    /**\r\n     * Handle a child node of an Asset node by creating either embedded ref in the\r\n     * current node and/or returning an array of SROs.\r\n     *\r\n     * @param node - a STIX parent node\r\n     * @param child - a STIX childe node\r\n     * @returns zero or more SRO nodes\r\n     */\r\n    protected handleAssetChild(node: any, child: any): any {\r\n        let sro: any = null;\r\n        // Note that if there are multiple children, only the first one will be set as\r\n        // the object_ref. The others will be set as SROs.\r\n        if (node.object_ref) {\r\n            sro = this.createSro(node, child);\r\n        } else {\r\n            node.object_ref = child.id;\r\n        }\r\n        return sro;\r\n    }\r\n\r\n    /**\r\n     * Handle a child node of an Condition node by creating either embedded ref in the\r\n     * current node and/or returning an array of SROs.\r\n     *\r\n     * @param node - a STIX parent node\r\n     * @param child - a STIX childe node\r\n     * @returns zero or more SRO nodes\r\n     */\r\n    protected handleConditionChild(node: any, child: any): any {\r\n        let sro: any = null;\r\n        switch (child.type) {\r\n            case \"attack-action\": // falls through\r\n            case \"attack-operator\": // falls through\r\n            case \"attack-condition\":\r\n                // TODO add support for on_false_refs once implemented in the editor\r\n                if (!node.on_true_refs) {\r\n                    node.on_true_refs = [];\r\n                }\r\n                node.on_true_refs.push(child.id);\r\n                break;\r\n            default:\r\n                sro = this.createSro(node, child);\r\n        }\r\n        return sro;\r\n    }\r\n\r\n    /**\r\n     * Handle a child node of an Operator node by creating either embedded ref in the\r\n     * current node and/or returning an array of SROs.\r\n     *\r\n     * @param node - a STIX parent node\r\n     * @param child - a STIX childe node\r\n     * @returns zero or more SRO nodes\r\n     */\r\n    protected handleOperatorChild(node: any, child: any): any {\r\n        let sro: any = null;\r\n        switch (child.type) {\r\n            case \"attack-action\": // falls through\r\n            case \"attack-operator\": // falls through\r\n            case \"attack-condition\":\r\n                if (!node.effect_refs) {\r\n                    node.effect_refs = [];\r\n                }\r\n                node.effect_refs.push(child.id);\r\n                break;\r\n            default:\r\n                sro = this.createSro(node, child);\r\n        }\r\n        return sro;\r\n    }\r\n\r\n    /**\r\n     * Handle a child node of any arbitrary node by returning an SRO.\r\n     *\r\n     * @param node - a STIX parent node\r\n     * @param child - a STIX childe node\r\n     * @returns zero or more SRO nodes\r\n     */\r\n    protected handleDefaultChild(node: any, child: any): any {\r\n        let sro = this.createSro(node, child);\r\n        return sro;\r\n    }\r\n\r\n    /**\r\n     * Create the initial STIX bundle with required extension/creator SDOs.\r\n     */\r\n    protected createStixBundle(): any {\r\n        const bundle: any = this.createStixObj(\"bundle\");\r\n        const extensionAuthor = this.createExtensionAuthorSdo();\r\n        const extension = this.createExtensionSdo(extensionAuthor.id);\r\n        bundle.objects = [extension, extensionAuthor];\r\n        return bundle;\r\n    }\r\n\r\n    /**\r\n     * Create the extension-definition SDO.\r\n     */\r\n    protected createExtensionSdo(creator_id: string): any {\r\n        const extension = this.createStixObj(\"extension-definition\", AttackFlowExtensionId);\r\n        extension.name = \"Attack Flow\";\r\n        extension.description = \"Extends STIX 2.1 with features to create Attack Flows.\";\r\n        extension.created = AttackFlowExtensionCreatedDate;\r\n        extension.modified = AttackFlowExtensionModifiedDate;\r\n        extension.created_by_ref = creator_id;\r\n        extension.schema = AttackFlowSchemaUrl;\r\n        extension.version = AttackFlowSchemaVersion;\r\n        extension.extension_types = [\"new-sdo\"];\r\n        extension.external_references = [\r\n            AttackFlowDocsExternalReference,\r\n            AttackFlowGitHubExternalReference,\r\n        ]\r\n        return extension;\r\n    }\r\n\r\n    /**\r\n     * Create the identity that is the creator of the extension-definition.\r\n     */\r\n    protected createExtensionAuthorSdo(): any {\r\n        const identity = this.createStixObj(\"identity\", AttackFlowExtensionId);\r\n        identity.create_by_ref = identity.id;\r\n        identity.name = AttackFlowExtensionCreatorName;\r\n        identity.identity_class = \"organization\";\r\n        identity.created = AttackFlowExtensionCreatedDate;\r\n        identity.modified = AttackFlowExtensionModifiedDate;\r\n        return identity;\r\n    }\r\n\r\n    /**\r\n     * A generic helper for creating a SDO initialized with a few required fields.\r\n     */\r\n    protected createStixObj(template: string, id: string | null = null): any {\r\n        let type = AttackFlowTemplates.get(template) ?? template;\r\n        let stixId = id ?? crypto.randomUUID();\r\n        let now = (new Date()).toISOString();\r\n        let sdo: any = {\r\n            type: type,\r\n            id: `${type}--${stixId}`,\r\n            spec_version: \"2.1\",\r\n            created: now,\r\n            modified: now,\r\n        }\r\n\r\n        // Declare extension on Attack Flow SDOs.\r\n        if (AttackFlowSdos.has(type)) {\r\n            let extDef: any = {};\r\n            extDef[`extension-definition--${AttackFlowExtensionId}`] = {\r\n                extension_type: \"new-sdo\",\r\n            };\r\n            sdo.extensions = extDef;\r\n        }\r\n\r\n        return sdo;\r\n    }\r\n\r\n    /**\r\n     * Create a STIX relationship object (SRO).\r\n     *\r\n     * @param parent - The parent STIX node\r\n     * @param child - The child STIX node\r\n     * @param relationshipType - The relationship type\r\n     */\r\n    protected createSro(parent: any, child: any, relationshipType: string = \"related-to\"): any {\r\n        const stixId = crypto.randomUUID();\r\n        const now = (new Date()).toISOString();\r\n        return {\r\n            type: \"relationship\",\r\n            id: `relationship--${stixId}`,\r\n            spec_version: \"2.1\",\r\n            created: now,\r\n            modified: now,\r\n            relationship_type: relationshipType,\r\n            source_ref: parent.id,\r\n            target_ref: child.id,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Find the root nodes of the action graph.\r\n     *\r\n     * @param nodes - A map of node ID -> STIX Node\r\n     * @param adjacency - A map of parent ID -> children IDs\r\n     * @returns a list of IDs of the root action/condition nodes.\r\n     */\r\n    protected findFlowRoots(nodes: Map<string, any>,\r\n            adjacency: Map<string, Array<string>>): Array<string> {\r\n        // Add all actions and conditions to the set of possible roots.\r\n        const roots = new Set<string>();\r\n        for (const node of nodes.values()) {\r\n            if (node.type == \"attack-action\" || node.type == \"attack-condition\") {\r\n                roots.add(node.id);\r\n            }\r\n        }\r\n        //\r\n        for (const children of adjacency.values()) {\r\n            for (const child of children) {\r\n                roots.delete(child);\r\n            }\r\n        }\r\n        return new Array<string>(...roots);\r\n    }\r\n    \r\n}\r\n\r\nexport default AttackFlowPublisher;\r\n","import validator from \"./builder.config.validator\";\r\nimport publisher from \"./builder.config.publisher\";\r\nimport { AppConfiguration } from \"@/store/StoreTypes\";\r\nimport { Colors, DarkTheme } from \"./scripts/BlockDiagram/DiagramFactory/Themes\";\r\nimport { \r\n    AnchorAngle,\r\n    PropertyType,\r\n    SemanticRole,\r\n    TemplateType\r\n} from \"./scripts/BlockDiagram\";\r\n\r\nconst config: AppConfiguration = {\r\n    file_type_name: \"Attack Flow\",\r\n    file_type_extension: \"afb\",\r\n    is_web_hosted: false,\r\n    schema: {\r\n        page_template: \"attack_flow_page\",\r\n        templates: [\r\n            {\r\n                id: \"attack_flow_page\",\r\n                name: \"Attack Flow\",\r\n                type: TemplateType.Page,\r\n                role: SemanticRole.None,\r\n                grid: [10, 10],\r\n                properties: {\r\n                    name                      : { type: PropertyType.String, value: \"Untitled Document\", is_primary: true },\r\n                    description               : { type: PropertyType.String, },\r\n                    scope                     : { \r\n                        type: PropertyType.Enum,\r\n                        options: {\r\n                            type  : PropertyType.List,\r\n                            form  : { type: PropertyType.String },\r\n                            value : [\r\n                                [\"incident\", \"Incident\"],\r\n                                [\"campaign\", \"Campaign\"],\r\n                                [\"threat-actor\", \"Threat Actor\"],\r\n                                [\"malware\", \"Malware\"],\r\n                                [\"other\", \"Other\"]\r\n                            ]\r\n                        },\r\n                        value: \"incident\"\r\n                    },\r\n                    author                    : {\r\n                        type: PropertyType.Dictionary,\r\n                        form: {\r\n                            name           : { type: PropertyType.String, is_primary: true },\r\n                            identity_class : { \r\n                                type: PropertyType.Enum,\r\n                                options: {\r\n                                    type  : PropertyType.List,\r\n                                    form  : { type: PropertyType.String },\r\n                                    value : [\r\n                                        [\"individual\", \"Individual\"],\r\n                                        [\"group\", \"Group\"],\r\n                                        [\"system\", \"System\"],\r\n                                        [\"organization\", \"Organization\"],\r\n                                        [\"class\", \"Class\"],\r\n                                        [\"unknown\", \"Unknown\"]\r\n                                    ]\r\n                                }\r\n                            },\r\n                            contact_information: { type: PropertyType.String }\r\n                        }\r\n                    }\r\n                },\r\n                style: DarkTheme.Page()\r\n            },\r\n            {\r\n                id: \"true_anchor\",\r\n                name: \"True Anchor\",\r\n                type: TemplateType.AnchorPoint,\r\n                role: SemanticRole.None,\r\n                radius: 10,\r\n                line_templates: {\r\n                    [AnchorAngle.DEG_0] : `@__builtin__line_horizontal_elbow`,\r\n                    [AnchorAngle.DEG_90]: `@__builtin__line_vertical_elbow`\r\n                },\r\n                style: DarkTheme.AnchorPoint()\r\n            },\r\n            {\r\n                id: \"false_anchor\",\r\n                name: \"False Anchor\",\r\n                type: TemplateType.AnchorPoint,\r\n                role: SemanticRole.None,\r\n                radius: 10,\r\n                line_templates: {\r\n                    [AnchorAngle.DEG_0] : `@__builtin__line_horizontal_elbow`,\r\n                    [AnchorAngle.DEG_90]: `@__builtin__line_vertical_elbow`\r\n                },\r\n                style: DarkTheme.AnchorPoint()\r\n            },\r\n            {\r\n                id: \"action\",\r\n                name: \"Action\",\r\n                type: TemplateType.DictionaryBlock,\r\n                role: SemanticRole.Node,\r\n                properties: {\r\n                    name                      : { type: PropertyType.String, is_primary: true, is_required: true },\r\n                    tactic_id                 : { type: PropertyType.String },\r\n                    tactic_ref                : { type: PropertyType.String },\r\n                    technique_id              : { type: PropertyType.String },\r\n                    technique_ref             : { type: PropertyType.String },\r\n                    execution_start           : { type: PropertyType.Date },\r\n                    execution_end             : { type: PropertyType.Date },\r\n                    description               : { type: PropertyType.String },\r\n                    confidence                : { \r\n                        type: PropertyType.Enum,\r\n                        options: {\r\n                            type  : PropertyType.List,\r\n                            form  : { \r\n                                type: PropertyType.Dictionary,\r\n                                form: {\r\n                                    text  : { type: PropertyType.String, is_primary: true },\r\n                                    value : { type: PropertyType.Int }\r\n                                }\r\n                            },\r\n                            value : [\r\n                                [\"speculative\",   { text: \"Speculative\", value: 0 }],\r\n                                [\"very-doubtful\", { text: \"Very Doubtful\", value: 10 }],\r\n                                [\"doubtful\",      { text: \"Doubtful\", value: 30 }],\r\n                                [\"even-odds\",     { text: \"Even Odds\", value: 50 }],\r\n                                [\"probable\",      { text: \"Probable\", value: 70 }],\r\n                                [\"very-probable\", { text: \"Very Probable\", value: 90 }],\r\n                                [\"certain\",       { text: \"Certain\", value: 100 }]\r\n                            ]\r\n                        },\r\n                        value: \"probable\"\r\n                    },\r\n\r\n                },\r\n                anchor_template: \"@__builtin__anchor\",\r\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Blue }})\r\n            },\r\n            {\r\n                id: \"asset\",\r\n                name: \"Asset\",\r\n                type: TemplateType.DictionaryBlock,\r\n                role: SemanticRole.Node,\r\n                properties: {\r\n                    name                      : { type: PropertyType.String, is_primary: true, is_required: true},\r\n                    description               : { type: PropertyType.String }\r\n                },\r\n                anchor_template: \"@__builtin__anchor\",\r\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Orange }})\r\n            },\r\n            {\r\n                id: \"condition\",\r\n                name: \"Condition\",\r\n                type: TemplateType.BranchBlock,\r\n                role: SemanticRole.Node,\r\n                properties: {\r\n                    description               : { type: PropertyType.String, is_primary: true, is_required: true },\r\n                    pattern                   : { type: PropertyType.String },\r\n                    pattern_type              : { type: PropertyType.String },\r\n                    pattern_version           : { type: PropertyType.String },\r\n                },\r\n                branches: [\r\n                    { \r\n                        text: \"True\",\r\n                        anchor_template: \"true_anchor\",\r\n                    },\r\n                    {\r\n                        text: \"False\",\r\n                        anchor_template: \"false_anchor\"\r\n                    },\r\n                ],\r\n                anchor_template: \"@__builtin__anchor\",\r\n                style: DarkTheme.BranchBlock({ head: { ...Colors.Green }})\r\n            },\r\n            {\r\n                id: \"or\",\r\n                name: \"Operator: OR\",\r\n                type: TemplateType.TextBlock,\r\n                role: SemanticRole.Node,\r\n                properties: {\r\n                    text: { \r\n                        type: PropertyType.String,\r\n                        value: \"AND\",\r\n                        is_primary: true,\r\n                        is_visible: false,\r\n                        is_editable: false,\r\n                    }\r\n                },\r\n                anchor_template: \"@__builtin__anchor\",\r\n                style: DarkTheme.TextBlock({ ...Colors.Red, horizontal_padding: 35 })\r\n            },\r\n            {\r\n                id: \"and\",\r\n                name: \"Operator: AND\",\r\n                type: TemplateType.TextBlock,\r\n                role: SemanticRole.Node,\r\n                properties: {\r\n                    text: { \r\n                        type: PropertyType.String,\r\n                        value: \"AND\",\r\n                        is_primary: true,\r\n                        is_visible: false,\r\n                        is_editable: false,\r\n                    }\r\n                },\r\n                anchor_template: \"@__builtin__anchor\",\r\n                style: DarkTheme.TextBlock({ ...Colors.Red, horizontal_padding: 35 })\r\n            },\r\n            {\r\n                id: \"attack_pattern\",\r\n                name: \"Attack Pattern\",\r\n                type: TemplateType.DictionaryBlock,\r\n                role: SemanticRole.Node,\r\n                properties: {\r\n                    name                      : { type: PropertyType.String, is_primary: true, is_required: true },\r\n                    description               : { type: PropertyType.String },\r\n                    aliases                   : { type: PropertyType.List, form: {type: PropertyType.String }},\r\n                    kill_chain_phases         : { type: PropertyType.List, form: {type: PropertyType.String }},\r\n                },\r\n                anchor_template: \"@__builtin__anchor\",\r\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\r\n            },\r\n            {\r\n                id: \"campaign\",\r\n                name: \"Campaign\",\r\n                type: TemplateType.DictionaryBlock,\r\n                role: SemanticRole.Node,\r\n                properties: {\r\n                    name                      : { type: PropertyType.String, is_primary: true, is_required: true },\r\n                    description               : { type: PropertyType.String },\r\n                    aliases                   : { type: PropertyType.List, form: { type: PropertyType.String } },\r\n                    first_seen                : { type: PropertyType.Date },\r\n                    last_seen                 : { type: PropertyType.Date },\r\n                    objective                 : { type: PropertyType.String },\r\n                },\r\n                anchor_template: \"@__builtin__anchor\",\r\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\r\n            },\r\n            {\r\n                id: \"course_of_action\",\r\n                name: \"Course of Action\",\r\n                type: TemplateType.DictionaryBlock,\r\n                role: SemanticRole.Node,\r\n                properties: {\r\n                    name                      : { type: PropertyType.String, is_primary: true, is_required: true },\r\n                    description               : { type: PropertyType.String },\r\n                    action_type               : { type: PropertyType.String },\r\n                    os_execution_envs         : { type: PropertyType.List, form: { type: PropertyType.String } },\r\n                    action_bin                : { type: PropertyType.String }\r\n                },\r\n                anchor_template: \"@__builtin__anchor\",\r\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\r\n            },\r\n            {\r\n                id: \"grouping\",\r\n                name: \"Grouping\",\r\n                type: TemplateType.DictionaryBlock,\r\n                role: SemanticRole.Node,\r\n                properties: {\r\n                    name                      : { type: PropertyType.String, is_primary: true },\r\n                    description               : { type: PropertyType.String },\r\n                    context                   : { type: PropertyType.String, is_required: true },\r\n                },\r\n                anchor_template: \"@__builtin__anchor\",\r\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\r\n            },\r\n            {\r\n                id: \"identity\",\r\n                name: \"Identity\",\r\n                type: TemplateType.DictionaryBlock,\r\n                role: SemanticRole.Node,\r\n                properties: {\r\n                    name                      : { type: PropertyType.String, is_required: true, is_primary: true },\r\n                    description               : { type: PropertyType.String },\r\n                    roles                     : { type: PropertyType.List, form: { type: PropertyType.String } },\r\n                    identity_class            : { type: PropertyType.String, is_required: true },\r\n                    sectors                   : { type: PropertyType.List, form: { type: PropertyType.String } },\r\n                    contact_information       : { type: PropertyType.String }\r\n                },\r\n                anchor_template: \"@__builtin__anchor\",\r\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\r\n            },\r\n            {\r\n                id: \"indicator\",\r\n                name: \"Indicator\",\r\n                type: TemplateType.DictionaryBlock,\r\n                role: SemanticRole.Node,\r\n                properties: {\r\n                    name                    : { type: PropertyType.String, is_primary: true },\r\n                    description             : { type: PropertyType.String },\r\n                    indicator_types         : { type: PropertyType.List, form: { type: PropertyType.String, is_required: true } },\r\n                    pattern                 : { type: PropertyType.String, is_required: true },\r\n                    pattern_type            : { type: PropertyType.String, is_required: true },\r\n                    patter_version          : { type: PropertyType.String },\r\n                    valid_from              : { type: PropertyType.Date, is_required: true},\r\n                    valid_until             : { type: PropertyType.Date },\r\n                    kill_chain_phases       : { type: PropertyType.List, form: {type: PropertyType.String }},\r\n                },\r\n                anchor_template: \"@__builtin__anchor\",\r\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\r\n            },\r\n            {\r\n                id: \"infrastructure\",\r\n                name: \"Infrastructure\",\r\n                type: TemplateType.DictionaryBlock,\r\n                role: SemanticRole.Node,\r\n                properties: {\r\n                    name                    : { type: PropertyType.String, is_primary: true, is_required: true },\r\n                    description             : { type: PropertyType.String },\r\n                    infrastructure_types    : { type: PropertyType.List, form: { type: PropertyType.String, is_required: true }},\r\n                    aliases                 : { type: PropertyType.List, form: { type: PropertyType.String }},\r\n                    kill_chain_phases       : { type: PropertyType.List, form: { type: PropertyType.String }},\r\n                    first_seen              : { type: PropertyType.Date },\r\n                    last_seen               : { type: PropertyType.Date }\r\n                },\r\n                anchor_template: \"@__builtin__anchor\",\r\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\r\n            },\r\n            {\r\n                id: \"intrusion_set\",\r\n                name: \"Intrusion Set\",\r\n                type: TemplateType.DictionaryBlock,\r\n                role: SemanticRole.Node,\r\n                properties: {\r\n                    name                    : { type: PropertyType.String, is_primary: true, is_required: true },\r\n                    description             : { type: PropertyType.String },\r\n                    aliases                 : { type: PropertyType.List, form: { type: PropertyType.String }, is_required: true},\r\n                    first_seen              : { type: PropertyType.Date },\r\n                    last_seen               : { type: PropertyType.Date },\r\n                    goals                   : { type: PropertyType.List, form: { type: PropertyType.String }},\r\n                    resource_level          : { type: PropertyType.String},\r\n                    primary_motivation      : { type: PropertyType.String},\r\n                    secondary_motivations   : { type: PropertyType.List, form: { type: PropertyType.String }},\r\n                },\r\n                anchor_template: \"@__builtin__anchor\",\r\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\r\n            },\r\n            {\r\n                id: \"location\",\r\n                name: \"Location\",\r\n                type: TemplateType.DictionaryBlock,\r\n                role: SemanticRole.Node,\r\n                properties: {\r\n                    name                    : { type: PropertyType.String, is_primary: true },\r\n                    description             : { type: PropertyType.String },\r\n                    latitude                : { type: PropertyType.Float, min: -90, max: 90 },\r\n                    longitude               : { type: PropertyType.Float, min: -180, max: 180 },\r\n                    precision               : { type: PropertyType.Float },\r\n                    region                  : { type: PropertyType.String },\r\n                    country                 : { type: PropertyType.String },\r\n                    administrative_area     : { type: PropertyType.String },\r\n                    city                    : { type: PropertyType.String },\r\n                    street_address          : { type: PropertyType.String },\r\n                    postal_code             : { type: PropertyType.String }\r\n                },\r\n                anchor_template: \"@__builtin__anchor\",\r\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\r\n            },\r\n            {\r\n                id: \"malware\",\r\n                name: \"Malware\",\r\n                type: TemplateType.DictionaryBlock,\r\n                role: SemanticRole.Node,\r\n                properties: {\r\n                    name                    : { type: PropertyType.String, is_primary: true },\r\n                    description             : { type: PropertyType.String },\r\n                    malware_types           : { type: PropertyType.List, form: { type: PropertyType.String }, is_required: true},\r\n                    is_family               : { type: PropertyType.String, is_required: true },\r\n                    aliases                 : { type: PropertyType.List, form: { type: PropertyType.String } },\r\n                    kill_chain_phases       : { type: PropertyType.List, form: { type: PropertyType.String } },\r\n                    first_seen              : { type: PropertyType.Date },\r\n                    last_seen               : { type: PropertyType.Date },\r\n                    os_execution_envs       : { type: PropertyType.List, form: { type: PropertyType.String } },\r\n                    architecture_execution_envs: { type: PropertyType.List, form: { type: PropertyType.String } },\r\n                    implementation_languages: { type: PropertyType.List, form: { type: PropertyType.String } },\r\n                    capabilities            : { type: PropertyType.List, form: { type: PropertyType.String } },\r\n                },\r\n                anchor_template: \"@__builtin__anchor\",\r\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\r\n            },\r\n            {\r\n                id: \"malware_analysis\",\r\n                name: \"Malware\",\r\n                type: TemplateType.DictionaryBlock,\r\n                role: SemanticRole.Node,\r\n                properties: {\r\n                    product                 : { type: PropertyType.String, is_primary: true, is_required: true },\r\n                    version                 : { type: PropertyType.String },\r\n                    configuration_version   : { type: PropertyType.String },\r\n                    modules                 : { type: PropertyType.List, form: { type: PropertyType.String } },\r\n                    analysis_engine_version  : { type: PropertyType.String },\r\n                    analysis_definition_version: { type: PropertyType.String },\r\n                    submitted               : { type: PropertyType.Date },\r\n                    analysis_started        : { type: PropertyType.Date },\r\n                    analysis_ended          : { type: PropertyType.Date },\r\n                    av_result               : { type: PropertyType.String},\r\n                },\r\n                anchor_template: \"@__builtin__anchor\",\r\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\r\n            },\r\n            {\r\n                id: \"note\",\r\n                name: \"Note\",\r\n                type: TemplateType.DictionaryBlock,\r\n                role: SemanticRole.Node,\r\n                properties: {\r\n                    abstract                : { type: PropertyType.String, is_primary: true },\r\n                    content                 : { type: PropertyType.String, is_required: true },\r\n                    authors                 : { type: PropertyType.List, form: { type: PropertyType.String } },\r\n                },\r\n                anchor_template: \"@__builtin__anchor\",\r\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\r\n            },\r\n            {\r\n                id: \"observed_data\",\r\n                name: \"Observed Data\",\r\n                type: TemplateType.DictionaryBlock,\r\n                role: SemanticRole.Node,\r\n                properties: {\r\n                    first_observed            : { type: PropertyType.Date, is_required: true },\r\n                    last_observed             : { type: PropertyType.Date, is_required: true },\r\n                    number_observed           : { type: PropertyType.Int, min: 0, is_required: true },\r\n                },\r\n                anchor_template: \"@__builtin__anchor\",\r\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\r\n            },\r\n            {\r\n                id: \"opinion\",\r\n                name: \"Opinion\",\r\n                type: TemplateType.DictionaryBlock,\r\n                role: SemanticRole.Node,\r\n                properties: {\r\n                    explanation             : { type: PropertyType.String, is_primary: true },\r\n                    authors                 : { type: PropertyType.List, form: { type: PropertyType.String } },\r\n                    opinion                 : { type: PropertyType.String, is_required: true },\r\n                },\r\n                anchor_template: \"@__builtin__anchor\",\r\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\r\n            },\r\n            {\r\n                id: \"report\",\r\n                name: \"Report\",\r\n                type: TemplateType.DictionaryBlock,\r\n                role: SemanticRole.Node,\r\n                properties: {\r\n                    name                    : { type: PropertyType.String, is_primary: true, is_required: true },\r\n                    description             : { type: PropertyType.String },\r\n                    report_types            : { type: PropertyType.List, form: {type: PropertyType.String }, is_required: true},\r\n                    published               : { type: PropertyType.Date, is_required: true },\r\n                },\r\n                anchor_template: \"@__builtin__anchor\",\r\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\r\n            },\r\n            {\r\n                id: \"threat-actor\",\r\n                name: \"Threat Actor\",\r\n                type: TemplateType.DictionaryBlock,\r\n                role: SemanticRole.Node,\r\n                properties: {\r\n                    name                      : { type: PropertyType.String, is_primary: true, is_required: true },\r\n                    description               : { type: PropertyType.String },\r\n                    threat_actor_types        : { type: PropertyType.List, form: {type: PropertyType.String }, is_required: true},\r\n                    aliases                   : { type: PropertyType.List, form: {type: PropertyType.String }},\r\n                    first_seen                : { type: PropertyType.Date },\r\n                    last_seen                 : { type: PropertyType.Date },\r\n                    roles                     : { type: PropertyType.List, form: {type: PropertyType.String }},\r\n                    goals                     : { type: PropertyType.List, form: {type: PropertyType.String }},\r\n                    sophistication            : { type: PropertyType.String },\r\n                    resource_level            : { type: PropertyType.String },\r\n                    primary_motivation        : { type: PropertyType.String },\r\n                    secondary_motivation      : { type: PropertyType.List, form: {type: PropertyType.String }},\r\n                    personal_motivations      : { type: PropertyType.List, form: {type: PropertyType.String }},\r\n                },\r\n                anchor_template: \"@__builtin__anchor\",\r\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\r\n            },\r\n            {\r\n                id: \"tool\",\r\n                name: \"Tool\",\r\n                type: TemplateType.DictionaryBlock,\r\n                role: SemanticRole.Node,\r\n                properties: {\r\n                    name                      : { type: PropertyType.String, is_primary: true, is_required: true },\r\n                    description               : { type: PropertyType.String },\r\n                    tool_types                : { type: PropertyType.List, form: {type: PropertyType.String }, is_required: true},\r\n                    aliases                   : { type: PropertyType.List, form: {type: PropertyType.String }},\r\n                    kill_chain_phases         : { type: PropertyType.List, form: {type: PropertyType.String }},\r\n                    tool_version              : { type: PropertyType.String },\r\n                },\r\n                anchor_template: \"@__builtin__anchor\",\r\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\r\n            },\r\n            {\r\n                id: \"vulnerability\",\r\n                name: \"Vulnerability\",\r\n                type: TemplateType.DictionaryBlock,\r\n                role: SemanticRole.Node,\r\n                properties: {\r\n                    name                      : { type: PropertyType.String, is_primary: true, is_required: true },\r\n                    description               : { type: PropertyType.String },\r\n                },\r\n                anchor_template: \"@__builtin__anchor\",\r\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\r\n            },\r\n            {\r\n                id: \"artifact\",\r\n                name: \"Artifact\",\r\n                type: TemplateType.DictionaryBlock,\r\n                role: SemanticRole.Node,\r\n                properties: {\r\n                    mime_type                 : { type: PropertyType.String },\r\n                    payload_bin               : { type: PropertyType.String },\r\n                    url                       : { type: PropertyType.String },\r\n                    hashes                    : { type: PropertyType.String },\r\n                    encryption_algorithm      : { type: PropertyType.String },\r\n                    decryption_key            : { type: PropertyType.String },\r\n                },\r\n                anchor_template: \"@__builtin__anchor\",\r\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\r\n            },\r\n            {\r\n                id: \"autonomous_system\",\r\n                name: \"Autonomous System\",\r\n                type: TemplateType.DictionaryBlock,\r\n                role: SemanticRole.Node,\r\n                properties: {\r\n                    number                    : { type: PropertyType.String, is_primary: true, is_required: true },\r\n                    name                      : { type: PropertyType.String },\r\n                    rir                       : { type: PropertyType.String },\r\n                },\r\n                anchor_template: \"@__builtin__anchor\",\r\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\r\n            },\r\n            {\r\n                id: \"directory\",\r\n                name: \"Directory\",\r\n                type: TemplateType.DictionaryBlock,\r\n                role: SemanticRole.Node,\r\n                properties: {\r\n                    path                      : { type: PropertyType.String, is_primary: true, is_required: true },\r\n                    path_enc                  : { type: PropertyType.String },\r\n                    ctime                     : { type: PropertyType.Date },\r\n                    mtime                     : { type: PropertyType.Date },\r\n                    atime                     : { type: PropertyType.Date },\r\n                },\r\n                anchor_template: \"@__builtin__anchor\",\r\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\r\n            },\r\n            {\r\n                id: \"domain_name\",\r\n                name: \"Domain Name\",\r\n                type: TemplateType.DictionaryBlock,\r\n                role: SemanticRole.Node,\r\n                properties: {\r\n                    value                     : { type: PropertyType.String, is_required: true },\r\n                },\r\n                anchor_template: \"@__builtin__anchor\",\r\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\r\n            },\r\n            {\r\n                id: \"email_address\",\r\n                name: \"Email Address\",\r\n                type: TemplateType.DictionaryBlock,\r\n                role: SemanticRole.Node,\r\n                properties: {\r\n                    value                     : { type: PropertyType.String, is_required: true },\r\n                    display_name              : { type: PropertyType.String },\r\n                },\r\n                anchor_template: \"@__builtin__anchor\",\r\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\r\n            },\r\n            {\r\n                id: \"email_message\",\r\n                name: \"Email Message\",\r\n                type: TemplateType.DictionaryBlock,\r\n                role: SemanticRole.Node,\r\n                properties: {\r\n                    is_multipart              : { type: PropertyType.String, is_required: true },\r\n                    date                      : { type: PropertyType.String },\r\n                    content_type              : { type: PropertyType.String },\r\n                    message_id                : { type: PropertyType.String },\r\n                    subject                   : { type: PropertyType.String, is_primary: true },\r\n                    received_lines            : { type: PropertyType.String },\r\n                    additional_header_fields  : { type: PropertyType.String },\r\n                    body                      : { type: PropertyType.String },\r\n                    body_multipart            : { type: PropertyType.String },\r\n                },\r\n                anchor_template: \"@__builtin__anchor\",\r\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\r\n            },\r\n            {\r\n                id: \"file\",\r\n                name: \"File\",\r\n                type: TemplateType.DictionaryBlock,\r\n                role: SemanticRole.Node,\r\n                properties: {\r\n                    hashes                    : { type: PropertyType.String },\r\n                    size                      : { type: PropertyType.String },\r\n                    name                      : { type: PropertyType.String, is_primary: true },\r\n                    name_enc                  : { type: PropertyType.String },\r\n                    magic_number_hex          : { type: PropertyType.String },\r\n                    mime_type                 : { type: PropertyType.String },\r\n                    ctime                     : { type: PropertyType.Date },\r\n                    mtime                     : { type: PropertyType.Date },\r\n                    atime                     : { type: PropertyType.Date },\r\n                },\r\n                anchor_template: \"@__builtin__anchor\",\r\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\r\n            },\r\n            {\r\n                id: \"ipv4_addr\",\r\n                name: \"IPv4 Address\",\r\n                type: TemplateType.DictionaryBlock,\r\n                role: SemanticRole.Node,\r\n                properties: {\r\n                    value                     : { type: PropertyType.String, is_required: true },\r\n                },\r\n                anchor_template: \"@__builtin__anchor\",\r\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\r\n            },\r\n            {\r\n                id: \"ipv6_addr\",\r\n                name: \"IPv6 Address\",\r\n                type: TemplateType.DictionaryBlock,\r\n                role: SemanticRole.Node,\r\n                properties: {\r\n                    value                     : { type: PropertyType.String, is_required: true },\r\n                },\r\n                anchor_template: \"@__builtin__anchor\",\r\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\r\n            },\r\n            {\r\n                id: \"mac_addr\",\r\n                name: \"MAC Address\",\r\n                type: TemplateType.DictionaryBlock,\r\n                role: SemanticRole.Node,\r\n                properties: {\r\n                    value                     : { type: PropertyType.String, is_required: true },\r\n                },\r\n                anchor_template: \"@__builtin__anchor\",\r\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\r\n            },\r\n            {\r\n                id: \"mutex\",\r\n                name: \"Mutex\",\r\n                type: TemplateType.DictionaryBlock,\r\n                role: SemanticRole.Node,\r\n                properties: {\r\n                    name                      : { type: PropertyType.String, is_required: true },\r\n                },\r\n                anchor_template: \"@__builtin__anchor\",\r\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\r\n            },\r\n            {\r\n                id: \"network_traffic\",\r\n                name: \"Network Traffic\",\r\n                type: TemplateType.DictionaryBlock,\r\n                role: SemanticRole.Node,\r\n                properties: {\r\n                    start                     : { type: PropertyType.Date },\r\n                    end                       : { type: PropertyType.Date },\r\n                    is_active                 : { type: PropertyType.String },\r\n                    src_port                  : { type: PropertyType.Int, min: 0, max: 65535 },\r\n                    dst_port                  : { type: PropertyType.Int, min: 0, max: 65535 },\r\n                    protocols                 : { type: PropertyType.List, form: { type: PropertyType.String }, is_required: true},\r\n                    src_byte_count            : { type: PropertyType.Int, min: 0 },\r\n                    dst_byte_count            : { type: PropertyType.Int, min: 0 },\r\n                    src_packets               : { type: PropertyType.String },\r\n                    dst_packets               : { type: PropertyType.String },\r\n                    ipfix                     : { type: PropertyType.String },\r\n                },\r\n                anchor_template: \"@__builtin__anchor\",\r\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\r\n            },\r\n            {\r\n                id: \"process\",\r\n                name: \"Process\",\r\n                type: TemplateType.DictionaryBlock,\r\n                role: SemanticRole.Node,\r\n                properties: {\r\n                    is_hidden                 : { type: PropertyType.String },\r\n                    pid                       : { type: PropertyType.Int, min: 0 },\r\n                    created_time              : { type: PropertyType.Date },\r\n                    cwd                       : { type: PropertyType.String },\r\n                    command_line              : { type: PropertyType.String, is_required: true },\r\n                    environment_variables     : { type: PropertyType.String },\r\n                },\r\n                anchor_template: \"@__builtin__anchor\",\r\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\r\n            },\r\n            {\r\n                id: \"software\",\r\n                name: \"Software\",\r\n                type: TemplateType.DictionaryBlock,\r\n                role: SemanticRole.Node,\r\n                properties: {\r\n                    name                      : { type: PropertyType.String, is_primary: true, is_required: true },\r\n                    cpe                       : { type: PropertyType.String },\r\n                    languages                 : { type: PropertyType.List, form: {type: PropertyType.String}},\r\n                    vendor                    : { type: PropertyType.String },\r\n                    version                   : { type: PropertyType.String },\r\n                },\r\n                anchor_template: \"@__builtin__anchor\",\r\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\r\n            },\r\n            {\r\n                id: \"url\",\r\n                name: \"URL\",\r\n                type: TemplateType.DictionaryBlock,\r\n                role: SemanticRole.Node,\r\n                properties: {\r\n                    value                     : { type: PropertyType.String, is_required: true },\r\n                },\r\n                anchor_template: \"@__builtin__anchor\",\r\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\r\n            },\r\n            {\r\n                id: \"user_account\",\r\n                name: \"User Account\",\r\n                type: TemplateType.DictionaryBlock,\r\n                role: SemanticRole.Node,\r\n                properties: {\r\n                    user_id                   : { type: PropertyType.String },\r\n                    credential                : { type: PropertyType.String },\r\n                    account_login             : { type: PropertyType.String },\r\n                    account_type              : { type: PropertyType.String },\r\n                    display_name              : { type: PropertyType.String, is_primary: true, is_required: true },\r\n                    is_service_account        : { type: PropertyType.String },\r\n                    is_privileged             : { type: PropertyType.String },\r\n                    can_escalate_privs        : { type: PropertyType.String },\r\n                    is_disabled               : { type: PropertyType.String },\r\n                    account_created           : { type: PropertyType.Date },\r\n                    account_expires           : { type: PropertyType.Date },\r\n                    credential_last_changed   : { type: PropertyType.Date },\r\n                    account_first_login       : { type: PropertyType.Date },\r\n                    account_last_login        : { type: PropertyType.Date },\r\n                },\r\n                anchor_template: \"@__builtin__anchor\",\r\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\r\n            },\r\n            {\r\n                id: \"windows_registry_key\",\r\n                name: \"Windows Registry Key\",\r\n                type: TemplateType.DictionaryBlock,\r\n                role: SemanticRole.Node,\r\n                properties: {\r\n                    key                       : { type: PropertyType.String, is_primary: true, is_required: true },\r\n                    value                     : { type: PropertyType.List, form: {type: PropertyType.String}},\r\n                    modified_time             : { type: PropertyType.Date },\r\n                    number_of_subkeys         : { type: PropertyType.Int, min: 0 },\r\n                },\r\n                anchor_template: \"@__builtin__anchor\",\r\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\r\n            },\r\n            {\r\n                id: \"x509_certificate\",\r\n                name: \"X509 Certificate\",\r\n                type: TemplateType.DictionaryBlock,\r\n                role: SemanticRole.Node,\r\n                properties: {\r\n                    subject                   : { type: PropertyType.String, is_primary: true, is_required: true },\r\n                    is_self_signed            : { type: PropertyType.String },\r\n                    hashes                    : { type: PropertyType.String },\r\n                    version                   : { type: PropertyType.String },\r\n                    serial_number             : { type: PropertyType.String },\r\n                    signature_algorithm       : { type: PropertyType.String },\r\n                    issuer                    : { type: PropertyType.String },\r\n                    validity_not_before       : { type: PropertyType.Date },\r\n                    validity_not_after        : { type: PropertyType.Date },\r\n                    subject_public_key_algorithm: { type: PropertyType.String },\r\n                    subject_public_key_modulus: { type: PropertyType.String },\r\n                    subject_public_key_exponent: { type: PropertyType.Int, min: 0 },\r\n                },\r\n                anchor_template: \"@__builtin__anchor\",\r\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\r\n            }\r\n        ]\r\n    },\r\n    help_links: [\r\n        {\r\n            text: \"Attack Flow Website\",\r\n            url: \"https://center-for-threat-informed-defense.github.io/attack-flow/\"\r\n        },\r\n        {\r\n            text: \"Builder Help\",\r\n            url: \"https://center-for-threat-informed-defense.github.io/attack-flow/builder/\"\r\n        },\r\n        {\r\n            text: \"GitHub Repository\",\r\n            url: \"https://github.com/center-for-threat-informed-defense/attack-flow\"\r\n        },\r\n        {\r\n            text: \"MITRE ATT&CK Framework\",\r\n            url: \"https://attack.mitre.org/\"\r\n        }\r\n    ],\r\n    validator,\r\n    publisher\r\n};\r\n\r\nexport default config;\r\n","import { ApplicationStore } from \"@/store/StoreTypes\";\r\n\r\nexport abstract class AppCommand  {\r\n\r\n    /**\r\n     * The application context.\r\n     */\r\n    protected _context: ApplicationStore;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link AppCommand}.\r\n     * @param context\r\n     *  The application context.\r\n     */\r\n    constructor(context: ApplicationStore) {\r\n        this._context = context;\r\n    }\r\n\r\n\r\n    /**\r\n     * Executes an application command.\r\n     */\r\n    public abstract execute(): void;\r\n\r\n}\r\n","import { AppCommand } from \"../AppCommand\";\r\nimport { ApplicationStore } from \"@/store/StoreTypes\";\r\nimport { DiagramObjectModel } from \"@/assets/scripts/BlockDiagram\";\r\n\r\nexport class CopySelectedChildren extends AppCommand {\r\n\r\n    /**\r\n     * The objects to add to the clipboard.\r\n     */\r\n    private _objects: DiagramObjectModel[];\r\n\r\n\r\n    /**\r\n     * Copies an object's selected children to the application's clipboard.\r\n     * @param context\r\n     *  The application context.\r\n     * @param object\r\n     *  The object.\r\n     */\r\n    constructor(context: ApplicationStore, object: DiagramObjectModel) {\r\n        super(context);\r\n        // Get selected children\r\n        let objects = object.children.filter(c => c.isSelected());\r\n        // Clone selection\r\n        let o = context.settings.edit.clone_offset;\r\n        let clones = object.factory.cloneObjects(...objects);\r\n        for(let obj of clones) {\r\n            obj.moveBy(o[0], o[1]);\r\n        }\r\n        this._objects = clones;\r\n    }\r\n\r\n\r\n    /**\r\n     * Executes the command.\r\n     */\r\n    public execute(): void {\r\n        this._context.clipboard = this._objects;\r\n    }\r\n\r\n}\r\n","export class Browser {\r\n    \r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Download Files  ////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * The internal download link used to initiate downloads.\r\n     */\r\n    private static _aLink = document.createElement(\"a\");\r\n\r\n    /**\r\n     * Downloads a text file.\r\n     * @param filename\r\n     *  The text file's name.\r\n     * @param text\r\n     *  The text file's contents.\r\n     * @param ext\r\n     *  The text file's extension.\r\n     *  (Default: 'txt')\r\n     */\r\n    public static downloadTextFile(filename: string, text: string, ext = \"txt\") {\r\n        let blob = new Blob([text], { type: \"octet/stream\" });\r\n        let url = window.URL.createObjectURL(blob);\r\n        this._aLink.href = url;\r\n        this._aLink.download = `${ filename }.${ ext }`;\r\n        this._aLink.click();\r\n        window.URL.revokeObjectURL(url);\r\n    }\r\n\r\n    /**\r\n     * Downloads an image file.\r\n     * @param filename\r\n     *  The image file's name.\r\n     * @param canvas\r\n     *  The image file's contents.\r\n     */\r\n    public static downloadImageFile(filename: string, canvas: HTMLCanvasElement) {\r\n        canvas.toBlob(blob => {\r\n            if(!blob)\r\n                return;\r\n            let url = window.URL.createObjectURL(blob);\r\n            this._aLink.href = url;\r\n            this._aLink.download = `${ filename }.png`\r\n            this._aLink.click();\r\n            window.URL.revokeObjectURL(url);\r\n        }, \"image/octet-stream\")\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  2. File Selection Dialogs  ////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    \r\n    \r\n    /**\r\n     * Prompts the user to select a text file from their file system.\r\n     * @returns\r\n     *  A Promise that resolves with the chosen text file.\r\n     */\r\n    public static openTextFileDialog(): Promise<TextFile> {\r\n            \r\n        // Create file input\r\n        let fileInput = document.createElement(\"input\");\r\n        fileInput.type = \"file\";\r\n        \r\n        // Configure file input\r\n        let result = new Promise<TextFile>((resolve) => {\r\n            fileInput.addEventListener(\"change\", (event) => {\r\n                let file = (event.target as any).files[0];\r\n                let reader = new FileReader();\r\n                reader.onload = (e: ProgressEvent<FileReader>) => {\r\n                    resolve({\r\n                        filename: file.name,\r\n                        contents: e.target?.result\r\n                    });\r\n                }\r\n                reader.readAsText(file);\r\n            });\r\n        });\r\n        \r\n        // Click file input\r\n        fileInput.click();\r\n        \r\n        // Return result\r\n        return result;\r\n\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  3. Browser Window Control  ////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Opens an element in fullscreen.\r\n     * @param el\r\n     *  The element to fullscreen.\r\n     *  (Default: `document.body`)\r\n     */\r\n    public static fullscreen(el: HTMLElement = document.body) {\r\n        let cast = el as any;\r\n        if (cast.requestFullscreen) {\r\n            cast.requestFullscreen();\r\n        } else if (cast.webkitRequestFullscreen) {\r\n            // Safari\r\n            cast.webkitRequestFullscreen();\r\n        } else if (cast.msRequestFullscreen) {\r\n            // IE11\r\n            cast.msRequestFullscreen();\r\n        }\r\n    }\r\n    \r\n    \r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////\r\n//  Internal Types  ///////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\ntype TextFile = {\r\n    filename: string,\r\n    contents: string | ArrayBuffer | null | undefined\r\n}\r\n","import pkg from \"~/package.json\";\r\nimport Configuration from \"@/assets/builder.config\";\r\nimport { PageCommand } from \"./Commands/PageCommand\";\r\nimport { markRaw, ref, Ref } from \"vue\";\r\nimport {\r\n    DiagramValidator,\r\n    ValidationErrorResult,\r\n    ValidationWarningResult\r\n} from \"@/assets/scripts/DiagramValidator\";\r\nimport { \r\n    BlockDiagramSchema,\r\n    CameraLocation,\r\n    DiagramFactory,\r\n    DiagramObjectExport,\r\n    DiagramObjectModel,\r\n    PageModel\r\n} from \"@/assets/scripts/BlockDiagram\";\r\n\r\nexport class PageEditor {\r\n\r\n    /**\r\n     * The page's id.\r\n     */\r\n    public id: string;\r\n\r\n    /**\r\n     * The page.\r\n     */\r\n    public page: PageModel;\r\n\r\n    /**\r\n     * The editor's update trigger.\r\n     */\r\n    public trigger: Ref<number>;\r\n    \r\n    /**\r\n     * The editor's front-end view parameters.\r\n     */\r\n    public view: EditorViewParameters;\r\n\r\n    /**\r\n     * The editor's camera location.\r\n     */\r\n    public location: Ref<CameraLocation>;\r\n\r\n    /**\r\n     * The editor's undo stack.\r\n     */\r\n    private _undoStack: PageCommand[];\r\n\r\n    /**\r\n     * The editor's redo stack.\r\n     */\r\n    private _redoStack: PageCommand[];\r\n\r\n    /**\r\n     * The editor's page validator.\r\n     */\r\n    private _validator: DiagramValidator | undefined;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link PageEditor}.\r\n     * @param page\r\n     *  The page to manage.\r\n     */\r\n    private constructor(page: PageModel);\r\n\r\n    /**\r\n     * Creates a new {@link PageEditor}.\r\n     * @param page\r\n     *  The page to manage.\r\n     * @param location\r\n     *  The editor's camera location.\r\n     */\r\n    private constructor(page: PageModel, location: CameraLocation);\r\n    private constructor(page: PageModel, location?: CameraLocation) {\r\n        this.id = page.id;\r\n        this.page = page;\r\n        this.trigger = ref(0);\r\n        this.view = { x: 0, y:0, k: 1, w: 0, h: 0 };\r\n        this.location = ref(location ?? { x: 0, y: 0, k: 1 });\r\n        this._undoStack = [];\r\n        this._redoStack = [];\r\n        if(Configuration.validator) {\r\n            this._validator = new Configuration.validator();\r\n            this._validator.run(page);\r\n        }\r\n    }\r\n    \r\n\r\n    /**\r\n     * Returns a dummy {@link PageEditor}.\r\n     * @returns\r\n     *  A dummy {@link PageEditor}.\r\n     */\r\n    public static createDummy(): PageEditor {\r\n        return markRaw(new this(PageModel.createDummy()));\r\n    }\r\n\r\n    \r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  1. Command Execution  /////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Executes a page command.\r\n     * @param command\r\n     *  The command.\r\n     */\r\n    public execute(command: PageCommand) {\r\n        if(command.page !== this.page.id) {\r\n            throw new Error(\r\n                \"Command is not configured to operate on this page.\"\r\n            );\r\n        }\r\n        if(command.execute()) {\r\n            this._redoStack = [];\r\n            this._undoStack.push(command);\r\n        }\r\n        this._validator?.run(this.page);\r\n        this.trigger.value++;\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  2. Page History  //////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Undoes the last page command.\r\n     */\r\n    public undo() {\r\n        if(this._undoStack.length) {\r\n            this._undoStack.at(-1)!.undo();\r\n            this._redoStack.push(this._undoStack.pop()!);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Tests if the last command can be undone.\r\n     * @returns\r\n     *  True if the last command can be undone, false otherwise.\r\n     */\r\n    public canUndo(): boolean {\r\n        return 0 < this._undoStack.length;\r\n    }\r\n\r\n    /**\r\n     * Redoes the last undone page command.\r\n     */\r\n    public redo() {\r\n        if(this._redoStack.length) {\r\n            this._redoStack.at(-1)!.execute();\r\n            this._undoStack.push(this._redoStack.pop()!);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Tests if the last undone action can be redone.\r\n     * @returns\r\n     *  True if the last undone action can be redone, false otherwise.\r\n     */\r\n    public canRedo(): boolean {\r\n        return 0 < this._redoStack.length;\r\n    }   \r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  3. Page Validation  ///////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Tests if the page represents a valid diagram per the configured\r\n     * validator. If the application is not configured with a validator, `true`\r\n     * is returned by default.\r\n     * @returns\r\n     *  True if the page is valid, false otherwise.\r\n     */\r\n    public isValid() {\r\n        return this._validator?.inValidState() ?? true;\r\n    }\r\n\r\n    /**\r\n     * Returns the page's validation errors per the configured validator.\r\n     * @returns\r\n     *  The page's validation errors.\r\n     */\r\n    public getValidationErrors(): ValidationErrorResult[] {\r\n        return this._validator?.getErrors() ?? [];\r\n    }\r\n\r\n    /**\r\n     * Returns the page's validation warnings per the configured validator.\r\n     * @returns\r\n     *  The page's validation errors.\r\n     */\r\n    public getValidationWarnings(): ValidationWarningResult[] {\r\n        return this._validator?.getWarnings() ?? [];\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    //  4. Page Import & Export  //////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Creates a new page.\r\n     * @param schema\r\n     *  The page's internal schema.\r\n     * @returns\r\n     *  The page's editor.\r\n     */\r\n    public static async createNew(schema: BlockDiagramSchema): Promise<PageEditor> {\r\n        let factory = await DiagramFactory.create(schema);\r\n        let page = factory.createObject(schema.page_template) as PageModel;\r\n        return markRaw(new PageEditor(page));\r\n    }\r\n\r\n    /**\r\n     * Deserializes a page export.\r\n     * @param file\r\n     *  The page export.\r\n     * @returns\r\n     *  The page's editor.\r\n     */\r\n    public static async fromFile(file: string): Promise<PageEditor> {\r\n        \r\n        // Parse document\r\n        let page = JSON.parse(file) as PageExport;\r\n\r\n        // Initialize diagram factory\r\n        let factory = await DiagramFactory.create(page.schema);\r\n        \r\n        // Compile export index\r\n        let index = new Map<string, DiagramObjectExport>();\r\n        for(let obj of page.objects) {\r\n            index.set(obj.id, obj);\r\n        }\r\n\r\n        // Initialize page model\r\n        let pageExp = index.get(page.id)!\r\n        let pageObj = (function deserialize(\r\n            exp: DiagramObjectExport,\r\n            expIndex: Map<string, DiagramObjectExport>,\r\n            objIndex: Map<string, DiagramObjectModel>,\r\n            factory: DiagramFactory\r\n        ): DiagramObjectModel {\r\n\r\n            // Create object\r\n            if(!objIndex.has(exp.id)) {\r\n                let children: DiagramObjectModel[] = []\r\n                for(let id of exp.children) {\r\n                    children.push(deserialize(\r\n                        index.get(id)!,\r\n                        expIndex,\r\n                        objIndex,\r\n                        factory\r\n                    ));\r\n                }\r\n                let obj = factory.createObject({ ...exp, children });\r\n                objIndex.set(obj.id, obj);\r\n            }\r\n            \r\n            // Return object\r\n            return objIndex.get(exp.id)!;\r\n\r\n        })(pageExp, index, new Map(), factory) as PageModel;\r\n\r\n        // Recalculate layout\r\n        pageObj.recalculateLayout();\r\n\r\n        // Return editor\r\n        return markRaw(new PageEditor(pageObj, page.location));\r\n\r\n    }\r\n\r\n    /**\r\n     * Exports the page as a text file.\r\n     * @returns\r\n     *  The serialized page.\r\n     */\r\n    public toFile(): string {\r\n        // Calculate camera location\r\n        let v = this.view;\r\n        let location = {\r\n            x: ((v.w / 2) - v.x) / v.k,\r\n            y: ((v.h / 2) - v.y) / v.k,\r\n            k: v.k\r\n        }\r\n        // Compile export\r\n        let doc: PageExport = {\r\n            version: pkg.version,\r\n            id: this.page.id,\r\n            schema: this.page.factory.getSchema(),\r\n            objects: [...this.page.getSubtree()].map(o => o.toExport()),\r\n            location: location\r\n        }\r\n        return JSON.stringify(doc);\r\n    }\r\n\r\n    /**\r\n     * TODO:\r\n     * In the future, a document will bundle multiple pages together. One or\r\n     * more pages can be exported into a document bundle and multiple document\r\n     * bundles can be imported at once. Documents \"unwrap\" and dump their pages\r\n     * into the application. Documents contain no information other than the\r\n     * pages.  \r\n     */\r\n\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  Editor View Parameters  ///////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport type EditorViewParameters = {\r\n\r\n    /**\r\n     * The editor view's left x-coordinate.\r\n     */\r\n    x: number\r\n\r\n    /**\r\n     * The editor view's top y-coordinate.\r\n     */\r\n    y: number\r\n\r\n    /**\r\n     * The editor view's scale.\r\n     */\r\n    k: number\r\n\r\n    /**\r\n     * The editor view's width.\r\n     */\r\n    w: number\r\n\r\n    /**\r\n     * The editor view's height.\r\n     */\r\n    h: number\r\n\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  Internal Types  ///////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\ntype PageExport = {\r\n\r\n    /**\r\n     * The application's version number.\r\n     */\r\n    version: string\r\n    \r\n    /**\r\n     * The page's id.\r\n     */\r\n    id: string\r\n\r\n    /**\r\n     * The page's internal schema.\r\n     */\r\n    schema: BlockDiagramSchema\r\n\r\n    /**\r\n     * The page's diagram objects.\r\n     */\r\n    objects: DiagramObjectExport[]\r\n\r\n    /**\r\n     * The page's camera location.\r\n     */\r\n    location: CameraLocation\r\n\r\n}\r\n","import Configuration from \"@/assets/builder.config\";\r\nimport { AppCommand } from \"../AppCommand\";\r\nimport { ApplicationStore } from \"@/store/StoreTypes\";\r\nimport { Browser } from \"@/assets/scripts/Browser\";\r\nimport { PageEditor } from \"@/store/PageEditor\";\r\n\r\nexport class LoadFile extends AppCommand {\r\n\r\n    /**\r\n     * The page editor to load.\r\n     */\r\n    private _editor: PageEditor;\r\n\r\n\r\n    /**\r\n     * Loads a page editor into the application.\r\n     * @param context\r\n     *  The application context.\r\n     * @param file\r\n     *  The page editor to load.\r\n     */\r\n    constructor(context: ApplicationStore, file: PageEditor) {\r\n        super(context);\r\n        this._editor = file;\r\n    }\r\n\r\n\r\n    /**\r\n     * Loads an empty page file into the application.\r\n     * @param context\r\n     *  The application context.\r\n     * @returns\r\n     *  The {@link LoadFile} command.\r\n     */\r\n    public static async fromNew(context: ApplicationStore): Promise<LoadFile> {\r\n        let schema = structuredClone(Configuration.schema);\r\n        let page = await PageEditor.createNew(schema);\r\n        return new LoadFile(context, page);\r\n    }\r\n\r\n    /**\r\n     * Loads a page export into the application.\r\n     * @param context\r\n     *  The application context.\r\n     * @param file\r\n     *  The page export.\r\n     * @returns\r\n     *  The {@link LoadFile} command.\r\n     */\r\n    public static async fromFile(context: ApplicationStore, file: string): Promise<LoadFile> {\r\n        let page = await PageEditor.fromFile(file);\r\n        return new LoadFile(context, page);\r\n    }\r\n\r\n    /**\r\n     * Loads a page file from the file system, into the application.\r\n     * @param context\r\n     *  The application context.\r\n     * @returns\r\n     *  The {@link LoadFile} command.\r\n     */\r\n    public static async fromFileSystem(context: ApplicationStore): Promise<LoadFile> {\r\n        let file = (await Browser.openTextFileDialog()).contents as string;\r\n        let page = await PageEditor.fromFile(file);\r\n        return new LoadFile(context, page);\r\n    }\r\n\r\n    /**\r\n     * Executes the command.\r\n     */\r\n    public execute(): void {\r\n        // NOTE: For now, only one page will be loaded at a time.\r\n        this._context.pages.clear();\r\n        this._context.pages.set(this._editor.id, this._editor);\r\n        this._context.activePage = this._editor;\r\n    }\r\n\r\n}\r\n","import { AppCommand } from \"../AppCommand\";\r\nimport { ApplicationStore, AppSettings } from \"@/store/StoreTypes\";\r\n\r\nexport class LoadSettings extends AppCommand {\r\n\r\n    /**\r\n     * The application's settings.\r\n     */\r\n    private _settings: AppSettings;\r\n\r\n\r\n    /**\r\n     * Configures the application's settings.\r\n     * @param context\r\n     *  The application context.\r\n     * @param settings\r\n     *  The application's settings.\r\n     */\r\n    constructor(context: ApplicationStore, settings: AppSettings) {\r\n        super(context);\r\n        this._settings = settings;\r\n    }\r\n\r\n\r\n    /**\r\n     * Executes the command.\r\n     */\r\n    public execute(): void {\r\n        this._context.settings = this._settings; \r\n    }\r\n\r\n}\r\n","import { AppCommand } from \"../AppCommand\";\r\nimport { ApplicationStore } from \"@/store/StoreTypes\";\r\n\r\nexport class OpenHyperlink extends AppCommand {\r\n\r\n    /**\r\n     * The hyperlink's url.\r\n     */\r\n    private _url: string;\r\n\r\n\r\n    /**\r\n     * Opens an external hyperlink.\r\n     * @param context\r\n     *  The application context.\r\n     * @param url\r\n     *  The hyperlink's url.\r\n     */\r\n    constructor(context: ApplicationStore, url: string) {\r\n        super(context);\r\n        this._url = url;\r\n    }\r\n\r\n\r\n    /**\r\n     * Executes the command.\r\n     */\r\n    public execute(): void {\r\n        window.open(this._url, \"_blank\");\r\n    }\r\n\r\n}\r\n","import { AppCommand } from \"../AppCommand\";\r\nimport { ApplicationStore } from \"@/store/StoreTypes\";\r\nimport { Browser } from \"@/assets/scripts/Browser\";\r\nimport { PageEditor } from \"@/store/PageEditor\";\r\n\r\nexport class PublishPageToDevice extends AppCommand {\r\n\r\n    /**\r\n     * The page's editor.\r\n     */\r\n    private _editor: PageEditor;\r\n\r\n\r\n    /**\r\n     * Publishes a page to the user's file system.\r\n     * @param context\r\n     *  The application context.\r\n     * @param id\r\n     *  The id of the page.\r\n     */\r\n    constructor(context: ApplicationStore, id: string) {\r\n        super(context);\r\n        let editor = context.pages.get(id);\r\n        if(!editor) {\r\n            throw new Error(`Page '${ id }' not found.`);\r\n        } else if(!editor.isValid()) {\r\n            throw new Error(`Page '${ id }' is not valid.`);\r\n        } else if(!this._context.publisher) {\r\n            throw new Error(`App is not configured with a publisher.`);\r\n        } else {\r\n            this._editor = editor;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Executes the command.\r\n     */\r\n    public execute(): void {\r\n        Browser.downloadTextFile(\r\n            this._editor.page.props.toString(),\r\n            this._context.publisher!.publish(this._editor.page),\r\n            \"json\"\r\n        );\r\n    }\r\n\r\n}\r\n","import { AppCommand } from \"../AppCommand\";\r\nimport { ApplicationStore } from \"@/store/StoreTypes\";\r\nimport { Browser } from \"@/assets/scripts/Browser\";\r\nimport { PageImage } from \"@/assets/scripts/BlockDiagram/PageImage\";\r\nimport { PageEditor } from \"@/store/PageEditor\";\r\n\r\nexport class SavePageImageToDevice extends AppCommand {\r\n\r\n    /**\r\n     * The page's editor.\r\n     */\r\n    private _editor: PageEditor;\r\n\r\n\r\n    /**\r\n     * Saves a page as an image to the user's file system.\r\n     * @param context\r\n     *  The application context.\r\n     * @param id\r\n     *  The id of the page.\r\n     */\r\n    constructor(context: ApplicationStore, id: string) {\r\n        super(context);\r\n        let editor = context.pages.get(id);\r\n        if(!editor) {\r\n            throw new Error(`Page '${ id }' not found.`);\r\n        } else {\r\n            this._editor = editor;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Executes the command.\r\n     */\r\n    public execute(): void {\r\n        let d = this._context.settings.view.diagram;         \r\n        let e = this._context.settings.file.image_export;\r\n        let image = new PageImage(\r\n            this._editor.page,\r\n            e.padding,\r\n            d.display_grid,\r\n            d.display_shadows,\r\n            d.display_debug_mode\r\n        );\r\n        Browser.downloadImageFile(\r\n            this._editor.page.props.toString(),\r\n            image.capture()\r\n        );\r\n    }\r\n\r\n}\r\n","import Configuration from \"@/assets/builder.config\";\r\nimport { AppCommand } from \"../AppCommand\";\r\nimport { ApplicationStore } from \"@/store/StoreTypes\";\r\nimport { Browser } from \"@/assets/scripts/Browser\";\r\nimport { PageEditor } from \"@/store/PageEditor\";\r\n\r\nexport class SavePageToDevice extends AppCommand {\r\n\r\n    /**\r\n     * The page's editor.\r\n     */\r\n    private _editor: PageEditor;\r\n\r\n\r\n    /**\r\n     * Saves a page to the user's file system.\r\n     * @param context\r\n     *  The application context.\r\n     * @param id\r\n     *  The id of the page.\r\n     */\r\n    constructor(context: ApplicationStore, id: string) {\r\n        super(context);\r\n        let editor = context.pages.get(id);\r\n        if(!editor) {\r\n            throw new Error(`Page '${ id }' not found.`);\r\n        } else {\r\n            this._editor = editor;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Executes the command.\r\n     */\r\n    public execute(): void {\r\n        Browser.downloadTextFile(\r\n            this._editor.page.props.toString(),\r\n            this._editor.toFile(),\r\n            Configuration.file_type_extension\r\n        );\r\n    }\r\n\r\n}\r\n","import { AppCommand } from \"../AppCommand\";\r\nimport { ApplicationStore } from \"@/store/StoreTypes\";\r\nimport { Browser } from \"@/assets/scripts/Browser\";\r\nimport { PageImage } from \"@/assets/scripts/BlockDiagram/PageImage\";\r\nimport { PageEditor } from \"@/store/PageEditor\";\r\nimport { DiagramObjectModel } from \"@/assets/scripts/BlockDiagram\";\r\n\r\nexport class SaveSelectionImageToDevice extends AppCommand {\r\n\r\n    /**\r\n     * The page's editor.\r\n     */\r\n    private _editor: PageEditor;\r\n\r\n    /**\r\n     * The objects to capture. \r\n     */\r\n    private _objects: DiagramObjectModel[]\r\n\r\n\r\n    /**\r\n     * Saves a page's selection as an image to the user's file system.\r\n     * @param context\r\n     *  The application context.\r\n     * @param id\r\n     *  The id of the page.\r\n     */\r\n    constructor(context: ApplicationStore, id: string) {\r\n        super(context);\r\n        let editor = context.pages.get(id);\r\n        if(!editor) {\r\n            throw new Error(`Page '${ id }' not found.`);\r\n        } else {\r\n            this._editor = editor;\r\n        }\r\n        this._objects = [...editor.page.getSubtree(o => o.isSelected())];\r\n    }\r\n\r\n\r\n    /**\r\n     * Executes the command.\r\n     */\r\n    public execute(): void {\r\n        let d = this._context.settings.view.diagram;         \r\n        let e = this._context.settings.file.image_export;\r\n        let image = new PageImage(\r\n            this._editor.page,\r\n            e.padding,\r\n            d.display_grid,\r\n            d.display_shadows,\r\n            d.display_debug_mode\r\n        );\r\n        Browser.downloadImageFile(\r\n            this._editor.page.props.toString(),\r\n            image.capture(this._objects)\r\n        );\r\n    }\r\n\r\n}\r\n","import { AppCommand } from \"../AppCommand\";\r\nimport { ApplicationStore } from \"@/store/StoreTypes\";\r\nimport { EditorViewParameters, PageEditor } from \"@/store/PageEditor\";\r\n\r\nexport class SetEditorViewParams extends AppCommand {\r\n\r\n    /**\r\n     * The editor.\r\n     */\r\n    private _editor: PageEditor;\r\n\r\n    /**\r\n     * The new front-end view parameters.\r\n     */\r\n    private _params: EditorViewParameters;\r\n\r\n\r\n    /**\r\n     * Sets a page editor's front-end view parameters.\r\n     * @param context\r\n     *  The application context.\r\n     * @param id\r\n     *  The id of the page.\r\n     * @param params\r\n     *  The new front-end view parameters.\r\n     */\r\n    constructor(context: ApplicationStore, id: string, params: EditorViewParameters) {\r\n        super(context);\r\n        let editor = context.pages.get(id);\r\n        if(!editor) {\r\n            throw new Error(`Page '${ id }' not found.`);\r\n        } else {\r\n            this._editor = editor;\r\n        }\r\n        this._params = params;\r\n    }\r\n\r\n\r\n    /**\r\n     * Executes the command.\r\n     */\r\n    public execute(): void {\r\n        this._editor.view = this._params;\r\n    }\r\n\r\n}\r\n","import { AppCommand } from \"../AppCommand\";\r\nimport { ApplicationStore } from \"@/store/StoreTypes\";\r\n\r\nexport class SetRenderQuality extends AppCommand {\r\n\r\n    /**\r\n     * If the render quality should be high (true) or low (false).\r\n     */\r\n    private _highQuality: boolean;\r\n\r\n\r\n    /**\r\n     * Sets the diagram's render quality.\r\n     * @param context\r\n     *  The application context.\r\n     * @param highQuality\r\n     *  If the render quality should be high (true) or low (false).\r\n     */\r\n    constructor(context: ApplicationStore, highQuality: boolean) {\r\n        super(context);\r\n        this._highQuality = highQuality;\r\n    }\r\n\r\n\r\n    /**\r\n     * Executes the command.\r\n     */\r\n    public execute(): void {\r\n        let { diagram } = this._context.settings.view;\r\n        diagram.render_high_quality = this._highQuality;\r\n    }\r\n\r\n}\r\n","import { ApplicationStore } from \"@/store/StoreTypes\";\r\nimport { AppCommand } from \"../AppCommand\";\r\n\r\nexport class SwitchToFullscreen extends AppCommand {\r\n\r\n    /**\r\n     * Switches the application to fullscreen mode.\r\n     * @param context\r\n     *  The application context.\r\n     */\r\n    constructor(context: ApplicationStore) {\r\n        super(context);\r\n    }\r\n\r\n    /**\r\n     * Executes the command.\r\n     */\r\n    public execute(): void {\r\n        let cast = document.body as any;\r\n        if (cast.requestFullscreen) {\r\n            cast.requestFullscreen();\r\n        } else if (cast.webkitRequestFullscreen) {\r\n            // Safari\r\n            cast.webkitRequestFullscreen();\r\n        } else if (cast.msRequestFullscreen) {\r\n            // IE11\r\n            cast.msRequestFullscreen();\r\n        }\r\n    }\r\n\r\n}\r\n","import { AppCommand } from \"../AppCommand\";\r\nimport { ApplicationStore } from \"@/store/StoreTypes\";\r\n\r\nexport class ToggleDebugDisplay extends AppCommand {\r\n\r\n    /**\r\n     * Toggles the diagram's debug display.\r\n     * @param context\r\n     *  The application context.\r\n     */\r\n    constructor(context: ApplicationStore) {\r\n        super(context);\r\n    }\r\n\r\n\r\n    /**\r\n     * Executes the command.\r\n     */\r\n    public execute(): void {\r\n        let { diagram } = this._context.settings.view;\r\n        diagram.display_debug_mode = !diagram.display_debug_mode;\r\n    }\r\n\r\n}\r\n","import { AppCommand } from \"../AppCommand\";\r\nimport { ApplicationStore } from \"@/store/StoreTypes\";\r\n\r\nexport class ToggleGridDisplay extends AppCommand {\r\n\r\n    /**\r\n     * Toggle's the diagram's grid display.\r\n     * @param context\r\n     *  The application context.\r\n     */\r\n    constructor(context: ApplicationStore) {\r\n        super(context);\r\n    }\r\n\r\n\r\n    /**\r\n     * Executes the command.\r\n     */\r\n    public execute(): void {\r\n        let { diagram } = this._context.settings.view;\r\n        diagram.display_grid = !diagram.display_grid;\r\n    }\r\n\r\n}\r\n","import { AppCommand } from \"../AppCommand\";\r\nimport { ApplicationStore } from \"@/store/StoreTypes\";\r\n\r\nexport class ToggleShadowDisplay extends AppCommand {\r\n\r\n    /**\r\n     * Toggle's the diagram's shadow display.\r\n     * @param context\r\n     *  The application context.\r\n     */\r\n    constructor(context: ApplicationStore) {\r\n        super(context);\r\n    }\r\n\r\n\r\n    /**\r\n     * Executes the command.\r\n     */\r\n    public execute(): void {\r\n        let { diagram } = this._context.settings.view;\r\n        diagram.display_shadows = !diagram.display_shadows;\r\n    }\r\n\r\n}\r\n","import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-1e6f5773\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"logo\" }, \"AFB\", -1))\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_TitleBar = _resolveComponent(\"TitleBar\")!\n\n  return (_openBlock(), _createBlock(_component_TitleBar, {\n    class: \"app-title-bar-element\",\n    menus: _ctx.menus,\n    onSelect: _ctx.onItemSelect\n  }, {\n    icon: _withCtx(() => [\n      _hoisted_1\n    ]),\n    _: 1\n  }, 8, [\"menus\", \"onSelect\"]))\n}","import { renderSlot as _renderSlot, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withModifiers as _withModifiers, createBlock as _createBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, withCtx as _withCtx, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-63eba18e\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"icon\" }\nconst _hoisted_2 = [\"onMouseenter\", \"onClick\"]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ContextMenuListing = _resolveComponent(\"ContextMenuListing\")!\n  const _component_FocusBox = _resolveComponent(\"FocusBox\")!\n\n  return (_openBlock(), _createBlock(_component_FocusBox, {\n    class: \"title-bar-control\",\n    onUnfocus: _ctx.menuClose\n  }, {\n    default: _withCtx(() => [\n      _createElementVNode(\"li\", _hoisted_1, [\n        _renderSlot(_ctx.$slots, \"icon\", {}, undefined, true)\n      ]),\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.menus, (menu) => {\n        return (_openBlock(), _createElementBlock(\"li\", {\n          key: menu.text,\n          class: _normalizeClass({ focused: menu.text === _ctx.focusedMenu }),\n          onMouseenter: ($event: any) => (_ctx.menuEnter(menu.text)),\n          onClick: ($event: any) => (_ctx.menuOpen(menu.text))\n        }, [\n          _createElementVNode(\"p\", null, _toDisplayString(menu.text), 1),\n          (menu.text === _ctx.focusedMenu)\n            ? (_openBlock(), _createBlock(_component_ContextMenuListing, {\n                key: 0,\n                class: \"menu-listing\",\n                sections: menu.sections,\n                onSelect: _ctx.menuSelect,\n                onClick: _cache[0] || (_cache[0] = _withModifiers(() => {}, [\"stop\"]))\n              }, null, 8, [\"sections\", \"onSelect\"]))\n            : _createCommentVNode(\"\", true)\n        ], 42, _hoisted_2))\n      }), 128))\n    ]),\n    _: 3\n  }, 8, [\"onUnfocus\"]))\n}","import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, vShow as _vShow, withDirectives as _withDirectives, withModifiers as _withModifiers, normalizeStyle as _normalizeStyle, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-03d00514\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = [\"onMouseenter\"]\nconst _hoisted_2 = { class: \"item\" }\nconst _hoisted_3 = { class: \"text\" }\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"more-arrow\" }, null, -1))\nconst _hoisted_5 = {\n  key: 0,\n  class: \"submenu\"\n}\nconst _hoisted_6 = [\"onClick\"]\nconst _hoisted_7 = [\"href\"]\nconst _hoisted_8 = { class: \"check\" }\nconst _hoisted_9 = { class: \"text\" }\nconst _hoisted_10 = {\n  key: 0,\n  class: \"shortcut\"\n}\nconst _hoisted_11 = {\n  key: 0,\n  class: \"section-divider\"\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ContextMenuListing = _resolveComponent(\"ContextMenuListing\", true)!\n\n  return (_openBlock(), _createElementBlock(\"div\", {\n    class: \"context-menu-listing-control\",\n    style: _normalizeStyle(_ctx.offset),\n    onContextmenu: _cache[1] || (_cache[1] = _withModifiers(() => {}, [\"prevent\"]))\n  }, [\n    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.sections, (section, i) => {\n      return (_openBlock(), _createElementBlock(\"div\", {\n        class: \"section\",\n        key: section.id\n      }, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(section.items, (item) => {\n          return (_openBlock(), _createElementBlock(_Fragment, {\n            key: item.text\n          }, [\n            (item.type === _ctx.MenuType.Submenu)\n              ? (_openBlock(), _createElementBlock(\"li\", {\n                  key: 0,\n                  class: _normalizeClass({ disabled: item.disabled }),\n                  onMouseenter: ($event: any) => (_ctx.submenuEnter(item)),\n                  onMouseleave: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.submenuLeave && _ctx.submenuLeave(...args)))\n                }, [\n                  _createElementVNode(\"a\", _hoisted_2, [\n                    _createElementVNode(\"span\", _hoisted_3, _toDisplayString(item.text), 1),\n                    _hoisted_4\n                  ]),\n                  (item.text === _ctx.focusedSubMenu)\n                    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [\n                        _createVNode(_component_ContextMenuListing, {\n                          sections: item.sections,\n                          onSelect: _ctx.onChildItemSelect\n                        }, null, 8, [\"sections\", \"onSelect\"])\n                      ]))\n                    : _createCommentVNode(\"\", true)\n                ], 42, _hoisted_1))\n              : (_openBlock(), _createElementBlock(\"li\", {\n                  key: 1,\n                  class: _normalizeClass({ disabled: item.disabled }),\n                  onClick: ($event: any) => (_ctx.onItemClick(item))\n                }, [\n                  _createElementVNode(\"a\", {\n                    class: \"item\",\n                    href: item.disabled ? null : item.link,\n                    target: \"_blank\"\n                  }, [\n                    _withDirectives(_createElementVNode(\"span\", _hoisted_8, \"✓\", 512), [\n                      [_vShow, item.value]\n                    ]),\n                    _createElementVNode(\"span\", _hoisted_9, _toDisplayString(item.text), 1),\n                    (item.shortcut)\n                      ? (_openBlock(), _createElementBlock(\"span\", _hoisted_10, _toDisplayString(_ctx.formatShortcut(item.shortcut)), 1))\n                      : _createCommentVNode(\"\", true)\n                  ], 8, _hoisted_7)\n                ], 10, _hoisted_6))\n          ], 64))\n        }), 128)),\n        (i < _ctx.sections.length - 1)\n          ? (_openBlock(), _createElementBlock(\"a\", _hoisted_11))\n          : _createCommentVNode(\"\", true)\n      ]))\n    }), 128))\n  ], 36))\n}","///////////////////////////////////////////////////////////////////////////////\r\n//  1. Context Menu  //////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport enum MenuType {\r\n    Item    = 0,\r\n    Toggle  = 1,\r\n    Submenu = 2\r\n}\r\n\r\nexport type ContextMenu\r\n    = ContextMenuItem\r\n    | ContextMenuToggleItem\r\n    | ContextMenuSubmenu;\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  2. Generic Context Menu  //////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\ninterface ContextMenuBase<T> {\r\n    type: T\r\n    text: string\r\n    disabled?: boolean\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  3. Context Menu Section  //////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport interface ContextMenuSection {\r\n    id: string,\r\n    items: ContextMenu[]\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  4. Context Menu Types  ////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport interface ContextMenuItem extends ContextMenuBase<MenuType.Item> {\r\n    data: any\r\n    shortcut?: string,\r\n    keepMenuOpenOnSelect?: boolean\r\n}\r\n\r\nexport interface ContextMenuToggleItem extends ContextMenuBase<MenuType.Toggle> {\r\n    data: any\r\n    shortcut?: string,\r\n    value: boolean,\r\n    keepMenuOpenOnSelect?: boolean\r\n}\r\n\r\nexport interface ContextMenuSubmenu extends ContextMenuBase<MenuType.Submenu> {\r\n    sections : ContextMenuSection[]\r\n}\r\n","\r\nimport { defineComponent, PropType } from 'vue';\r\nimport { ContextMenu, ContextMenuItem, ContextMenuSection, MenuType } from \"@/assets/scripts/ContextMenuTypes\";\r\n\r\nconst KeyToText: { [key: string]: string } = {\r\n  Control    : \"Ctrl\",\r\n  Escape     : \"Esc\",\r\n  ArrowLeft  : \"←\",\r\n  ArrowUp    : \"↑\",\r\n  ArrowRight : \"→\",\r\n  ArrowDown  : \"↓\",\r\n  Delete     : \"Del\"\r\n}\r\n\r\nexport default defineComponent({\r\n  name: 'ContextMenuListing',\r\n  props: {\r\n    sections: {\r\n      type: Array as PropType<ContextMenuSection[]>,\r\n      required: true\r\n    },\r\n    forceInsideWindow: {\r\n      type: Boolean,\r\n      default: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      xOffset: 0,\r\n      yOffset: 0,\r\n      leaveTimeout: 500,\r\n      leaveTimeoutId: 0,\r\n      focusedSubMenu: null as string | null,\r\n      MenuType\r\n    }\r\n  },\r\n  computed: {\r\n\r\n    /**\r\n     * Returns the ContextMenuListing's offset styling.\r\n     * @returns\r\n     *  The ContextMenuListing's offset styling.\r\n     */\r\n    offset(): { marginTop: string, marginLeft: string } {\r\n      return {\r\n        marginTop: `${ this.yOffset }px`,\r\n        marginLeft: `${ this.xOffset }px`\r\n      }\r\n    }\r\n\r\n  },\r\n  methods: {\r\n    \r\n    /**\r\n     * Submenu mouse enter behavior.\r\n     * @param item\r\n     *  The hovered submenu item.\r\n     */\r\n    submenuEnter(item: ContextMenu) {\r\n      clearTimeout(this.leaveTimeoutId);\r\n      if(!item.disabled) {\r\n        this.focusedSubMenu = item.text;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Submenu mouse leave behavior.\r\n     */\r\n    submenuLeave() {\r\n      this.leaveTimeoutId = setTimeout(() => {\r\n        this.focusedSubMenu = null;\r\n      }, this.leaveTimeout)\r\n    },\r\n\r\n    /**\r\n     * Menu item selection behavior.\r\n     * @param item\r\n     *  The selected menu item.\r\n     */\r\n    onItemClick(item: ContextMenuItem) {\r\n      if(item.disabled)\r\n        return;\r\n      this.$emit(\"select\", item.data, !item.keepMenuOpenOnSelect);\r\n    },\r\n\r\n    /**\r\n     * Submenu item selection behavior.\r\n     * @param data\r\n     *  The menu item's data.\r\n     * @param closeSubmenu\r\n     *  If the active submenu should close.\r\n     */\r\n    onChildItemSelect(data: any, closeSubmenu: boolean) {\r\n      this.$emit(\"select\", data, closeSubmenu);\r\n      if(closeSubmenu) {\r\n        this.focusedSubMenu = null;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Formats a keyboard shortcut.\r\n     * @param shortcut\r\n     *  The keyboard shortcut to format.\r\n     * @returns\r\n     *  The formatted keyboard shortcut.\r\n     */\r\n    formatShortcut(shortcut?: string): string | undefined {\r\n      if(!shortcut) {\r\n        return shortcut;\r\n      } else {\r\n        return shortcut\r\n          .split(\"+\")\r\n          .map(c => c in KeyToText ? KeyToText[c] : c)\r\n          .join(\"+\");\r\n      }\r\n    }\r\n\r\n  },\r\n  emits: [\"select\"],\r\n  mounted() {\r\n    if(!this.forceInsideWindow) return;\r\n    // Offset submenu if outside of viewport\r\n    let viewWidth  = window.innerWidth;\r\n    let viewHeight = window.innerHeight;\r\n    let { top, left, bottom, right } = this.$el.getBoundingClientRect();\r\n    this.xOffset = right > viewWidth ? -Math.min(left, right - viewWidth) : 0;\r\n    this.yOffset = bottom > viewHeight ? -Math.min(top, bottom - viewHeight) : 0;\r\n  }\r\n});\r\n","import { render } from \"./ContextMenuListing.vue?vue&type=template&id=03d00514&scoped=true&ts=true\"\nimport script from \"./ContextMenuListing.vue?vue&type=script&lang=ts\"\nexport * from \"./ContextMenuListing.vue?vue&type=script&lang=ts\"\n\nimport \"./ContextMenuListing.vue?vue&type=style&index=0&id=03d00514&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\mcarenzo\\\\Desktop\\\\attack-flow-builder - Copy\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-03d00514\"]])\n\nexport default __exports__","\r\n// Dependencies\r\nimport { defineComponent, PropType } from 'vue';\r\nimport { ContextMenu } from \"@/assets/scripts/ContextMenuTypes\";\r\n// Components\r\nimport FocusBox from \"@/components/Containers/FocusBox.vue\";\r\nimport ContextMenuListing from \"./ContextMenuListing.vue\";\r\n\r\nexport default defineComponent({\r\n  name: 'TitleBar',\r\n  props: {\r\n    menus: {\r\n      type: Array as PropType<ContextMenu[]>,\r\n      default: []\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      focusedMenu: null as string | null\r\n    }\r\n  },\r\n  emits: [\"select\"],\r\n  methods: {\r\n    \r\n    /**\r\n     * Menu selection behavior.\r\n     * @param id\r\n     *  The id of the selected menu.\r\n     */\r\n    menuOpen(id: string) {\r\n      this.focusedMenu = id;\r\n    },\r\n\r\n    /**\r\n     * Menu mouse enter behavior.\r\n     * @param id\r\n     *  The id of the hovered menu.\r\n     */\r\n    menuEnter(id: string) {\r\n      if(this.focusedMenu === null)\r\n        return;\r\n      this.focusedMenu = id;\r\n    },\r\n\r\n    /**\r\n     * Menu close behavior.\r\n     */\r\n    menuClose() {\r\n      this.focusedMenu = null;\r\n    },\r\n\r\n    /**\r\n     * Menu item selection behavior.\r\n     * @param data\r\n     *  The menu item's data.\r\n     * @param closeSubmenu\r\n     *  If the active menu should close.\r\n\r\n     */\r\n    menuSelect(data: any, closeMenu: boolean) {\r\n      this.$emit(\"select\", data);\r\n      if(closeMenu) this.focusedMenu = null;\r\n    }\r\n\r\n  },\r\n  components: { FocusBox, ContextMenuListing }\r\n});\r\n","import { render } from \"./TitleBar.vue?vue&type=template&id=63eba18e&scoped=true&ts=true\"\nimport script from \"./TitleBar.vue?vue&type=script&lang=ts\"\nexport * from \"./TitleBar.vue?vue&type=script&lang=ts\"\n\nimport \"./TitleBar.vue?vue&type=style&index=0&id=63eba18e&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\mcarenzo\\\\Desktop\\\\attack-flow-builder - Copy\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-63eba18e\"]])\n\nexport default __exports__","\r\n// Dependencies\r\nimport { ContextMenu } from \"@/assets/scripts/ContextMenuTypes\";\r\nimport { CommandEmitter } from \"@/store/Commands/Command\";\r\nimport { defineComponent } from \"vue\";\r\nimport { mapGetters, mapMutations } from \"vuex\";\r\n// Components\r\nimport TitleBar from \"@/components/Controls/TitleBar.vue\";\r\n\r\nexport default defineComponent({\r\n  name: \"AppTitleBar\",\r\n  computed: {\r\n\r\n    /**\r\n     * Context Menu Store data\r\n     */\r\n    ...mapGetters(\"ContextMenuStore\", [\r\n      \"fileMenu\",\r\n      \"editMenu\",\r\n      \"layoutMenu\",\r\n      \"viewMenu\",\r\n      \"helpMenu\"\r\n    ]),\r\n    \r\n    /**\r\n     * Returns the application's menus.\r\n     * @returns\r\n     *  The application's menus.\r\n     */\r\n    menus(): ContextMenu[] {\r\n      return [\r\n        this.fileMenu, \r\n        this.editMenu,\r\n        this.layoutMenu,\r\n        this.viewMenu,\r\n        this.helpMenu\r\n      ]\r\n    }\r\n\r\n  },\r\n  methods: {\r\n\r\n    /**\r\n     * Application Store actions\r\n     */\r\n    ...mapMutations(\"ApplicationStore\", [\"execute\"]),\r\n\r\n    /**\r\n     * Menu item selection behavior.\r\n     * @param emitter\r\n     *  Menu item's command emitter.\r\n     */\r\n    async onItemSelect(emitter: CommandEmitter) {\r\n      try {\r\n        let cmd = emitter();\r\n        if(cmd instanceof Promise) {\r\n          let test = await cmd;\r\n          this.execute(test);\r\n        } else {\r\n          this.execute(cmd);\r\n        }\r\n      } catch(ex: any) {\r\n        console.error(ex);\r\n      }\r\n    }\r\n\r\n  },\r\n  components: { TitleBar }\r\n});\r\n","import { render } from \"./AppTitleBar.vue?vue&type=template&id=1e6f5773&scoped=true&ts=true\"\nimport script from \"./AppTitleBar.vue?vue&type=script&lang=ts\"\nexport * from \"./AppTitleBar.vue?vue&type=script&lang=ts\"\n\nimport \"./AppTitleBar.vue?vue&type=style&index=0&id=1e6f5773&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\mcarenzo\\\\Desktop\\\\attack-flow-builder - Copy\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1e6f5773\"]])\n\nexport default __exports__","import { renderSlot as _renderSlot, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_HotkeyBox = _resolveComponent(\"HotkeyBox\")!\n\n  return (_openBlock(), _createBlock(_component_HotkeyBox, {\n    class: \"app-hotkey-box-element\",\n    hotkeys: _ctx.hotkeys,\n    global: true,\n    onFire: _ctx.onHotkeyFired\n  }, {\n    default: _withCtx(() => [\n      _renderSlot(_ctx.$slots, \"default\")\n    ]),\n    _: 3\n  }, 8, [\"hotkeys\", \"onFire\"]))\n}","import { renderSlot as _renderSlot, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-5e99f3da\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = {\n  class: \"hotkey-box-container\",\n  tabindex: \"0\"\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _renderSlot(_ctx.$slots, \"default\", {}, undefined, true)\n  ]))\n}","///////////////////////////////////////////////////////////////////////////////\r\n//  1. HotkeyObserver  ////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport class HotkeyObserver<T> {\r\n\r\n    /**\r\n     * The advance key state function, bound to the current object.\r\n     */\r\n    private _boundAdvanceKeyState: (e: KeyboardEvent) => void;\r\n\r\n     /**\r\n      * The reverse key state function, bound to the current object.\r\n      */\r\n    private _boundReverseKeyState: (e: KeyboardEvent) => void;\r\n\r\n    /**\r\n     * The function to call when a hotkey sequence is matched.\r\n     */\r\n    private _callback: (command: T) => void;\r\n    \r\n    /**\r\n     * The hotkey observer's call loop.\r\n     */\r\n    private _callLoop: number | undefined;\r\n\r\n    /**\r\n     * The DOM element the hotkey observer is watching.\r\n     */\r\n    private _container: HTMLElement | null;\r\n\r\n    /**\r\n     * The hotkey observer's hotkey-id-to-item map.\r\n     */\r\n    private _hotkeyIdMap: Map<string, Hotkey<T>>;\r\n\r\n    /**\r\n     * The current key state.\r\n     */\r\n    private _keyState: string;\r\n    \r\n    /**\r\n     * The amount of time (in milliseconds) a hotkey sequence needs to be held\r\n     * before its raised.\r\n     */\r\n    private _recognitionDelay: number;\r\n\r\n\r\n    /**\r\n     * Creates a new {@link HotkeyObserver}.\r\n     * @param callback\r\n     *  The function to call once a hotkey sequence is triggered.\r\n     * @param recognitionDelay\r\n     *  The time to wait (in milliseconds) before firing the hotkey callback.\r\n     */\r\n    constructor(callback: (command: T) => void, recognitionDelay: number) {\r\n        this._boundAdvanceKeyState = this.advanceKeyState.bind(this);\r\n        this._boundReverseKeyState = this.reverseKeyState.bind(this);\r\n        this._callback = callback;\r\n        this._callLoop = undefined;\r\n        this._container = null;\r\n        this._hotkeyIdMap = new Map();\r\n        this._keyState = \".\";\r\n        this._recognitionDelay = recognitionDelay;\r\n    }\r\n\r\n\r\n    /**\r\n     * Binds the HotkeyObserver to an HTML element.\r\n     * @param container\r\n     *  The HTML element to bind to.\r\n     */\r\n    public observe(container: HTMLElement) {\r\n        this._container = container;\r\n        this._container.addEventListener(\"keydown\", this._boundAdvanceKeyState);\r\n        this._container.addEventListener(\"keyup\", this._boundReverseKeyState);\r\n    }\r\n\r\n    /**\r\n     * Unbinds the HotkeyObserver from the HTML element.\r\n     */\r\n    public disconnect() {\r\n        this._container?.removeEventListener(\"keydown\", this._boundAdvanceKeyState);\r\n        this._container?.removeEventListener(\"keyup\", this._boundReverseKeyState);\r\n    }\r\n\r\n    /**\r\n     * Configures the hotkeys to listen for.\r\n     * @param keyMap\r\n     *  An array of hotkeys.\r\n     * @throws { OverlappingHotkeysError }\r\n     *  If any hotkey sequences overlap with each other.\r\n     */\r\n    public setHotkeys(keyMap: Hotkey<T>[]) {\r\n        this._hotkeyIdMap = new Map<string, Hotkey<T>>();\r\n        for (let item of keyMap) {\r\n            if (item.shortcut === \"\") continue;\r\n            // Derive hotkey id\r\n            let hotkeyId = this.keySequenceToHotKeyId(item.shortcut);\r\n            // Ensure hotkey id doesn't overlap with others \r\n            for (let id of this._hotkeyIdMap.keys()) {\r\n                if (id.startsWith(hotkeyId) || hotkeyId.startsWith(id)) {\r\n                    throw new OverlappingHotkeysError(\r\n                        `Overlapping key sequences ('${\r\n                            id\r\n                        }' and '${\r\n                            hotkeyId\r\n                        }') are not allowed.`\r\n                    );\r\n                }\r\n            }\r\n            // Add hotkey\r\n            this._hotkeyIdMap.set(hotkeyId, item);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Tests if a hotkey sequence is active.\r\n     * @param sequence\r\n     *  The hotkey sequence.\r\n     * @param strict\r\n     *  [true]\r\n     *   The active keys must match the provided hotkey sequence exactly.\r\n     *  [false]\r\n     *   The active keys only need to contain the provided hotkey sequence.\r\n     *  (Default: true)\r\n     * @returns\r\n     *  True if the provided hotkey sequence is active, false otherwise.\r\n     */\r\n    public isHotkeyActive(sequence: string, strict: boolean = true): boolean {\r\n        let id = this.keySequenceToHotKeyId(sequence);\r\n        return strict ? this._keyState === id : this._keyState.includes(id);\r\n    }\r\n\r\n    /**\r\n     * Adds a key event to the current key state.\r\n     * @param e\r\n     *  The keydown event.\r\n     */\r\n    private advanceKeyState(e: KeyboardEvent) {\r\n        let key = e.key.toLocaleLowerCase();\r\n        // Only acknowledge a key once\r\n        if (this._keyState.endsWith(`.${ key }.`))\r\n            return;\r\n        // Advanced current key state\r\n        clearTimeout(this._callLoop);\r\n        this._keyState += `${ key }.`\r\n        // If inside input field, ignore hotkeys\r\n        if((e.target as any).tagName === \"INPUT\")\r\n            return;\r\n        // Check key state\r\n        if (this._hotkeyIdMap.has(this._keyState)) {\r\n            let hotkey = this._hotkeyIdMap.get(this._keyState)!;\r\n            // Disable browser default behavior if not requested\r\n            if (!hotkey.allowBrowserBehavior)\r\n                e.preventDefault();\r\n            // Execute shortcut\r\n            this.triggerHotkey(hotkey);\r\n        } else {\r\n            // If no key matched, block browser behavior by default\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes a key event from the current key state. \r\n     * @param e\r\n     *  The keyup event.\r\n     */\r\n    private reverseKeyState(e: KeyboardEvent) {\r\n        clearTimeout(this._callLoop);\r\n        let key = e.key.toLocaleLowerCase();\r\n        this._keyState = this._keyState.replace(`.${ key }.`, \".\");\r\n    }\r\n\r\n    /**\r\n     * Triggers the provided hotkey.\r\n     * @param hotkey\r\n     *  The hotkey item to trigger.\r\n     */\r\n    private triggerHotkey(hotkey: Hotkey<T>) {\r\n        if (!hotkey.data || hotkey.disabled)\r\n            return;\r\n        this._callLoop = setTimeout(() => {\r\n            // Fire hotkey\r\n            this._callback(hotkey.data!);\r\n            if (!hotkey.repeat) {\r\n                return;\r\n            }\r\n            // Schedule repeat call loop\r\n            let repeat = function (this: any) {\r\n                this._callback(hotkey.data!);\r\n                // Schedule next call\r\n                this._callLoop = setTimeout(\r\n                    repeat, hotkey.repeat!.interval\r\n                );\r\n            }.bind(this);\r\n            // Kick off call loop\r\n            this._callLoop = setTimeout(\r\n                repeat, hotkey.repeat!.delay\r\n            );\r\n        }, this._recognitionDelay);\r\n    }\r\n\r\n    /**\r\n     * Converts a key sequence to its hotkey id.\r\n     * @param sequence\r\n     *  The sequence to evaluate.\r\n     * @returns\r\n     *  The sequence's hotkey id.\r\n     */\r\n    private keySequenceToHotKeyId(sequence: string): string {\r\n        let hotkeyId = sequence\r\n            .toLocaleLowerCase()\r\n            .replace(/\\s+/g, '')\r\n            .split(\"+\")\r\n            .join(\".\");\r\n        return `.${hotkeyId}.`\r\n    }\r\n\r\n}\r\n\r\nexport class OverlappingHotkeysError extends Error {\r\n\r\n    /**\r\n     * Creates a new OverlappingHotkeysError.\r\n     * @param message\r\n     *  The error message.\r\n     */\r\n    constructor(message: string) {\r\n        super(message);\r\n    }\r\n\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  2. Hotkey  ////////////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport interface Hotkey<T> {\r\n\r\n    /**\r\n     * The hotkey's shortcut.\r\n     */\r\n    shortcut: string\r\n\r\n    /**\r\n     * The hotkey's data.\r\n     */\r\n    data?: T\r\n\r\n    /**\r\n     * The hotkey's repeat interval.\r\n     */\r\n    repeat?: {\r\n\r\n        /**\r\n         * The amount of time to wait (in milliseconds) before executing the\r\n         * interval.\r\n         */\r\n        delay: number\r\n\r\n        /**\r\n         * The amount of time (in milliseconds) between each successive call.\r\n         */\r\n        interval: number\r\n    },\r\n\r\n    /**\r\n     * If the hotkey is disabled.\r\n     */\r\n    disabled?: boolean\r\n\r\n    /**\r\n     * If the browser's default behavior should be permitted.\r\n     */\r\n    allowBrowserBehavior?: boolean\r\n\r\n}\r\n","\r\nimport { Hotkey, HotkeyObserver } from \"@/assets/scripts/HotkeyObserver\";\r\nimport { defineComponent, markRaw, PropType } from \"vue\";\r\n\r\nexport default defineComponent({\r\n  name: \"HotkeyBox\",\r\n  provide() {\r\n    return {\r\n\r\n      /**\r\n       * Tests if a hotkey sequence is active.\r\n       * @param sequence\r\n       *  The hotkey sequence.\r\n       * @param strict\r\n       *  [true]\r\n       *   The active keys must match the provided hotkey sequence exactly.\r\n       *  [false]\r\n       *   The active keys only need to contain the provided hotkey sequence.\r\n       *  (Default: true)\r\n       * @returns\r\n       *  True if the provided hotkey sequence is active, false otherwise.\r\n       */\r\n      isHotkeyActive: (sequence: string, strict: boolean = true): boolean => {\r\n        return this.observer.isHotkeyActive(sequence, strict)\r\n      }\r\n\r\n    }\r\n  },\r\n  props: {\r\n    hotkeys: {\r\n      type: Array as PropType<Hotkey<any>[]>,\r\n      default: [],\r\n    },\r\n    global: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      observer: markRaw(new HotkeyObserver(\r\n        (id: string, data?: any) => this.$emit(\"fire\", id, data)\r\n      , 0))\r\n    };\r\n  },\r\n  emits: [\"fire\"],\r\n  watch: {\r\n    // On hotkeys change\r\n    hotkeys() {\r\n      this.observer.setHotkeys(this.hotkeys);\r\n    },\r\n  },\r\n  mounted() {\r\n    this.observer.observe(this.global ? document.body : this.$el);\r\n    this.observer.setHotkeys(this.hotkeys);\r\n  },\r\n  unmounted() {\r\n    this.observer.disconnect();\r\n  }\r\n});\r\n","import { render } from \"./HotkeyBox.vue?vue&type=template&id=5e99f3da&scoped=true&ts=true\"\nimport script from \"./HotkeyBox.vue?vue&type=script&lang=ts\"\nexport * from \"./HotkeyBox.vue?vue&type=script&lang=ts\"\n\nimport \"./HotkeyBox.vue?vue&type=style&index=0&id=5e99f3da&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\mcarenzo\\\\Desktop\\\\attack-flow-builder - Copy\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5e99f3da\"]])\n\nexport default __exports__","\r\n// Dependencies\r\nimport { Hotkey } from \"@/assets/scripts/HotkeyObserver\";\r\nimport { defineComponent } from \"vue\";\r\nimport { Command, CommandEmitter } from \"@/store/Commands/Command\";\r\nimport { mapGetters, mapMutations } from \"vuex\";\r\n// Components\r\nimport HotkeyBox from \"@/components/Containers/HotkeyBox.vue\";\r\n\r\nexport default defineComponent({\r\n  name: \"AppHotkeyBox\",\r\n  computed: {\r\n\r\n    /**\r\n     * Hotkey Store data\r\n     */\r\n    ...mapGetters(\"HotkeyStore\", [\r\n      \"nativeHotkeys\",\r\n      \"fileHotkeys\",\r\n      \"editHotKeys\",\r\n      \"layoutHotkeys\",\r\n      \"viewHotkeys\"\r\n    ]),\r\n    \r\n    /**\r\n     * Returns the application's hotkeys.\r\n     * @returns\r\n     *  The application's hotkeys.\r\n     */\r\n    hotkeys(): Hotkey<() => Command>[] {\r\n      return [\r\n        ...this.nativeHotkeys, \r\n        ...this.fileHotkeys,\r\n        ...this.editHotKeys,\r\n        ...this.layoutHotkeys,\r\n        ...this.viewHotkeys\r\n      ]\r\n    }\r\n\r\n  },\r\n  methods: {\r\n\r\n    /**\r\n     * Application Store mutations\r\n     */\r\n    ...mapMutations(\"ApplicationStore\", [\"execute\"]),\r\n\r\n    /**\r\n     * Hotkey fired behavior.\r\n     * @param emitter\r\n     *  The hotkey's command emitter.\r\n     */\r\n    async onHotkeyFired(emitter: CommandEmitter) {\r\n      try {\r\n        let cmd = emitter();\r\n        if(cmd instanceof Promise) {\r\n          let test = await cmd;\r\n          this.execute(test);\r\n        } else {\r\n          this.execute(cmd);\r\n        }\r\n      } catch(ex: any) {\r\n        console.error(ex);\r\n      }\r\n    }\r\n\r\n  },\r\n  components: { HotkeyBox }\r\n});\r\n","import { render } from \"./AppHotkeyBox.vue?vue&type=template&id=ce1df532&ts=true\"\nimport script from \"./AppHotkeyBox.vue?vue&type=script&lang=ts\"\nexport * from \"./AppHotkeyBox.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"C:\\\\Users\\\\mcarenzo\\\\Desktop\\\\attack-flow-builder - Copy\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { PageCommand } from \"../PageCommand\";\r\nimport {\r\n    DiagramObjectModel,\r\n    DiagramObjectModelError\r\n} from \"@/assets/scripts/BlockDiagram\";\r\n\r\nexport class ReorderObject extends PageCommand {\r\n\r\n    /**\r\n     * The object to reorder.\r\n     */\r\n    private _object: DiagramObjectModel;\r\n\r\n    /**\r\n     * The object's parent.\r\n     */\r\n    private _parent: DiagramObjectModel;\r\n\r\n    /**\r\n     * The object's previous location in its parent.\r\n     */\r\n    private _prevIndex: number;\r\n\r\n    /**\r\n     * The object's next location in its parent.\r\n     */\r\n    private _nextIndex: number;\r\n\r\n\r\n    /**\r\n     * Reorders an object's position in its parent.\r\n     * @param object\r\n     *  The object to reorder.\r\n     * @param order\r\n     *  The object's new ordering.\r\n     */\r\n    constructor(object: DiagramObjectModel, order: Order) {\r\n        if(!object.parent) {\r\n            throw new DiagramObjectModelError(\r\n                \"Object must have a parent.\", object\r\n            );\r\n        }\r\n        super(object.root.id);\r\n        this._object = object;\r\n        this._parent = object.parent;\r\n        this._prevIndex = object.getIndexInParent();\r\n        switch(order) {\r\n            case Order.Top:\r\n                this._nextIndex = object.children.length;\r\n                break;\r\n            case Order.OneAbove:\r\n                this._nextIndex = this._prevIndex + 1;\r\n                break;\r\n            case Order.OneBelow:\r\n                this._nextIndex = this._prevIndex - 1;\r\n                break;\r\n            case Order.Bottom:\r\n                this._nextIndex = 0;\r\n                break;\r\n        }\r\n    }\r\n\r\n    \r\n    /**\r\n     * Executes the page command.\r\n     * @returns\r\n     *  True if the command should be recorded, false otherwise.\r\n     */\r\n    public execute(): boolean {\r\n        this._parent.reorderChild(this._object.id, this._nextIndex);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Undoes the page command.\r\n     */\r\n    public undo() {\r\n        this._parent.reorderChild(this._object.id, this._prevIndex);\r\n    }\r\n    \r\n}\r\n\r\nexport enum Order {\r\n    Top      = 0,\r\n    OneAbove = 2,\r\n    OneBelow = 3,\r\n    Bottom   = 4,\r\n}\r\n","import { resolveComponent as _resolveComponent, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ContextMenu = _resolveComponent(\"ContextMenu\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", {\n    class: \"block-diagram-element\",\n    style: _normalizeStyle(_ctx.cursorStyle)\n  }, [\n    (_ctx.menu.show)\n      ? (_openBlock(), _createBlock(_component_ContextMenu, {\n          key: 0,\n          class: \"block-diagram-menu\",\n          style: _normalizeStyle(_ctx.menuStyle),\n          sections: _ctx.menuOptions,\n          onSelect: _ctx.onItemSelect,\n          onUnfocus: _ctx.closeContextMenu\n        }, null, 8, [\"style\", \"sections\", \"onSelect\", \"onUnfocus\"]))\n      : _createCommentVNode(\"\", true)\n  ], 4))\n}","export abstract class PageCommand  {\r\n\r\n    /**\r\n     * The null page's id.\r\n     */\r\n    public static NullPage = \"$__null_page\"\r\n\r\n    /**\r\n     * The page the command is operating on.\r\n     */\r\n    public page: string;\r\n\r\n    /**\r\n     * Creates a new {@link PageCommand}.\r\n     * @param page\r\n     *  The page the command is operating on.\r\n     */\r\n    public constructor(page: string) {\r\n        this.page = page;\r\n    }\r\n\r\n    /**\r\n     * Executes a page command.\r\n     * @returns\r\n     *  True if the command should be recorded, false otherwise.\r\n     */\r\n    public abstract execute(): boolean;\r\n\r\n    /**\r\n     * Undoes the page command.\r\n     */\r\n    public abstract undo(): void;\r\n\r\n}\r\n","import { PageCommand } from \"../PageCommand\";\r\nimport {\r\n    DiagramAnchorModel,\r\n    DiagramLineModel,\r\n    DiagramObjectModel,\r\n    Hover, Select\r\n} from \"@/assets/scripts/BlockDiagram\";\r\n\r\nexport class AddLineObject extends PageCommand {\r\n\r\n    /**\r\n     * The line object to add.\r\n     */\r\n    private _object: DiagramLineModel;\r\n\r\n    /**\r\n     * The parent object.\r\n     */\r\n    private _parent: DiagramObjectModel;\r\n\r\n    /**\r\n     * The line's source anchor.\r\n     */\r\n    private _source: DiagramAnchorModel;\r\n\r\n    /**\r\n     * The line's target anchor.\r\n     */\r\n    private _target: DiagramAnchorModel | undefined;\r\n\r\n\r\n    /**\r\n     * Adds a line object to a parent object.\r\n     * @param object\r\n     *  The line object to add.\r\n     * @param parent\r\n     *  The parent object.\r\n     * @param source\r\n     *  The line's source anchor.\r\n     * @param target\r\n     *  The line's target anchor.\r\n     */\r\n    constructor(\r\n        object: DiagramLineModel,\r\n        parent: DiagramObjectModel,\r\n        source: DiagramAnchorModel,\r\n        target?: DiagramAnchorModel\r\n    ) {\r\n        super(parent.root.id);\r\n        this._object = object;\r\n        this._parent = parent;\r\n        this._source = source;\r\n        this._target = target;\r\n    }\r\n    \r\n\r\n    /**\r\n     * Executes the page command.\r\n     * @returns\r\n     *  True if the command should be recorded, false otherwise.\r\n     */\r\n    public execute(): boolean {\r\n        // Add line\r\n        this._parent.addChild(this._object);\r\n        // Connect source\r\n        let { xMid, yMid } = this._source.boundingBox;\r\n        this._object.srcEnding.moveTo(xMid, yMid);\r\n        this._source.addChild(this._object.srcEnding);\r\n        // Connect target\r\n        if(this._target) {\r\n            let { xMid, yMid } = this._target.boundingBox;\r\n            this._object.trgEnding.moveTo(xMid, yMid);\r\n            this._target.addChild(this._object.trgEnding);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Undoes the page command.\r\n     */\r\n    public undo() {\r\n        this._object.setHover(Hover.Off);\r\n        this._object.setSelect(Select.False);\r\n        // Disconnect source\r\n        this._source.removeChild(this._object.srcEnding);\r\n        // Disconnect target\r\n        if(this._target) {\r\n            this._target.removeChild(this._object.trgEnding);\r\n        }\r\n        // Remove line\r\n        this._parent.removeChild(this._object);\r\n    }\r\n\r\n}\r\n","import { PageCommand } from \"../PageCommand\";\r\nimport { DiagramObjectModel, Hover, Select } from \"@/assets/scripts/BlockDiagram\";\r\n\r\nexport class AddObject extends PageCommand {\r\n\r\n    /**\r\n     * The object to add.\r\n     */\r\n    private _object: DiagramObjectModel;\r\n\r\n    /**\r\n     * The parent object.\r\n     */\r\n    private _parent: DiagramObjectModel;\r\n\r\n    \r\n    /**\r\n     * Adds an object to a parent object.\r\n     * @param object\r\n     *  The object to add.\r\n     * @param parent\r\n     *  The parent object.\r\n     */\r\n    constructor(object: DiagramObjectModel, parent: DiagramObjectModel) {\r\n        super(parent.root.id);\r\n        this._object = object;\r\n        this._parent = parent;\r\n    }\r\n    \r\n\r\n    /**\r\n     * Executes the page command.\r\n     * @returns\r\n     *  True if the command should be recorded, false otherwise.\r\n     */\r\n    public execute(): boolean {\r\n        this._parent.addChild(this._object);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Undoes the page command.\r\n     */\r\n    public undo() {\r\n        this._object.setHover(Hover.Off);\r\n        this._object.setSelect(Select.False);\r\n        // Skip check for external attachments. If object entered the diagram\r\n        // with external attachments it should leave with them too.\r\n        this._parent.removeChild(this._object, true, false);\r\n    }\r\n\r\n}\r\n","import { PageCommand } from \"../PageCommand\";\r\nimport {\r\n    DiagramAnchorableModel,\r\n    DiagramAnchorModel,\r\n    DiagramObjectModelError\r\n} from \"@/assets/scripts/BlockDiagram\";\r\n\r\nexport class AttachObject extends PageCommand {\r\n    \r\n    /**\r\n     * The object's anchor.\r\n     */\r\n    private _anchor: DiagramAnchorModel;\r\n    \r\n    /**\r\n     * The object.\r\n     */\r\n    private _object: DiagramAnchorableModel;\r\n\r\n    \r\n    /**\r\n     * Attaches an object to an anchor.\r\n     * @param anchor\r\n     *  The object's anchor.\r\n     * @param object\r\n     *  The object.\r\n     */\r\n    constructor(anchor: DiagramAnchorModel, object: DiagramAnchorableModel) {\r\n        if(anchor.root.id !== object.root.id) {\r\n            throw new DiagramObjectModelError(\r\n                `Objects must originate from the same root.`\r\n            );\r\n        }\r\n        super(anchor.root.id);\r\n        this._object = object;\r\n        this._anchor = anchor;\r\n    }\r\n    \r\n\r\n    /**\r\n     * Executes the page command.\r\n     * @returns\r\n     *  True if the command should be recorded, false otherwise.\r\n     */\r\n    public execute(): boolean {\r\n        this._anchor.addChild(this._object);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Undoes the page command.\r\n     */\r\n    public undo() {\r\n        this._anchor.removeChild(this._object);\r\n    }\r\n\r\n}\r\n","import { PageCommand } from \"../PageCommand\";\r\nimport { ListProperty, Property } from \"@/assets/scripts/BlockDiagram\";\r\n\r\nexport class CreateSubproperty extends PageCommand {\r\n\r\n    /**\r\n     * The property to modify.\r\n     */\r\n    private _property: ListProperty;\r\n\r\n    /**\r\n     * The subproperty's id.\r\n     */\r\n    private _id: string | null;\r\n\r\n    /**\r\n     * The subproperty.\r\n     */\r\n    private _subproperty: Property;\r\n\r\n    \r\n    /**\r\n     * Creates a new subproperty and adds it to a {@link ListProperty}.\r\n     * @param property\r\n     *  The {@link ListProperty}.\r\n     */\r\n    constructor(property: ListProperty) {\r\n        let root = property.root;\r\n        if(!root) {\r\n            throw new Error(\"Property does not have a root.\")\r\n        }\r\n        super(root.object.root.id);\r\n        this._id = null;\r\n        this._property = property;\r\n        this._subproperty = Property.create(property, property.descriptor.form);\r\n    }\r\n    \r\n\r\n    /**\r\n     * Executes the page command.\r\n     * @returns\r\n     *  True if the command should be recorded, false otherwise.\r\n     */\r\n    public execute(): boolean {\r\n        this._id = this._property.addProperty(this._subproperty);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Undoes the page command.\r\n     */\r\n    public undo() {\r\n        if(this._id) {\r\n            this._property.removeProperty(this._id);\r\n        }\r\n    }\r\n\r\n}\r\n","import { PageCommand } from \"../PageCommand\";\r\nimport { DiagramObjectModelError } from \"@/assets/scripts/BlockDiagram\";\r\n\r\nexport class GroupCommand extends PageCommand {\r\n\r\n    /**\r\n     * The list of commands in order of application.\r\n     */\r\n    private _commands: PageCommand[];\r\n    \r\n\r\n    /**\r\n     * Executes a series of page commands.\r\n     */\r\n    constructor() {\r\n        super(PageCommand.NullPage);\r\n        this._commands = [];\r\n    }\r\n    \r\n\r\n    /**\r\n     * Adds a command to the group.\r\n     * @param command\r\n     *  The command.\r\n     */\r\n    public add(command: PageCommand) {\r\n        if(this.page !== PageCommand.NullPage && this.page !== command.page) {\r\n            throw new DiagramObjectModelError(\r\n                `Commands must operate on the same page.`\r\n            );\r\n        }\r\n        this.page = command.page;\r\n        this._commands.push(command);\r\n    }\r\n\r\n    /**\r\n     * Applies the set of commands.\r\n     * @returns\r\n     *  True if the command should be recorded, false otherwise.\r\n     */\r\n    public execute(): boolean {\r\n        let i = 0;\r\n        let l = this._commands.length;\r\n        let record = false;\r\n        try {\r\n            for(; i < l; i++) {\r\n                let r = this._commands[i].execute();;\r\n                record ||= r;\r\n            }\r\n        } catch (ex) {\r\n            // Rollback on failure\r\n            for(i--; 0 <= i; i--) {\r\n                this._commands[i].undo();\r\n            }\r\n            throw ex;\r\n        }\r\n        return record;\r\n    }\r\n\r\n    /**\r\n     * Reverts the set of commands.\r\n     */\r\n    public undo() {\r\n        let l = this._commands.length - 1;\r\n        for(let i = l; 0 <= i; i--) {\r\n            this._commands[i].undo();\r\n        }\r\n    }\r\n\r\n}\r\n","import { PageCommand } from \"../PageCommand\";\r\nimport { \r\n    DiagramAnchorableModel,\r\n    DiagramAnchorModel,\r\n    DiagramObjectModel,\r\n    DiagramObjectModelError\r\n} from \"@/assets/scripts/BlockDiagram\";\r\n\r\nexport class RemoveObjects extends PageCommand {\r\n    \r\n    /**\r\n     * The set of objects to remove.\r\n     */\r\n    private _items: {\r\n        index: number,\r\n        parent: DiagramObjectModel,\r\n        object: DiagramObjectModel\r\n    }[];\r\n\r\n    /**\r\n     * The set of external attachments.\r\n     */\r\n    private _links: { \r\n        index: number,\r\n        anchor: DiagramAnchorModel,\r\n        object: DiagramAnchorableModel\r\n    }[]; \r\n\r\n\r\n    /**\r\n     * Removes one or more objects from their parent object.\r\n     * \r\n     * NOTE:\r\n     * Do NOT perform more than one `RemoveObjects` in a single transaction.\r\n     * If removals are broken into separate requests, their mutual dependencies\r\n     * can't be determined. This may cause `undo()` and  `redo()` to break as\r\n     * they can no longer reconstruct the objects and dependencies correctly.\r\n     * \r\n     * @param objects\r\n     *  The objects to remove from their parents.\r\n     */\r\n    constructor(objects: DiagramObjectModel[]) {\r\n        let page = objects[0].root.id;\r\n        for(let i = 1; i < objects.length; i++) {\r\n            if(page === objects[i].root.id)\r\n                continue;\r\n            throw new DiagramObjectModelError(\r\n                `Objects must originate from the same root.`\r\n            );\r\n        }\r\n        super(page);\r\n        // Compile objects\r\n        this._links = [];\r\n        this._items = [];\r\n        for(let o of objects) {\r\n            if(!o.parent) {\r\n                throw new DiagramObjectModelError(\r\n                    \"Object must have a parent.\", o\r\n                );\r\n            }\r\n            this._items.push({\r\n                index: o.getIndexInParent(),\r\n                parent: o.parent,\r\n                object: o\r\n            });\r\n        }\r\n        // Compile list of anchors and anchor-ables\r\n        let map = new Map<string, DiagramObjectModel>();\r\n        for(let item of this._items) {\r\n            for(let c of item.object.getSubtree()) {\r\n                if(\r\n                    c instanceof DiagramAnchorModel ||\r\n                    c instanceof DiagramAnchorableModel\r\n                ) {\r\n                    map.set(c.id, c);\r\n                }\r\n            }\r\n        }\r\n        // Save any dependencies that can't be found in the list\r\n        for(let obj of map.values()) {\r\n            if(obj instanceof DiagramAnchorableModel) {\r\n                if(obj.isAttached() && !map.has(obj.anchor!.id)) {\r\n                    this._links.push({ \r\n                        index: obj.getIndexInAnchor(),\r\n                        anchor: obj.anchor!,\r\n                        object: obj,\r\n                    })\r\n                }\r\n            } else if(obj instanceof DiagramAnchorModel) {\r\n                for(let child of obj.children) {\r\n                    if(!map.has(child.id)) {\r\n                        this._links.push({ \r\n                            index: child.getIndexInAnchor(),\r\n                            anchor: obj,\r\n                            object: child, \r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Executes the command.\r\n     * @returns\r\n     *  True if the command should be recorded, false otherwise.\r\n     */\r\n    public execute(): boolean {\r\n        // Detach external attachments\r\n        for(let link of this._links) {\r\n            link.anchor.removeChild(link.object);\r\n        }\r\n        // Remove objects from parents\r\n        for(let item of this._items) {\r\n            item.parent.removeChild(item.object, true, false);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Undoes the page command.\r\n     */\r\n    public undo() {\r\n        // Add objects to parents\r\n        for(let item of this._items) {\r\n            item.parent.addChild(item.object, item.index);\r\n        } \r\n        // Attach external attachments\r\n        for(let link of this._links) {\r\n            link.anchor.addChild(link.object, link.index);\r\n        }\r\n    }\r\n\r\n}\r\n","import { PageCommand } from \"../PageCommand\";\r\nimport { DiagramObjectModel, Hover } from \"@/assets/scripts/BlockDiagram\";\r\n\r\nexport class UnhoverObject extends PageCommand {\r\n\r\n    /**\r\n     * The object to un-hover.\r\n     */\r\n    private _object: DiagramObjectModel;\r\n\r\n\r\n    /**\r\n     * Un-hovers an object.\r\n     * @param object\r\n     *  The object to un-hover.\r\n     */\r\n    constructor(object: DiagramObjectModel) {\r\n        super(object.root.id);\r\n        this._object = object;\r\n    }\r\n    \r\n\r\n    /**\r\n     * Executes the page command.\r\n     * @returns\r\n     *  True if the command should be recorded, false otherwise.\r\n     */\r\n    public execute(): boolean {\r\n        let p: DiagramObjectModel | undefined = this._object;\r\n        while(p) {\r\n            p.setHover(Hover.Off);\r\n            p = p.parent;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Undoes the page command.\r\n     */\r\n    public undo() {}\r\n\r\n}\r\n","import { PageCommand } from \"../PageCommand\";\r\nimport { DiagramObjectModel, Select } from \"@/assets/scripts/BlockDiagram\";\r\n\r\nexport class UnselectObject extends PageCommand {\r\n\r\n    /**\r\n     * The object to unselect.\r\n     */\r\n    private _object: DiagramObjectModel;\r\n\r\n\r\n    /**\r\n     * Unselects an object.\r\n     * @param object\r\n     *  The object to unselect.\r\n     */\r\n    constructor(object: DiagramObjectModel) {\r\n        super(object.root.id);\r\n        this._object = object;\r\n    }\r\n    \r\n\r\n    /**\r\n     * Executes the command.\r\n     * @returns\r\n     *  True if the command should be recorded, false otherwise.\r\n     */\r\n    public execute(): boolean {\r\n        this._object.setSelect(Select.False);\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Undoes the page command.\r\n     */\r\n    public undo() {}\r\n\r\n}\r\n","import { GroupCommand } from \"./GroupCommand\";\r\nimport { RemoveObjects } from \"./RemoveObjects\";\r\nimport { UnhoverObject } from \"./UnhoverObject\";\r\nimport { UnselectObject } from \"./UnselectObject\";\r\nimport { DiagramObjectModel } from \"@/assets/scripts/BlockDiagram\";\r\n\r\nexport class RemoveSelectedChildren extends GroupCommand {\r\n\r\n    /**\r\n     * Removes an object's selected children.\r\n     * @param object\r\n     *  The object.\r\n     */\r\n    constructor(object: DiagramObjectModel) {\r\n        super();\r\n        let objects = object.children.filter(c => c.isSelected());\r\n        for(let obj of objects) {\r\n            // Unhover children\r\n            if(obj.isHovered()) {\r\n                this.add(new UnhoverObject(obj))\r\n            }\r\n            // Unselect children\r\n            this.add(new UnselectObject(obj));\r\n        }\r\n        // Remove children\r\n        this.add(new RemoveObjects(objects));\r\n    }\r\n\r\n}\r\n","import { GroupCommand } from \"./GroupCommand\";\r\nimport { ApplicationStore } from \"@/store/StoreTypes\";\r\nimport { DiagramObjectModel } from \"@/assets/scripts/BlockDiagram\";\r\nimport { RemoveSelectedChildren } from \"./RemoveSelectedChildren\";\r\n\r\nexport class CutSelectedChildren extends GroupCommand {\r\n\r\n    /**\r\n     * The application context.\r\n     */\r\n    private _context: ApplicationStore\r\n\r\n    /**\r\n     * The objects to add to the clipboard.\r\n     */\r\n    private _objects: DiagramObjectModel[];\r\n\r\n\r\n    /**\r\n     * Cuts an object's selected children to the application's clipboard.\r\n     * @param context\r\n     *  The application context.\r\n     * @param object\r\n     *  The object.\r\n     */\r\n    constructor(context: ApplicationStore, object: DiagramObjectModel) {\r\n        super();\r\n        this._context = context;\r\n        // Get selected children\r\n        let objects = object.children.filter(c => c.isSelected());\r\n        // Clone selection\r\n        this._objects = object.factory.cloneObjects(...objects);\r\n        // Remove selected children\r\n        this.add(new RemoveSelectedChildren(object));\r\n    }\r\n\r\n    \r\n    /**\r\n     * Executes the command.\r\n     * @returns\r\n     *  True if the command should be recorded, false otherwise.\r\n     */\r\n    public override execute(): boolean {\r\n        // Set the clipboard\r\n        this._context.clipboard = this._objects;\r\n        // Remove the selected children\r\n        return super.execute();\r\n    }\r\n\r\n}\r\n","import { PageCommand } from \"../PageCommand\";\r\nimport { ListProperty, Property } from \"@/assets/scripts/BlockDiagram\";\r\n\r\nexport class DeleteSubproperty extends PageCommand {\r\n\r\n    /**\r\n     * The property to modify.\r\n     */\r\n    private _property: ListProperty;\r\n\r\n    /**\r\n     * The subproperty's id.\r\n     */\r\n    private _id: string;\r\n\r\n    /**\r\n     * The subproperty.\r\n     */\r\n    private _subproperty: Property;\r\n\r\n    /**\r\n     * The subproperty's location in the collection.\r\n     */\r\n    private _index: number;\r\n\r\n\r\n    /**\r\n     * Deletes a subproperty from a {@link ListProperty}.\r\n     * @param property\r\n     *  The {@link ListProperty}.\r\n     * @param id\r\n     *  The subproperty's id.\r\n     */\r\n    constructor(property: ListProperty, id: string) {\r\n        let root = property.root;\r\n        if(!root) {\r\n            throw new Error(\"Property does not have a root.\")\r\n        }\r\n        let subproperty = property.value.get(id);\r\n        if(!subproperty) {\r\n            throw new Error(`Subproperty '${ id }' does not exist.`);\r\n        }\r\n        super(root.object.root.id);\r\n        this._id = id;\r\n        this._index = property.indexOf(id);\r\n        this._property = property;\r\n        this._subproperty = subproperty;\r\n    }\r\n    \r\n\r\n    /**\r\n     * Executes the page command.\r\n     * @returns\r\n     *  True if the command should be recorded, false otherwise.\r\n     */\r\n    public execute(): boolean {\r\n        this._property.removeProperty(this._id);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Undoes the page command.\r\n     */\r\n    public undo() {\r\n        this._property.addProperty(this._subproperty, this._id, this._index);\r\n    }\r\n\r\n}\r\n","import { PageCommand } from \"../PageCommand\";\r\nimport {\r\n    DiagramAnchorableModel,\r\n    DiagramAnchorModel,\r\n    DiagramObjectModelError\r\n} from \"@/assets/scripts/BlockDiagram\";\r\n\r\nexport class DetachObject extends PageCommand {\r\n    \r\n    /**\r\n     * The object's anchor.\r\n     */\r\n    private _anchor: DiagramAnchorModel;\r\n\r\n    /**\r\n     * The object.\r\n     */\r\n    private _object: DiagramAnchorableModel;\r\n\r\n    /**\r\n     * The object's location in its anchor.\r\n     */\r\n    private _index: number;\r\n\r\n    \r\n    /**\r\n     * Detaches an object from its anchor.\r\n     * @param object\r\n     *  The object.\r\n     */\r\n    constructor(object: DiagramAnchorableModel) {\r\n        if(!object.isAttached()) {\r\n            throw new DiagramObjectModelError(\r\n                \"Object must be attached to an anchor.\", object\r\n            );\r\n        }\r\n        super(object.root.id);\r\n        this._object = object;\r\n        this._anchor = object.anchor!;\r\n        this._index = object.getIndexInAnchor();\r\n    }\r\n    \r\n\r\n    /**\r\n     * Executes the page command.\r\n     * @returns\r\n     *  True if the command should be recorded, false otherwise.\r\n     */\r\n    public execute(): boolean {\r\n        this._anchor.removeChild(this._object);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Undoes the page command.\r\n     */\r\n    public undo() {\r\n        this._anchor.addChild(this._object, this._index);\r\n    }\r\n\r\n}\r\n","import { GroupCommand } from \"./GroupCommand\";\r\nimport { AddObject } from \"./AddObject\";\r\nimport { UnselectObject } from \"./UnselectObject\";\r\nimport { ApplicationStore } from \"@/store/StoreTypes\";\r\nimport { DiagramObjectModel, Select } from \"@/assets/scripts/BlockDiagram\";\r\n\r\nexport class DuplicateSelectedChildren extends GroupCommand {\r\n\r\n    /**\r\n     * Duplicates an object's selected children.\r\n     * @param context\r\n     *  The application context.\r\n     * @param object\r\n     *  The object.\r\n     */\r\n    constructor(context: ApplicationStore, object: DiagramObjectModel) {\r\n        super();\r\n        // Unselect children\r\n        let objects = object.children.filter(c => c.isSelected());\r\n        for(let obj of objects) {\r\n            this.add(new UnselectObject(obj));\r\n        }\r\n        // Duplicate selection\r\n        let o = context.settings.edit.clone_offset;\r\n        let clones = object.factory.cloneObjects(...objects);\r\n        // Add clones to object and select them\r\n        for(let obj of clones) {\r\n            obj.moveBy(o[0], o[1]);\r\n            obj.setSelect(Select.True);\r\n            this.add(new AddObject(obj, object));\r\n        }\r\n    }\r\n\r\n}\r\n","import { PageCommand } from \"../PageCommand\";\r\nimport { DiagramObjectModel, Hover } from \"@/assets/scripts/BlockDiagram\";\r\n\r\nexport class HoverObject extends PageCommand {\r\n\r\n    /**\r\n     * The object to hover.\r\n     */\r\n    private _object: DiagramObjectModel;\r\n\r\n\r\n    /**\r\n     * Hovers an object.\r\n     * @param object\r\n     *  The object to hover.\r\n     */\r\n    constructor(object: DiagramObjectModel) {\r\n        super(object.root.id);\r\n        this._object = object;\r\n    }\r\n    \r\n\r\n    /**\r\n     * Executes the page command.\r\n     * @returns\r\n     *  True if the command should be recorded, false otherwise.\r\n     */\r\n    public execute(): boolean {\r\n        // Directly hover object\r\n        this._object.setHover(Hover.Direct);\r\n        // Indirectly hover object's parents\r\n        let p = this._object.parent;\r\n        while(p) {\r\n            p.setHover(Hover.Indirect);\r\n            p = p.parent;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Undoes the page command.\r\n     */\r\n    public undo() {}\r\n\r\n}\r\n","import { PageCommand } from \"../PageCommand\";\r\nimport { DiagramObjectModel, Select } from \"@/assets/scripts/BlockDiagram\";\r\n\r\nexport class SelectObject extends PageCommand {\r\n\r\n    /**\r\n     * The object to select.\r\n     */\r\n    private _object: DiagramObjectModel;\r\n\r\n\r\n    /**\r\n     * Selects an object.\r\n     * @param object\r\n     *  The object to select.\r\n     */\r\n    constructor(object: DiagramObjectModel) {\r\n        super(object.root.id);\r\n        this._object = object;\r\n    }\r\n    \r\n\r\n    /**\r\n     * Executes the page command.\r\n     * @returns\r\n     *  True if the command should be recorded, false otherwise.\r\n     */\r\n    public execute(): boolean {\r\n        this._object.setSelect(Select.True)\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Undoes the page command.\r\n     */\r\n    public undo() {}\r\n\r\n}\r\n","import { GroupCommand } from \"./GroupCommand\";\r\nimport { UnselectObject } from \"./UnselectObject\";\r\nimport { DiagramObjectModel } from \"@/assets/scripts/BlockDiagram\";\r\n\r\nexport class UnselectDescendants extends GroupCommand {\r\n\r\n    /**\r\n     * Unselects an object's descendants.\r\n     * @param object\r\n     *  The object.\r\n     */\r\n    constructor(object: DiagramObjectModel) {\r\n        super();\r\n        for(let obj of object.getSubtree(o => o.isSelected())) {\r\n            this.add(new UnselectObject(obj));\r\n        }\r\n    }\r\n\r\n}\r\n\r\n","import { PageCommand } from \"../PageCommand\";\r\nimport { ApplicationStore } from \"@/store/StoreTypes\";\r\nimport { PageEditor } from \"@/store/PageEditor\";\r\nimport {\r\n    CameraLocation,\r\n    DiagramObjectModel,\r\n    DiagramObjectModelError\r\n} from \"@/assets/scripts/BlockDiagram\";\r\n\r\nexport class MoveCameraToObjects extends PageCommand {\r\n\r\n    /**\r\n     * The editor.\r\n     */\r\n    private _editor: PageEditor;\r\n\r\n    /**\r\n     * The camera's new location.\r\n     */\r\n    private _location: CameraLocation;\r\n\r\n\r\n    /**\r\n     * Focuses the camera on a set of objects.\r\n     * @param context\r\n     *  The application context.\r\n     * @param objects\r\n     *  The objects.\r\n     */\r\n    constructor(context: ApplicationStore, objects: DiagramObjectModel[]) {\r\n        let page = objects[0].root;\r\n        for(let i = 1; i < objects.length; i++) {\r\n            if(page.id === objects[i].root.id)\r\n                continue;\r\n            throw new DiagramObjectModelError(\r\n                `Objects must originate from the same root.`\r\n            );\r\n        }\r\n        let editor = context.pages.get(page.id);\r\n        if(!editor) {\r\n            throw new Error(\r\n                `Objects must be managed by an editor.`\r\n            );\r\n        }\r\n        super(page.id);\r\n        this._editor = editor;\r\n        // Calculate bounding box\r\n        let xMin = Infinity;\r\n        let yMin = Infinity;\r\n        let xMax = -Infinity;\r\n        let yMax = -Infinity;\r\n        for(let obj of objects) {\r\n            xMin = Math.min(xMin, obj.boundingBox.xMin);\r\n            yMin = Math.min(yMin, obj.boundingBox.yMin);\r\n            xMax = Math.max(xMax, obj.boundingBox.xMax);\r\n            yMax = Math.max(yMax, obj.boundingBox.yMax);\r\n        }\r\n        // Calculate camera position\r\n        let regionW = xMax - xMin;\r\n        let regionH = yMax - yMin;\r\n        let x = Math.round((xMin + xMax) / 2);\r\n        let y = Math.round((yMin + yMax) / 2);\r\n        let w = regionW / editor.view.w;\r\n        let h = regionH / editor.view.h;\r\n        let r = Math.max(w, h);\r\n        let k = Math.min(.9 / r, 1.5);\r\n        this._location = { x, y, k };\r\n    }\r\n    \r\n\r\n    /**\r\n     * Executes the page command.\r\n     * @returns\r\n     *  True if the command should be recorded, false otherwise.\r\n     */\r\n    public execute(): boolean {\r\n        this._editor.location.value = this._location;\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Undoes the page command.\r\n     */\r\n    public undo() {}\r\n\r\n}\r\n","import { GroupCommand } from \"./GroupCommand\";\r\nimport { ApplicationStore } from \"@/store/StoreTypes\";\r\nimport { SelectObject } from \"./SelectObject\";\r\nimport { UnselectDescendants } from \"./UnselectDescendants\";\r\nimport { MoveCameraToObjects } from \"./MoveCameraToObjects\";\r\nimport {\r\n    DiagramObjectModel,\r\n    SemanticAnalyzer,\r\n    SemanticRole\r\n} from \"@/assets/scripts/BlockDiagram\";\r\n\r\nexport class MoveCameraToChildren extends GroupCommand {\r\n\r\n    /**\r\n     * Interprets an object's selected children as a graph and focuses the\r\n     * camera on their (graph-wise) children.\r\n     * @param context\r\n     *  The application context.\r\n     * @param object\r\n     *  The object.\r\n     */\r\n    constructor(context: ApplicationStore, object: DiagramObjectModel) {\r\n        super();\r\n        let objects = object.children.filter(c => c.isSelected());\r\n        if(!objects.length) {\r\n            return;\r\n        }\r\n        // Get (graph-wise) children\r\n        let children: DiagramObjectModel[] = [];\r\n        for(let obj of objects) {\r\n            let links = SemanticAnalyzer.getNextGraphLinks(obj);\r\n            if(obj.hasRole(SemanticRole.Node)) {\r\n                for(let link of links) {\r\n                    let nodes = SemanticAnalyzer.getNextGraphLinks(link);\r\n                    if(nodes.length) {\r\n                        children = children.concat(nodes);\r\n                    } else {\r\n                        children.push(link);\r\n                    }\r\n                }\r\n            } else {\r\n                children = children.concat(links);\r\n            }\r\n        }\r\n        // Unselect objects\r\n        this.add(new UnselectDescendants(object));\r\n        // Select children\r\n        for(let child of children) {\r\n            this.add(new SelectObject(child));\r\n        }\r\n        // Move camera to children\r\n        if(children.length) {\r\n            this.add(new MoveCameraToObjects(context, children));\r\n        }\r\n    }\r\n\r\n}\r\n","import { GroupCommand } from \"./GroupCommand\";\r\nimport { ApplicationStore } from \"@/store/StoreTypes\";\r\nimport { SelectObject } from \"./SelectObject\";\r\nimport { UnselectDescendants } from \"./UnselectDescendants\";\r\nimport { MoveCameraToObjects } from \"./MoveCameraToObjects\";\r\nimport {\r\n    DiagramObjectModel,\r\n    SemanticAnalyzer,\r\n    SemanticRole\r\n} from \"@/assets/scripts/BlockDiagram\";\r\n\r\nexport class MoveCameraToParents extends GroupCommand {\r\n\r\n    /**\r\n     * Interprets an object's selected children as a graph and focuses the\r\n     * camera on their (graph-wise) parents.\r\n     * @param context\r\n     *  The application context.\r\n     * @param object\r\n     *  The object.\r\n     */\r\n    constructor(context: ApplicationStore, object: DiagramObjectModel) {\r\n        super();\r\n        let objects = object.children.filter(c => c.isSelected());\r\n        if(!objects.length) {\r\n            return;\r\n        }\r\n        // Get (graph-wise) parents\r\n        let parents: DiagramObjectModel[] = [];\r\n        for(let obj of objects) {\r\n            let links = SemanticAnalyzer.getPrevGraphLinks(obj);\r\n            if(obj.hasRole(SemanticRole.Node)) {\r\n                for(let link of links) {\r\n                    let nodes = SemanticAnalyzer.getPrevGraphLinks(link);\r\n                    if(nodes.length) {\r\n                        parents = parents.concat(nodes);\r\n                    } else {\r\n                        parents.push(link);\r\n                    }\r\n                }\r\n            } else {\r\n                parents = parents.concat(links);\r\n            }\r\n        }\r\n        // Unselect objects\r\n        this.add(new UnselectDescendants(object));\r\n        // Select parents\r\n        for(let child of parents) {\r\n            this.add(new SelectObject(child));\r\n        }\r\n        // Move camera to parents\r\n        if(parents.length) {\r\n            this.add(new MoveCameraToObjects(context, parents));\r\n        }\r\n    }\r\n\r\n}\r\n","import { GroupCommand } from \"./GroupCommand\";\r\nimport { ApplicationStore } from \"@/store/StoreTypes\";\r\nimport { MoveCameraToObjects } from \"./MoveCameraToObjects\";\r\nimport { DiagramObjectModel } from \"@/assets/scripts/BlockDiagram\";\r\n\r\nexport class MoveCameraToSelection extends GroupCommand {\r\n\r\n    /**\r\n     * Focuses the camera on an object's selected children.\r\n     * @param context\r\n     *  The application context.\r\n     * @param object\r\n     *  The object.\r\n     */\r\n    constructor(context: ApplicationStore, object: DiagramObjectModel) {\r\n        super();\r\n        let objects = object.children.filter(c => c.isSelected());\r\n        if(!objects.length) {\r\n            return;\r\n        }\r\n        // Move camera to selected children\r\n        this.add(new MoveCameraToObjects(context, objects));\r\n    }\r\n\r\n}\r\n","import { PageCommand } from \"../PageCommand\";\r\nimport { DiagramObjectModel } from \"@/assets/scripts/BlockDiagram\";\r\n\r\nexport class MoveObjectBy extends PageCommand {\r\n    \r\n    /**\r\n     * The object.\r\n     */\r\n    private _object: DiagramObjectModel;\r\n    \r\n    /**\r\n     * The object's change in x.\r\n     */\r\n    private _dx: number;\r\n\r\n    /**\r\n     * The object's change in y.\r\n     */\r\n    private _dy: number;\r\n\r\n\r\n    /**\r\n     * Moves an object relative to its current position.\r\n     * @param object\r\n     *  The object.\r\n     * @param dx\r\n     *  The change in x.\r\n     * @param dy\r\n     *  The change in y.\r\n     */\r\n    constructor(object: DiagramObjectModel, dx: number, dy: number) {\r\n        super(object.root.id);\r\n        this._object = object;\r\n        this._dx = dx;\r\n        this._dy = dy;\r\n    }\r\n\r\n    \r\n    /**\r\n     * Executes the page command.\r\n     * @returns\r\n     *  True if the command should be recorded, false otherwise.\r\n     */\r\n    public execute(): boolean {\r\n        this._object.moveBy(this._dx, this._dy);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Undoes the page command.\r\n     */\r\n    public undo() {\r\n        this._object.moveBy(-this._dx, -this._dy);\r\n    }\r\n\r\n}\r\n","import { PageCommand } from \"../PageCommand\";\r\nimport { DiagramObjectModel } from \"@/assets/scripts/BlockDiagram\";\r\n\r\nexport class MoveObjectTo extends PageCommand {\r\n    \r\n    /**\r\n     * The object.\r\n     */\r\n    private _object: DiagramObjectModel;\r\n    \r\n    /**\r\n     * The object's last x coordinate.\r\n     */\r\n    private _lx: number;\r\n\r\n    /**\r\n     * The object's last y coordinate.\r\n     */\r\n    private _ly: number;\r\n\r\n    /**\r\n     * The object's next x coordinate. \r\n     */\r\n    private _nx: number;\r\n\r\n    /**\r\n     * The object's next y coordinate.\r\n     */\r\n    private _ny: number;\r\n\r\n\r\n    /**\r\n     * Moves an object to a specific coordinate.\r\n     * @param object\r\n     *  The object.\r\n     * @param x\r\n     *  The x coordinate.\r\n     * @param y\r\n     *  The y coordinate.\r\n     */\r\n    constructor(object: DiagramObjectModel, x: number, y: number) {\r\n        super(object.root.id);\r\n        this._object = object;\r\n        this._lx = object.boundingBox.xMid;\r\n        this._ly = object.boundingBox.yMid;\r\n        this._nx = x;\r\n        this._ny = y;\r\n    }\r\n\r\n\r\n    /**\r\n     * Executes the page command.\r\n     * @returns\r\n     *  True if the command should be recorded, false otherwise.\r\n     */\r\n    public execute(): boolean {\r\n        this._object.moveTo(this._nx, this._ny);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Undoes the page command.\r\n     */\r\n    public undo() {\r\n        this._object.moveTo(this._lx, this._ly);\r\n    }\r\n\r\n}\r\n","import { GroupCommand } from \"./GroupCommand\";\r\nimport { ApplicationStore } from \"@/store/StoreTypes\";\r\nimport { AddObject } from \"./AddObject\";\r\nimport { UnselectDescendants } from \"./UnselectDescendants\";\r\nimport { DiagramObjectModel, Select } from \"@/assets/scripts/BlockDiagram\";\r\n\r\nexport class PasteToObject extends GroupCommand {\r\n\r\n    /**\r\n     * The application context.\r\n     */\r\n    private _context: ApplicationStore;\r\n\r\n\r\n    /**\r\n     * Pastes the application's clipboard to an object.\r\n     * @param context\r\n     *  The application context.\r\n     * @param object\r\n     *  The object.\r\n     */\r\n    constructor(context: ApplicationStore, object: DiagramObjectModel) {\r\n        super();\r\n        this._context = context;\r\n        // Clear the object's current selection\r\n        this.add(new UnselectDescendants(object));\r\n        // Copy the clipboard\r\n        let clones = object.factory.cloneObjects(...context.clipboard);\r\n        // Select clones and add them to object\r\n        for(let clone of clones) {\r\n            clone.setSelect(Select.True);\r\n            this.add(new AddObject(clone, object));\r\n            \r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Executes the command.\r\n     * @returns\r\n     *  True if the command should be recorded, false otherwise.\r\n     */\r\n    public override execute(): boolean {\r\n        // Offset the clipboard\r\n        let o = this._context.settings.edit.clone_offset;\r\n        for(let obj of this._context.clipboard) {\r\n            obj.moveBy(o[0], o[1]);\r\n        }\r\n        // Paste the clipboard\r\n        return super.execute();\r\n    }\r\n\r\n}\r\n","import { PageCommand } from \"../PageCommand\";\r\nimport { ApplicationStore } from \"@/store/StoreTypes\";\r\nimport { PageEditor } from \"@/store/PageEditor\";\r\n\r\nexport class RedoPageCommand extends PageCommand {\r\n\r\n    /**\r\n     * The page to apply the redo operation to.\r\n     */\r\n    private _editor: PageEditor;\r\n\r\n\r\n    /**\r\n     * Redoes the last undone page command.\r\n     * @param context\r\n     *  The application context.\r\n     * @param page\r\n     *  The id of the page to apply the redo operation to.\r\n     */\r\n    constructor(context: ApplicationStore, page: string) {\r\n        super(page);\r\n        let editor = context.pages.get(page);\r\n        if(editor) {\r\n            this._editor = editor;\r\n        } else {\r\n            throw new Error(`'${ page }' is not a page.`);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Executes the page command.\r\n     * @returns\r\n     *  True if the command should be recorded, false otherwise.\r\n     */\r\n    public execute(): boolean {\r\n        this._editor.redo();\r\n        return false;\r\n    }\r\n    \r\n    /**\r\n     * Undoes the page command.\r\n     */\r\n    public undo(): void {}\r\n\r\n}\r\n","import { GroupCommand } from \"./GroupCommand\";\r\nimport { Order, ReorderObject } from \"./ReorderObject\";\r\nimport { DiagramObjectModel } from \"@/assets/scripts/BlockDiagram\";\r\n\r\nexport class RelayerSelection extends GroupCommand {\r\n\r\n    /**\r\n     * Reorders an object's selected children.\r\n     * @param object\r\n     *  The object.\r\n     * @param order\r\n     *  The new ordering.\r\n     */\r\n    constructor(object: DiagramObjectModel, order: Order) {\r\n        super();\r\n        let select = object.children.filter(c => c.isSelected());\r\n        switch(order) {\r\n            case Order.Top:\r\n            case Order.OneAbove:\r\n                for(let i = select.length - 1; 0 <= i; i--) {\r\n                    this.add(new ReorderObject(select[i], order));\r\n                }\r\n                break;\r\n            case Order.Bottom:\r\n            case Order.OneBelow:\r\n                for(let i = 0; i < select.length; i++) {\r\n                    this.add(new ReorderObject(select[i], order));\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n}\r\n","import { PageCommand } from \"../PageCommand\";\r\nimport { ApplicationStore } from \"@/store/StoreTypes\";\r\nimport { PageModel } from \"@/assets/scripts/BlockDiagram\";\r\nimport { PageEditor } from \"@/store/PageEditor\";\r\n\r\nexport class ResetCamera extends PageCommand {\r\n\r\n    /**\r\n     * The editor.\r\n     */\r\n    private _editor: PageEditor;\r\n\r\n\r\n    /**\r\n     * Resets a page editor's camera.\r\n     * @param context\r\n     *  The application context.\r\n     * @param page\r\n     *  The page.\r\n     */\r\n    constructor(context: ApplicationStore, page: PageModel) {\r\n        super(page.id);\r\n        let editor = context.pages.get(page.id);\r\n        if(!editor) {\r\n            throw new Error(\r\n                `Page '${ page.id }' does not have an editor.`\r\n            );\r\n        }\r\n        this._editor = editor;\r\n    }\r\n    \r\n    \r\n    /**\r\n     * Executes the page command.\r\n     * @returns\r\n     *  True if the command should be recorded, false otherwise.\r\n     */\r\n    public execute(): boolean {\r\n        this._editor.location.value = { x: 0, y: 0, k: 1 };\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Undoes the page command.\r\n     */\r\n    public undo() {}\r\n\r\n}\r\n","import { GroupCommand } from \"./GroupCommand\";\r\nimport { SelectObject } from \"./SelectObject\";\r\nimport { DiagramObjectModel } from \"@/assets/scripts/BlockDiagram\";\r\n\r\nexport class SelectChildren extends GroupCommand {\r\n\r\n    /**\r\n     * Selects an object's children.\r\n     * @param object\r\n     *  The object.\r\n     */\r\n    constructor(object: DiagramObjectModel) {\r\n        super();\r\n        for(let obj of object.children) {\r\n            this.add(new SelectObject(obj));\r\n        }\r\n    }\r\n\r\n}\r\n","import { PageCommand } from \"../PageCommand\";\r\nimport { DateProperty } from \"@/assets/scripts/BlockDiagram\";\r\n\r\nexport class SetDateProperty extends PageCommand {\r\n\r\n    /**\r\n     * The property to modify.\r\n     */\r\n    private _property: DateProperty;\r\n\r\n    /**\r\n     * The property's current value.\r\n     */\r\n    private _lastValue: Date | null;\r\n\r\n    /**\r\n     * The property's new value.\r\n     */\r\n    private _nextValue: Date | null;\r\n\r\n\r\n    /**\r\n     * Sets a date property's value.\r\n     * @param property\r\n     *  The date property.\r\n     * @param value\r\n     *  The property's new value.\r\n     */\r\n    constructor(property: DateProperty, value: Date | null) {\r\n        let lv = property.toRawValue();\r\n        let root = property.root;\r\n        if(!root) {\r\n            throw new Error(\"Property does not have a root.\")\r\n        }\r\n        super(root.object.root.id);\r\n        this._property = property;\r\n        this._lastValue = lv !== null ? new Date(lv) : lv;\r\n        this._nextValue = value;\r\n    }\r\n    \r\n\r\n    /**\r\n     * Executes the page command.\r\n     * @returns\r\n     *  True if the command should be recorded, false otherwise.\r\n     */\r\n    public execute(): boolean {\r\n        this._property.setValue(this._nextValue);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Undoes the page command.\r\n     */\r\n    public undo() {\r\n        this._property.setValue(this._lastValue);\r\n    }\r\n\r\n}\r\n","import { PageCommand } from \"../PageCommand\";\r\nimport { EnumProperty } from \"@/assets/scripts/BlockDiagram\";\r\n\r\nexport class SetEnumProperty extends PageCommand {\r\n\r\n    /**\r\n     * The property to modify.\r\n     */\r\n    private _property: EnumProperty;\r\n\r\n    /**\r\n     * The property's current value.\r\n     */\r\n    private _lastValue: string | null;\r\n\r\n    /**\r\n     * The property's new value.\r\n     */\r\n    private _nextValue: string | null;\r\n\r\n\r\n    /**\r\n     * Sets a enum property's value.\r\n     * @param property\r\n     *  The enum property.\r\n     * @param value\r\n     *  The property's new value.\r\n     */\r\n    constructor(property: EnumProperty, value: string) {\r\n        let root = property.root;\r\n        if(!root) {\r\n            throw new Error(\"Property does not have a root.\")\r\n        }\r\n        super(root.object.root.id);\r\n        this._property = property;\r\n        this._lastValue = property.toRawValue();\r\n        this._nextValue = value;\r\n    }\r\n    \r\n\r\n    /**\r\n     * Executes the page command.\r\n     * @returns\r\n     *  True if the command should be recorded, false otherwise.\r\n     */\r\n    public execute(): boolean {\r\n        this._property.setValue(this._nextValue);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Undoes the page command.\r\n     */\r\n    public undo() {\r\n        this._property.setValue(this._lastValue);\r\n    }\r\n\r\n}\r\n","import { PageCommand } from \"../PageCommand\";\r\nimport { NumberProperty } from \"@/assets/scripts/BlockDiagram\";\r\n\r\nexport class SetNumberProperty extends PageCommand {\r\n\r\n    /**\r\n     * The property to modify.\r\n     */\r\n    private _property: NumberProperty;\r\n\r\n    /**\r\n     * The property's current value.\r\n     */\r\n    private _lastValue: number | null;\r\n\r\n    /**\r\n     * The property's new value.\r\n     */\r\n    private _nextValue: number | null;\r\n\r\n\r\n    /**\r\n     * Sets a number property's value.\r\n     * @param property\r\n     *  The number property.\r\n     * @param value\r\n     *  The property's new value.\r\n     */\r\n    constructor(property: NumberProperty, value: number | null) {\r\n        let root = property.root;\r\n        if(!root) {\r\n            throw new Error(\"Property does not have a root.\")\r\n        }\r\n        super(root.object.root.id);\r\n        this._property = property;\r\n        this._lastValue = property.toRawValue();\r\n        this._nextValue = value;\r\n    }\r\n    \r\n\r\n    /**\r\n     * Executes the page command.\r\n     * @returns\r\n     *  True if the command should be recorded, false otherwise.\r\n     */\r\n    public execute(): boolean {\r\n        this._property.setValue(this._nextValue);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Undoes the page command.\r\n     */\r\n    public undo() {\r\n        this._property.setValue(this._lastValue);\r\n    }\r\n\r\n}\r\n","import { PageCommand } from \"../PageCommand\";\r\nimport { StringProperty } from \"@/assets/scripts/BlockDiagram\";\r\n\r\nexport class SetStringProperty extends PageCommand {\r\n\r\n    /**\r\n     * The property to modify.\r\n     */\r\n    private _property: StringProperty;\r\n\r\n    /**\r\n     * The property's current value.\r\n     */\r\n    private _lastValue: string | null;\r\n\r\n    /**\r\n     * The property's new value.\r\n     */\r\n    private _nextValue: string | null;\r\n\r\n\r\n    /**\r\n     * Sets a string property's value.\r\n     * @param property\r\n     *  The string property.\r\n     * @param value\r\n     *  The property's new value.\r\n     */\r\n    constructor(property: StringProperty, value: string) {\r\n        let root = property.root;\r\n        if(!root) {\r\n            throw new Error(\"Property does not have a root.\")\r\n        }\r\n        super(root.object.root.id);\r\n        this._property = property;\r\n        this._lastValue = property.toRawValue();\r\n        this._nextValue = value;\r\n    }\r\n    \r\n\r\n    /**\r\n     * Executes the page command.\r\n     * @returns\r\n     *  True if the command should be recorded, false otherwise.\r\n     */\r\n    public execute(): boolean {\r\n        this._property.setValue(this._nextValue);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Undoes the page command.\r\n     */\r\n    public undo() {\r\n        this._property.setValue(this._lastValue);\r\n    }\r\n\r\n}\r\n","import { GroupCommand } from \"./GroupCommand\";\r\nimport { AddObject } from \"./AddObject\";\r\nimport { ApplicationStore } from \"@/store/StoreTypes\";\r\nimport {\r\n    Alignment,\r\n    DiagramObjectModel,\r\n    round\r\n} from \"@/assets/scripts/BlockDiagram\";\r\n\r\nexport class SpawnObject extends GroupCommand {\r\n\r\n    /**\r\n     * Spawns a new object.\r\n     * @param context\r\n     *  The application context.\r\n     * @param parent\r\n     *  The parent object.\r\n     * @param template\r\n     *  The object's template.\r\n     */\r\n    constructor(\r\n        context: ApplicationStore,\r\n        parent: DiagramObjectModel,\r\n        template: string\r\n    );\r\n\r\n    /**\r\n     * Spawns a new object.\r\n     * @param context\r\n     *  The application context.\r\n     * @param parent\r\n     *  The parent object.\r\n     * @param template\r\n     *  The object's template.\r\n     * @param x\r\n     *  The object's x-coordinate relative to the viewport.\r\n     * @param y\r\n     *  The object's y-coordinate relative to the viewport.\r\n     */\r\n    constructor(\r\n        context: ApplicationStore,\r\n        parent: DiagramObjectModel,\r\n        template: string,\r\n        x: number,\r\n        y: number\r\n    );\r\n    constructor(\r\n        context: ApplicationStore,\r\n        parent: DiagramObjectModel,\r\n        template: string,\r\n        x?: number,\r\n        y?: number\r\n    ) {\r\n        super();\r\n        let editor = context.pages.get(parent.root.id);\r\n        if(!editor) {\r\n            throw new Error(\r\n                `'${ parent.id }' must belong to an existing editor.`\r\n            );\r\n        }\r\n        // Create object\r\n        let object = parent.factory.createObject(template);\r\n        // Move object\r\n        let view = editor.view;\r\n        if(x === undefined) {\r\n            // Position in center of screen\r\n            x = Math.round(((view.w / 2) - view.x) / view.k);\r\n        } else {\r\n            // Position left-side of object at x \r\n            let { xMid, xMin } = object.boundingBox;\r\n            x = ((x - view.x) / view.k) + xMid - xMin;\r\n        }\r\n        if(y === undefined) {\r\n            // Position in middle of screen\r\n            y = Math.round(((view.h / 2) - view.y) / view.k);\r\n        } else {\r\n            // Position top-side of object at y \r\n            let { yMid, yMin } = object.boundingBox;\r\n            y = ((y - view.y) / view.k) + yMid - yMin;\r\n        }\r\n        if(object.getAlignment() === Alignment.Grid) {\r\n            // If aligned to grid, snap x and y\r\n            x = round(x, editor.page.grid[0]);\r\n            y = round(y, editor.page.grid[1]);\r\n        }\r\n        object.moveTo(x, y);\r\n        // Add object\r\n        this.add(new AddObject(object, parent));\r\n    }\r\n\r\n}\r\n","import { PageCommand } from \"../PageCommand\";\r\nimport { ApplicationStore } from \"@/store/StoreTypes\";\r\nimport { PageEditor } from \"@/store/PageEditor\";\r\n\r\nexport class UndoPageCommand extends PageCommand {\r\n\r\n    /**\r\n     * The page to apply the undo operation to.\r\n     */\r\n    private _editor: PageEditor;\r\n\r\n\r\n    /**\r\n     * Undoes the last page command.\r\n     * @param context\r\n     *  The application context.\r\n     * @param page\r\n     *  The id of the page to apply the undo operation to.\r\n     */\r\n    constructor(context: ApplicationStore, page: string) {\r\n        super(page);\r\n        let editor = context.pages.get(page);\r\n        if(editor) {\r\n            this._editor = editor;\r\n        } else {\r\n            throw new Error(`'${ page }' is not a page.`);\r\n        }\r\n    }\r\n    \r\n\r\n    /**\r\n     * Executes the page command.\r\n     * @returns\r\n     *  True if the command should be recorded, false otherwise.\r\n     */\r\n    public execute(): boolean {\r\n        this._editor.undo();\r\n        return false;\r\n    }\r\n    \r\n    /**\r\n     * Undoes the page command.\r\n     */\r\n    public undo(): void {}\r\n\r\n}\r\n","import { GroupCommand } from \"./GroupCommand\";\r\nimport { UnhoverObject } from \"./UnhoverObject\";\r\nimport { DiagramObjectModel, Hover, HoverMask } from \"@/assets/scripts/BlockDiagram\";\r\n\r\nexport class UnhoverDescendants extends GroupCommand {\r\n\r\n    /**\r\n     * Unhover an object's descendants.\r\n     * @param object\r\n     *  The object.\r\n     */\r\n    constructor(object: DiagramObjectModel) {\r\n        super();\r\n        for(let obj of object.getSubtree(this.isDirectlyHovered)) {\r\n            this.add(new UnhoverObject(obj));\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Tests if an object is directly hovered.\r\n     * @param obj\r\n     *  The object.\r\n     * @returns\r\n     *  True if the object is directly hovered, false otherwise.\r\n     */\r\n    private isDirectlyHovered(obj: DiagramObjectModel): boolean {\r\n        return (obj.attrs & HoverMask) === Hover.Direct\r\n    }\r\n\r\n}\r\n\r\n","import { PageCommand } from \"../PageCommand\";\r\nimport { DiagramObjectModel, PositionSetByUser } from \"@/assets/scripts/BlockDiagram\";\r\n\r\nexport class UserSetObjectPosition extends PageCommand {\r\n\r\n    /**\r\n     * The object.\r\n     */\r\n    private _object: DiagramObjectModel;\r\n\r\n\r\n    /**\r\n     * Declares that an object's position was set by the user.\r\n     * @param object\r\n     *  The object.\r\n     */\r\n    constructor(object: DiagramObjectModel) {\r\n        super(object.root.id);\r\n        this._object = object;\r\n    }\r\n    \r\n\r\n    /**\r\n     * Executes the page command.\r\n     * @returns\r\n     *  True if the command should be recorded, false otherwise.\r\n     */\r\n    public execute(): boolean {\r\n        this._object.setPositionSetByUser(PositionSetByUser.True);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Undoes the page command.\r\n     */\r\n    public undo() {\r\n        this._object.setPositionSetByUser(PositionSetByUser.False);\r\n    }\r\n\r\n}\r\n","import { PageCommand } from \"../PageCommand\";\r\nimport { ApplicationStore } from \"@/store/StoreTypes\";\r\nimport { CameraLocation, PageModel } from \"@/assets/scripts/BlockDiagram\";\r\nimport { PageEditor } from \"@/store/PageEditor\";\r\n\r\nexport class ZoomCamera extends PageCommand {\r\n\r\n    /**\r\n     * The editor.\r\n     */\r\n    private _editor: PageEditor;\r\n\r\n    /**\r\n     * The camera's new location.\r\n     */\r\n    private _location: CameraLocation;\r\n\r\n\r\n    /**\r\n     * Zooms a page editor's camera in or out.\r\n     * @param context\r\n     *  The application context.\r\n     * @param page\r\n     *  The page.\r\n     * @param delta\r\n     *  The camera's change in zoom.\r\n     */\r\n    constructor(context: ApplicationStore, page: PageModel, delta: number) {\r\n        super(page.id);\r\n        let editor = context.pages.get(page.id);\r\n        if(!editor) {\r\n            throw new Error(\r\n                `Page '${ page.id }' does not have an editor.`\r\n            );\r\n        }\r\n        this._editor = editor;\r\n        let k = editor.view.k\r\n        let x = ((editor.view.w / 2) - editor.view.x) / k;\r\n        let y = ((editor.view.h / 2) - editor.view.y) / k;\r\n        this._location = { x, y, k: k + delta };\r\n    }\r\n    \r\n    \r\n    /**\r\n     * Executes the page command.\r\n     * @returns\r\n     *  True if the command should be recorded, false otherwise.\r\n     */\r\n    public execute(): boolean {\r\n        this._editor.location.value = this._location;\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Undoes the page command.\r\n     */\r\n    public undo() {}\r\n\r\n}\r\n","import { resolveComponent as _resolveComponent, createVNode as _createVNode, withModifiers as _withModifiers, normalizeStyle as _normalizeStyle, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ContextMenuListing = _resolveComponent(\"ContextMenuListing\")!\n  const _component_FocusBox = _resolveComponent(\"FocusBox\")!\n\n  return (_openBlock(), _createBlock(_component_FocusBox, {\n    style: _normalizeStyle(_ctx.offset),\n    class: \"context-menu-control\",\n    onUnfocus: _cache[1] || (_cache[1] = ($event: any) => (_ctx.$emit('unfocus'))),\n    onContextmenu: _cache[2] || (_cache[2] = _withModifiers(() => {}, [\"prevent\"]))\n  }, {\n    default: _withCtx(() => [\n      _createVNode(_component_ContextMenuListing, {\n        sections: _ctx.sections,\n        onSelect: _cache[0] || (_cache[0] = data => _ctx.$emit('select', data)),\n        forceInsideWindow: false\n      }, null, 8, [\"sections\"])\n    ]),\n    _: 1\n  }, 8, [\"style\"]))\n}","\r\n// Dependencies\r\nimport { defineComponent, PropType } from 'vue';\r\nimport { ContextMenuSection } from \"@/assets/scripts/ContextMenuTypes\";\r\n// Components\r\nimport FocusBox from \"@/components/Containers/FocusBox.vue\";\r\nimport ContextMenuListing from \"./ContextMenuListing.vue\";\r\n\r\nexport default defineComponent({\r\n  name: 'ContextMenu',\r\n  props: {\r\n    sections: {\r\n      type: Array as PropType<ContextMenuSection[]>,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      xOffset: 0,\r\n      yOffset: 0,\r\n    }\r\n  },\r\n  computed: {\r\n\r\n    /**\r\n     * Returns the ContextMenu's offset styling.\r\n     * @returns\r\n     *  The ContextMenu's offset styling.\r\n     */\r\n    offset(): { marginTop: string, marginLeft: string } {\r\n      return {\r\n        marginTop: `${ this.yOffset }px`,\r\n        marginLeft: `${ this.xOffset }px`\r\n      }\r\n    }\r\n\r\n  },\r\n  emits: [\"select\", \"unfocus\"],\r\n  mounted() {\r\n    // Offset menu if outside of viewport\r\n    let viewWidth  = window.innerWidth;\r\n    let viewHeight = window.innerHeight;\r\n    let { bottom, right } = this.$el.getBoundingClientRect();\r\n    // -1 ensures cursor is over menu and not the element beneath it\r\n    this.xOffset = right > viewWidth ? -(this.$el.clientWidth - 1) : 0;\r\n    this.yOffset = bottom > viewHeight ? -(this.$el.clientHeight - 1) : 0;\r\n  },\r\n  components: { FocusBox, ContextMenuListing }\r\n});\r\n","import { render } from \"./ContextMenu.vue?vue&type=template&id=6a0233c2&scoped=true&ts=true\"\nimport script from \"./ContextMenu.vue?vue&type=script&lang=ts\"\nexport * from \"./ContextMenu.vue?vue&type=script&lang=ts\"\n\nimport \"./ContextMenu.vue?vue&type=style&index=0&id=6a0233c2&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\mcarenzo\\\\Desktop\\\\attack-flow-builder - Copy\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6a0233c2\"]])\n\nexport default __exports__","\r\nimport * as App from \"@/store/Commands/AppCommands\";\r\nimport * as Page from \"@/store/Commands/PageCommands\";\r\nimport * as Store from \"@/store/StoreTypes\";\r\n// Dependencies\r\nimport { CommandEmitter } from \"@/store/Commands/Command\";\r\nimport { defineComponent, inject, markRaw } from 'vue';\r\nimport { mapGetters, mapMutations, mapState } from \"vuex\";\r\nimport {\r\n  ContextMenu as Menu,\r\n  ContextMenuSection,\r\n  MenuType\r\n} from \"@/assets/scripts/ContextMenuTypes\";\r\nimport { \r\n  BlockDiagram,CameraLocation,Cursor,\r\n  CursorCssName,\r\n  DiagramAnchorableModel,\r\n  DiagramAnchorModel,\r\n  DiagramLineModel,\r\n  DiagramObjectModel,\r\n  MouseClick\r\n} from \"@/assets/scripts/BlockDiagram\";\r\n// Components\r\nimport ContextMenu from \"@/components/Controls/ContextMenu.vue\";\r\n\r\nexport default defineComponent({\r\n  name: 'BlockDiagram',\r\n  setup() {\r\n    return {\r\n      isHotkeyActive: inject(\"isHotkeyActive\") as \r\n        (sequence: string, strict?: boolean) => boolean\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      cursor: Cursor.Default,\r\n      diagram: markRaw(new BlockDiagram()),\r\n      menu: {\r\n        x: 0,\r\n        y: 0,\r\n        show: false,\r\n      },\r\n      view: { \r\n        x: 0, y: 0, k: 1,\r\n        w: 0, h: 0\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n\r\n    /**\r\n     * Application Store data\r\n     */\r\n    ...mapState(\"ApplicationStore\", {\r\n      ctx(state: Store.ApplicationStore): Store.ApplicationStore {\r\n        return state;\r\n      },\r\n      editor(state: Store.ApplicationStore): Store.PageEditor {\r\n        return state.activePage;\r\n      },\r\n      camera(state: Store.ApplicationStore): CameraLocation {\r\n        return state.activePage.location.value;\r\n      },\r\n      pageUpdate(state: Store.ApplicationStore): number {\r\n        return state.activePage.trigger.value;\r\n      },\r\n      displayGrid(state: Store.ApplicationStore): boolean {\r\n        return state.settings.view.diagram.display_grid;\r\n      },\r\n      displayShadows(state: Store.ApplicationStore): boolean {\r\n        return state.settings.view.diagram.display_shadows;\r\n      },\r\n      displayDebugMode(state: Store.ApplicationStore): boolean {\r\n        return state.settings.view.diagram.display_debug_mode;\r\n      },\r\n      renderHighQuality(state: Store.ApplicationStore): boolean {\r\n        return state.settings.view.diagram.render_high_quality;\r\n      },\r\n      disableShadowsAt(state: Store.ApplicationStore): number {\r\n        return state.settings.view.diagram.disable_shadows_at;\r\n      },\r\n      multiselectHotkey(state: Store.ApplicationStore): string {\r\n        return state.settings.hotkeys.select.many;\r\n      }\r\n    }),\r\n\r\n    ...mapGetters(\"ApplicationStore\", [\"hasSelection\"]),\r\n\r\n    /**\r\n     * Context Menu Store data\r\n     */\r\n    ...mapGetters(\"ContextMenuStore\", [\r\n      \"deleteMenu\",\r\n      \"clipboardMenu\",\r\n      \"duplicateMenu\",\r\n      \"layeringMenu\",\r\n      \"jumpMenu\",\r\n      \"undoRedoMenu\",\r\n      \"selectAllMenu\",\r\n      \"zoomMenu\",\r\n      \"diagramViewMenu\"\r\n    ]),\r\n\r\n    /**\r\n     * Returns the current cursor style.\r\n     * @returns\r\n     *  The current cursor style.\r\n     */\r\n    cursorStyle(): { cursor: string } {\r\n      return { cursor: CursorCssName[this.cursor] }\r\n    },\r\n\r\n    /**\r\n     * Returns the context menu's style.\r\n     * @returns\r\n     *  The context menu's style.\r\n     */\r\n    menuStyle(): { top: string; left: string } {\r\n      return {\r\n        top: `${this.menu.y}px`,\r\n        left: `${this.menu.x}px`,\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Returns the context menu options.\r\n     * @returns\r\n     *  The context menu options.\r\n     */\r\n    menuOptions(): ContextMenuSection[] {\r\n      if(this.hasSelection) {\r\n        return [\r\n          this.deleteMenu,\r\n          this.clipboardMenu,\r\n          this.duplicateMenu,\r\n          this.layeringMenu,\r\n          this.jumpMenu\r\n        ];\r\n      } else {\r\n        return [\r\n          this.undoRedoMenu,\r\n          this.createMenu,\r\n          this.selectAllMenu,\r\n          this.zoomMenu,\r\n          this.diagramViewMenu\r\n        ];\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Returns the create menu section.\r\n     * @returns\r\n     *  The create menu section.\r\n     */\r\n    createMenu(): ContextMenuSection {\r\n      let factory = this.editor.page.factory;\r\n      // Compile blocks\r\n      let blocks: Menu[] = [];\r\n      for(let template of factory.getBlockTemplates()) {\r\n        blocks.push({\r\n          text: template.name,\r\n          type: MenuType.Item,\r\n          data: () => new Page.SpawnObject(\r\n            this.ctx, this.editor.page, template.id,\r\n            this.menu.x, this.menu.y\r\n          ),\r\n        });\r\n      }\r\n      // Compile lines\r\n      let lines: Menu[] = [];\r\n      for(let template of factory.getLineTemplates()) {\r\n        lines.push({\r\n          text: template.name,\r\n          type: MenuType.Item,\r\n          data: () => new Page.SpawnObject(\r\n            this.ctx, this.editor.page, template.id,\r\n            this.menu.x, this.menu.y\r\n          ),\r\n        })\r\n      }\r\n      // Return menu\r\n      return {\r\n        id: \"create_options\",\r\n        items: [\r\n          {\r\n            text: \"Create\",\r\n            type: MenuType.Submenu,\r\n            sections: [\r\n              { id: \"blocks\", items: blocks },\r\n              { id: \"lines\",  items: lines }\r\n            ]\r\n          }\r\n        ]\r\n      };\r\n    }\r\n\r\n  },\r\n  methods: {\r\n\r\n    /**\r\n     * Application Store mutations\r\n     */\r\n    ...mapMutations(\"ApplicationStore\", [\"execute\"]),\r\n\r\n    /**\r\n     * Menu item selection behavior.\r\n     * @param emitter\r\n     *  Menu item's command emitter.\r\n     */\r\n    async onItemSelect(emitter: CommandEmitter) {\r\n      try {\r\n        let cmd = emitter();\r\n        if(cmd instanceof Promise) {\r\n          let test = await cmd;\r\n          this.execute(test);\r\n        } else {\r\n          this.execute(cmd);\r\n        }\r\n      } catch(ex: any) {\r\n        console.error(ex);\r\n      }\r\n      this.closeContextMenu();\r\n    },\r\n\r\n    /**\r\n     * Opens the context menu.\r\n     * @param x\r\n     *  The menu's x coordinate (relative to the container).\r\n     * @param y\r\n     *  The menu's y coordinate (relative to the container).\r\n     */\r\n    openContextMenu(x: number, y: number) {\r\n      // Allow unfocus event to run first (if context\r\n      // menu is already present) then show context menu.\r\n      requestAnimationFrame(() => {\r\n        this.menu.show = true;\r\n        this.menu.x = x;\r\n        this.menu.y = y;\r\n      })\r\n    },\r\n\r\n    /**\r\n     * Closes the context menu.\r\n     */\r\n    closeContextMenu() {\r\n      this.menu.show = false;\r\n    },\r\n\r\n\r\n    /**\r\n     * Object hover behavior.\r\n     * @param o\r\n     *  The hovered object. `undefined` if nothing is hovered.\r\n     * @param c\r\n     *  The cursor to use.\r\n     */\r\n    onObjectHover(o: DiagramObjectModel | undefined, c: number) {\r\n      this.cursor = c;\r\n      this.execute(new Page.UnhoverDescendants(this.editor.page));\r\n      if(o) {\r\n        this.execute(new Page.HoverObject(o));\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Object click behavior.\r\n     * @param e\r\n     *  The click event.\r\n     * @param o\r\n     *  The clicked object.\r\n     * @param x\r\n     *  The clicked x-coordinate, relative to the container.\r\n     * @param y\r\n     *  The clicked y-coordinate, relative to the container.\r\n     */\r\n    onObjectClick(e: PointerEvent, o: DiagramObjectModel, x: number, y: number) {\r\n      // Unselect items, if needed\r\n      let isMultiselect = this.isHotkeyActive(this.multiselectHotkey);\r\n      if(!isMultiselect && !o.isSelected()) {\r\n        this.execute(new Page.UnselectDescendants(this.editor.page));\r\n      }\r\n      // Select item\r\n      this.execute(new Page.SelectObject(o));\r\n      // Open context menu, if needed\r\n      if (e.button === MouseClick.Right) {\r\n        this.openContextMenu(x, y);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Canvas click behavior.\r\n     * @param e\r\n     *  The click event.\r\n     * @param x\r\n     *  The clicked x-coordinate, relative to the container.\r\n     * @param y\r\n     *  The clicked y-coordinate, relative to the container.\r\n     */\r\n    onCanvasClick(e: PointerEvent, x: number, y: number) {\r\n      this.execute(new Page.UnselectDescendants(this.editor.page));\r\n      if (e.button === MouseClick.Right) {\r\n        this.openContextMenu(x, y);\r\n      }\r\n    },\r\n    \r\n    /**\r\n     * Object move behavior.\r\n     * @param o\r\n     *  The moved objects.\r\n     * @param dx\r\n     *  The change in x.\r\n     * @param dy\r\n     *  The change in y.\r\n     */\r\n    onObjectMove(o: DiagramObjectModel[], dx: number, dy:number) {\r\n      let cmd = new Page.GroupCommand();\r\n      for(let obj of o) {\r\n        if(!obj.hasUserSetPosition()) {\r\n            cmd.add(new Page.UserSetObjectPosition(obj));\r\n        }\r\n        cmd.add(new Page.MoveObjectBy(obj, dx, dy));\r\n      }\r\n      this.execute(cmd);\r\n    },\r\n\r\n    /**\r\n     * Object attach behavior.\r\n     * @param o\r\n     *  The object.\r\n     * @param a\r\n     *  The object's anchor.\r\n     */\r\n    onObjectAttach(o: DiagramAnchorableModel, a: DiagramAnchorModel) {\r\n      let { xMid, yMid } = a.boundingBox;\r\n      let cmd = new Page.GroupCommand();\r\n      if(o.isAttached()) {\r\n        cmd.add(new Page.DetachObject(o));  \r\n      }\r\n      cmd.add(new Page.MoveObjectTo(o, xMid, yMid));\r\n      cmd.add(new Page.AttachObject(a, o));\r\n      this.execute(cmd);\r\n    },\r\n\r\n    /**\r\n     * Object detach behavior.\r\n     * @param o\r\n     *  The object to detach.\r\n     * @param dx\r\n     *  The change in x.\r\n     * @param dy\r\n     *  The change in y.\r\n     */\r\n    onObjectDetach(o: DiagramAnchorableModel, dx: number, dy: number) {\r\n      let cmd = new Page.GroupCommand();\r\n      cmd.add(new Page.DetachObject(o));\r\n      cmd.add(new Page.MoveObjectBy(o, dx, dy));\r\n      this.execute(cmd);\r\n    },\r\n\r\n    /**\r\n     * Line create behavior.\r\n     * @param o\r\n     *  The line object.\r\n     * @param p\r\n     *  The parent object.\r\n     * @param s\r\n     *  The line source's anchor.\r\n     * @param t\r\n     *  The line target's anchor. `undefined` if there wasn't one.\r\n     */\r\n    onLineCreate(\r\n      o: DiagramLineModel,\r\n      p: DiagramObjectModel,\r\n      s: DiagramAnchorModel,\r\n      t?: DiagramAnchorModel\r\n    ) {\r\n      this.execute(new Page.AddLineObject(o, p, s, t));\r\n      this.execute(new Page.UnselectDescendants(this.editor.page));\r\n      this.execute(new Page.SelectObject(o));\r\n    },\r\n\r\n    /**\r\n     * View transform behavior.\r\n     * @param x\r\n     *  The view's left x-coordinate.\r\n     * @param y\r\n     *  The view's top y-coordinate.\r\n     * @param k\r\n     *  The view's scale.\r\n     * @param w\r\n     *  The view's width.\r\n     * @param h\r\n     *  The view's height.\r\n     */\r\n    onViewTransform(x: number, y: number, k: number, w: number, h: number) {\r\n      this.view = { x, y, k, w, h };\r\n      this.execute(\r\n        new App.SetEditorViewParams(\r\n          this.ctx, this.editor.id, { ...this.view }\r\n        )\r\n      );\r\n    }\r\n\r\n  },\r\n  watch: {\r\n    // On page change\r\n    editor() {\r\n      // Set page\r\n      this.diagram.setPage(markRaw(this.editor.page));\r\n      // Update view\r\n      this.diagram.updateView();\r\n      this.diagram.setCameraLocation(this.camera, 0);\r\n      // Configure view parameters\r\n      this.execute(\r\n        new App.SetEditorViewParams(\r\n          this.ctx, this.editor.id, { ...this.view }\r\n        )\r\n      );\r\n    },\r\n    // On camera update\r\n    camera() {\r\n      this.diagram.setCameraLocation(this.camera);\r\n    },\r\n    // On page update\r\n    pageUpdate() {\r\n      this.diagram.updateView();\r\n      this.diagram.render();\r\n    },\r\n    // On display grid change\r\n    displayGrid() {\r\n      this.diagram.setGridDisplay(this.displayGrid);\r\n      this.diagram.render();\r\n    },\r\n    // On display shadows change\r\n    displayShadows() {\r\n      this.diagram.setShadowsDisplay(this.displayShadows);\r\n      this.diagram.render();\r\n    },\r\n    // On display debug change\r\n    displayDebugMode() {\r\n      this.diagram.setDebugDisplay(this.displayDebugMode);\r\n      this.diagram.render();\r\n    },\r\n    // On render quality change\r\n    renderHighQuality() {\r\n      this.diagram.setSsaaScale(this.renderHighQuality ? 2 : 1);\r\n      this.diagram.render();\r\n    },\r\n    // On 'disable shadows at' change\r\n    disableShadowsAt() {\r\n      this.diagram.setShadowsDisableAt(this.disableShadowsAt);\r\n      this.diagram.render();\r\n    }\r\n  },\r\n  mounted() {\r\n    \r\n    // Subscribe to diagram events\r\n    this.diagram.on(\"object-hover\", this.onObjectHover);\r\n    this.diagram.on(\"object-click\", this.onObjectClick);\r\n    this.diagram.on(\"canvas-click\", this.onCanvasClick);\r\n    this.diagram.on(\"object-move\", this.onObjectMove);\r\n    this.diagram.on(\"object-attach\", this.onObjectAttach);\r\n    this.diagram.on(\"object-detach\", this.onObjectDetach);\r\n    this.diagram.on(\"view-transform\", this.onViewTransform);\r\n    this.diagram.on(\"line-create\", this.onLineCreate);\r\n\r\n    // Configure the current page\r\n    this.diagram.setGridDisplay(this.displayGrid);\r\n    this.diagram.setShadowsDisplay(this.displayShadows);\r\n    this.diagram.setDebugDisplay(this.displayDebugMode);\r\n    this.diagram.setSsaaScale(this.renderHighQuality ? 2 : 1);\r\n    this.diagram.setShadowsDisableAt(this.disableShadowsAt);\r\n    this.diagram.setPage(markRaw(this.editor.page));\r\n    \r\n    // Inject the diagram\r\n    this.diagram.inject(this.$el);\r\n    this.diagram.updateView();\r\n    this.diagram.setCameraLocation(this.camera, 0);\r\n\r\n  },\r\n  unmounted() {\r\n    this.diagram.destroy();\r\n  },\r\n  components: { ContextMenu }\r\n});\r\n","import { render } from \"./BlockDiagram.vue?vue&type=template&id=3e2ee7b8&scoped=true&ts=true\"\nimport script from \"./BlockDiagram.vue?vue&type=script&lang=ts\"\nexport * from \"./BlockDiagram.vue?vue&type=script&lang=ts\"\n\nimport \"./BlockDiagram.vue?vue&type=style&index=0&id=3e2ee7b8&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\mcarenzo\\\\Desktop\\\\attack-flow-builder - Copy\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3e2ee7b8\"]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-783f2534\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"app-footer-bar-element\" }\nconst _hoisted_2 = { class: \"info left\" }\nconst _hoisted_3 = { class: \"selected\" }\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"Selected:\", -1))\nconst _hoisted_5 = { class: \"info right\" }\nconst _hoisted_6 = {\n  key: 0,\n  class: \"page-check valid\"\n}\nconst _hoisted_7 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"✓\", -1))\nconst _hoisted_8 = {\n  key: 1,\n  class: \"page-check invalid\"\n}\nconst _hoisted_9 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"⚠\", -1))\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"p\", _hoisted_3, [\n        _hoisted_4,\n        _createTextVNode(\" \" + _toDisplayString(_ctx.hasSelection), 1)\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_5, [\n      (_ctx.isValid)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [\n            _hoisted_7,\n            _createTextVNode(\" Valid \" + _toDisplayString(_ctx.fileName), 1)\n          ]))\n        : (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [\n            _hoisted_9,\n            _createTextVNode(\" Invalid \" + _toDisplayString(_ctx.fileName), 1)\n          ]))\n    ])\n  ]))\n}","\r\nimport Configuration from \"@/assets/builder.config\";\r\nimport { defineComponent } from \"vue\";\r\nimport { mapGetters } from \"vuex\";\r\n\r\nexport default defineComponent({\r\n  name: \"AppFooterBar\",\r\n  data(){\r\n    return {\r\n      fileName: Configuration.file_type_name\r\n    }\r\n  },\r\n  computed: {\r\n\r\n    /**\r\n     * Application Store getters\r\n     */\r\n    ...mapGetters(\"ApplicationStore\", [\r\n        \"hasSelection\", \"isValid\"\r\n    ])\r\n    \r\n  }\r\n});\r\n","import { render } from \"./AppFooterBar.vue?vue&type=template&id=783f2534&scoped=true&ts=true\"\nimport script from \"./AppFooterBar.vue?vue&type=script&lang=ts\"\nexport * from \"./AppFooterBar.vue?vue&type=script&lang=ts\"\n\nimport \"./AppFooterBar.vue?vue&type=style&index=0&id=783f2534&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\mcarenzo\\\\Desktop\\\\attack-flow-builder - Copy\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-783f2534\"]])\n\nexport default __exports__","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_PropertyEditor = _resolveComponent(\"PropertyEditor\")!\n  const _component_AccordionPane = _resolveComponent(\"AccordionPane\")!\n  const _component_ValidatorProblems = _resolveComponent(\"ValidatorProblems\")!\n  const _component_AccordionBox = _resolveComponent(\"AccordionBox\")!\n\n  return (_openBlock(), _createBlock(_component_AccordionBox, { class: \"editor-tabs-element\" }, {\n    default: _withCtx(() => [\n      _createVNode(_component_AccordionPane, {\n        name: \"Properties\",\n        units: 3\n      }, {\n        default: _withCtx(() => [\n          _createVNode(_component_PropertyEditor, {\n            class: \"properties-pane\",\n            property: _ctx.selected\n          }, {\n            \"no-props\": _withCtx(() => [\n              _createTextVNode(\" The selected object has no properties. \")\n            ]),\n            \"no-prop\": _withCtx(() => [\n              _createTextVNode(\" Select a single object to edit its properties. \")\n            ]),\n            _: 1\n          }, 8, [\"property\"])\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_AccordionPane, {\n        name: \"Problems\",\n        units: 1\n      }, {\n        default: _withCtx(() => [\n          _createVNode(_component_ValidatorProblems, { class: \"validator-problems-pane\" })\n        ]),\n        _: 1\n      })\n    ]),\n    _: 1\n  }))\n}","\r\n// Dependencies\r\nimport { PointerTracker } from \"@/assets/scripts/PointerTracker\";\r\nimport { defineComponent, h, markRaw } from \"vue\";\r\n// Components\r\nimport CollapseArrow from \"@/components/Icons/CollapseArrow.vue\";\r\n\r\nexport default defineComponent({\r\n  name: \"AccordionBox\",\r\n  data() {\r\n    return {\r\n      track: markRaw(new PointerTracker()),\r\n      panes: [] as AccordionPaneHeight[],\r\n      activePane: 0,\r\n      onResizeObserver: null as ResizeObserver | null,\r\n    }\r\n  },\r\n  props: {\r\n    collapseHeight: {\r\n      type: Number,\r\n      default: 30,\r\n    }\r\n  },\r\n  computed: {\r\n\r\n    /**\r\n     * Returns the accordion box's style.\r\n     * @returns\r\n     *  The accordion box's style.\r\n     */\r\n    boxStyle() {\r\n      let gridTemplateRows = this.panes.map(\r\n        o => `${ o.activeHeight + this.collapseHeight }px`\r\n      ).join(\" \");\r\n      return { gridTemplateRows }\r\n    }\r\n\r\n  },\r\n  \r\n  methods: {\r\n\r\n    /**\r\n     * Pane collapse behavior.\r\n     * @param event\r\n     *  The pointer event.\r\n     * @param i\r\n     *  The index of the pane.\r\n     */\r\n    onCollapse(event: PointerEvent, i: number) {\r\n      if(this.panes[i].collapsed) {\r\n        this.uncollapsePane(i);\r\n      } else {\r\n        this.collapsePane(i);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Collapses a pane.\r\n     * @param i\r\n     *  The index of the pane.\r\n     */\r\n    collapsePane(i: number) {\r\n      let p = this.panes;\r\n\r\n      // Cache heights\r\n      this.cacheHeights();\r\n\r\n      // Calculate next height\r\n      let currentHeight = p.reduce((a,o) => a + o.cachedHeight, 0);\r\n      let elementHeight = this.getAvailableHeight(); \r\n      let nextHeight = currentHeight - p[i].cachedHeight;\r\n      \r\n      // Collapse window\r\n      p[i].collapsed = true;\r\n      p[i].activeHeight = 0;\r\n      p[i].uncollapsedHeight = p[i].cachedHeight;\r\n\r\n      // Return collapsed height if room available.\r\n      if(nextHeight < elementHeight) {\r\n        let available = elementHeight - nextHeight;\r\n        let availableDelta = Math.min(available, p[i].cachedHeight);\r\n        for(let j = p.length - 1; 0 <= j; j--) {\r\n          if(p[j].collapsed) {\r\n            continue;\r\n          }\r\n          p[j].activeHeight += availableDelta;\r\n          break;\r\n        }\r\n      }\r\n\r\n      // Cache heights\r\n      this.cacheHeights();\r\n\r\n    },\r\n\r\n    /**\r\n     * Uncollapses a pane.\r\n     * @param i\r\n     *  The index of the pane.\r\n     */\r\n    uncollapsePane(i: number) {\r\n      let p = this.panes;\r\n      let neededHeight = p[i].uncollapsedHeight;\r\n      \r\n      // Cache heights\r\n      this.cacheHeights();\r\n\r\n      // Take collapsed height from element if available\r\n      let currentHeight = p.reduce((a,o) => a + o.cachedHeight, 0);\r\n      let elementHeight = this.getAvailableHeight();\r\n      if(currentHeight === 0) {\r\n        p[i].activeHeight += elementHeight;\r\n        neededHeight -= Math.min(neededHeight, elementHeight);\r\n      }\r\n\r\n      // Take collapsed height from panes if available\r\n      for(let j = p.length - 1; 0 <= j; j--) {\r\n        if(p[j].collapsed) {\r\n          continue;\r\n        }\r\n        let available = p[j].cachedHeight - p[j].minHeight;\r\n        let availableDelta = Math.min(available, neededHeight);\r\n        p[j].activeHeight -= availableDelta;\r\n        p[i].activeHeight += availableDelta;\r\n        neededHeight -= availableDelta;\r\n      }\r\n\r\n      // Snap to minimum height if needed\r\n      p[i].activeHeight = Math.max(p[i].activeHeight, p[i].minHeight);\r\n      p[i].collapsed = false;\r\n\r\n      // Cache heights\r\n      this.cacheHeights();\r\n\r\n    },\r\n\r\n    /**\r\n     * Header drag start behavior.\r\n     * @param event\r\n     *  The pointer event.\r\n     * @param i\r\n     *  The index of the header.\r\n     */\r\n    startDrag(event: PointerEvent, i: number) {\r\n      // Cache heights\r\n      this.cacheHeights();\r\n      // Set active pane\r\n      this.activePane = i;\r\n      // Capture pointer\r\n      this.track.capture(event, this.onDrag);\r\n      // Configure stop drag\r\n      document.addEventListener(\"pointerup\", this.stopDrag, { once: true });\r\n    },\r\n\r\n    /**\r\n     * Header drag behavior.\r\n     * @param event\r\n     *  The pointer event.\r\n     * @param track\r\n     *  The mouse tracker.\r\n     */\r\n    onDrag(_: PointerEvent, track: PointerTracker) {\r\n      let p = this.panes;\r\n\r\n      // Ignore no movement\r\n      if(track.movementY === 0)\r\n        return;\r\n      \r\n      // Reset panes\r\n      p.forEach(o => o.activeHeight = o.cachedHeight);\r\n      \r\n      // Drag above origin\r\n      if(track.deltaY < 0) {\r\n        // Select grow pane\r\n        let growPane = -1;\r\n        for(let i = this.activePane!; i < p.length; i++) {\r\n          if(!p[i].collapsed) {\r\n            growPane = i;\r\n            break;\r\n          }\r\n        }\r\n        if(growPane === -1) {\r\n          return;\r\n        }\r\n        // Resize grow pane\r\n        let remainingDelta = Math.abs(track.deltaY);\r\n        for(let i = this.activePane! - 1; 0 <= i; i--) {\r\n          if(p[i].collapsed) {\r\n            continue;\r\n          }\r\n          let available = p[i].cachedHeight - p[i].minHeight;\r\n          let availableDelta = Math.min(available, remainingDelta);\r\n          p[i].activeHeight = p[i].cachedHeight - availableDelta;\r\n          remainingDelta -= availableDelta;\r\n        }\r\n        let growAmount = Math.abs(track.deltaY) - remainingDelta;\r\n        p[growPane].activeHeight = p[growPane].cachedHeight + growAmount; \r\n      }\r\n\r\n      // Drag below origin\r\n      else {\r\n        // Select grow pane\r\n        let growPane = -1;\r\n        for(let i = this.activePane! - 1; 0 <= i; i--) {\r\n          if(!p[i].collapsed) {\r\n            growPane = i;\r\n            break;\r\n          }\r\n        }\r\n        if(growPane === -1) {\r\n          return;\r\n        }\r\n        // Resize grow pane\r\n        let remainingDelta = track.deltaY;\r\n        for(let i = this.activePane!; i < p.length; i++) {\r\n          if(p[i].collapsed) {\r\n            continue;\r\n          }\r\n          let available = p[i].cachedHeight - p[i].minHeight;\r\n          let availableDelta = Math.min(available, remainingDelta);\r\n          p[i].activeHeight = p[i].cachedHeight - availableDelta;\r\n          remainingDelta -= availableDelta;\r\n        }\r\n        let growAmount = track.deltaY - remainingDelta;\r\n        p[growPane].activeHeight = p[growPane].cachedHeight + growAmount;\r\n      }\r\n      \r\n    },\r\n\r\n    /**\r\n     * Header drag stop behavior.\r\n     * @param event\r\n     *  The pointer event.\r\n     */\r\n    stopDrag(event: PointerEvent) {\r\n      // Release pointer\r\n      this.track.release(event);\r\n      // Cache heights\r\n      this.cacheHeights();\r\n    },\r\n\r\n    /**\r\n     * Refits the panes inside the container.\r\n     */\r\n    refit() {\r\n      let p = this.panes;\r\n      let currentHeight = p.reduce((a,o) => a + o.cachedHeight, 0);\r\n      let elementHeight = this.getAvailableHeight();\r\n      \r\n      // If no height, bail\r\n      if(currentHeight === 0) {\r\n        return;\r\n      }\r\n\r\n      // Grow\r\n      else if(currentHeight <= elementHeight) {\r\n        let proportions = p.map(o => o.cachedHeight / currentHeight);\r\n        for(let i = 0; i < p.length; i++) {\r\n          p[i].activeHeight = elementHeight * proportions[i];\r\n        }\r\n      }\r\n\r\n      // Shrink\r\n      else {\r\n        let minElementHeight = p.reduce((a,o) => a + (o.collapsed ? 0 : o.minHeight), 0);\r\n        let n = currentHeight - Math.max(minElementHeight, elementHeight);\r\n        let d = currentHeight - minElementHeight;\r\n        let percentToMinimum = d !== 0 ? n / d : 1;\r\n        for(let i = 0; i < p.length; i++) {\r\n          if(p[i].collapsed) {\r\n            continue;\r\n          }\r\n          let delta = (p[i].cachedHeight - p[i].minHeight) * percentToMinimum;\r\n          p[i].activeHeight = p[i].cachedHeight - delta;\r\n        }\r\n      }\r\n\r\n    },\r\n\r\n    /**\r\n     * Resets the panes inside the container.\r\n     */\r\n    reset() {\r\n      if(!this.$slots.default)\r\n        return;\r\n\r\n      // Setup panes and heights\r\n      let panes: AccordionPaneHeight[] = [];\r\n      let units: number[] = [];\r\n      for(let slot of this.$slots.default()) {\r\n        units.push(slot.props?.units ?? 1);\r\n        panes.push({\r\n          minHeight: slot.props?.minHeight ?? 100,\r\n          activeHeight: 0,\r\n          cachedHeight: 0,\r\n          uncollapsedHeight: 0,\r\n          collapsed: slot.props?.collapsed ?? false\r\n        });\r\n      }\r\n      let totalHeight = this.getAvailableHeight();\r\n\r\n      // Configure base height\r\n      let totalUnits = units.reduce((a,b) => a+b);\r\n      for(let i = 0; i < panes.length; i++) {\r\n        let p = panes[i];\r\n        let height = totalHeight * (units[i] / totalUnits)\r\n        p.cachedHeight = Math.max(p.minHeight, height);\r\n      }\r\n      this.panes = panes;\r\n\r\n      // Fit to container\r\n      this.refit();\r\n\r\n      // Apply collapse state\r\n      for(let i = 0; i < this.panes.length; i++) {\r\n        if(this.panes[i].collapsed)\r\n          this.collapsePane(i);\r\n      }\r\n\r\n    },\r\n\r\n    /**\r\n     * Returns the amount of useable space available from the container.\r\n     */\r\n    getAvailableHeight() {\r\n      let height = this.$el.clientHeight;\r\n      if(!this.$slots.default) {\r\n        return height;\r\n      } else {\r\n        let totalPanes = this.$slots.default().length;\r\n        return height - (totalPanes * this.collapseHeight);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Caches the height of each pane.\r\n     */\r\n    cacheHeights() {\r\n      for(let pane of this.panes) {\r\n        pane.cachedHeight = pane.activeHeight;\r\n      }\r\n    }\r\n\r\n  },\r\n  mounted() {\r\n    // Configure resize observer\r\n    this.onResizeObserver = new ResizeObserver(() => this.refit());\r\n    this.onResizeObserver.observe(this.$el);\r\n    // Reset boxes\r\n    this.reset();\r\n  },\r\n  unmounted() {\r\n    this.onResizeObserver!.disconnect();\r\n  },\r\n  render() {\r\n    let children = [];\r\n    if(this.$slots.default) {\r\n      let _slots = this.$slots.default();\r\n      // Generate accordion boxes\r\n      for(let i = 0; i < _slots.length; i++) {\r\n        let slot = _slots[i];\r\n        // Generate handle\r\n        let handle = h(\r\n          \"div\",\r\n          {\r\n            class: \"accordion-box-handle\",\r\n            onPointerup: (e: PointerEvent) => this.stopDrag(e),\r\n            onPointerdown: (e: PointerEvent) => this.startDrag(e, i)\r\n          }\r\n        );\r\n        // Generate head\r\n        let head = h(\r\n          \"div\",\r\n          {\r\n            class: \"accordion-box-head\",\r\n            style: { height: `${ this.$props.collapseHeight }px` },\r\n            onClick: (e: PointerEvent) => this.onCollapse(e, i)\r\n          },\r\n          [\r\n            h(\r\n              CollapseArrow,\r\n              { \r\n                class: \"collapse-arrow\",\r\n                collapsed: this.panes[i]?.collapsed\r\n              }\r\n            ),\r\n            h(\"p\", slot.props?.name.toLocaleUpperCase())\r\n          ]\r\n        );\r\n        // Generate body\r\n        let body = h(\"div\", { class: \"accordion-box-body\" }, slot);\r\n        // Generate box\r\n        let box = h(\r\n          \"div\",\r\n          { \r\n            class: [\r\n              \"accordion-box\",\r\n              { collapsed: this.panes[i]?.collapsed }\r\n            ]\r\n          },\r\n          [handle, head, body]\r\n        );\r\n        // Add box\r\n        children.push(box);\r\n      }\r\n    }\r\n    // Return accordion box container\r\n    return h(\r\n      \"div\",\r\n      { \r\n        class: \"accordion-box-container\",\r\n        style: this.boxStyle,\r\n      },\r\n      children\r\n    )\r\n  },\r\n});\r\n\r\ntype AccordionPaneHeight = {\r\n  minHeight: number,\r\n  activeHeight: number,\r\n  cachedHeight: number,\r\n  uncollapsedHeight: number,\r\n  collapsed: boolean\r\n}\r\n\r\n","import script from \"./AccordionBox.vue?vue&type=script&lang=ts\"\nexport * from \"./AccordionBox.vue?vue&type=script&lang=ts\"\n\nimport \"./AccordionBox.vue?vue&type=style&index=0&id=39ee0bdf&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\mcarenzo\\\\Desktop\\\\attack-flow-builder - Copy\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-39ee0bdf\"]])\n\nexport default __exports__","import { renderSlot as _renderSlot, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-22255fa2\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"accordion-pane-container\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _renderSlot(_ctx.$slots, \"default\", {}, undefined, true)\n  ]))\n}","\r\nimport { defineComponent } from \"vue\";\r\n\r\nexport default defineComponent({\r\n  name: \"AccordionPane\",\r\n  props: {\r\n    name: {\r\n      type: String,\r\n      required: true \r\n    },\r\n    units: {\r\n      type: Number,\r\n      default: 1\r\n    },\r\n    minHeight: {\r\n      type: Number,\r\n      default: 100\r\n    },\r\n    collapsed: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  }\r\n});\r\n","import { render } from \"./AccordionPane.vue?vue&type=template&id=22255fa2&scoped=true&ts=true\"\nimport script from \"./AccordionPane.vue?vue&type=script&lang=ts\"\nexport * from \"./AccordionPane.vue?vue&type=script&lang=ts\"\n\nimport \"./AccordionPane.vue?vue&type=style&index=0&id=22255fa2&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\mcarenzo\\\\Desktop\\\\attack-flow-builder - Copy\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-22255fa2\"]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, renderSlot as _renderSlot, createElementBlock as _createElementBlock, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-5d47093b\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"object-editor-element\" }\nconst _hoisted_2 = {\n  key: 1,\n  class: \"no-prop\"\n}\nconst _hoisted_3 = {\n  key: 1,\n  class: \"no-prop\"\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_DictionaryFieldContents = _resolveComponent(\"DictionaryFieldContents\")!\n  const _component_ScrollBox = _resolveComponent(\"ScrollBox\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    (_ctx.property)\n      ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n          (_ctx.hasEditableProperties)\n            ? (_openBlock(), _createBlock(_component_ScrollBox, {\n                key: 0,\n                alwaysShowScrollBar: true,\n                scrollColor: \"#1f1f1f\"\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_DictionaryFieldContents, {\n                    class: \"contents\",\n                    property: _ctx.property,\n                    onChange: _ctx.onChange,\n                    onCreate: _ctx.onCreate,\n                    onDelete: _ctx.onDelete\n                  }, null, 8, [\"property\", \"onChange\", \"onCreate\", \"onDelete\"])\n                ]),\n                _: 1\n              }))\n            : (_openBlock(), _createElementBlock(\"p\", _hoisted_2, [\n                _renderSlot(_ctx.$slots, \"no-props\", {}, undefined, true)\n              ]))\n        ], 64))\n      : (_openBlock(), _createElementBlock(\"p\", _hoisted_3, [\n          _renderSlot(_ctx.$slots, \"no-prop\", {}, undefined, true)\n        ]))\n  ]))\n}","\r\nimport * as Page from \"@/store/Commands/PageCommands\";\r\n// Dependencies\r\nimport { mapMutations } from \"vuex\";\r\nimport { defineComponent, PropType } from \"vue\";\r\nimport { \r\n  DateProperty,\r\n  DictionaryProperty,\r\n  EnumProperty,\r\n  ListProperty,\r\n  NumberProperty,\r\n  Property,\r\n  PropertyType,\r\n  StringProperty\r\n} from \"@/assets/scripts/BlockDiagram\";\r\n// Components\r\nimport ScrollBox from \"@/components/Containers/ScrollBox.vue\";\r\nimport DictionaryFieldContents from \"@/components/Controls/Fields/DictionaryFieldContents.vue\";\r\n\r\nexport default defineComponent({\r\n  name: \"PropertyEditor\",\r\n  props: {\r\n    property: {\r\n      type: Object as PropType<DictionaryProperty>,\r\n      default: undefined\r\n    }\r\n  },\r\n  computed: {\r\n\r\n    /**\r\n     * Tests if the property has editable subproperties.\r\n     * @returns\r\n     *  True if the property has editable subproperties, false otherwise.\r\n     */\r\n    hasEditableProperties(): boolean {\r\n      if(!this.property) {\r\n        return false;\r\n      }\r\n      for(let value of this.property.value.values()) {\r\n        if(value.descriptor.is_visible ?? true)\r\n          return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n  },\r\n  methods: {\r\n\r\n    /**\r\n     * Application Store actions\r\n     */\r\n    ...mapMutations(\"ApplicationStore\", [\"execute\"]),\r\n\r\n    /**\r\n     * Field change behavior.\r\n     * @param property\r\n     *  The field's property.\r\n     * @param value\r\n     *  The field's new value.\r\n     */\r\n    onChange(property: Property, value: any) {\r\n      switch(property.type) {\r\n        case PropertyType.Int:\r\n        case PropertyType.Float:\r\n          if(property instanceof NumberProperty) {\r\n            this.execute(new Page.SetNumberProperty(property, value));\r\n          }\r\n          break;\r\n        case PropertyType.String:\r\n          if(property instanceof StringProperty) {\r\n            this.execute(new Page.SetStringProperty(property, value));\r\n          }\r\n          break;\r\n        case PropertyType.Date:\r\n          if(property instanceof DateProperty) {\r\n            this.execute(new Page.SetDateProperty(property, value));\r\n          }\r\n          break;\r\n        case PropertyType.Enum:\r\n          if(property instanceof EnumProperty) {\r\n            this.execute(new Page.SetEnumProperty(property, value));\r\n          }\r\n          break;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Field create subproperty behavior.\r\n     * @param property\r\n     *  The field's property.\r\n     */\r\n    onCreate(property: Property) {\r\n      switch(property.type) {\r\n        case PropertyType.List:\r\n          if(property instanceof ListProperty) {\r\n            this.execute(new Page.CreateSubproperty(property));\r\n          }\r\n          break;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Field delete subproperty behavior.\r\n     * @param property\r\n     *  The field's property.\r\n     * @param id\r\n     *  The subproperty's id.\r\n     */\r\n    onDelete(property: Property, id: string) {\r\n      switch(property.type) {\r\n        case PropertyType.List:\r\n          if(property instanceof ListProperty) {\r\n            this.execute(new Page.DeleteSubproperty(property, id));\r\n          }\r\n          break;\r\n      }\r\n    }\r\n\r\n  },\r\n  components: { ScrollBox, DictionaryFieldContents }\r\n});\r\n","import { render } from \"./PropertyEditor.vue?vue&type=template&id=5d47093b&scoped=true&ts=true\"\nimport script from \"./PropertyEditor.vue?vue&type=script&lang=ts\"\nexport * from \"./PropertyEditor.vue?vue&type=script&lang=ts\"\n\nimport \"./PropertyEditor.vue?vue&type=style&index=0&id=5d47093b&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\mcarenzo\\\\Desktop\\\\attack-flow-builder - Copy\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5d47093b\"]])\n\nexport default __exports__","import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-511f70e2\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"validator-problems-element\" }\nconst _hoisted_2 = { class: \"content\" }\nconst _hoisted_3 = [\"onClick\"]\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"icon\" }, \"\", -1))\nconst _hoisted_5 = { class: \"message\" }\nconst _hoisted_6 = [\"onClick\"]\nconst _hoisted_7 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"icon\" }, \"\", -1))\nconst _hoisted_8 = { class: \"message\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ScrollBox = _resolveComponent(\"ScrollBox\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    (0 < _ctx.getValidationErrors.length || 0 < _ctx.getValidationWarnings.length)\n      ? (_openBlock(), _createBlock(_component_ScrollBox, {\n          key: 0,\n          class: \"scrollbox\",\n          alwaysShowScrollBar: true,\n          scrollColor: \"#1f1f1f\"\n        }, {\n          default: _withCtx(() => [\n            _createElementVNode(\"div\", _hoisted_2, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.getValidationErrors, (error) => {\n                return (_openBlock(), _createElementBlock(\"div\", {\n                  class: \"validation-result error\",\n                  key: error,\n                  onClick: ($event: any) => (_ctx.focus(error.object))\n                }, [\n                  _hoisted_4,\n                  _createElementVNode(\"p\", _hoisted_5, _toDisplayString(error.reason), 1)\n                ], 8, _hoisted_3))\n              }), 128)),\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.getValidationWarnings, (warning) => {\n                return (_openBlock(), _createElementBlock(\"div\", {\n                  class: \"validation-result warning\",\n                  key: warning,\n                  onClick: ($event: any) => (_ctx.focus(warning.object))\n                }, [\n                  _hoisted_7,\n                  _createElementVNode(\"p\", _hoisted_8, _toDisplayString(warning.reason), 1)\n                ], 8, _hoisted_6))\n              }), 128))\n            ])\n          ]),\n          _: 1\n        }))\n      : _createCommentVNode(\"\", true)\n  ]))\n}","\r\nimport * as Page from \"@/store/Commands/PageCommands\";\r\nimport * as Store from \"@/store/StoreTypes\";\r\n// Dependencies\r\nimport { defineComponent } from \"vue\";\r\nimport { mapGetters, mapMutations, mapState } from \"vuex\";\r\n// Components\r\nimport ScrollBox from \"@/components/Containers/ScrollBox.vue\";\r\n\r\nexport default defineComponent({\r\n  name: \"ValidatorProblems\",\r\n  computed: {\r\n\r\n    /**\r\n     * Application Store data\r\n     */\r\n    ...mapState(\"ApplicationStore\", {\r\n      ctx(state: Store.ApplicationStore): Store.ApplicationStore {\r\n        return state;\r\n      },\r\n      editor(state: Store.ApplicationStore): Store.PageEditor {\r\n        return state.activePage;\r\n      }\r\n    }),\r\n\r\n    ...mapGetters(\"ApplicationStore\", [\r\n        \"getValidationErrors\", \"getValidationWarnings\"\r\n    ])\r\n  \r\n  },\r\n  methods: {\r\n\r\n    /**\r\n     * Application Store actions\r\n     */\r\n    ...mapMutations(\"ApplicationStore\", [\"execute\"]),\r\n\r\n    /**\r\n     * Focuses the camera on an object.\r\n     * @param id\r\n     *  The id of the object.\r\n     */\r\n    focus(id: string) {\r\n      let obj = this.editor.page.lookup(id);\r\n      if(obj) {\r\n        this.execute(new Page.UnselectDescendants(this.editor.page));\r\n        this.execute(new Page.SelectObject(obj));\r\n        this.execute(new Page.MoveCameraToSelection(this.ctx, this.editor.page))\r\n      }\r\n    }\r\n\r\n  },\r\n  components: { ScrollBox }\r\n});\r\n","import { render } from \"./ValidatorProblems.vue?vue&type=template&id=511f70e2&scoped=true&ts=true\"\nimport script from \"./ValidatorProblems.vue?vue&type=script&lang=ts\"\nexport * from \"./ValidatorProblems.vue?vue&type=script&lang=ts\"\n\nimport \"./ValidatorProblems.vue?vue&type=style&index=0&id=511f70e2&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\mcarenzo\\\\Desktop\\\\attack-flow-builder - Copy\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-511f70e2\"]])\n\nexport default __exports__","\r\nimport * as Store from \"@/store/StoreTypes\";\r\n// Dependencies\r\nimport { defineComponent } from \"vue\";\r\nimport { mapGetters, mapState } from \"vuex\";\r\nimport { DictionaryProperty, PageModel } from \"@/assets/scripts/BlockDiagram\";\r\n// Components\r\nimport AccordionBox from \"@/components/Containers/AccordionBox.vue\";\r\nimport AccordionPane from \"@/components/Containers/AccordionPane.vue\";\r\nimport PropertyEditor from \"@/components/Elements/PropertyEditor.vue\";\r\nimport ValidatorProblems from \"@/components/Elements/ValidatorProblems.vue\";\r\n\r\nexport default defineComponent({\r\n  name: \"EditorSidebar\",\r\n  computed: {\r\n\r\n    /**\r\n     * Application Store data\r\n     */\r\n    ...mapState(\"ApplicationStore\", {\r\n      page(state: Store.ApplicationStore): PageModel {\r\n        return state.activePage.page;\r\n      },\r\n    }),\r\n\r\n    ...mapGetters(\"ApplicationStore\", [\r\n      \"hasSelection\", \"getSelection\"\r\n    ]),\r\n\r\n    /**\r\n     * Returns the currently selected object's properties.\r\n     * @returns\r\n     *  The currently selected object's properties.\r\n     */\r\n    selected(): DictionaryProperty | undefined {\r\n      if(this.hasSelection === 0) {\r\n        return this.page.props;\r\n      } else if(this.hasSelection === 1) {\r\n        return this.getSelection[0].props;\r\n      }\r\n      return undefined;\r\n    }\r\n\r\n  },\r\n  components: { \r\n    AccordionBox,\r\n    AccordionPane,\r\n    PropertyEditor,\r\n    ValidatorProblems\r\n  }\r\n});\r\n","import { render } from \"./EditorSidebar.vue?vue&type=template&id=09fcd1e8&scoped=true&ts=true\"\nimport script from \"./EditorSidebar.vue?vue&type=script&lang=ts\"\nexport * from \"./EditorSidebar.vue?vue&type=script&lang=ts\"\n\nimport \"./EditorSidebar.vue?vue&type=style&index=0&id=09fcd1e8&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\mcarenzo\\\\Desktop\\\\attack-flow-builder - Copy\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-09fcd1e8\"]])\n\nexport default __exports__","\nimport * as Store from \"@/store/StoreTypes\";\nimport Configuration from \"@/assets/builder.config\"\n// Dependencies\nimport { clamp } from \"./assets/scripts/BlockDiagram\";\nimport { PointerTracker } from \"./assets/scripts/PointerTracker\";\nimport { mapMutations, mapState } from 'vuex';\nimport { LoadFile, LoadSettings } from './store/Commands/AppCommands';\nimport { defineComponent, markRaw, ref } from 'vue';\n// Components\nimport AppTitleBar from \"@/components/Elements/AppTitleBar.vue\";\nimport AppHotkeyBox from \"@/components/Elements/AppHotkeyBox.vue\";\nimport BlockDiagram from \"@/components/Elements/BlockDiagram.vue\";\nimport AppFooterBar from \"@/components/Elements/AppFooterBar.vue\";\nimport EditorSidebar from \"@/components/Elements/EditorSidebar.vue\";\n\nimport FILE from \"../test_file.json\";\n\nconst Handle = {\n  None   : 0,\n  Right  : 1\n}\n\nexport default defineComponent({\n  name: 'App',\n  setup() {\n    return { body: ref<HTMLElement | null>(null) };\n  },\n  data() {\n    return {\n      Handle,\n      bodyWidth: -1,\n      bodyHeight: -1,\n      frameSize: {\n        [Handle.Right]: 325\n      },\n      minFrameSize: {\n        [Handle.Right]: 310\n      },\n      drag: {\n        handle: Handle.None,\n        track: markRaw(new PointerTracker())\n      },\n      onResizeObserver: null as ResizeObserver | null\n    }\n  },\n  computed: {\n\n    /**\n     * Application Store data\n     */\n    ...mapState(\"ApplicationStore\", {\n      context(state: Store.ApplicationStore): Store.ApplicationStore {\n        return state;\n      }\n    }),\n\n    /**\n     * Returns the current grid layout.\n     * @returns\n     *  The current grid layout.\n     */\n    gridLayout(): { gridTemplateColumns: string } {\n      let r = this.frameSize[Handle.Right];\n      return {\n        gridTemplateColumns: `minmax(0, 1fr) ${ r }px`\n      }\n    }\n\n  },\n  methods: {\n    \n    /**\n     * Application Store mutations\n     */\n    ...mapMutations(\"ApplicationStore\", [\"execute\"]),\n\n    /**\n     * Resize handle drag start behavior.\n     * @param event\n     *  The pointer event.\n     * @param handle\n     *  The id of the handle being dragged.\n     */\n    startResize(event: PointerEvent, handle: number) {\n      let origin = this.frameSize[handle];\n      this.drag.handle = handle;\n      this.drag.track.capture(event, (_, track) => {\n        this.onResize(origin, track);\n      });\n      document.addEventListener(\"pointerup\", this.stopResize, { once: true });\n    },\n\n    /**\n     * Resize handle drag behavior.\n     * @param origin\n     *  The frame's origin.\n     * @param track\n     *  The mouse tracker.\n     */\n    onResize(origin: number, track: PointerTracker) {\n      switch (this.drag.handle) {\n        default:\n        case Handle.None:\n          break;\n        case Handle.Right:\n          this.setRightFrameSize(origin - track.deltaX);\n          break;\n      }\n    },\n\n    /**\n     * Resize handle drag stop behavior.\n     * @param event\n     *  The pointer event.\n     */\n    stopResize(event: PointerEvent) {\n      this.drag.handle = Handle.None;\n      this.drag.track.release(event);\n    },\n\n    /**\n     * Sets the size of the right frame.\n     * @param size\n     *  The new size of the right frame.\n     */\n    setRightFrameSize(size: number) {\n      let max = this.bodyWidth;\n      let min = this.minFrameSize[Handle.Right];\n      this.frameSize[Handle.Right] = clamp(size, min, max);\n    }\n\n  },\n  async created() {\n    // Import settings\n    let settings;\n    if(Configuration.is_web_hosted) {\n        settings = await (await fetch(\"./settings.json\")).json();\n    } else {\n        settings = require(\"../public/settings.json\");\n    }\n    // Load settings\n    this.execute(new LoadSettings(this.context, settings));\n    this.execute(await LoadFile.fromNew(this.context));\n    // this.execute(await LoadFile.fromFile(this.context, JSON.stringify(FILE)));\n  },\n  mounted() {\n    this.bodyWidth = this.body!.clientWidth;\n    this.bodyHeight = this.body!.clientHeight;\n    this.onResizeObserver = new ResizeObserver(() => {\n      // Update current body size\n      this.bodyWidth = this.body!.clientWidth;\n      this.bodyHeight = this.body!.clientHeight;\n      // Restrict bottom and right frames\n      this.setRightFrameSize(this.frameSize[Handle.Right]);\n    });\n    this.onResizeObserver.observe(this.body!);\n    \n  },\n  unmounted() {\n    this.onResizeObserver?.disconnect();\n  },\n  components: {\n    AppHotkeyBox,\n    AppTitleBar,\n    BlockDiagram,\n    AppFooterBar,\n    EditorSidebar\n  },\n});\n","import { render } from \"./App.vue?vue&type=template&id=45953439&ts=true\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=45953439&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\mcarenzo\\\\Desktop\\\\attack-flow-builder - Copy\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { PageEditor } from \"@/store/PageEditor\"\r\nimport { DiagramValidator } from \"@/assets/scripts/DiagramValidator/DiagramValidator\"\r\nimport { DiagramPublisher } from \"@/assets/scripts/DiagramPublisher/DiagramPublisher\"\r\nimport { BlockDiagramSchema } from \"@/assets/scripts/BlockDiagram/DiagramFactory\"\r\nimport { DiagramObjectModel } from \"@/assets/scripts/BlockDiagram\"\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  1. Stores  ////////////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n/**\r\n * Central Module Store\r\n */\r\nexport type ModuleStore = {\r\n    ApplicationStore: ApplicationStore,\r\n    ContextMenuStore: ContextMenuStore,\r\n    HotkeyStore: HotkeyStore\r\n}\r\n\r\n\r\n/**\r\n * Application Store\r\n */\r\nexport type ApplicationStore = {\r\n    settings: AppSettings,\r\n    clipboard: DiagramObjectModel[],\r\n    publisher: DiagramPublisher | undefined,\r\n    pages: Map<string, PageEditor>,\r\n    activePage: PageEditor\r\n}\r\n\r\n/**\r\n * Context Menu Store\r\n */\r\nexport type ContextMenuStore = {}\r\n\r\n/**\r\n * Hotkey Store\r\n */\r\nexport type HotkeyStore = {}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  2. App Settings  //////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n/**\r\n * Base App Settings\r\n */\r\nexport const BaseAppSettings: AppSettings = {\r\n    file: {\r\n        image_export: {\r\n            padding: 0,\r\n        }\r\n    },\r\n    edit: {\r\n        clone_offset: [0, 0]\r\n    },\r\n    view: {\r\n        diagram: {\r\n            display_grid: true,\r\n            display_shadows: true,\r\n            display_debug_mode: false,\r\n            render_high_quality: true,\r\n            disable_shadows_at: 0\r\n        }\r\n    },\r\n    hotkeys: {\r\n        file: { \r\n            new_file: \"\",\r\n            open_file: \"\",\r\n            save_file: \"\",\r\n            save_image: \"\",\r\n            save_select_image: \"\",\r\n            publish_file: \"\",\r\n            open_library: \"\",\r\n            save_library: \"\"\r\n        },\r\n        edit: {\r\n            undo: \"\",\r\n            redo: \"\",\r\n            cut: \"\",\r\n            copy: \"\",\r\n            paste: \"\",\r\n            delete: \"\",\r\n            duplicate: \"\",\r\n            select_all: \"\"\r\n        },\r\n        layout: {\r\n            selection_to_front: \"\",\r\n            selection_to_back: \"\",\r\n            bring_selection_forward: \"\",\r\n            send_selection_backward: \"\",\r\n            align_left: \"\",\r\n            align_center: \"\",\r\n            align_right: \"\",\r\n            align_top: \"\",\r\n            align_middle: \"\",\r\n            align_bottom: \"\",\r\n            group: \"\",\r\n            ungroup: \"\",\r\n            open_group: \"\",\r\n            close_group: \"\"\r\n        },\r\n        view: {\r\n            toggle_grid: \"\",\r\n            toggle_shadows: \"\",\r\n            reset_view: \"\",\r\n            zoom_in: \"\",\r\n            zoom_out: \"\",\r\n            fullscreen: \"\",\r\n            jump_to_selection: \"\",\r\n            jump_to_parents: \"\",\r\n            jump_to_children: \"\",\r\n            toggle_debug_view: \"\",\r\n        },\r\n        select: {\r\n            many: \"\"\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * App Settings file\r\n */\r\nexport type AppSettings = {\r\n    file: {\r\n        image_export: {\r\n            padding: number\r\n        }\r\n    },\r\n    edit: {\r\n        clone_offset: [number, number]\r\n    },\r\n    view: {\r\n        diagram: DiagramDisplaySettings\r\n    },\r\n    hotkeys: {\r\n        file: FileHotkeys,\r\n        edit: EditHotkeys,\r\n        layout: LayoutHotkeys,\r\n        view: ViewHotkeys,\r\n        select: SelectHotkeys\r\n    }\r\n}\r\n\r\n/**\r\n * Diagram display settings\r\n */\r\nexport type DiagramDisplaySettings = {\r\n    display_grid: boolean,\r\n    display_shadows: boolean,\r\n    display_debug_mode: boolean,\r\n    render_high_quality: boolean,\r\n    disable_shadows_at: number\r\n}\r\n\r\n/**\r\n * File hotkeys\r\n */\r\nexport type FileHotkeys = { \r\n    new_file: string,\r\n    open_file: string,\r\n    save_file: string,\r\n    save_image: string,\r\n    save_select_image: string,\r\n    publish_file: string,\r\n    open_library: string,\r\n    save_library: string\r\n}\r\n\r\n/**\r\n * Edit hotkeys\r\n */\r\nexport type EditHotkeys = {\r\n    undo: string,\r\n    redo: string,\r\n    cut: string,\r\n    copy: string,\r\n    paste: string,\r\n    delete: string,\r\n    duplicate: string,\r\n    select_all: string\r\n}\r\n\r\n/**\r\n * Layout hotkeys\r\n */\r\nexport type LayoutHotkeys = {\r\n    selection_to_front: string,\r\n    selection_to_back: string,\r\n    bring_selection_forward: string,\r\n    send_selection_backward: string,\r\n    align_left: string,\r\n    align_center: string,\r\n    align_right: string,\r\n    align_top: string,\r\n    align_middle: string,\r\n    align_bottom: string,\r\n    group: string,\r\n    ungroup: string,\r\n    open_group: string,\r\n    close_group: string\r\n}\r\n\r\n/**\r\n * View hotkeys\r\n */\r\nexport type ViewHotkeys = {\r\n    toggle_grid: string,\r\n    toggle_shadows: string,\r\n    reset_view: string,\r\n    zoom_in: string,\r\n    zoom_out: string,\r\n    jump_to_selection: string,\r\n    jump_to_parents: string,\r\n    jump_to_children: string,\r\n    fullscreen: string,\r\n    toggle_debug_view: string\r\n}\r\n\r\n/**\r\n * Select hotkeys\r\n */\r\nexport type SelectHotkeys = {\r\n    many: string\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  3. App Configuration  /////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n/**\r\n * The application's configuration\r\n */\r\nexport type AppConfiguration = {\r\n    file_type_name: string,\r\n    file_type_extension: string,\r\n    is_web_hosted: boolean\r\n    schema: BlockDiagramSchema,\r\n    help_links: { text: string, url: string }[],\r\n    validator?: typeof DiagramValidator,\r\n    publisher?: typeof DiagramPublisher\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  4. Type Helpers  //////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n/**\r\n * Returns all keys of object type `T` whose value matches type `V`.\r\n * \r\n * Typescript Reference: \r\n *  - {@link https://www.typescriptlang.org/docs/handbook/2/mapped-types.html#mapping-modifiers Mapped Type Modifiers}\r\n *  - {@link https://www.typescriptlang.org/docs/handbook/2/conditional-types.html Conditional Types}\r\n *  - {@link https://www.typescriptlang.org/docs/handbook/2/indexed-access-types.html Index Access Types} \r\n */\r\nexport type ObjectKeysOfType<T, V> = { [K in keyof T]-?: T[K] extends V ? K : never }[keyof T];\r\n\r\n\r\n/**\r\n * Returns all valid key/value pairs from type `T`.\r\n */\r\nexport type KeyValuePairs<T> = {\r\n    [K in keyof T] : {\r\n        key: K,\r\n        value: T[K]\r\n    }\r\n}[keyof T];\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//  5. Page Editor  ///////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport * from \"./PageEditor\";\r\n","import Configuration from \"@/assets/builder.config\";\r\nimport { Module } from \"vuex\"\r\nimport { PageEditor } from \"@/store/PageEditor\";\r\nimport { AppCommand } from \"@/store/Commands/AppCommand\";\r\nimport { PageCommand } from \"@/store/Commands/PageCommand\";\r\nimport { DiagramObjectModel } from \"@/assets/scripts/BlockDiagram\";\r\nimport { ValidationErrorResult, ValidationWarningResult } from \"@/assets/scripts/DiagramValidator\";\r\nimport { ModuleStore, ApplicationStore, BaseAppSettings } from \"@/store/StoreTypes\"\r\n\r\nconst Publisher = Configuration.publisher ? \r\n    new Configuration.publisher() : undefined;\r\n\r\nconst DummyPage = PageEditor.createDummy();\r\n\r\nexport default {\r\n    namespaced: true,\r\n    state: {\r\n        settings: BaseAppSettings,\r\n        clipboard: [],\r\n        publisher: Publisher,\r\n        pages: new Map([[ DummyPage.id, DummyPage ]]),\r\n        activePage: DummyPage\r\n    },\r\n    getters: {\r\n\r\n        /**\r\n         * Tests if the clipboard has contents.\r\n         * @param state\r\n         *  The Vuex state.\r\n         * @returns\r\n         *  True if the clipboard has contents, false otherwise.\r\n         */\r\n        hasClipboardContents(state): boolean {\r\n            return 0 < state.clipboard.length;\r\n        },\r\n\r\n        /**\r\n         * Tests if the active page has a selection.\r\n         * @param state\r\n         *  The Vuex state.\r\n         * @returns\r\n         *  The number of items selected.\r\n         */\r\n        hasSelection(state): number {\r\n            let s = [...state.activePage.page.getSubtree(o => o.isSelected())];\r\n            // Use trigger to trip the reactivity system\r\n            return (state.activePage.trigger.value ? s : s).length;\r\n        },\r\n\r\n        /**\r\n         * Returns the active page's selection.\r\n         * @param state\r\n         *  The Vuex state.\r\n         * @returns\r\n         *  The selected objects.\r\n         */\r\n        getSelection(state): DiagramObjectModel[] {\r\n            let s = [...state.activePage.page.getSubtree(o => o.isSelected())];\r\n            // Use trigger to trip the reactivity system\r\n            return state.activePage.trigger.value ? s : s;\r\n        },\r\n\r\n        /**\r\n         * Tests if the active page represents a valid diagram per the\r\n         * configured validator. If the application is not configured with a\r\n         * validator, true is returned by default.\r\n         * @param state\r\n         *  The Vuex state.\r\n         * @returns\r\n         *  True if the page is valid, false otherwise.\r\n         */\r\n        isValid(state): boolean {\r\n            let p = state.activePage;\r\n            // Use trigger to trip the reactivity system\r\n            return (state.activePage.trigger.value ? p : p).isValid();\r\n        },\r\n\r\n        /**\r\n         * Returns the active page's validation errors. If the application is\r\n         * not configured with a validator, an empty array is returned.\r\n         * @param state\r\n         *  The Vuex state.\r\n         * @returns\r\n         *  The active page's validation errors.\r\n         */\r\n        getValidationErrors(state): ValidationErrorResult[] {\r\n            let p = state.activePage;\r\n            // Use trigger to trip the reactivity system\r\n            return (state.activePage.trigger.value ? p : p).getValidationErrors(); \r\n        },\r\n\r\n        /**\r\n         * Returns the active page's validation warnings. If the application is\r\n         * not configured with a validator, an empty array is returned.\r\n         * @param state\r\n         *  The Vuex state.\r\n         * @returns\r\n         *  The active page's validation warnings.\r\n         */\r\n        getValidationWarnings(state): ValidationWarningResult[] {\r\n            let p = state.activePage;\r\n            // Use trigger to trip the reactivity system\r\n            return (state.activePage.trigger.value ? p : p).getValidationWarnings();\r\n        }\r\n\r\n    },\r\n    mutations: {\r\n\r\n        /**\r\n         * Executes an application command.\r\n         * @param state\r\n         *  The Vuex state. \r\n         * @param command\r\n         *  The application command.\r\n         */\r\n        execute(state, command: AppCommand | PageCommand) {\r\n            if(command instanceof PageCommand) {\r\n                // Ignore null page\r\n                if(command.page === PageCommand.NullPage)\r\n                    return;\r\n                // Execute command\r\n                let editor = state.pages.get(command.page);\r\n                if(editor) {\r\n                    editor.execute(command);\r\n                } else {\r\n                    throw new Error(\r\n                        `'${ command.page }' is not a page.`\r\n                    );\r\n                }\r\n            } else {\r\n                command.execute();\r\n            }\r\n        }\r\n\r\n    }\r\n} as Module<ApplicationStore, ModuleStore>\r\n","import Configuration from \"@/assets/builder.config\";\r\nimport * as App from \"@/store/Commands/AppCommands\";\r\nimport * as Page from \"@/store/Commands/PageCommands\";\r\nimport { Module } from \"vuex\";\r\nimport { ContextMenuStore, ModuleStore } from \"../StoreTypes\";\r\nimport { ContextMenu, ContextMenuSection, MenuType } from \"@/assets/scripts/ContextMenuTypes\";\r\n\r\nexport default {\r\n    namespaced: true,\r\n    getters: {\r\n\r\n\r\n        ///////////////////////////////////////////////////////////////////////\r\n        //  1. File Menu  /////////////////////////////////////////////////////\r\n        ///////////////////////////////////////////////////////////////////////\r\n\r\n\r\n        /**\r\n         * Returns the file menu.\r\n         * @param _s\r\n         *  The Vuex state. (Unused)\r\n         * @param getters\r\n         *  The Vuex getters. (Unused)\r\n         * @param rootState\r\n         *  The Vuex root state.\r\n         * @returns\r\n         *  The file menu.\r\n         */\r\n        fileMenu(_s, getters, rootState): ContextMenu {\r\n            let ctx = rootState.ApplicationStore;\r\n            // Sections\r\n            let sections: ContextMenuSection[] = [\r\n                getters.openFileMenu,\r\n                getters.saveFileMenu,\r\n                ctx.publisher ? getters.publishFileMenu : null\r\n            ].filter(Boolean);\r\n            // Menu\r\n            return { text: \"File\", type: MenuType.Submenu, sections };\r\n        },\r\n\r\n        /**\r\n         * Returns the 'open file' menu section.\r\n         * @param _s\r\n         *  The Vuex state. (Unused)\r\n         * @param _g\r\n         *  The Vuex getters. (Unused)\r\n         * @param rootState\r\n         *  The Vuex root state.\r\n         * @returns\r\n         *  The 'open file' menu section.\r\n         */\r\n        openFileMenu(_s, _g, rootState): ContextMenuSection {\r\n            let ctx = rootState.ApplicationStore;\r\n            let file = ctx.settings.hotkeys.file;\r\n            return {\r\n                id: \"open_file_options\",\r\n                items: [\r\n                    {\r\n                        text: \"New File\",\r\n                        type: MenuType.Item,\r\n                        data: () => App.LoadFile.fromNew(ctx),\r\n                        shortcut: file.new_file,\r\n                    },\r\n                    {\r\n                        text: `Open File...`,\r\n                        type: MenuType.Item,\r\n                        data: () => App.LoadFile.fromFileSystem(ctx),\r\n                        shortcut: file.open_file,\r\n                    }\r\n                ],\r\n            }\r\n        },\r\n        \r\n        /**\r\n         * Returns the 'save file' menu section.\r\n         * @param _s\r\n         *  The Vuex state. (Unused)\r\n         * @param _g\r\n         *  The Vuex getters. (Unused)\r\n         * @param rootState\r\n         *  The Vuex root state.\r\n         * @param rootGetters\r\n         *  The Vuex root getters.\r\n         * @returns\r\n         *  The 'save file' menu section.\r\n         */\r\n        saveFileMenu(_s, _g, rootState, rootGetters): ContextMenuSection {\r\n            let ctx = rootState.ApplicationStore;\r\n            let file = ctx.settings.hotkeys.file;\r\n            let page = ctx.activePage.page;\r\n            return {\r\n                id: \"save_file_options\",\r\n                items: [\r\n                    {\r\n                        text: \"Save\",\r\n                        type: MenuType.Item,\r\n                        data: () => new App.SavePageToDevice(ctx, page.id),\r\n                        shortcut: file.save_file\r\n                    },\r\n                    {\r\n                        text: \"Save as Image\",\r\n                        type: MenuType.Item,\r\n                        data: () => new App.SavePageImageToDevice(ctx, page.id),\r\n                        shortcut: file.save_image\r\n                    },\r\n                    {\r\n                        text: \"Save Selection as Image\",\r\n                        type: MenuType.Item,\r\n                        data: () => new App.SaveSelectionImageToDevice(ctx, page.id),\r\n                        shortcut: file.save_select_image,\r\n                        disabled: !rootGetters[\"ApplicationStore/hasSelection\"],\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Returns the 'publish file' menu section.\r\n         * @param _s\r\n         *  The Vuex state. (Unused)\r\n         * @param _g\r\n         *  The Vuex getters. (Unused)\r\n         * @param rootState\r\n         *  The Vuex root state.\r\n         * @param rootGetters\r\n         *  The Vuex root getters.\r\n         * @returns\r\n         *  The 'publish file' menu section.\r\n         */\r\n        publishFileMenu(_s, _g, rootState, rootGetters): ContextMenuSection {\r\n            let ctx = rootState.ApplicationStore;\r\n            let file = ctx.settings.hotkeys.file;\r\n            let page = ctx.activePage.page;\r\n            return {\r\n                id: \"publish_options\",\r\n                items: [\r\n                    {\r\n                        text: `Publish ${ Configuration.file_type_name }`,\r\n                        type: MenuType.Item,\r\n                        data: () => new App.PublishPageToDevice(ctx, page.id),\r\n                        shortcut: file.publish_file,\r\n                        disabled: !rootGetters[\"ApplicationStore/isValid\"]\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n\r\n\r\n        ///////////////////////////////////////////////////////////////////////\r\n        //  2. Edit Menus  ////////////////////////////////////////////////////\r\n        ///////////////////////////////////////////////////////////////////////\r\n\r\n\r\n        /**\r\n         * Returns the edit menu.\r\n         * @param _s\r\n         *  The Vuex state. (Unused)\r\n         * @param getters\r\n         *  The Vuex getters.\r\n         * @returns\r\n         *  The edit menu.\r\n         */\r\n        editMenu(_s, getters): ContextMenu {\r\n            return {\r\n                text: \"Edit\",\r\n                type: MenuType.Submenu,\r\n                sections: [\r\n                    getters.undoRedoMenu,\r\n                    getters.clipboardMenu,\r\n                    getters.deleteMenu,\r\n                    getters.duplicateMenu,\r\n                    getters.createMenu,\r\n                    getters.selectAllMenu\r\n                ]\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Returns the undo/redo menu section.\r\n         * @param _s\r\n         *  The Vuex state. (Unused)\r\n         * @param _g\r\n         *  The Vuex getters. (Unused)\r\n         * @param rootState\r\n         *  The Vuex root state.\r\n         * @returns\r\n         *  The undo/redo menu section.\r\n         */\r\n        undoRedoMenu(_s, _g, rootState): ContextMenuSection {\r\n            let ctx = rootState.ApplicationStore;\r\n            let page = ctx.activePage.page;\r\n            let edit = ctx.settings.hotkeys.edit;\r\n            return {\r\n                id: \"undo_redo_options\",\r\n                items: [\r\n                    {\r\n                        text: \"Undo\",\r\n                        type: MenuType.Item,\r\n                        data: () => new Page.UndoPageCommand(ctx, page.id),\r\n                        shortcut: edit.undo,\r\n                        disabled: !ctx.activePage.canUndo()\r\n                    },\r\n                    {\r\n                        text: \"Redo\",\r\n                        type: MenuType.Item,\r\n                        data: () => new Page.RedoPageCommand(ctx, page.id),\r\n                        shortcut: edit.redo,\r\n                        disabled: !ctx.activePage.canRedo()\r\n                    }\r\n                ],\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Returns the clipboard menu section.\r\n         * @param _s\r\n         *  The Vuex state. (Unused)\r\n         * @param _g\r\n         *  The Vuex getters. (Unused)\r\n         * @param rootState\r\n         *  The Vuex root state.\r\n         * @param rootGetters\r\n         *  The Vuex root getters.\r\n         * @returns\r\n         *  The clipboard menu section.\r\n         */\r\n        clipboardMenu(_s, _g, rootState, rootGetters): ContextMenuSection {\r\n            let ctx = rootState.ApplicationStore;\r\n            let page = ctx.activePage.page;\r\n            let edit = ctx.settings.hotkeys.edit;\r\n            let canPaste = ctx.clipboard.length;\r\n            let hasSelection = rootGetters[\"ApplicationStore/hasSelection\"];\r\n            return {\r\n                id: \"clipboard_options\",\r\n                items: [\r\n                    {\r\n                        text: \"Cut\",\r\n                        type: MenuType.Item,\r\n                        data: () => new Page.CutSelectedChildren(ctx, page),\r\n                        shortcut: edit.cut,\r\n                        disabled: !hasSelection\r\n                    },\r\n                    {\r\n                        text: \"Copy\",\r\n                        type: MenuType.Item,\r\n                        data: () => new App.CopySelectedChildren(ctx, page),\r\n                        shortcut: edit.copy,\r\n                        disabled: !hasSelection\r\n                    },\r\n                    {\r\n                        text: \"Paste\",\r\n                        type: MenuType.Item,\r\n                        data: () => new Page.PasteToObject(ctx, page),\r\n                        shortcut: edit.paste,\r\n                        disabled: !canPaste\r\n                    }\r\n                ],\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Returns the delete menu section.\r\n         * @param _s\r\n         *  The Vuex state. (Unused)\r\n         * @param _g\r\n         *  The Vuex getters. (Unused)\r\n         * @param rootState\r\n         *  The Vuex root state.\r\n         * @param rootGetters\r\n         *  The Vuex root getters.\r\n         * @returns\r\n         *  The delete menu section.\r\n         */\r\n        deleteMenu(_s, _g, rootState, rootGetters): ContextMenuSection {\r\n            let ctx = rootState.ApplicationStore;\r\n            let page = ctx.activePage.page;\r\n            let edit = ctx.settings.hotkeys.edit;\r\n            let hasSelection = rootGetters[\"ApplicationStore/hasSelection\"];\r\n            return {\r\n                id: \"delete_options\",\r\n                items: [\r\n                    {\r\n                        text: \"Delete\",\r\n                        type: MenuType.Item,\r\n                        data: () => new Page.RemoveSelectedChildren(page),\r\n                        shortcut: edit.delete,\r\n                        disabled: !hasSelection\r\n                    }\r\n                ]\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Returns the duplicate menu section.\r\n         * @param _s\r\n         *  The Vuex state. (Unused)\r\n         * @param _g\r\n         *  The Vuex getters. (Unused)\r\n         * @param rootState\r\n         *  The Vuex root state.\r\n         * @param rootGetters\r\n         *  The Vuex root getters.\r\n         * @returns\r\n         *  The duplicate menu section.\r\n         */\r\n        duplicateMenu(_s, _g, rootState, rootGetters): ContextMenuSection {\r\n            let ctx = rootState.ApplicationStore;\r\n            let page = ctx.activePage.page;\r\n            let edit = ctx.settings.hotkeys.edit;\r\n            let hasSelection = rootGetters[\"ApplicationStore/hasSelection\"];\r\n            return {\r\n                id: \"duplicate_options\",\r\n                items: [\r\n                    {\r\n                        text: \"Duplicate\",\r\n                        type: MenuType.Item,\r\n                        data: () => new Page.DuplicateSelectedChildren(ctx, page),\r\n                        shortcut: edit.duplicate,\r\n                        disabled: !hasSelection\r\n                    }\r\n                ]\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Returns the 'select all' menu section.\r\n         * @param _s\r\n         *  The Vuex state. (Unused)\r\n         * @param _g\r\n         *  The Vuex getters. (Unused)\r\n         * @param rootState\r\n         *  The Vuex root state.\r\n         * @returns\r\n         *  The 'select all' menu section.\r\n         */\r\n        selectAllMenu(_s, _g, rootState): ContextMenuSection {\r\n            let ctx = rootState.ApplicationStore;\r\n            let page = ctx.activePage.page;\r\n            let edit = ctx.settings.hotkeys.edit;\r\n            return {\r\n                id: \"select_options\",\r\n                items: [\r\n                    {\r\n                        text: \"Select All\",\r\n                        type: MenuType.Item,\r\n                        data: () => new Page.SelectChildren(page),\r\n                        shortcut: edit.select_all,\r\n                    }\r\n                ],\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Returns the create menu section.\r\n         * @param _s\r\n         *  The Vuex state. (Unused)\r\n         * @param _g\r\n         *  The Vuex getters. (Unused)\r\n         * @param rootState\r\n         *  The Vuex root state.\r\n         * @returns\r\n         *  The create menu section.\r\n         */\r\n        createMenu(_s, _g, rootState): ContextMenuSection {\r\n            let ctx = rootState.ApplicationStore;\r\n            let page = ctx.activePage.page;\r\n            // Compile blocks\r\n            let blocks: ContextMenu[] = [];\r\n            for(let template of page.factory.getBlockTemplates()) {\r\n                blocks.push({\r\n                    text: template.name,\r\n                    type: MenuType.Item,\r\n                    data: () => new Page.SpawnObject(\r\n                        ctx, page, template.id\r\n                    ),\r\n                });\r\n            }\r\n            // Compile lines\r\n            let lines: ContextMenu[] = [];\r\n            for(let template of page.factory.getLineTemplates()) {\r\n                lines.push({\r\n                    text: template.name,\r\n                    type: MenuType.Item,\r\n                    data: () => new Page.SpawnObject(\r\n                        ctx, page, template.id\r\n                    ),\r\n                })\r\n            }\r\n            // Return menu\r\n            return {\r\n                id: \"create_options\",\r\n                items: [\r\n                    {\r\n                        text: \"Create\",\r\n                        type: MenuType.Submenu,\r\n                        sections: [\r\n                            { id: \"blocks\", items: blocks },\r\n                            { id: \"lines\",  items: lines }\r\n                        ]\r\n                    }\r\n                ]\r\n            };\r\n        },\r\n\r\n\r\n        ///////////////////////////////////////////////////////////////////////\r\n        //  3. Layout Menus  //////////////////////////////////////////////////\r\n        ///////////////////////////////////////////////////////////////////////\r\n\r\n\r\n        /**\r\n         * Returns the time menu.\r\n         * @param _s\r\n         *  The Vuex state. (Unused)\r\n         * @param getters\r\n         *  The Vuex getters.\r\n         * @returns\r\n         *  The time menu.\r\n         */\r\n        layoutMenu(_s, getters): ContextMenu {\r\n            return {\r\n                text: \"Layout\",\r\n                type: MenuType.Submenu,\r\n                sections: [\r\n                    getters.layeringMenu\r\n                ]\r\n            };\r\n        },\r\n\r\n\r\n        /**\r\n         * Returns the layering menu section.\r\n         * @param _s\r\n         *  The Vuex state. (Unused)\r\n         * @param _g\r\n         *  The Vuex getters. (Unused)\r\n         * @param rootState\r\n         *  The Vuex root state.\r\n         * @returns\r\n         *  The layering menu section.\r\n         */\r\n        layeringMenu(_s, _g, rootState): ContextMenuSection {\r\n            let ctx = rootState.ApplicationStore;\r\n            let page = ctx.activePage.page;\r\n            let layout = ctx.settings.hotkeys.layout;\r\n            return {\r\n                id: \"layering_options\",\r\n                items: [\r\n                    {\r\n                        text: \"To Front\",\r\n                        type: MenuType.Item,\r\n                        data: () => new Page.RelayerSelection(page, Page.Order.Top),\r\n                        shortcut: layout.selection_to_front,\r\n                    },\r\n                    {\r\n                        text: \"To Back\",\r\n                        type: MenuType.Item,\r\n                        data: () => new Page.RelayerSelection(page, Page.Order.Bottom),\r\n                        shortcut: layout.selection_to_back,\r\n                    },\r\n                    {\r\n                        text: \"Bring Forward\",\r\n                        type: MenuType.Item,\r\n                        data: () => new Page.RelayerSelection(page, Page.Order.OneAbove),\r\n                        shortcut: layout.bring_selection_forward,\r\n                    },\r\n                    {\r\n                        text: \"Send Backward\",\r\n                        type: MenuType.Item,\r\n                        data: () => new Page.RelayerSelection(page, Page.Order.OneBelow),\r\n                        shortcut: layout.send_selection_backward,\r\n                    }\r\n                ],\r\n            }\r\n        },\r\n\r\n        \r\n        ///////////////////////////////////////////////////////////////////////\r\n        //  4. View Menus  ////////////////////////////////////////////////////\r\n        ///////////////////////////////////////////////////////////////////////\r\n\r\n\r\n        /**\r\n         * Returns the view menu.\r\n         * @param _s\r\n         *  The Vuex state. (Unused)\r\n         * @param getters\r\n         *  The Vuex getters.\r\n         * @returns\r\n         *  The view menu.\r\n         */\r\n        viewMenu(_s, getters): ContextMenu {\r\n            return {\r\n                text: \"View\",\r\n                type: MenuType.Submenu,\r\n                sections: [\r\n                    getters.diagramViewMenu,\r\n                    getters.diagramRenderMenu,\r\n                    getters.zoomMenu,\r\n                    getters.jumpMenu,\r\n                    getters.fullscreenMenu,\r\n                    getters.developerViewMenu\r\n                ]\r\n            }\r\n        },\r\n\r\n\r\n        /**\r\n         * Returns the diagram view menu section.\r\n         * @param _s\r\n         *  The Vuex state. (Unused)\r\n         * @param _g\r\n         *  The Vuex getters. (Unused)\r\n         * @param rootState\r\n         *  The Vuex root state.\r\n         * @returns\r\n         *  The diagram view menu section.\r\n         */\r\n        diagramViewMenu(_s, _g, rootState): ContextMenuSection {\r\n            let ctx = rootState.ApplicationStore;\r\n            let view = ctx.settings.hotkeys.view;\r\n            let { \r\n                display_grid,\r\n                display_shadows\r\n            } = ctx.settings.view.diagram;\r\n            return {\r\n                id: \"diagram_view_options\",\r\n                items: [\r\n                    {\r\n                        text: \"Grid\",\r\n                        type: MenuType.Toggle,\r\n                        data: () => new App.ToggleGridDisplay(ctx),\r\n                        shortcut: view.toggle_grid,\r\n                        value: display_grid,\r\n                        keepMenuOpenOnSelect: true\r\n                    },\r\n                    {\r\n                        text: \"Shadows\",\r\n                        type: MenuType.Toggle,\r\n                        data: () => new App.ToggleShadowDisplay(ctx),\r\n                        shortcut: view.toggle_shadows,\r\n                        value: display_shadows,\r\n                        keepMenuOpenOnSelect: true\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Returns the diagram render menu section.\r\n         * @param _s\r\n         *  The Vuex state. (Unused)\r\n         * @param _g\r\n         *  The Vuex getters. (Unused)\r\n         * @param rootState\r\n         *  The Vuex root state.\r\n         * @returns\r\n         *  The diagram render menu section.\r\n         */\r\n        diagramRenderMenu(_s, _g, rootState): ContextMenuSection {\r\n            let ctx = rootState.ApplicationStore;\r\n            let render_high_quality = ctx.settings.view.diagram.render_high_quality;\r\n            return {\r\n                id: \"diagram_render_quality\",\r\n                items: [\r\n                    {\r\n                        text: \"Rendering – High Quality\",\r\n                        type: MenuType.Toggle,\r\n                        data: () => new App.SetRenderQuality(ctx, true),\r\n                        value: render_high_quality,\r\n                        keepMenuOpenOnSelect: true\r\n                    },\r\n                    {\r\n                        text: \"Rendering – Fast\",\r\n                        type: MenuType.Toggle,\r\n                        data: () => new App.SetRenderQuality(ctx, false),\r\n                        value: !render_high_quality,\r\n                        keepMenuOpenOnSelect: true\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Returns the zoom menu section.\r\n         * @param _s\r\n         *  The Vuex state. (Unused)\r\n         * @param _g\r\n         *  The Vuex getters. (Unused)\r\n         * @param rootState\r\n         *  The Vuex root state.\r\n         * @returns\r\n         *  The zoom menu section.\r\n         */\r\n        zoomMenu(_s, _g, rootState): ContextMenuSection {\r\n            let ctx = rootState.ApplicationStore;\r\n            let page = ctx.activePage.page;\r\n            let view = ctx.settings.hotkeys.view;\r\n            return {\r\n                id: \"zoom_options\",\r\n                items: [\r\n                    {\r\n                        text: \"Reset View\",\r\n                        type: MenuType.Item,\r\n                        data: () => new Page.ResetCamera(ctx, page),\r\n                        shortcut: view.reset_view\r\n                    },\r\n                    {\r\n                        text: \"Zoom In\",\r\n                        type: MenuType.Item,\r\n                        data: () => new Page.ZoomCamera(ctx, page, 0.25),\r\n                        shortcut: view.zoom_in\r\n                    },\r\n                    {\r\n                        text: \"Zoom Out\",\r\n                        type: MenuType.Item,\r\n                        data: () => new Page.ZoomCamera(ctx, page, -0.25),\r\n                        shortcut: view.zoom_out\r\n                    },\r\n                ]\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Returns the jump menu section.\r\n         * @param _s\r\n         *  The Vuex state. (Unused)\r\n         * @param _g\r\n         *  The Vuex getters. (Unused)\r\n         * @param rootState\r\n         *  The Vuex root state.\r\n         * @param rootGetters\r\n         *  The Vuex root getters.\r\n         * @returns\r\n         *  The jump menu section.\r\n         */\r\n        jumpMenu(_s, _g, rootState, rootGetters): ContextMenuSection {\r\n            let ctx = rootState.ApplicationStore;\r\n            let page = ctx.activePage.page;\r\n            let view = ctx.settings.hotkeys.view;\r\n            let hasSelection = rootGetters[\"ApplicationStore/hasSelection\"];\r\n            return {\r\n                id: \"jump_options\",\r\n                items: [\r\n                    {\r\n                        text: \"Zoom to Selection\",\r\n                        type: MenuType.Item,\r\n                        data: () => new Page.MoveCameraToSelection(ctx, page),\r\n                        shortcut: view.jump_to_selection,\r\n                        disabled: !hasSelection\r\n                    },\r\n                    {\r\n                        text: \"Jump to Parents\",\r\n                        type: MenuType.Item,\r\n                        data: () => new Page.MoveCameraToParents(ctx, page),\r\n                        shortcut: view.jump_to_parents,\r\n                        disabled: !hasSelection\r\n                    },\r\n                    {\r\n                        text: \"Jump to Children\",\r\n                        type: MenuType.Item,\r\n                        data: () => new Page.MoveCameraToChildren(ctx, page),\r\n                        shortcut: view.jump_to_children,\r\n                        disabled: !hasSelection\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Returns the fullscreen menu section.\r\n         * @param _s\r\n         *  The Vuex state. (Unused)\r\n         * @param _g\r\n         *  The Vuex getters. (Unused)\r\n         * @param rootState\r\n         *  The Vuex root state.\r\n         * @returns\r\n         *  The fullscreen menu section.\r\n         */\r\n        fullscreenMenu(_s, _g, rootState): ContextMenuSection {\r\n            let ctx = rootState.ApplicationStore;\r\n            let view = ctx.settings.hotkeys.view;\r\n            return {\r\n                id: \"fullscreen_options\",\r\n                items: [\r\n                    {\r\n                        text: \"Fullscreen\",\r\n                        type: MenuType.Item,\r\n                        data: () => new App.SwitchToFullscreen(ctx),\r\n                        shortcut: view.fullscreen,\r\n                    }\r\n                ],\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Returns the developer view menu section.\r\n         * @param _s\r\n         *  The Vuex state. (Unused)\r\n         * @param _g\r\n         *  The Vuex getters. (Unused)\r\n         * @param rootState\r\n         *  The Vuex root state.\r\n         * @returns\r\n         *  The developer view menu section.\r\n         */\r\n        developerViewMenu(_s, _g, rootState): ContextMenuSection {\r\n            let ctx = rootState.ApplicationStore;\r\n            let view = ctx.settings.hotkeys.view;\r\n            let { display_debug_mode } = ctx.settings.view.diagram;\r\n            return {\r\n                id: \"developer_view_options\",\r\n                items: [\r\n                    {\r\n                        text: \"Debug Mode\",\r\n                        type: MenuType.Toggle,\r\n                        data: () => new App.ToggleDebugDisplay(ctx),\r\n                        shortcut: view.toggle_debug_view,\r\n                        value: display_debug_mode,\r\n                        keepMenuOpenOnSelect: true\r\n                    }\r\n                ],\r\n            };\r\n        },\r\n\r\n        \r\n        ///////////////////////////////////////////////////////////////////////\r\n        //  5. Help Menu  /////////////////////////////////////////////////////\r\n        ///////////////////////////////////////////////////////////////////////\r\n\r\n\r\n        /**\r\n         * Returns the help menu.\r\n         * @param _s\r\n         *  The Vuex state. (Unused)\r\n         * @param _g\r\n         *  The Vuex getters. (Unused)\r\n         * @param rootState\r\n         *  The Vuex root state.\r\n         * @returns\r\n         *  The help menu.\r\n         */\r\n        helpMenu(_s, _g, rootState): ContextMenu {\r\n            let ctx = rootState.ApplicationStore;\r\n            let links = Configuration.help_links;\r\n            // Links\r\n            let items: ContextMenu[] = links.map(link => ({\r\n                text: link.text,\r\n                type: MenuType.Item,\r\n                data: () => new App.OpenHyperlink(ctx, link.url)\r\n            }));\r\n            // Menu\r\n            return {\r\n                text: \"Help\",\r\n                type: MenuType.Submenu,\r\n                sections: [{ id: \"help_links\", items }]\r\n            };\r\n        }\r\n\r\n    }\r\n\r\n} as Module<ContextMenuStore, ModuleStore>\r\n","import * as App from \"@/store/Commands/AppCommands\";\r\nimport * as Page from \"@/store/Commands/PageCommands\";\r\nimport { Module } from \"vuex\"\r\nimport { Hotkey } from \"@/assets/scripts/HotkeyObserver\"\r\nimport { CommandEmitter } from \"../Commands/Command\";\r\nimport { HotkeyStore, ModuleStore } from \"../StoreTypes\";\r\n\r\nexport default {\r\n    namespaced: true,\r\n    getters: {\r\n\r\n        /**\r\n         * Returns the native hotkeys.\r\n         * @returns\r\n         *  The supported native hotkeys.\r\n         */\r\n        nativeHotkeys(): Hotkey<CommandEmitter>[] {\r\n            return [\r\n                {\r\n                    shortcut: \"Control+R\",\r\n                    allowBrowserBehavior: true\r\n                },\r\n                {\r\n                    shortcut: \"Control+Shift+R\",\r\n                    allowBrowserBehavior: true\r\n                }\r\n            ]\r\n        },\r\n\r\n        /**\r\n         * Returns the file hotkeys.\r\n         * @param _s\r\n         *  The Vuex state. (Unused)\r\n         * @param _g\r\n         *  The Vuex getters. (Unused)\r\n         * @param rootState\r\n         *  The Vuex root state.\r\n         * @param rootGetters\r\n         *  The Vuex root getters.\r\n         * @returns\r\n         *  The file hotkeys.\r\n         */\r\n        fileHotkeys(_s, _g, rootState, rootGetters): Hotkey<CommandEmitter>[] {\r\n            let ctx = rootState.ApplicationStore;\r\n            let page = ctx.activePage.page;\r\n            let file = ctx.settings.hotkeys.file;\r\n            let isValid = rootGetters[\"ApplicationStore/isValid\"];\r\n            return [\r\n                {\r\n                    data: () => App.LoadFile.fromNew(ctx),\r\n                    shortcut: file.new_file,\r\n                },\r\n                {\r\n                    data: () => App.LoadFile.fromFileSystem(ctx),\r\n                    shortcut: file.open_file,\r\n                },\r\n                {\r\n                    data: () => new App.SavePageToDevice(ctx, page.id),\r\n                    shortcut: file.save_file\r\n                },\r\n                {\r\n                    data: () => new App.SavePageImageToDevice(ctx, page.id),\r\n                    shortcut: file.save_image,\r\n                },\r\n                {\r\n                    data: () => new App.SaveSelectionImageToDevice(ctx, page.id),\r\n                    shortcut: file.save_select_image\r\n                },\r\n                {\r\n                    data: () => new App.PublishPageToDevice(ctx, page.id),\r\n                    shortcut: file.publish_file,\r\n                    disabled: !ctx.publisher || !isValid\r\n                }\r\n            ];\r\n        },\r\n\r\n        /**\r\n         * Returns the edit hotkeys.\r\n         * @param _s\r\n         *  The Vuex state. (Unused)\r\n         * @param _g\r\n         *  The Vuex getters. (Unused)\r\n         * @param rootState\r\n         *  The Vuex root state.\r\n         * @returns\r\n         *  The edit hotkeys.\r\n         */\r\n        editHotKeys(_s, _g, rootState): Hotkey<CommandEmitter>[] {\r\n            let ctx = rootState.ApplicationStore;\r\n            let page = ctx.activePage.page;\r\n            let edit = ctx.settings.hotkeys.edit;\r\n            let repeat = { delay: 400, interval: 50 };\r\n            return [\r\n                {\r\n                    data: () => new Page.UndoPageCommand(ctx, page.id),\r\n                    shortcut: edit.undo,\r\n                    repeat\r\n                },\r\n                {\r\n                    data: () => new Page.RedoPageCommand(ctx, page.id),\r\n                    shortcut: edit.redo,\r\n                    repeat\r\n                },\r\n                {\r\n                    data: () => new Page.CutSelectedChildren(ctx, page),\r\n                    shortcut: edit.cut,\r\n                },\r\n                {\r\n                    data: () => new App.CopySelectedChildren(ctx, page),\r\n                    shortcut: edit.copy,\r\n                },\r\n                {\r\n                    data: () => new Page.PasteToObject(ctx, page),\r\n                    shortcut: edit.paste,\r\n                },\r\n                {\r\n                    data: () => new Page.RemoveSelectedChildren(page),\r\n                    shortcut: edit.delete\r\n                },\r\n                {\r\n                    data: () => new Page.DuplicateSelectedChildren(ctx, page),\r\n                    shortcut: edit.duplicate\r\n                },\r\n                {\r\n                    data: () => new Page.SelectChildren(page),\r\n                    shortcut: edit.select_all\r\n                }\r\n            ];\r\n        },\r\n\r\n        /**\r\n         * Returns the layout hotkeys.\r\n         * @param _s\r\n         *  The Vuex state. (Unused)\r\n         * @param _g\r\n         *  The Vuex getters. (Unused)\r\n         * @param rootState\r\n         *  The Vuex root state.\r\n         * @returns\r\n         *  The layout hotkeys.\r\n         */\r\n        layoutHotkeys(_s, _g, rootState): Hotkey<CommandEmitter>[] {\r\n            let ctx = rootState.ApplicationStore;\r\n            let page = ctx.activePage.page;\r\n            let layout = ctx.settings.hotkeys.layout;\r\n            return [\r\n                {\r\n                    data: () => new Page.RelayerSelection(page, Page.Order.Top),\r\n                    shortcut: layout.selection_to_front\r\n                },\r\n                {\r\n                    data: () => new Page.RelayerSelection(page, Page.Order.OneBelow),\r\n                    shortcut: layout.selection_to_back\r\n                },\r\n                {\r\n                    data: () => new Page.RelayerSelection(page, Page.Order.OneAbove),\r\n                    shortcut: layout.bring_selection_forward\r\n                },\r\n                {\r\n                    data: () => new Page.RelayerSelection(page, Page.Order.Bottom),\r\n                    shortcut: layout.send_selection_backward\r\n                }\r\n            ];\r\n        },\r\n\r\n        /**\r\n         * Returns the view hotkeys.\r\n         * @param _s\r\n         *  The Vuex state. (Unused)\r\n         * @param _g\r\n         *  The Vuex getters. (Unused)\r\n         * @param rootState\r\n         *  The Vuex root state.\r\n         * @returns\r\n         *  The view hotkeys.\r\n         */\r\n        viewHotkeys(_s, _g, rootState): Hotkey<CommandEmitter>[] {\r\n            let ctx = rootState.ApplicationStore;\r\n            let page = ctx.activePage.page;\r\n            let view = ctx.settings.hotkeys.view;\r\n            return  [\r\n                {\r\n                    data: () => new App.ToggleGridDisplay(ctx),\r\n                    shortcut: view.toggle_grid,\r\n                },\r\n                {\r\n                    data: () => new App.ToggleShadowDisplay(ctx),\r\n                    shortcut: view.toggle_shadows,\r\n                },\r\n                {\r\n                    data: () => new Page.ResetCamera(ctx, page),\r\n                    shortcut: view.reset_view\r\n                },\r\n                {\r\n                    data: () => new Page.ZoomCamera(ctx, page, 0.25),\r\n                    shortcut: view.zoom_in\r\n                },\r\n                {\r\n                    data: () => new Page.ZoomCamera(ctx, page, -0.25),\r\n                    shortcut: view.zoom_out\r\n                },\r\n                {\r\n                    data: () => new Page.MoveCameraToSelection(ctx, page),\r\n                    shortcut: view.jump_to_selection\r\n                },\r\n                {\r\n                    data: () => new Page.MoveCameraToParents(ctx, page),\r\n                    shortcut: view.jump_to_parents\r\n                },\r\n                {\r\n                    data: () => new Page.MoveCameraToChildren(ctx, page),\r\n                    shortcut: view.jump_to_children\r\n                },\r\n                {\r\n                    data: () => new App.SwitchToFullscreen(ctx),\r\n                    shortcut: view.fullscreen\r\n                },\r\n                {\r\n                    data: () => new App.ToggleDebugDisplay(ctx),\r\n                    shortcut: view.toggle_debug_view,\r\n                }\r\n            ];\r\n        }\r\n\r\n    }\r\n\r\n} as Module<HotkeyStore, ModuleStore>\r\n","import { createStore } from 'vuex'\nimport { ModuleStore } from './StoreTypes'\nimport ApplicationStore from './Stores/ApplicationStore'\nimport ContextMenuStore from './Stores/ContextMenuStore'\nimport HotkeyStore from './Stores/HotkeyStore'\n\nexport default createStore<ModuleStore>({\n  modules: {\n    ApplicationStore,\n    ContextMenuStore,\n    HotkeyStore\n  }\n})\n","import App from './App.vue'\r\nimport store from './store'\r\nimport { createApp } from 'vue'\r\nimport \"@/assets/fonts/inter.css\"\r\nimport \"@/assets/fonts/roboto_mono.css\"\r\n\r\ncreateApp(App).use(store).mount('#app')\r\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./App.vue?vue&type=style&index=0&id=45953439&lang=css\"","import { renderSlot as _renderSlot, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", {\n    onPointerdown: _cache[0] || (_cache[0] = ($event: any) => (_ctx.$emit('focus'))),\n    class: \"focus-box-container\"\n  }, [\n    _renderSlot(_ctx.$slots, \"default\")\n  ], 32))\n}","\r\nimport { defineComponent } from 'vue';\r\n\r\nexport default defineComponent({\r\n  name: 'FocusBox',\r\n  data() {\r\n    return {\r\n      onFocusOut: (\r\n        function(this: any, event: MouseEvent) {\r\n          // If clicked item isn't this container or a child of it, emit\r\n          // unfocus.\r\n          if (this.$el != event.target && !this.$el.contains(event.target)) {\r\n            this.$emit(\"unfocus\");\r\n          }\r\n        }\r\n      ).bind(this)\r\n    }\r\n  },\r\n  emits: [\"focus\", \"unfocus\"],\r\n  mounted() {\r\n    // Exit current event chain before binding to the pointerdown event.\r\n    // Otherwise, any click event that triggered mounted() will bubble up to\r\n    // this bound document event and cause focus to be left immediately.\r\n    setTimeout(() => {\r\n        document.body.addEventListener(\"pointerdown\", this.onFocusOut)\r\n    }, 0);\r\n  },\r\n  unmounted() {\r\n    document.body.removeEventListener('pointerdown', this.onFocusOut)\r\n  },\r\n});\r\n","import { render } from \"./FocusBox.vue?vue&type=template&id=0145f1c3&ts=true\"\nimport script from \"./FocusBox.vue?vue&type=script&lang=ts\"\nexport * from \"./FocusBox.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"C:\\\\Users\\\\mcarenzo\\\\Desktop\\\\attack-flow-builder - Copy\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}