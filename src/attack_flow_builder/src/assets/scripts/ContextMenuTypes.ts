///////////////////////////////////////////////////////////////////////////////
//  1. Context Menu  //////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////


export enum MenuAction {
    OpenSubmenu = 0,
    RunTask = 1,
    OpenFile = 2,
    OpenLink = 3,
    ToggleValue = 4,
}

export type ContextMenu = 
    | OpenSubMenuContextMenu 
    | RunTaskContextMenu 
    | OpenFileContextMenu 
    | OpenLinkContextMenu 
    | ToggleValueContextMenu;


///////////////////////////////////////////////////////////////////////////////
//  2. Generic Context Menu  //////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////


interface ContextMenuBase<T extends MenuAction> {
    id   : string,
    text : string,
    action : T,
    disabled?: boolean,
    data?: any
}


///////////////////////////////////////////////////////////////////////////////
//  3. Open SubMenu Context Menu  /////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////


export interface OpenSubMenuContextMenu extends ContextMenuBase<MenuAction.OpenSubmenu> {
    sections : ContextMenuSection[]
}

export interface ContextMenuSection {
    id: string,
    items: ContextMenu[]
}


///////////////////////////////////////////////////////////////////////////////
//  4. Run Task Context Menu  /////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////


export interface RunTaskContextMenu extends ContextMenuBase<MenuAction.RunTask> {
    shortcut?: string
}


///////////////////////////////////////////////////////////////////////////////
//  5. Open File Context Menu  ////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////


export interface OpenFileContextMenu extends ContextMenuBase<MenuAction.OpenFile> {
    shortcut?: string
}


///////////////////////////////////////////////////////////////////////////////
//  6. Open Link Context Menu  ////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////


export interface OpenLinkContextMenu extends ContextMenuBase<MenuAction.OpenLink> {
    link: string
}


///////////////////////////////////////////////////////////////////////////////
//  7. Toggle Value Context Menu  /////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////


export interface ToggleValueContextMenu extends ContextMenuBase<MenuAction.ToggleValue> {
    shortcut?: string
    value: boolean
}
